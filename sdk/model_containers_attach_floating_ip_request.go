/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ContainersAttachFloatingIpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainersAttachFloatingIpRequest{}

// ContainersAttachFloatingIpRequest struct for ContainersAttachFloatingIpRequest
type ContainersAttachFloatingIpRequest struct {
	Config *ContainersAttachFloatingIpRequestConfig `json:"config,omitempty"`
}

// NewContainersAttachFloatingIpRequest instantiates a new ContainersAttachFloatingIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersAttachFloatingIpRequest() *ContainersAttachFloatingIpRequest {
	this := ContainersAttachFloatingIpRequest{}
	return &this
}

// NewContainersAttachFloatingIpRequestWithDefaults instantiates a new ContainersAttachFloatingIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersAttachFloatingIpRequestWithDefaults() *ContainersAttachFloatingIpRequest {
	this := ContainersAttachFloatingIpRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ContainersAttachFloatingIpRequest) GetConfig() ContainersAttachFloatingIpRequestConfig {
	if o == nil || IsNil(o.Config) {
		var ret ContainersAttachFloatingIpRequestConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersAttachFloatingIpRequest) GetConfigOk() (*ContainersAttachFloatingIpRequestConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *ContainersAttachFloatingIpRequest) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ContainersAttachFloatingIpRequestConfig and assigns it to the Config field.
func (o *ContainersAttachFloatingIpRequest) SetConfig(v ContainersAttachFloatingIpRequestConfig) {
	o.Config = &v
}

func (o ContainersAttachFloatingIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainersAttachFloatingIpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableContainersAttachFloatingIpRequest struct {
	value *ContainersAttachFloatingIpRequest
	isSet bool
}

func (v NullableContainersAttachFloatingIpRequest) Get() *ContainersAttachFloatingIpRequest {
	return v.value
}

func (v *NullableContainersAttachFloatingIpRequest) Set(val *ContainersAttachFloatingIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersAttachFloatingIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersAttachFloatingIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersAttachFloatingIpRequest(val *ContainersAttachFloatingIpRequest) *NullableContainersAttachFloatingIpRequest {
	return &NullableContainersAttachFloatingIpRequest{value: val, isSet: true}
}

func (v NullableContainersAttachFloatingIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersAttachFloatingIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


