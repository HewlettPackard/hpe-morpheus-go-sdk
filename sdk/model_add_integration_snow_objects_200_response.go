/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIntegrationSnowObjects200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIntegrationSnowObjects200Response{}

// AddIntegrationSnowObjects200Response struct for AddIntegrationSnowObjects200Response
type AddIntegrationSnowObjects200Response struct {
	Object *GetAlerts200ResponseAllOfChecksInnerAccount `json:"object,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddIntegrationSnowObjects200Response instantiates a new AddIntegrationSnowObjects200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIntegrationSnowObjects200Response() *AddIntegrationSnowObjects200Response {
	this := AddIntegrationSnowObjects200Response{}
	return &this
}

// NewAddIntegrationSnowObjects200ResponseWithDefaults instantiates a new AddIntegrationSnowObjects200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIntegrationSnowObjects200ResponseWithDefaults() *AddIntegrationSnowObjects200Response {
	this := AddIntegrationSnowObjects200Response{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *AddIntegrationSnowObjects200Response) GetObject() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Object) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationSnowObjects200Response) GetObjectOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// IsSetObject returns a boolean if a field has been set.
func (o *AddIntegrationSnowObjects200Response) IsSetObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Object field.
func (o *AddIntegrationSnowObjects200Response) SetObject(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Object = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddIntegrationSnowObjects200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationSnowObjects200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddIntegrationSnowObjects200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddIntegrationSnowObjects200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddIntegrationSnowObjects200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIntegrationSnowObjects200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddIntegrationSnowObjects200Response struct {
	value *AddIntegrationSnowObjects200Response
	isSet bool
}

func (v NullableAddIntegrationSnowObjects200Response) Get() *AddIntegrationSnowObjects200Response {
	return v.value
}

func (v *NullableAddIntegrationSnowObjects200Response) Set(val *AddIntegrationSnowObjects200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIntegrationSnowObjects200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIntegrationSnowObjects200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIntegrationSnowObjects200Response(val *AddIntegrationSnowObjects200Response) *NullableAddIntegrationSnowObjects200Response {
	return &NullableAddIntegrationSnowObjects200Response{value: val, isSet: true}
}

func (v NullableAddIntegrationSnowObjects200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIntegrationSnowObjects200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


