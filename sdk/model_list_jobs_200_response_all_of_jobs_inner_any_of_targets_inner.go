/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner{}

// ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner struct for ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner
type ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	TargetType *string `json:"targetType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
}

// NewListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner instantiates a new ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner() *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner {
	this := ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner{}
	return &this
}

// NewListJobs200ResponseAllOfJobsInnerAnyOfTargetsInnerWithDefaults instantiates a new ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListJobs200ResponseAllOfJobsInnerAnyOfTargetsInnerWithDefaults() *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner {
	this := ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) SetName(v string) {
	o.Name = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetTargetType() string {
	if o == nil || IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// IsSetTargetType returns a boolean if a field has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) IsSetTargetType() bool {
	if o != nil && !IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) SetTargetType(v string) {
	o.TargetType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) SetRefId(v int64) {
	o.RefId = &v
}

func (o ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TargetType) {
		toSerialize["targetType"] = o.TargetType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	return toSerialize, nil
}

type NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner struct {
	value *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner
	isSet bool
}

func (v NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) Get() *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner {
	return v.value
}

func (v *NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) Set(val *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner(val *ListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) *NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner {
	return &NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner{value: val, isSet: true}
}

func (v NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListJobs200ResponseAllOfJobsInnerAnyOfTargetsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


