/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the InstanceSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceSnapshot{}

// InstanceSnapshot struct for InstanceSnapshot
type InstanceSnapshot struct {
	Snapshot *SnapshotInstanceRequestSnapshot `json:"snapshot,omitempty"`
}

// NewInstanceSnapshot instantiates a new InstanceSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceSnapshot() *InstanceSnapshot {
	this := InstanceSnapshot{}
	return &this
}

// NewInstanceSnapshotWithDefaults instantiates a new InstanceSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceSnapshotWithDefaults() *InstanceSnapshot {
	this := InstanceSnapshot{}
	return &this
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *InstanceSnapshot) GetSnapshot() SnapshotInstanceRequestSnapshot {
	if o == nil || IsNil(o.Snapshot) {
		var ret SnapshotInstanceRequestSnapshot
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSnapshot) GetSnapshotOk() (*SnapshotInstanceRequestSnapshot, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// IsSetSnapshot returns a boolean if a field has been set.
func (o *InstanceSnapshot) IsSetSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given SnapshotInstanceRequestSnapshot and assigns it to the Snapshot field.
func (o *InstanceSnapshot) SetSnapshot(v SnapshotInstanceRequestSnapshot) {
	o.Snapshot = &v
}

func (o InstanceSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	return toSerialize, nil
}

type NullableInstanceSnapshot struct {
	value *InstanceSnapshot
	isSet bool
}

func (v NullableInstanceSnapshot) Get() *InstanceSnapshot {
	return v.value
}

func (v *NullableInstanceSnapshot) Set(val *InstanceSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceSnapshot(val *InstanceSnapshot) *NullableInstanceSnapshot {
	return &NullableInstanceSnapshot{value: val, isSet: true}
}

func (v NullableInstanceSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


