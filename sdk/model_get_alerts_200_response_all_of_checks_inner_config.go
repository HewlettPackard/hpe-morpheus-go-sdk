/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)


// GetAlerts200ResponseAllOfChecksInnerConfig struct for GetAlerts200ResponseAllOfChecksInnerConfig
type GetAlerts200ResponseAllOfChecksInnerConfig struct {
	GetAlerts200ResponseAllOfChecksInnerConfigAnyOf *GetAlerts200ResponseAllOfChecksInnerConfigAnyOf
	GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1 *GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1
	GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2 *GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2
	GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3 *GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3
	GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4 *GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4
	MapmapOfStringAny *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GetAlerts200ResponseAllOfChecksInnerConfig) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into GetAlerts200ResponseAllOfChecksInnerConfigAnyOf
	err = json.Unmarshal(data, &dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf);
	if err == nil {
		jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf, _ := json.Marshal(dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf)
		if string(jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf) == "{}" { // empty struct
			dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf = nil
		} else {
			return nil // data stored in dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf, return on the first match
		}
	} else {
		dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf = nil
	}

	// try to unmarshal JSON data into GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1
	err = json.Unmarshal(data, &dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1);
	if err == nil {
		jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf1, _ := json.Marshal(dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1)
		if string(jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf1) == "{}" { // empty struct
			dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1 = nil
		} else {
			return nil // data stored in dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1, return on the first match
		}
	} else {
		dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1 = nil
	}

	// try to unmarshal JSON data into GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2
	err = json.Unmarshal(data, &dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2);
	if err == nil {
		jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf2, _ := json.Marshal(dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2)
		if string(jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf2) == "{}" { // empty struct
			dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2 = nil
		} else {
			return nil // data stored in dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2, return on the first match
		}
	} else {
		dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2 = nil
	}

	// try to unmarshal JSON data into GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3
	err = json.Unmarshal(data, &dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3);
	if err == nil {
		jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf3, _ := json.Marshal(dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3)
		if string(jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf3) == "{}" { // empty struct
			dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3 = nil
		} else {
			return nil // data stored in dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3, return on the first match
		}
	} else {
		dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3 = nil
	}

	// try to unmarshal JSON data into GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4
	err = json.Unmarshal(data, &dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4);
	if err == nil {
		jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf4, _ := json.Marshal(dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4)
		if string(jsonGetAlerts200ResponseAllOfChecksInnerConfigAnyOf4) == "{}" { // empty struct
			dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4 = nil
		} else {
			return nil // data stored in dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4, return on the first match
		}
	} else {
		dst.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4 = nil
	}

	// try to unmarshal JSON data into MapmapOfStringAny
	err = json.Unmarshal(data, &dst.MapmapOfStringAny);
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			return nil // data stored in dst.MapmapOfStringAny, return on the first match
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GetAlerts200ResponseAllOfChecksInnerConfig)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetAlerts200ResponseAllOfChecksInnerConfig) MarshalJSON() ([]byte, error) {
	if src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf != nil {
		return json.Marshal(&src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf)
	}

	if src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1 != nil {
		return json.Marshal(&src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf1)
	}

	if src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2 != nil {
		return json.Marshal(&src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf2)
	}

	if src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3 != nil {
		return json.Marshal(&src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf3)
	}

	if src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4 != nil {
		return json.Marshal(&src.GetAlerts200ResponseAllOfChecksInnerConfigAnyOf4)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableGetAlerts200ResponseAllOfChecksInnerConfig struct {
	value *GetAlerts200ResponseAllOfChecksInnerConfig
	isSet bool
}

func (v NullableGetAlerts200ResponseAllOfChecksInnerConfig) Get() *GetAlerts200ResponseAllOfChecksInnerConfig {
	return v.value
}

func (v *NullableGetAlerts200ResponseAllOfChecksInnerConfig) Set(val *GetAlerts200ResponseAllOfChecksInnerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlerts200ResponseAllOfChecksInnerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlerts200ResponseAllOfChecksInnerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlerts200ResponseAllOfChecksInnerConfig(val *GetAlerts200ResponseAllOfChecksInnerConfig) *NullableGetAlerts200ResponseAllOfChecksInnerConfig {
	return &NullableGetAlerts200ResponseAllOfChecksInnerConfig{value: val, isSet: true}
}

func (v NullableGetAlerts200ResponseAllOfChecksInnerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlerts200ResponseAllOfChecksInnerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


