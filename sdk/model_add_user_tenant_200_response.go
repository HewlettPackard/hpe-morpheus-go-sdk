/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddUserTenant200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserTenant200Response{}

// AddUserTenant200Response struct for AddUserTenant200Response
type AddUserTenant200Response struct {
	User *AddUserTenant200ResponseAllOfUser `json:"user,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddUserTenant200Response instantiates a new AddUserTenant200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserTenant200Response() *AddUserTenant200Response {
	this := AddUserTenant200Response{}
	return &this
}

// NewAddUserTenant200ResponseWithDefaults instantiates a new AddUserTenant200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserTenant200ResponseWithDefaults() *AddUserTenant200Response {
	this := AddUserTenant200Response{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AddUserTenant200Response) GetUser() AddUserTenant200ResponseAllOfUser {
	if o == nil || IsNil(o.User) {
		var ret AddUserTenant200ResponseAllOfUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200Response) GetUserOk() (*AddUserTenant200ResponseAllOfUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *AddUserTenant200Response) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AddUserTenant200ResponseAllOfUser and assigns it to the User field.
func (o *AddUserTenant200Response) SetUser(v AddUserTenant200ResponseAllOfUser) {
	o.User = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddUserTenant200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddUserTenant200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddUserTenant200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddUserTenant200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserTenant200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddUserTenant200Response struct {
	value *AddUserTenant200Response
	isSet bool
}

func (v NullableAddUserTenant200Response) Get() *AddUserTenant200Response {
	return v.value
}

func (v *NullableAddUserTenant200Response) Set(val *AddUserTenant200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserTenant200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserTenant200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserTenant200Response(val *AddUserTenant200Response) *NullableAddUserTenant200Response {
	return &NullableAddUserTenant200Response{value: val, isSet: true}
}

func (v NullableAddUserTenant200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserTenant200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


