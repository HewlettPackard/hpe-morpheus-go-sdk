/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateSubnetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubnetRequest{}

// CreateSubnetRequest struct for CreateSubnetRequest
type CreateSubnetRequest struct {
	Subnet *CreateSubnetRequestSubnet `json:"subnet,omitempty"`
	ResourcePermission *CreateSubnetRequestResourcePermission `json:"resourcePermission,omitempty"`
}

// NewCreateSubnetRequest instantiates a new CreateSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubnetRequest() *CreateSubnetRequest {
	this := CreateSubnetRequest{}
	return &this
}

// NewCreateSubnetRequestWithDefaults instantiates a new CreateSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubnetRequestWithDefaults() *CreateSubnetRequest {
	this := CreateSubnetRequest{}
	return &this
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *CreateSubnetRequest) GetSubnet() CreateSubnetRequestSubnet {
	if o == nil || IsNil(o.Subnet) {
		var ret CreateSubnetRequestSubnet
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetSubnetOk() (*CreateSubnetRequestSubnet, bool) {
	if o == nil || IsNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// IsSetSubnet returns a boolean if a field has been set.
func (o *CreateSubnetRequest) IsSetSubnet() bool {
	if o != nil && !IsNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given CreateSubnetRequestSubnet and assigns it to the Subnet field.
func (o *CreateSubnetRequest) SetSubnet(v CreateSubnetRequestSubnet) {
	o.Subnet = &v
}

// GetResourcePermission returns the ResourcePermission field value if set, zero value otherwise.
func (o *CreateSubnetRequest) GetResourcePermission() CreateSubnetRequestResourcePermission {
	if o == nil || IsNil(o.ResourcePermission) {
		var ret CreateSubnetRequestResourcePermission
		return ret
	}
	return *o.ResourcePermission
}

// GetResourcePermissionOk returns a tuple with the ResourcePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequest) GetResourcePermissionOk() (*CreateSubnetRequestResourcePermission, bool) {
	if o == nil || IsNil(o.ResourcePermission) {
		return nil, false
	}
	return o.ResourcePermission, true
}

// IsSetResourcePermission returns a boolean if a field has been set.
func (o *CreateSubnetRequest) IsSetResourcePermission() bool {
	if o != nil && !IsNil(o.ResourcePermission) {
		return true
	}

	return false
}

// SetResourcePermission gets a reference to the given CreateSubnetRequestResourcePermission and assigns it to the ResourcePermission field.
func (o *CreateSubnetRequest) SetResourcePermission(v CreateSubnetRequestResourcePermission) {
	o.ResourcePermission = &v
}

func (o CreateSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubnetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !IsNil(o.ResourcePermission) {
		toSerialize["resourcePermission"] = o.ResourcePermission
	}
	return toSerialize, nil
}

type NullableCreateSubnetRequest struct {
	value *CreateSubnetRequest
	isSet bool
}

func (v NullableCreateSubnetRequest) Get() *CreateSubnetRequest {
	return v.value
}

func (v *NullableCreateSubnetRequest) Set(val *CreateSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubnetRequest(val *CreateSubnetRequest) *NullableCreateSubnetRequest {
	return &NullableCreateSubnetRequest{value: val, isSet: true}
}

func (v NullableCreateSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


