/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the Approval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Approval{}

// Approval struct for Approval
type Approval struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	ExternalName *string `json:"externalName,omitempty"`
	RequestType *string `json:"requestType,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
	Approver *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"approver,omitempty"`
	AccountIntegration *string `json:"accountIntegration,omitempty"`
	Status *string `json:"status,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	RequestBy *string `json:"requestBy,omitempty"`
	ApprovalItems []GetApprovalsItem200ResponseApprovalItem `json:"approvalItems,omitempty"`
}

// NewApproval instantiates a new Approval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproval() *Approval {
	this := Approval{}
	return &this
}

// NewApprovalWithDefaults instantiates a new Approval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalWithDefaults() *Approval {
	this := Approval{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Approval) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *Approval) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Approval) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Approval) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *Approval) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Approval) SetName(v string) {
	o.Name = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *Approval) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// IsSetInternalId returns a boolean if a field has been set.
func (o *Approval) IsSetInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *Approval) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Approval) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *Approval) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *Approval) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetExternalName returns the ExternalName field value if set, zero value otherwise.
func (o *Approval) GetExternalName() string {
	if o == nil || IsNil(o.ExternalName) {
		var ret string
		return ret
	}
	return *o.ExternalName
}

// GetExternalNameOk returns a tuple with the ExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetExternalNameOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalName) {
		return nil, false
	}
	return o.ExternalName, true
}

// IsSetExternalName returns a boolean if a field has been set.
func (o *Approval) IsSetExternalName() bool {
	if o != nil && !IsNil(o.ExternalName) {
		return true
	}

	return false
}

// SetExternalName gets a reference to the given string and assigns it to the ExternalName field.
func (o *Approval) SetExternalName(v string) {
	o.ExternalName = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *Approval) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// IsSetRequestType returns a boolean if a field has been set.
func (o *Approval) IsSetRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *Approval) SetRequestType(v string) {
	o.RequestType = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Approval) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *Approval) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *Approval) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

// GetApprover returns the Approver field value if set, zero value otherwise.
func (o *Approval) GetApprover() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Approver) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Approver
}

// GetApproverOk returns a tuple with the Approver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetApproverOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Approver) {
		return nil, false
	}
	return o.Approver, true
}

// IsSetApprover returns a boolean if a field has been set.
func (o *Approval) IsSetApprover() bool {
	if o != nil && !IsNil(o.Approver) {
		return true
	}

	return false
}

// SetApprover gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Approver field.
func (o *Approval) SetApprover(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Approver = &v
}

// GetAccountIntegration returns the AccountIntegration field value if set, zero value otherwise.
func (o *Approval) GetAccountIntegration() string {
	if o == nil || IsNil(o.AccountIntegration) {
		var ret string
		return ret
	}
	return *o.AccountIntegration
}

// GetAccountIntegrationOk returns a tuple with the AccountIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAccountIntegrationOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIntegration) {
		return nil, false
	}
	return o.AccountIntegration, true
}

// IsSetAccountIntegration returns a boolean if a field has been set.
func (o *Approval) IsSetAccountIntegration() bool {
	if o != nil && !IsNil(o.AccountIntegration) {
		return true
	}

	return false
}

// SetAccountIntegration gets a reference to the given string and assigns it to the AccountIntegration field.
func (o *Approval) SetAccountIntegration(v string) {
	o.AccountIntegration = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Approval) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *Approval) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Approval) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *Approval) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// IsSetErrorMessage returns a boolean if a field has been set.
func (o *Approval) IsSetErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *Approval) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Approval) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *Approval) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Approval) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Approval) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *Approval) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Approval) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetRequestBy returns the RequestBy field value if set, zero value otherwise.
func (o *Approval) GetRequestBy() string {
	if o == nil || IsNil(o.RequestBy) {
		var ret string
		return ret
	}
	return *o.RequestBy
}

// GetRequestByOk returns a tuple with the RequestBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequestByOk() (*string, bool) {
	if o == nil || IsNil(o.RequestBy) {
		return nil, false
	}
	return o.RequestBy, true
}

// IsSetRequestBy returns a boolean if a field has been set.
func (o *Approval) IsSetRequestBy() bool {
	if o != nil && !IsNil(o.RequestBy) {
		return true
	}

	return false
}

// SetRequestBy gets a reference to the given string and assigns it to the RequestBy field.
func (o *Approval) SetRequestBy(v string) {
	o.RequestBy = &v
}

// GetApprovalItems returns the ApprovalItems field value if set, zero value otherwise.
func (o *Approval) GetApprovalItems() []GetApprovalsItem200ResponseApprovalItem {
	if o == nil || IsNil(o.ApprovalItems) {
		var ret []GetApprovalsItem200ResponseApprovalItem
		return ret
	}
	return o.ApprovalItems
}

// GetApprovalItemsOk returns a tuple with the ApprovalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetApprovalItemsOk() ([]GetApprovalsItem200ResponseApprovalItem, bool) {
	if o == nil || IsNil(o.ApprovalItems) {
		return nil, false
	}
	return o.ApprovalItems, true
}

// IsSetApprovalItems returns a boolean if a field has been set.
func (o *Approval) IsSetApprovalItems() bool {
	if o != nil && !IsNil(o.ApprovalItems) {
		return true
	}

	return false
}

// SetApprovalItems gets a reference to the given []GetApprovalsItem200ResponseApprovalItem and assigns it to the ApprovalItems field.
func (o *Approval) SetApprovalItems(v []GetApprovalsItem200ResponseApprovalItem) {
	o.ApprovalItems = v
}

func (o Approval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Approval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.ExternalName) {
		toSerialize["externalName"] = o.ExternalName
	}
	if !IsNil(o.RequestType) {
		toSerialize["requestType"] = o.RequestType
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Approver) {
		toSerialize["approver"] = o.Approver
	}
	if !IsNil(o.AccountIntegration) {
		toSerialize["accountIntegration"] = o.AccountIntegration
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.RequestBy) {
		toSerialize["requestBy"] = o.RequestBy
	}
	if !IsNil(o.ApprovalItems) {
		toSerialize["approvalItems"] = o.ApprovalItems
	}
	return toSerialize, nil
}

type NullableApproval struct {
	value *Approval
	isSet bool
}

func (v NullableApproval) Get() *Approval {
	return v.value
}

func (v *NullableApproval) Set(val *Approval) {
	v.value = val
	v.isSet = true
}

func (v NullableApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproval(val *Approval) *NullableApproval {
	return &NullableApproval{value: val, isSet: true}
}

func (v NullableApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


