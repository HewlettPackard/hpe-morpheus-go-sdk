/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkFirewallRuleGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkFirewallRuleGroupRequest{}

// UpdateNetworkFirewallRuleGroupRequest The parameters for update a network firewall rule group is type dependent. The following lists the common parameters. See get a specific type to list available options for the network server type. 
type UpdateNetworkFirewallRuleGroupRequest struct {
	RuleGroup map[string]interface{} `json:"ruleGroup,omitempty"`
}

// NewUpdateNetworkFirewallRuleGroupRequest instantiates a new UpdateNetworkFirewallRuleGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkFirewallRuleGroupRequest() *UpdateNetworkFirewallRuleGroupRequest {
	this := UpdateNetworkFirewallRuleGroupRequest{}
	return &this
}

// NewUpdateNetworkFirewallRuleGroupRequestWithDefaults instantiates a new UpdateNetworkFirewallRuleGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkFirewallRuleGroupRequestWithDefaults() *UpdateNetworkFirewallRuleGroupRequest {
	this := UpdateNetworkFirewallRuleGroupRequest{}
	return &this
}

// GetRuleGroup returns the RuleGroup field value if set, zero value otherwise.
func (o *UpdateNetworkFirewallRuleGroupRequest) GetRuleGroup() map[string]interface{} {
	if o == nil || IsNil(o.RuleGroup) {
		var ret map[string]interface{}
		return ret
	}
	return o.RuleGroup
}

// GetRuleGroupOk returns a tuple with the RuleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirewallRuleGroupRequest) GetRuleGroupOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RuleGroup) {
		return map[string]interface{}{}, false
	}
	return o.RuleGroup, true
}

// IsSetRuleGroup returns a boolean if a field has been set.
func (o *UpdateNetworkFirewallRuleGroupRequest) IsSetRuleGroup() bool {
	if o != nil && !IsNil(o.RuleGroup) {
		return true
	}

	return false
}

// SetRuleGroup gets a reference to the given map[string]interface{} and assigns it to the RuleGroup field.
func (o *UpdateNetworkFirewallRuleGroupRequest) SetRuleGroup(v map[string]interface{}) {
	o.RuleGroup = v
}

func (o UpdateNetworkFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkFirewallRuleGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleGroup) {
		toSerialize["ruleGroup"] = o.RuleGroup
	}
	return toSerialize, nil
}

type NullableUpdateNetworkFirewallRuleGroupRequest struct {
	value *UpdateNetworkFirewallRuleGroupRequest
	isSet bool
}

func (v NullableUpdateNetworkFirewallRuleGroupRequest) Get() *UpdateNetworkFirewallRuleGroupRequest {
	return v.value
}

func (v *NullableUpdateNetworkFirewallRuleGroupRequest) Set(val *UpdateNetworkFirewallRuleGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkFirewallRuleGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkFirewallRuleGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkFirewallRuleGroupRequest(val *UpdateNetworkFirewallRuleGroupRequest) *NullableUpdateNetworkFirewallRuleGroupRequest {
	return &NullableUpdateNetworkFirewallRuleGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkFirewallRuleGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


