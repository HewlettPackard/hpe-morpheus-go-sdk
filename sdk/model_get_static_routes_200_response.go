/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetStaticRoutes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStaticRoutes200Response{}

// GetStaticRoutes200Response struct for GetStaticRoutes200Response
type GetStaticRoutes200Response struct {
	NetworkRoutes []GetStaticRoutes200ResponseNetworkRoutesInner `json:"networkRoutes,omitempty"`
}

// NewGetStaticRoutes200Response instantiates a new GetStaticRoutes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStaticRoutes200Response() *GetStaticRoutes200Response {
	this := GetStaticRoutes200Response{}
	return &this
}

// NewGetStaticRoutes200ResponseWithDefaults instantiates a new GetStaticRoutes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStaticRoutes200ResponseWithDefaults() *GetStaticRoutes200Response {
	this := GetStaticRoutes200Response{}
	return &this
}

// GetNetworkRoutes returns the NetworkRoutes field value if set, zero value otherwise.
func (o *GetStaticRoutes200Response) GetNetworkRoutes() []GetStaticRoutes200ResponseNetworkRoutesInner {
	if o == nil || IsNil(o.NetworkRoutes) {
		var ret []GetStaticRoutes200ResponseNetworkRoutesInner
		return ret
	}
	return o.NetworkRoutes
}

// GetNetworkRoutesOk returns a tuple with the NetworkRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStaticRoutes200Response) GetNetworkRoutesOk() ([]GetStaticRoutes200ResponseNetworkRoutesInner, bool) {
	if o == nil || IsNil(o.NetworkRoutes) {
		return nil, false
	}
	return o.NetworkRoutes, true
}

// IsSetNetworkRoutes returns a boolean if a field has been set.
func (o *GetStaticRoutes200Response) IsSetNetworkRoutes() bool {
	if o != nil && !IsNil(o.NetworkRoutes) {
		return true
	}

	return false
}

// SetNetworkRoutes gets a reference to the given []GetStaticRoutes200ResponseNetworkRoutesInner and assigns it to the NetworkRoutes field.
func (o *GetStaticRoutes200Response) SetNetworkRoutes(v []GetStaticRoutes200ResponseNetworkRoutesInner) {
	o.NetworkRoutes = v
}

func (o GetStaticRoutes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStaticRoutes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkRoutes) {
		toSerialize["networkRoutes"] = o.NetworkRoutes
	}
	return toSerialize, nil
}

type NullableGetStaticRoutes200Response struct {
	value *GetStaticRoutes200Response
	isSet bool
}

func (v NullableGetStaticRoutes200Response) Get() *GetStaticRoutes200Response {
	return v.value
}

func (v *NullableGetStaticRoutes200Response) Set(val *GetStaticRoutes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStaticRoutes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStaticRoutes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStaticRoutes200Response(val *GetStaticRoutes200Response) *NullableGetStaticRoutes200Response {
	return &NullableGetStaticRoutes200Response{value: val, isSet: true}
}

func (v NullableGetStaticRoutes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStaticRoutes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


