/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdatePoliciesGroupRequestPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePoliciesGroupRequestPolicy{}

// UpdatePoliciesGroupRequestPolicy struct for UpdatePoliciesGroupRequestPolicy
type UpdatePoliciesGroupRequestPolicy struct {
	// A name for the policy
	Name *string `json:"name,omitempty"`
	// A description for the policy
	Description *string `json:"description,omitempty"`
	PolicyType *UpdatePoliciesGroupRequestPolicyPolicyType `json:"policyType,omitempty"`
}

// NewUpdatePoliciesGroupRequestPolicy instantiates a new UpdatePoliciesGroupRequestPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePoliciesGroupRequestPolicy() *UpdatePoliciesGroupRequestPolicy {
	this := UpdatePoliciesGroupRequestPolicy{}
	return &this
}

// NewUpdatePoliciesGroupRequestPolicyWithDefaults instantiates a new UpdatePoliciesGroupRequestPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePoliciesGroupRequestPolicyWithDefaults() *UpdatePoliciesGroupRequestPolicy {
	this := UpdatePoliciesGroupRequestPolicy{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdatePoliciesGroupRequestPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePoliciesGroupRequestPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdatePoliciesGroupRequestPolicy) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdatePoliciesGroupRequestPolicy) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdatePoliciesGroupRequestPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePoliciesGroupRequestPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdatePoliciesGroupRequestPolicy) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdatePoliciesGroupRequestPolicy) SetDescription(v string) {
	o.Description = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *UpdatePoliciesGroupRequestPolicy) GetPolicyType() UpdatePoliciesGroupRequestPolicyPolicyType {
	if o == nil || IsNil(o.PolicyType) {
		var ret UpdatePoliciesGroupRequestPolicyPolicyType
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePoliciesGroupRequestPolicy) GetPolicyTypeOk() (*UpdatePoliciesGroupRequestPolicyPolicyType, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// IsSetPolicyType returns a boolean if a field has been set.
func (o *UpdatePoliciesGroupRequestPolicy) IsSetPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given UpdatePoliciesGroupRequestPolicyPolicyType and assigns it to the PolicyType field.
func (o *UpdatePoliciesGroupRequestPolicy) SetPolicyType(v UpdatePoliciesGroupRequestPolicyPolicyType) {
	o.PolicyType = &v
}

func (o UpdatePoliciesGroupRequestPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePoliciesGroupRequestPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policyType"] = o.PolicyType
	}
	return toSerialize, nil
}

type NullableUpdatePoliciesGroupRequestPolicy struct {
	value *UpdatePoliciesGroupRequestPolicy
	isSet bool
}

func (v NullableUpdatePoliciesGroupRequestPolicy) Get() *UpdatePoliciesGroupRequestPolicy {
	return v.value
}

func (v *NullableUpdatePoliciesGroupRequestPolicy) Set(val *UpdatePoliciesGroupRequestPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePoliciesGroupRequestPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePoliciesGroupRequestPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePoliciesGroupRequestPolicy(val *UpdatePoliciesGroupRequestPolicy) *NullableUpdatePoliciesGroupRequestPolicy {
	return &NullableUpdatePoliciesGroupRequestPolicy{value: val, isSet: true}
}

func (v NullableUpdatePoliciesGroupRequestPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePoliciesGroupRequestPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


