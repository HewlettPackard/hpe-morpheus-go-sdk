/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the AddUserTenant200ResponseAllOfUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserTenant200ResponseAllOfUser{}

// AddUserTenant200ResponseAllOfUser struct for AddUserTenant200ResponseAllOfUser
type AddUserTenant200ResponseAllOfUser struct {
	Id *int64 `json:"id,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	Username *string `json:"username,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ReceiveNotifications *bool `json:"receiveNotifications,omitempty"`
	IsUsing2FA *bool `json:"isUsing2FA,omitempty"`
	AccountExpired *bool `json:"accountExpired,omitempty"`
	AccountLocked *bool `json:"accountLocked,omitempty"`
	PasswordExpired *bool `json:"passwordExpired,omitempty"`
	LoginCount *int64 `json:"loginCount,omitempty"`
	LoginAttempts *int64 `json:"loginAttempts,omitempty"`
	LastLoginDate *time.Time `json:"lastLoginDate,omitempty"`
	Roles []AddUserTenant200ResponseAllOfUserRolesInner `json:"roles,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
	LinuxUsername *string `json:"linuxUsername,omitempty"`
	LinuxPassword *string `json:"linuxPassword,omitempty"`
	LinuxKeyPairId *int64 `json:"linuxKeyPairId,omitempty"`
	WindowsUsername *string `json:"windowsUsername,omitempty"`
	WindowsPassword *string `json:"windowsPassword,omitempty"`
	DefaultPersona *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"defaultPersona,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Access *AddUserTenant200ResponseAllOfUserAccess `json:"access,omitempty"`
}

// NewAddUserTenant200ResponseAllOfUser instantiates a new AddUserTenant200ResponseAllOfUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserTenant200ResponseAllOfUser() *AddUserTenant200ResponseAllOfUser {
	this := AddUserTenant200ResponseAllOfUser{}
	return &this
}

// NewAddUserTenant200ResponseAllOfUserWithDefaults instantiates a new AddUserTenant200ResponseAllOfUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserTenant200ResponseAllOfUserWithDefaults() *AddUserTenant200ResponseAllOfUser {
	this := AddUserTenant200ResponseAllOfUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddUserTenant200ResponseAllOfUser) SetId(v int64) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountId() int64 {
	if o == nil || IsNil(o.AccountId) {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// IsSetAccountId returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *AddUserTenant200ResponseAllOfUser) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AddUserTenant200ResponseAllOfUser) SetUsername(v string) {
	o.Username = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// IsSetDisplayName returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AddUserTenant200ResponseAllOfUser) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// IsSetEmail returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AddUserTenant200ResponseAllOfUser) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// IsSetFirstName returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *AddUserTenant200ResponseAllOfUser) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// IsSetLastName returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *AddUserTenant200ResponseAllOfUser) SetLastName(v string) {
	o.LastName = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddUserTenant200ResponseAllOfUser) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetReceiveNotifications returns the ReceiveNotifications field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetReceiveNotifications() bool {
	if o == nil || IsNil(o.ReceiveNotifications) {
		var ret bool
		return ret
	}
	return *o.ReceiveNotifications
}

// GetReceiveNotificationsOk returns a tuple with the ReceiveNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetReceiveNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReceiveNotifications) {
		return nil, false
	}
	return o.ReceiveNotifications, true
}

// IsSetReceiveNotifications returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetReceiveNotifications() bool {
	if o != nil && !IsNil(o.ReceiveNotifications) {
		return true
	}

	return false
}

// SetReceiveNotifications gets a reference to the given bool and assigns it to the ReceiveNotifications field.
func (o *AddUserTenant200ResponseAllOfUser) SetReceiveNotifications(v bool) {
	o.ReceiveNotifications = &v
}

// GetIsUsing2FA returns the IsUsing2FA field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetIsUsing2FA() bool {
	if o == nil || IsNil(o.IsUsing2FA) {
		var ret bool
		return ret
	}
	return *o.IsUsing2FA
}

// GetIsUsing2FAOk returns a tuple with the IsUsing2FA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetIsUsing2FAOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsing2FA) {
		return nil, false
	}
	return o.IsUsing2FA, true
}

// IsSetIsUsing2FA returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetIsUsing2FA() bool {
	if o != nil && !IsNil(o.IsUsing2FA) {
		return true
	}

	return false
}

// SetIsUsing2FA gets a reference to the given bool and assigns it to the IsUsing2FA field.
func (o *AddUserTenant200ResponseAllOfUser) SetIsUsing2FA(v bool) {
	o.IsUsing2FA = &v
}

// GetAccountExpired returns the AccountExpired field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountExpired() bool {
	if o == nil || IsNil(o.AccountExpired) {
		var ret bool
		return ret
	}
	return *o.AccountExpired
}

// GetAccountExpiredOk returns a tuple with the AccountExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountExpired) {
		return nil, false
	}
	return o.AccountExpired, true
}

// IsSetAccountExpired returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetAccountExpired() bool {
	if o != nil && !IsNil(o.AccountExpired) {
		return true
	}

	return false
}

// SetAccountExpired gets a reference to the given bool and assigns it to the AccountExpired field.
func (o *AddUserTenant200ResponseAllOfUser) SetAccountExpired(v bool) {
	o.AccountExpired = &v
}

// GetAccountLocked returns the AccountLocked field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountLocked() bool {
	if o == nil || IsNil(o.AccountLocked) {
		var ret bool
		return ret
	}
	return *o.AccountLocked
}

// GetAccountLockedOk returns a tuple with the AccountLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountLocked) {
		return nil, false
	}
	return o.AccountLocked, true
}

// IsSetAccountLocked returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetAccountLocked() bool {
	if o != nil && !IsNil(o.AccountLocked) {
		return true
	}

	return false
}

// SetAccountLocked gets a reference to the given bool and assigns it to the AccountLocked field.
func (o *AddUserTenant200ResponseAllOfUser) SetAccountLocked(v bool) {
	o.AccountLocked = &v
}

// GetPasswordExpired returns the PasswordExpired field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetPasswordExpired() bool {
	if o == nil || IsNil(o.PasswordExpired) {
		var ret bool
		return ret
	}
	return *o.PasswordExpired
}

// GetPasswordExpiredOk returns a tuple with the PasswordExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetPasswordExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.PasswordExpired) {
		return nil, false
	}
	return o.PasswordExpired, true
}

// IsSetPasswordExpired returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetPasswordExpired() bool {
	if o != nil && !IsNil(o.PasswordExpired) {
		return true
	}

	return false
}

// SetPasswordExpired gets a reference to the given bool and assigns it to the PasswordExpired field.
func (o *AddUserTenant200ResponseAllOfUser) SetPasswordExpired(v bool) {
	o.PasswordExpired = &v
}

// GetLoginCount returns the LoginCount field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLoginCount() int64 {
	if o == nil || IsNil(o.LoginCount) {
		var ret int64
		return ret
	}
	return *o.LoginCount
}

// GetLoginCountOk returns a tuple with the LoginCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLoginCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LoginCount) {
		return nil, false
	}
	return o.LoginCount, true
}

// IsSetLoginCount returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLoginCount() bool {
	if o != nil && !IsNil(o.LoginCount) {
		return true
	}

	return false
}

// SetLoginCount gets a reference to the given int64 and assigns it to the LoginCount field.
func (o *AddUserTenant200ResponseAllOfUser) SetLoginCount(v int64) {
	o.LoginCount = &v
}

// GetLoginAttempts returns the LoginAttempts field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLoginAttempts() int64 {
	if o == nil || IsNil(o.LoginAttempts) {
		var ret int64
		return ret
	}
	return *o.LoginAttempts
}

// GetLoginAttemptsOk returns a tuple with the LoginAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLoginAttemptsOk() (*int64, bool) {
	if o == nil || IsNil(o.LoginAttempts) {
		return nil, false
	}
	return o.LoginAttempts, true
}

// IsSetLoginAttempts returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLoginAttempts() bool {
	if o != nil && !IsNil(o.LoginAttempts) {
		return true
	}

	return false
}

// SetLoginAttempts gets a reference to the given int64 and assigns it to the LoginAttempts field.
func (o *AddUserTenant200ResponseAllOfUser) SetLoginAttempts(v int64) {
	o.LoginAttempts = &v
}

// GetLastLoginDate returns the LastLoginDate field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLastLoginDate() time.Time {
	if o == nil || IsNil(o.LastLoginDate) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginDate
}

// GetLastLoginDateOk returns a tuple with the LastLoginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLastLoginDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastLoginDate) {
		return nil, false
	}
	return o.LastLoginDate, true
}

// IsSetLastLoginDate returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLastLoginDate() bool {
	if o != nil && !IsNil(o.LastLoginDate) {
		return true
	}

	return false
}

// SetLastLoginDate gets a reference to the given time.Time and assigns it to the LastLoginDate field.
func (o *AddUserTenant200ResponseAllOfUser) SetLastLoginDate(v time.Time) {
	o.LastLoginDate = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetRoles() []AddUserTenant200ResponseAllOfUserRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []AddUserTenant200ResponseAllOfUserRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetRolesOk() ([]AddUserTenant200ResponseAllOfUserRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// IsSetRoles returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []AddUserTenant200ResponseAllOfUserRolesInner and assigns it to the Roles field.
func (o *AddUserTenant200ResponseAllOfUser) SetRoles(v []AddUserTenant200ResponseAllOfUserRolesInner) {
	o.Roles = v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *AddUserTenant200ResponseAllOfUser) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

// GetLinuxUsername returns the LinuxUsername field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxUsername() string {
	if o == nil || IsNil(o.LinuxUsername) {
		var ret string
		return ret
	}
	return *o.LinuxUsername
}

// GetLinuxUsernameOk returns a tuple with the LinuxUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.LinuxUsername) {
		return nil, false
	}
	return o.LinuxUsername, true
}

// IsSetLinuxUsername returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLinuxUsername() bool {
	if o != nil && !IsNil(o.LinuxUsername) {
		return true
	}

	return false
}

// SetLinuxUsername gets a reference to the given string and assigns it to the LinuxUsername field.
func (o *AddUserTenant200ResponseAllOfUser) SetLinuxUsername(v string) {
	o.LinuxUsername = &v
}

// GetLinuxPassword returns the LinuxPassword field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxPassword() string {
	if o == nil || IsNil(o.LinuxPassword) {
		var ret string
		return ret
	}
	return *o.LinuxPassword
}

// GetLinuxPasswordOk returns a tuple with the LinuxPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.LinuxPassword) {
		return nil, false
	}
	return o.LinuxPassword, true
}

// IsSetLinuxPassword returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLinuxPassword() bool {
	if o != nil && !IsNil(o.LinuxPassword) {
		return true
	}

	return false
}

// SetLinuxPassword gets a reference to the given string and assigns it to the LinuxPassword field.
func (o *AddUserTenant200ResponseAllOfUser) SetLinuxPassword(v string) {
	o.LinuxPassword = &v
}

// GetLinuxKeyPairId returns the LinuxKeyPairId field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxKeyPairId() int64 {
	if o == nil || IsNil(o.LinuxKeyPairId) {
		var ret int64
		return ret
	}
	return *o.LinuxKeyPairId
}

// GetLinuxKeyPairIdOk returns a tuple with the LinuxKeyPairId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLinuxKeyPairIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LinuxKeyPairId) {
		return nil, false
	}
	return o.LinuxKeyPairId, true
}

// IsSetLinuxKeyPairId returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLinuxKeyPairId() bool {
	if o != nil && !IsNil(o.LinuxKeyPairId) {
		return true
	}

	return false
}

// SetLinuxKeyPairId gets a reference to the given int64 and assigns it to the LinuxKeyPairId field.
func (o *AddUserTenant200ResponseAllOfUser) SetLinuxKeyPairId(v int64) {
	o.LinuxKeyPairId = &v
}

// GetWindowsUsername returns the WindowsUsername field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetWindowsUsername() string {
	if o == nil || IsNil(o.WindowsUsername) {
		var ret string
		return ret
	}
	return *o.WindowsUsername
}

// GetWindowsUsernameOk returns a tuple with the WindowsUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetWindowsUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsUsername) {
		return nil, false
	}
	return o.WindowsUsername, true
}

// IsSetWindowsUsername returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetWindowsUsername() bool {
	if o != nil && !IsNil(o.WindowsUsername) {
		return true
	}

	return false
}

// SetWindowsUsername gets a reference to the given string and assigns it to the WindowsUsername field.
func (o *AddUserTenant200ResponseAllOfUser) SetWindowsUsername(v string) {
	o.WindowsUsername = &v
}

// GetWindowsPassword returns the WindowsPassword field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetWindowsPassword() string {
	if o == nil || IsNil(o.WindowsPassword) {
		var ret string
		return ret
	}
	return *o.WindowsPassword
}

// GetWindowsPasswordOk returns a tuple with the WindowsPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetWindowsPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsPassword) {
		return nil, false
	}
	return o.WindowsPassword, true
}

// IsSetWindowsPassword returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetWindowsPassword() bool {
	if o != nil && !IsNil(o.WindowsPassword) {
		return true
	}

	return false
}

// SetWindowsPassword gets a reference to the given string and assigns it to the WindowsPassword field.
func (o *AddUserTenant200ResponseAllOfUser) SetWindowsPassword(v string) {
	o.WindowsPassword = &v
}

// GetDefaultPersona returns the DefaultPersona field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetDefaultPersona() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.DefaultPersona) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.DefaultPersona
}

// GetDefaultPersonaOk returns a tuple with the DefaultPersona field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetDefaultPersonaOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.DefaultPersona) {
		return nil, false
	}
	return o.DefaultPersona, true
}

// IsSetDefaultPersona returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetDefaultPersona() bool {
	if o != nil && !IsNil(o.DefaultPersona) {
		return true
	}

	return false
}

// SetDefaultPersona gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the DefaultPersona field.
func (o *AddUserTenant200ResponseAllOfUser) SetDefaultPersona(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.DefaultPersona = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *AddUserTenant200ResponseAllOfUser) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *AddUserTenant200ResponseAllOfUser) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUser) GetAccess() AddUserTenant200ResponseAllOfUserAccess {
	if o == nil || IsNil(o.Access) {
		var ret AddUserTenant200ResponseAllOfUserAccess
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUser) GetAccessOk() (*AddUserTenant200ResponseAllOfUserAccess, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// IsSetAccess returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUser) IsSetAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given AddUserTenant200ResponseAllOfUserAccess and assigns it to the Access field.
func (o *AddUserTenant200ResponseAllOfUser) SetAccess(v AddUserTenant200ResponseAllOfUserAccess) {
	o.Access = &v
}

func (o AddUserTenant200ResponseAllOfUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserTenant200ResponseAllOfUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ReceiveNotifications) {
		toSerialize["receiveNotifications"] = o.ReceiveNotifications
	}
	if !IsNil(o.IsUsing2FA) {
		toSerialize["isUsing2FA"] = o.IsUsing2FA
	}
	if !IsNil(o.AccountExpired) {
		toSerialize["accountExpired"] = o.AccountExpired
	}
	if !IsNil(o.AccountLocked) {
		toSerialize["accountLocked"] = o.AccountLocked
	}
	if !IsNil(o.PasswordExpired) {
		toSerialize["passwordExpired"] = o.PasswordExpired
	}
	if !IsNil(o.LoginCount) {
		toSerialize["loginCount"] = o.LoginCount
	}
	if !IsNil(o.LoginAttempts) {
		toSerialize["loginAttempts"] = o.LoginAttempts
	}
	if !IsNil(o.LastLoginDate) {
		toSerialize["lastLoginDate"] = o.LastLoginDate
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.LinuxUsername) {
		toSerialize["linuxUsername"] = o.LinuxUsername
	}
	if !IsNil(o.LinuxPassword) {
		toSerialize["linuxPassword"] = o.LinuxPassword
	}
	if !IsNil(o.LinuxKeyPairId) {
		toSerialize["linuxKeyPairId"] = o.LinuxKeyPairId
	}
	if !IsNil(o.WindowsUsername) {
		toSerialize["windowsUsername"] = o.WindowsUsername
	}
	if !IsNil(o.WindowsPassword) {
		toSerialize["windowsPassword"] = o.WindowsPassword
	}
	if !IsNil(o.DefaultPersona) {
		toSerialize["defaultPersona"] = o.DefaultPersona
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	return toSerialize, nil
}

type NullableAddUserTenant200ResponseAllOfUser struct {
	value *AddUserTenant200ResponseAllOfUser
	isSet bool
}

func (v NullableAddUserTenant200ResponseAllOfUser) Get() *AddUserTenant200ResponseAllOfUser {
	return v.value
}

func (v *NullableAddUserTenant200ResponseAllOfUser) Set(val *AddUserTenant200ResponseAllOfUser) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserTenant200ResponseAllOfUser) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserTenant200ResponseAllOfUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserTenant200ResponseAllOfUser(val *AddUserTenant200ResponseAllOfUser) *NullableAddUserTenant200ResponseAllOfUser {
	return &NullableAddUserTenant200ResponseAllOfUser{value: val, isSet: true}
}

func (v NullableAddUserTenant200ResponseAllOfUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserTenant200ResponseAllOfUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


