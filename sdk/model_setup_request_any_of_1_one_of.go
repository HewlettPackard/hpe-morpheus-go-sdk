/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetupRequestAnyOf1OneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetupRequestAnyOf1OneOf{}

// SetupRequestAnyOf1OneOf Object for logging in to the [Morpheus Hub](https://morpheushub.com) with existing credentials. This is only required for `hubmode=login`.
type SetupRequestAnyOf1OneOf struct {
	Hub SetupRequestAnyOf1OneOfHub `json:"hub"`
}

type _SetupRequestAnyOf1OneOf SetupRequestAnyOf1OneOf

// NewSetupRequestAnyOf1OneOf instantiates a new SetupRequestAnyOf1OneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetupRequestAnyOf1OneOf(hub SetupRequestAnyOf1OneOfHub) *SetupRequestAnyOf1OneOf {
	this := SetupRequestAnyOf1OneOf{}
	this.Hub = hub
	return &this
}

// NewSetupRequestAnyOf1OneOfWithDefaults instantiates a new SetupRequestAnyOf1OneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetupRequestAnyOf1OneOfWithDefaults() *SetupRequestAnyOf1OneOf {
	this := SetupRequestAnyOf1OneOf{}
	return &this
}

// GetHub returns the Hub field value
func (o *SetupRequestAnyOf1OneOf) GetHub() SetupRequestAnyOf1OneOfHub {
	if o == nil {
		var ret SetupRequestAnyOf1OneOfHub
		return ret
	}

	return o.Hub
}

// GetHubOk returns a tuple with the Hub field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf) GetHubOk() (*SetupRequestAnyOf1OneOfHub, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hub, true
}

// SetHub sets field value
func (o *SetupRequestAnyOf1OneOf) SetHub(v SetupRequestAnyOf1OneOfHub) {
	o.Hub = v
}

func (o SetupRequestAnyOf1OneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetupRequestAnyOf1OneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hub"] = o.Hub
	return toSerialize, nil
}

func (o *SetupRequestAnyOf1OneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hub",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetupRequestAnyOf1OneOf := _SetupRequestAnyOf1OneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetupRequestAnyOf1OneOf)

	if err != nil {
		return err
	}

	*o = SetupRequestAnyOf1OneOf(varSetupRequestAnyOf1OneOf)

	return err
}

type NullableSetupRequestAnyOf1OneOf struct {
	value *SetupRequestAnyOf1OneOf
	isSet bool
}

func (v NullableSetupRequestAnyOf1OneOf) Get() *SetupRequestAnyOf1OneOf {
	return v.value
}

func (v *NullableSetupRequestAnyOf1OneOf) Set(val *SetupRequestAnyOf1OneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSetupRequestAnyOf1OneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSetupRequestAnyOf1OneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetupRequestAnyOf1OneOf(val *SetupRequestAnyOf1OneOf) *NullableSetupRequestAnyOf1OneOf {
	return &NullableSetupRequestAnyOf1OneOf{value: val, isSet: true}
}

func (v NullableSetupRequestAnyOf1OneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetupRequestAnyOf1OneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


