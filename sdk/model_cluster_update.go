/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ClusterUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterUpdate{}

// ClusterUpdate struct for ClusterUpdate
type ClusterUpdate struct {
	// Cluster name
	Name *string `json:"name,omitempty"`
	// Cluster description
	Description *string `json:"description,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Cluster enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Use the Agent to relay communications for the Kubernetes API instead of direct.
	UseAgent *bool `json:"useAgent,omitempty"`
	// Cluster API Url
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Cluster API token
	ServiceToken *string `json:"serviceToken,omitempty"`
	// Queue cluster refresh
	Refresh *bool `json:"refresh,omitempty"`
	// Cluster managed
	Managed *bool `json:"managed,omitempty"`
	// Automatically Power on VMs
	AutoRecoverPowerState *bool `json:"autoRecoverPowerState,omitempty"`
	// Cluster integrations
	Integrations []UpdateClusterRequestClusterIntegrationsInner `json:"integrations,omitempty"`
}

// NewClusterUpdate instantiates a new ClusterUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdate() *ClusterUpdate {
	this := ClusterUpdate{}
	return &this
}

// NewClusterUpdateWithDefaults instantiates a new ClusterUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdateWithDefaults() *ClusterUpdate {
	this := ClusterUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterUpdate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterUpdate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterUpdate) SetLabels(v []string) {
	o.Labels = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClusterUpdate) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClusterUpdate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetUseAgent returns the UseAgent field value if set, zero value otherwise.
func (o *ClusterUpdate) GetUseAgent() bool {
	if o == nil || IsNil(o.UseAgent) {
		var ret bool
		return ret
	}
	return *o.UseAgent
}

// GetUseAgentOk returns a tuple with the UseAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetUseAgentOk() (*bool, bool) {
	if o == nil || IsNil(o.UseAgent) {
		return nil, false
	}
	return o.UseAgent, true
}

// IsSetUseAgent returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetUseAgent() bool {
	if o != nil && !IsNil(o.UseAgent) {
		return true
	}

	return false
}

// SetUseAgent gets a reference to the given bool and assigns it to the UseAgent field.
func (o *ClusterUpdate) SetUseAgent(v bool) {
	o.UseAgent = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *ClusterUpdate) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *ClusterUpdate) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *ClusterUpdate) GetServiceToken() string {
	if o == nil || IsNil(o.ServiceToken) {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetServiceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceToken) {
		return nil, false
	}
	return o.ServiceToken, true
}

// IsSetServiceToken returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetServiceToken() bool {
	if o != nil && !IsNil(o.ServiceToken) {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *ClusterUpdate) SetServiceToken(v string) {
	o.ServiceToken = &v
}

// GetRefresh returns the Refresh field value if set, zero value otherwise.
func (o *ClusterUpdate) GetRefresh() bool {
	if o == nil || IsNil(o.Refresh) {
		var ret bool
		return ret
	}
	return *o.Refresh
}

// GetRefreshOk returns a tuple with the Refresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetRefreshOk() (*bool, bool) {
	if o == nil || IsNil(o.Refresh) {
		return nil, false
	}
	return o.Refresh, true
}

// IsSetRefresh returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetRefresh() bool {
	if o != nil && !IsNil(o.Refresh) {
		return true
	}

	return false
}

// SetRefresh gets a reference to the given bool and assigns it to the Refresh field.
func (o *ClusterUpdate) SetRefresh(v bool) {
	o.Refresh = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *ClusterUpdate) GetManaged() bool {
	if o == nil || IsNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// IsSetManaged returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetManaged() bool {
	if o != nil && !IsNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *ClusterUpdate) SetManaged(v bool) {
	o.Managed = &v
}

// GetAutoRecoverPowerState returns the AutoRecoverPowerState field value if set, zero value otherwise.
func (o *ClusterUpdate) GetAutoRecoverPowerState() bool {
	if o == nil || IsNil(o.AutoRecoverPowerState) {
		var ret bool
		return ret
	}
	return *o.AutoRecoverPowerState
}

// GetAutoRecoverPowerStateOk returns a tuple with the AutoRecoverPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetAutoRecoverPowerStateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRecoverPowerState) {
		return nil, false
	}
	return o.AutoRecoverPowerState, true
}

// IsSetAutoRecoverPowerState returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetAutoRecoverPowerState() bool {
	if o != nil && !IsNil(o.AutoRecoverPowerState) {
		return true
	}

	return false
}

// SetAutoRecoverPowerState gets a reference to the given bool and assigns it to the AutoRecoverPowerState field.
func (o *ClusterUpdate) SetAutoRecoverPowerState(v bool) {
	o.AutoRecoverPowerState = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *ClusterUpdate) GetIntegrations() []UpdateClusterRequestClusterIntegrationsInner {
	if o == nil || IsNil(o.Integrations) {
		var ret []UpdateClusterRequestClusterIntegrationsInner
		return ret
	}
	return o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdate) GetIntegrationsOk() ([]UpdateClusterRequestClusterIntegrationsInner, bool) {
	if o == nil || IsNil(o.Integrations) {
		return nil, false
	}
	return o.Integrations, true
}

// IsSetIntegrations returns a boolean if a field has been set.
func (o *ClusterUpdate) IsSetIntegrations() bool {
	if o != nil && !IsNil(o.Integrations) {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given []UpdateClusterRequestClusterIntegrationsInner and assigns it to the Integrations field.
func (o *ClusterUpdate) SetIntegrations(v []UpdateClusterRequestClusterIntegrationsInner) {
	o.Integrations = v
}

func (o ClusterUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.UseAgent) {
		toSerialize["useAgent"] = o.UseAgent
	}
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.ServiceToken) {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	if !IsNil(o.Refresh) {
		toSerialize["refresh"] = o.Refresh
	}
	if !IsNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if !IsNil(o.AutoRecoverPowerState) {
		toSerialize["autoRecoverPowerState"] = o.AutoRecoverPowerState
	}
	if !IsNil(o.Integrations) {
		toSerialize["integrations"] = o.Integrations
	}
	return toSerialize, nil
}

type NullableClusterUpdate struct {
	value *ClusterUpdate
	isSet bool
}

func (v NullableClusterUpdate) Get() *ClusterUpdate {
	return v.value
}

func (v *NullableClusterUpdate) Set(val *ClusterUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdate(val *ClusterUpdate) *NullableClusterUpdate {
	return &NullableClusterUpdate{value: val, isSet: true}
}

func (v NullableClusterUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


