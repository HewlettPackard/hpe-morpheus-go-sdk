/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig{}

// ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig struct for ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig
type ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig struct {
	Url *string `json:"url,omitempty"`
	BindingUsername *string `json:"bindingUsername,omitempty"`
	BindingPassword *string `json:"bindingPassword,omitempty"`
	UserFqnExpression *string `json:"userFqnExpression,omitempty"`
	RequiredRoleFqn *string `json:"requiredRoleFqn,omitempty"`
	UsernameAttribute *string `json:"usernameAttribute,omitempty"`
	CommonNameAttribute *string `json:"commonNameAttribute,omitempty"`
	FirstNameAttribute *string `json:"firstNameAttribute,omitempty"`
	LastNameAttribute *string `json:"lastNameAttribute,omitempty"`
	EmailAttribute *string `json:"emailAttribute,omitempty"`
	UniqueMemberAttribute *string `json:"uniqueMemberAttribute,omitempty"`
	MemberOfAttribute *string `json:"memberOfAttribute,omitempty"`
	BindingPasswordHash *string `json:"bindingPasswordHash,omitempty"`
}

// NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig instantiates a new ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig {
	this := ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig{}
	return &this
}

// NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfigWithDefaults instantiates a new ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfigWithDefaults() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig {
	this := ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// IsSetUrl returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetUrl(v string) {
	o.Url = &v
}

// GetBindingUsername returns the BindingUsername field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingUsername() string {
	if o == nil || IsNil(o.BindingUsername) {
		var ret string
		return ret
	}
	return *o.BindingUsername
}

// GetBindingUsernameOk returns a tuple with the BindingUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.BindingUsername) {
		return nil, false
	}
	return o.BindingUsername, true
}

// IsSetBindingUsername returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetBindingUsername() bool {
	if o != nil && !IsNil(o.BindingUsername) {
		return true
	}

	return false
}

// SetBindingUsername gets a reference to the given string and assigns it to the BindingUsername field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetBindingUsername(v string) {
	o.BindingUsername = &v
}

// GetBindingPassword returns the BindingPassword field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingPassword() string {
	if o == nil || IsNil(o.BindingPassword) {
		var ret string
		return ret
	}
	return *o.BindingPassword
}

// GetBindingPasswordOk returns a tuple with the BindingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPassword) {
		return nil, false
	}
	return o.BindingPassword, true
}

// IsSetBindingPassword returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetBindingPassword() bool {
	if o != nil && !IsNil(o.BindingPassword) {
		return true
	}

	return false
}

// SetBindingPassword gets a reference to the given string and assigns it to the BindingPassword field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetBindingPassword(v string) {
	o.BindingPassword = &v
}

// GetUserFqnExpression returns the UserFqnExpression field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUserFqnExpression() string {
	if o == nil || IsNil(o.UserFqnExpression) {
		var ret string
		return ret
	}
	return *o.UserFqnExpression
}

// GetUserFqnExpressionOk returns a tuple with the UserFqnExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUserFqnExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.UserFqnExpression) {
		return nil, false
	}
	return o.UserFqnExpression, true
}

// IsSetUserFqnExpression returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetUserFqnExpression() bool {
	if o != nil && !IsNil(o.UserFqnExpression) {
		return true
	}

	return false
}

// SetUserFqnExpression gets a reference to the given string and assigns it to the UserFqnExpression field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetUserFqnExpression(v string) {
	o.UserFqnExpression = &v
}

// GetRequiredRoleFqn returns the RequiredRoleFqn field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetRequiredRoleFqn() string {
	if o == nil || IsNil(o.RequiredRoleFqn) {
		var ret string
		return ret
	}
	return *o.RequiredRoleFqn
}

// GetRequiredRoleFqnOk returns a tuple with the RequiredRoleFqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetRequiredRoleFqnOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredRoleFqn) {
		return nil, false
	}
	return o.RequiredRoleFqn, true
}

// IsSetRequiredRoleFqn returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetRequiredRoleFqn() bool {
	if o != nil && !IsNil(o.RequiredRoleFqn) {
		return true
	}

	return false
}

// SetRequiredRoleFqn gets a reference to the given string and assigns it to the RequiredRoleFqn field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetRequiredRoleFqn(v string) {
	o.RequiredRoleFqn = &v
}

// GetUsernameAttribute returns the UsernameAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUsernameAttribute() string {
	if o == nil || IsNil(o.UsernameAttribute) {
		var ret string
		return ret
	}
	return *o.UsernameAttribute
}

// GetUsernameAttributeOk returns a tuple with the UsernameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUsernameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.UsernameAttribute) {
		return nil, false
	}
	return o.UsernameAttribute, true
}

// IsSetUsernameAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetUsernameAttribute() bool {
	if o != nil && !IsNil(o.UsernameAttribute) {
		return true
	}

	return false
}

// SetUsernameAttribute gets a reference to the given string and assigns it to the UsernameAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetUsernameAttribute(v string) {
	o.UsernameAttribute = &v
}

// GetCommonNameAttribute returns the CommonNameAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetCommonNameAttribute() string {
	if o == nil || IsNil(o.CommonNameAttribute) {
		var ret string
		return ret
	}
	return *o.CommonNameAttribute
}

// GetCommonNameAttributeOk returns a tuple with the CommonNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetCommonNameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.CommonNameAttribute) {
		return nil, false
	}
	return o.CommonNameAttribute, true
}

// IsSetCommonNameAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetCommonNameAttribute() bool {
	if o != nil && !IsNil(o.CommonNameAttribute) {
		return true
	}

	return false
}

// SetCommonNameAttribute gets a reference to the given string and assigns it to the CommonNameAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetCommonNameAttribute(v string) {
	o.CommonNameAttribute = &v
}

// GetFirstNameAttribute returns the FirstNameAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetFirstNameAttribute() string {
	if o == nil || IsNil(o.FirstNameAttribute) {
		var ret string
		return ret
	}
	return *o.FirstNameAttribute
}

// GetFirstNameAttributeOk returns a tuple with the FirstNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetFirstNameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.FirstNameAttribute) {
		return nil, false
	}
	return o.FirstNameAttribute, true
}

// IsSetFirstNameAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetFirstNameAttribute() bool {
	if o != nil && !IsNil(o.FirstNameAttribute) {
		return true
	}

	return false
}

// SetFirstNameAttribute gets a reference to the given string and assigns it to the FirstNameAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetFirstNameAttribute(v string) {
	o.FirstNameAttribute = &v
}

// GetLastNameAttribute returns the LastNameAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetLastNameAttribute() string {
	if o == nil || IsNil(o.LastNameAttribute) {
		var ret string
		return ret
	}
	return *o.LastNameAttribute
}

// GetLastNameAttributeOk returns a tuple with the LastNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetLastNameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.LastNameAttribute) {
		return nil, false
	}
	return o.LastNameAttribute, true
}

// IsSetLastNameAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetLastNameAttribute() bool {
	if o != nil && !IsNil(o.LastNameAttribute) {
		return true
	}

	return false
}

// SetLastNameAttribute gets a reference to the given string and assigns it to the LastNameAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetLastNameAttribute(v string) {
	o.LastNameAttribute = &v
}

// GetEmailAttribute returns the EmailAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetEmailAttribute() string {
	if o == nil || IsNil(o.EmailAttribute) {
		var ret string
		return ret
	}
	return *o.EmailAttribute
}

// GetEmailAttributeOk returns a tuple with the EmailAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetEmailAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAttribute) {
		return nil, false
	}
	return o.EmailAttribute, true
}

// IsSetEmailAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetEmailAttribute() bool {
	if o != nil && !IsNil(o.EmailAttribute) {
		return true
	}

	return false
}

// SetEmailAttribute gets a reference to the given string and assigns it to the EmailAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetEmailAttribute(v string) {
	o.EmailAttribute = &v
}

// GetUniqueMemberAttribute returns the UniqueMemberAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUniqueMemberAttribute() string {
	if o == nil || IsNil(o.UniqueMemberAttribute) {
		var ret string
		return ret
	}
	return *o.UniqueMemberAttribute
}

// GetUniqueMemberAttributeOk returns a tuple with the UniqueMemberAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetUniqueMemberAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueMemberAttribute) {
		return nil, false
	}
	return o.UniqueMemberAttribute, true
}

// IsSetUniqueMemberAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetUniqueMemberAttribute() bool {
	if o != nil && !IsNil(o.UniqueMemberAttribute) {
		return true
	}

	return false
}

// SetUniqueMemberAttribute gets a reference to the given string and assigns it to the UniqueMemberAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetUniqueMemberAttribute(v string) {
	o.UniqueMemberAttribute = &v
}

// GetMemberOfAttribute returns the MemberOfAttribute field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetMemberOfAttribute() string {
	if o == nil || IsNil(o.MemberOfAttribute) {
		var ret string
		return ret
	}
	return *o.MemberOfAttribute
}

// GetMemberOfAttributeOk returns a tuple with the MemberOfAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetMemberOfAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.MemberOfAttribute) {
		return nil, false
	}
	return o.MemberOfAttribute, true
}

// IsSetMemberOfAttribute returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetMemberOfAttribute() bool {
	if o != nil && !IsNil(o.MemberOfAttribute) {
		return true
	}

	return false
}

// SetMemberOfAttribute gets a reference to the given string and assigns it to the MemberOfAttribute field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetMemberOfAttribute(v string) {
	o.MemberOfAttribute = &v
}

// GetBindingPasswordHash returns the BindingPasswordHash field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingPasswordHash() string {
	if o == nil || IsNil(o.BindingPasswordHash) {
		var ret string
		return ret
	}
	return *o.BindingPasswordHash
}

// GetBindingPasswordHashOk returns a tuple with the BindingPasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) GetBindingPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPasswordHash) {
		return nil, false
	}
	return o.BindingPasswordHash, true
}

// IsSetBindingPasswordHash returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSetBindingPasswordHash() bool {
	if o != nil && !IsNil(o.BindingPasswordHash) {
		return true
	}

	return false
}

// SetBindingPasswordHash gets a reference to the given string and assigns it to the BindingPasswordHash field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) SetBindingPasswordHash(v string) {
	o.BindingPasswordHash = &v
}

func (o ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.BindingUsername) {
		toSerialize["bindingUsername"] = o.BindingUsername
	}
	if !IsNil(o.BindingPassword) {
		toSerialize["bindingPassword"] = o.BindingPassword
	}
	if !IsNil(o.UserFqnExpression) {
		toSerialize["userFqnExpression"] = o.UserFqnExpression
	}
	if !IsNil(o.RequiredRoleFqn) {
		toSerialize["requiredRoleFqn"] = o.RequiredRoleFqn
	}
	if !IsNil(o.UsernameAttribute) {
		toSerialize["usernameAttribute"] = o.UsernameAttribute
	}
	if !IsNil(o.CommonNameAttribute) {
		toSerialize["commonNameAttribute"] = o.CommonNameAttribute
	}
	if !IsNil(o.FirstNameAttribute) {
		toSerialize["firstNameAttribute"] = o.FirstNameAttribute
	}
	if !IsNil(o.LastNameAttribute) {
		toSerialize["lastNameAttribute"] = o.LastNameAttribute
	}
	if !IsNil(o.EmailAttribute) {
		toSerialize["emailAttribute"] = o.EmailAttribute
	}
	if !IsNil(o.UniqueMemberAttribute) {
		toSerialize["uniqueMemberAttribute"] = o.UniqueMemberAttribute
	}
	if !IsNil(o.MemberOfAttribute) {
		toSerialize["memberOfAttribute"] = o.MemberOfAttribute
	}
	if !IsNil(o.BindingPasswordHash) {
		toSerialize["bindingPasswordHash"] = o.BindingPasswordHash
	}
	return toSerialize, nil
}

type NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig struct {
	value *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig
	isSet bool
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) Get() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig {
	return v.value
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) Set(val *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig(val *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig {
	return &NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig{value: val, isSet: true}
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


