/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterLayoutCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterLayoutCreate{}

// ClusterLayoutCreate struct for ClusterLayoutCreate
type ClusterLayoutCreate struct {
	// Cluster layout name
	Name string `json:"name"`
	// Cluster layout description
	Description *string `json:"description,omitempty"`
	Labels []string `json:"labels,omitempty"`
	// Version of the cluster layout
	ComputeVersion string `json:"computeVersion"`
	// Can be used to enable / disable the creatability of the cluster layout.
	Creatable *bool `json:"creatable,omitempty"`
	// Can be used to enable / disable the horizontal scaling.
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	// Install Docker (container runtime).
	InstallContainerRuntime *bool `json:"installContainerRuntime,omitempty"`
	// Memory requirement in bytes
	MemoryRequirement *int64 `json:"memoryRequirement,omitempty"`
	GroupType AddClusterLayoutsRequestLayoutGroupType `json:"groupType"`
	ProvisionType AddClusterLayoutsRequestLayoutProvisionType `json:"provisionType"`
	// Array of cluster layout option types
	OptionTypes []GetAlerts200ResponseAllOfChecksInnerAccount `json:"optionTypes,omitempty"`
	// Array of cluster layout task sets
	TaskSets []GetAlerts200ResponseAllOfChecksInnerAccount `json:"taskSets,omitempty"`
	// Array of cluster layout env variables
	EnvironmentVariables []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner `json:"environmentVariables,omitempty"`
	// Array of cluster layout master nodes
	Masters []AddClusterLayoutsRequestLayoutMastersInner `json:"masters,omitempty"`
	// Array of cluster layout worker nodes
	Workers []AddClusterLayoutsRequestLayoutMastersInner `json:"workers,omitempty"`
}

type _ClusterLayoutCreate ClusterLayoutCreate

// NewClusterLayoutCreate instantiates a new ClusterLayoutCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLayoutCreate(name string, computeVersion string, groupType AddClusterLayoutsRequestLayoutGroupType, provisionType AddClusterLayoutsRequestLayoutProvisionType) *ClusterLayoutCreate {
	this := ClusterLayoutCreate{}
	this.Name = name
	this.ComputeVersion = computeVersion
	var creatable bool = true
	this.Creatable = &creatable
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var installContainerRuntime bool = false
	this.InstallContainerRuntime = &installContainerRuntime
	this.GroupType = groupType
	this.ProvisionType = provisionType
	return &this
}

// NewClusterLayoutCreateWithDefaults instantiates a new ClusterLayoutCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLayoutCreateWithDefaults() *ClusterLayoutCreate {
	this := ClusterLayoutCreate{}
	var creatable bool = true
	this.Creatable = &creatable
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var installContainerRuntime bool = false
	this.InstallContainerRuntime = &installContainerRuntime
	return &this
}

// GetName returns the Name field value
func (o *ClusterLayoutCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterLayoutCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterLayoutCreate) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterLayoutCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetComputeVersion returns the ComputeVersion field value
func (o *ClusterLayoutCreate) GetComputeVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComputeVersion
}

// GetComputeVersionOk returns a tuple with the ComputeVersion field value
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetComputeVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComputeVersion, true
}

// SetComputeVersion sets field value
func (o *ClusterLayoutCreate) SetComputeVersion(v string) {
	o.ComputeVersion = v
}

// GetCreatable returns the Creatable field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetCreatable() bool {
	if o == nil || IsNil(o.Creatable) {
		var ret bool
		return ret
	}
	return *o.Creatable
}

// GetCreatableOk returns a tuple with the Creatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetCreatableOk() (*bool, bool) {
	if o == nil || IsNil(o.Creatable) {
		return nil, false
	}
	return o.Creatable, true
}

// IsSetCreatable returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetCreatable() bool {
	if o != nil && !IsNil(o.Creatable) {
		return true
	}

	return false
}

// SetCreatable gets a reference to the given bool and assigns it to the Creatable field.
func (o *ClusterLayoutCreate) SetCreatable(v bool) {
	o.Creatable = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetHasAutoScale() bool {
	if o == nil || IsNil(o.HasAutoScale) {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAutoScale) {
		return nil, false
	}
	return o.HasAutoScale, true
}

// IsSetHasAutoScale returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetHasAutoScale() bool {
	if o != nil && !IsNil(o.HasAutoScale) {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *ClusterLayoutCreate) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetInstallContainerRuntime returns the InstallContainerRuntime field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetInstallContainerRuntime() bool {
	if o == nil || IsNil(o.InstallContainerRuntime) {
		var ret bool
		return ret
	}
	return *o.InstallContainerRuntime
}

// GetInstallContainerRuntimeOk returns a tuple with the InstallContainerRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetInstallContainerRuntimeOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallContainerRuntime) {
		return nil, false
	}
	return o.InstallContainerRuntime, true
}

// IsSetInstallContainerRuntime returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetInstallContainerRuntime() bool {
	if o != nil && !IsNil(o.InstallContainerRuntime) {
		return true
	}

	return false
}

// SetInstallContainerRuntime gets a reference to the given bool and assigns it to the InstallContainerRuntime field.
func (o *ClusterLayoutCreate) SetInstallContainerRuntime(v bool) {
	o.InstallContainerRuntime = &v
}

// GetMemoryRequirement returns the MemoryRequirement field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetMemoryRequirement() int64 {
	if o == nil || IsNil(o.MemoryRequirement) {
		var ret int64
		return ret
	}
	return *o.MemoryRequirement
}

// GetMemoryRequirementOk returns a tuple with the MemoryRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetMemoryRequirementOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryRequirement) {
		return nil, false
	}
	return o.MemoryRequirement, true
}

// IsSetMemoryRequirement returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetMemoryRequirement() bool {
	if o != nil && !IsNil(o.MemoryRequirement) {
		return true
	}

	return false
}

// SetMemoryRequirement gets a reference to the given int64 and assigns it to the MemoryRequirement field.
func (o *ClusterLayoutCreate) SetMemoryRequirement(v int64) {
	o.MemoryRequirement = &v
}

// GetGroupType returns the GroupType field value
func (o *ClusterLayoutCreate) GetGroupType() AddClusterLayoutsRequestLayoutGroupType {
	if o == nil {
		var ret AddClusterLayoutsRequestLayoutGroupType
		return ret
	}

	return o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetGroupTypeOk() (*AddClusterLayoutsRequestLayoutGroupType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupType, true
}

// SetGroupType sets field value
func (o *ClusterLayoutCreate) SetGroupType(v AddClusterLayoutsRequestLayoutGroupType) {
	o.GroupType = v
}

// GetProvisionType returns the ProvisionType field value
func (o *ClusterLayoutCreate) GetProvisionType() AddClusterLayoutsRequestLayoutProvisionType {
	if o == nil {
		var ret AddClusterLayoutsRequestLayoutProvisionType
		return ret
	}

	return o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetProvisionTypeOk() (*AddClusterLayoutsRequestLayoutProvisionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisionType, true
}

// SetProvisionType sets field value
func (o *ClusterLayoutCreate) SetProvisionType(v AddClusterLayoutsRequestLayoutProvisionType) {
	o.ProvisionType = v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetOptionTypes() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetOptionTypesOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the OptionTypes field.
func (o *ClusterLayoutCreate) SetOptionTypes(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.OptionTypes = v
}

// GetTaskSets returns the TaskSets field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetTaskSets() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.TaskSets) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.TaskSets
}

// GetTaskSetsOk returns a tuple with the TaskSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetTaskSetsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.TaskSets) {
		return nil, false
	}
	return o.TaskSets, true
}

// IsSetTaskSets returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetTaskSets() bool {
	if o != nil && !IsNil(o.TaskSets) {
		return true
	}

	return false
}

// SetTaskSets gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the TaskSets field.
func (o *ClusterLayoutCreate) SetTaskSets(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.TaskSets = v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetEnvironmentVariables() []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetEnvironmentVariablesOk() ([]AddClusterLayoutsRequestLayoutEnvironmentVariablesInner, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// IsSetEnvironmentVariables returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner and assigns it to the EnvironmentVariables field.
func (o *ClusterLayoutCreate) SetEnvironmentVariables(v []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner) {
	o.EnvironmentVariables = v
}

// GetMasters returns the Masters field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetMasters() []AddClusterLayoutsRequestLayoutMastersInner {
	if o == nil || IsNil(o.Masters) {
		var ret []AddClusterLayoutsRequestLayoutMastersInner
		return ret
	}
	return o.Masters
}

// GetMastersOk returns a tuple with the Masters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetMastersOk() ([]AddClusterLayoutsRequestLayoutMastersInner, bool) {
	if o == nil || IsNil(o.Masters) {
		return nil, false
	}
	return o.Masters, true
}

// IsSetMasters returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetMasters() bool {
	if o != nil && !IsNil(o.Masters) {
		return true
	}

	return false
}

// SetMasters gets a reference to the given []AddClusterLayoutsRequestLayoutMastersInner and assigns it to the Masters field.
func (o *ClusterLayoutCreate) SetMasters(v []AddClusterLayoutsRequestLayoutMastersInner) {
	o.Masters = v
}

// GetWorkers returns the Workers field value if set, zero value otherwise.
func (o *ClusterLayoutCreate) GetWorkers() []AddClusterLayoutsRequestLayoutMastersInner {
	if o == nil || IsNil(o.Workers) {
		var ret []AddClusterLayoutsRequestLayoutMastersInner
		return ret
	}
	return o.Workers
}

// GetWorkersOk returns a tuple with the Workers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreate) GetWorkersOk() ([]AddClusterLayoutsRequestLayoutMastersInner, bool) {
	if o == nil || IsNil(o.Workers) {
		return nil, false
	}
	return o.Workers, true
}

// IsSetWorkers returns a boolean if a field has been set.
func (o *ClusterLayoutCreate) IsSetWorkers() bool {
	if o != nil && !IsNil(o.Workers) {
		return true
	}

	return false
}

// SetWorkers gets a reference to the given []AddClusterLayoutsRequestLayoutMastersInner and assigns it to the Workers field.
func (o *ClusterLayoutCreate) SetWorkers(v []AddClusterLayoutsRequestLayoutMastersInner) {
	o.Workers = v
}

func (o ClusterLayoutCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterLayoutCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["computeVersion"] = o.ComputeVersion
	if !IsNil(o.Creatable) {
		toSerialize["creatable"] = o.Creatable
	}
	if !IsNil(o.HasAutoScale) {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if !IsNil(o.InstallContainerRuntime) {
		toSerialize["installContainerRuntime"] = o.InstallContainerRuntime
	}
	if !IsNil(o.MemoryRequirement) {
		toSerialize["memoryRequirement"] = o.MemoryRequirement
	}
	toSerialize["groupType"] = o.GroupType
	toSerialize["provisionType"] = o.ProvisionType
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.TaskSets) {
		toSerialize["taskSets"] = o.TaskSets
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if !IsNil(o.Masters) {
		toSerialize["masters"] = o.Masters
	}
	if !IsNil(o.Workers) {
		toSerialize["workers"] = o.Workers
	}
	return toSerialize, nil
}

func (o *ClusterLayoutCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"computeVersion",
		"groupType",
		"provisionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterLayoutCreate := _ClusterLayoutCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterLayoutCreate)

	if err != nil {
		return err
	}

	*o = ClusterLayoutCreate(varClusterLayoutCreate)

	return err
}

type NullableClusterLayoutCreate struct {
	value *ClusterLayoutCreate
	isSet bool
}

func (v NullableClusterLayoutCreate) Get() *ClusterLayoutCreate {
	return v.value
}

func (v *NullableClusterLayoutCreate) Set(val *ClusterLayoutCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLayoutCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLayoutCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLayoutCreate(val *ClusterLayoutCreate) *NullableClusterLayoutCreate {
	return &NullableClusterLayoutCreate{value: val, isSet: true}
}

func (v NullableClusterLayoutCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLayoutCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


