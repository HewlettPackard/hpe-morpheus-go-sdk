/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddProvisioningLicenseRequestLicense type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProvisioningLicenseRequestLicense{}

// AddProvisioningLicenseRequestLicense struct for AddProvisioningLicenseRequestLicense
type AddProvisioningLicenseRequestLicense struct {
	// Name
	Name string `json:"name"`
	// License Type - The license type code.
	LicenseType string `json:"licenseType"`
	// License Key - The license key, to be kept a secret.
	LicenseKey string `json:"licenseKey"`
	// Org Name - The Organization Name (if applicable) related to the license key
	OrgName *string `json:"orgName,omitempty"`
	// Full Name - The Full Name (if applicable) related to the license key
	FullName *string `json:"fullName,omitempty"`
	// License Version
	LicenseVersion *string `json:"licenseVersion,omitempty"`
	// Copies - The number of times the key can be used.
	Copies *int64 `json:"copies,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Virtual Images - Array of Virtual Image IDs to associate with license.
	VirtualImages []int64 `json:"virtualImages,omitempty"`
	// Tenants - Array of tenants that are allowed to use the key.
	Tenants []int64 `json:"tenants,omitempty"`
}

type _AddProvisioningLicenseRequestLicense AddProvisioningLicenseRequestLicense

// NewAddProvisioningLicenseRequestLicense instantiates a new AddProvisioningLicenseRequestLicense object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProvisioningLicenseRequestLicense(name string, licenseType string, licenseKey string) *AddProvisioningLicenseRequestLicense {
	this := AddProvisioningLicenseRequestLicense{}
	this.Name = name
	this.LicenseType = licenseType
	this.LicenseKey = licenseKey
	var copies int64 = 1
	this.Copies = &copies
	return &this
}

// NewAddProvisioningLicenseRequestLicenseWithDefaults instantiates a new AddProvisioningLicenseRequestLicense object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProvisioningLicenseRequestLicenseWithDefaults() *AddProvisioningLicenseRequestLicense {
	this := AddProvisioningLicenseRequestLicense{}
	var copies int64 = 1
	this.Copies = &copies
	return &this
}

// GetName returns the Name field value
func (o *AddProvisioningLicenseRequestLicense) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddProvisioningLicenseRequestLicense) SetName(v string) {
	o.Name = v
}

// GetLicenseType returns the LicenseType field value
func (o *AddProvisioningLicenseRequestLicense) GetLicenseType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetLicenseTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseType, true
}

// SetLicenseType sets field value
func (o *AddProvisioningLicenseRequestLicense) SetLicenseType(v string) {
	o.LicenseType = v
}

// GetLicenseKey returns the LicenseKey field value
func (o *AddProvisioningLicenseRequestLicense) GetLicenseKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetLicenseKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseKey, true
}

// SetLicenseKey sets field value
func (o *AddProvisioningLicenseRequestLicense) SetLicenseKey(v string) {
	o.LicenseKey = v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// IsSetOrgName returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *AddProvisioningLicenseRequestLicense) SetOrgName(v string) {
	o.OrgName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// IsSetFullName returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *AddProvisioningLicenseRequestLicense) SetFullName(v string) {
	o.FullName = &v
}

// GetLicenseVersion returns the LicenseVersion field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetLicenseVersion() string {
	if o == nil || IsNil(o.LicenseVersion) {
		var ret string
		return ret
	}
	return *o.LicenseVersion
}

// GetLicenseVersionOk returns a tuple with the LicenseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetLicenseVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseVersion) {
		return nil, false
	}
	return o.LicenseVersion, true
}

// IsSetLicenseVersion returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetLicenseVersion() bool {
	if o != nil && !IsNil(o.LicenseVersion) {
		return true
	}

	return false
}

// SetLicenseVersion gets a reference to the given string and assigns it to the LicenseVersion field.
func (o *AddProvisioningLicenseRequestLicense) SetLicenseVersion(v string) {
	o.LicenseVersion = &v
}

// GetCopies returns the Copies field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetCopies() int64 {
	if o == nil || IsNil(o.Copies) {
		var ret int64
		return ret
	}
	return *o.Copies
}

// GetCopiesOk returns a tuple with the Copies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetCopiesOk() (*int64, bool) {
	if o == nil || IsNil(o.Copies) {
		return nil, false
	}
	return o.Copies, true
}

// IsSetCopies returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetCopies() bool {
	if o != nil && !IsNil(o.Copies) {
		return true
	}

	return false
}

// SetCopies gets a reference to the given int64 and assigns it to the Copies field.
func (o *AddProvisioningLicenseRequestLicense) SetCopies(v int64) {
	o.Copies = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddProvisioningLicenseRequestLicense) SetDescription(v string) {
	o.Description = &v
}

// GetVirtualImages returns the VirtualImages field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetVirtualImages() []int64 {
	if o == nil || IsNil(o.VirtualImages) {
		var ret []int64
		return ret
	}
	return o.VirtualImages
}

// GetVirtualImagesOk returns a tuple with the VirtualImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetVirtualImagesOk() ([]int64, bool) {
	if o == nil || IsNil(o.VirtualImages) {
		return nil, false
	}
	return o.VirtualImages, true
}

// IsSetVirtualImages returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetVirtualImages() bool {
	if o != nil && !IsNil(o.VirtualImages) {
		return true
	}

	return false
}

// SetVirtualImages gets a reference to the given []int64 and assigns it to the VirtualImages field.
func (o *AddProvisioningLicenseRequestLicense) SetVirtualImages(v []int64) {
	o.VirtualImages = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *AddProvisioningLicenseRequestLicense) GetTenants() []int64 {
	if o == nil || IsNil(o.Tenants) {
		var ret []int64
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicenseRequestLicense) GetTenantsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *AddProvisioningLicenseRequestLicense) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []int64 and assigns it to the Tenants field.
func (o *AddProvisioningLicenseRequestLicense) SetTenants(v []int64) {
	o.Tenants = v
}

func (o AddProvisioningLicenseRequestLicense) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProvisioningLicenseRequestLicense) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["licenseType"] = o.LicenseType
	toSerialize["licenseKey"] = o.LicenseKey
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.LicenseVersion) {
		toSerialize["licenseVersion"] = o.LicenseVersion
	}
	if !IsNil(o.Copies) {
		toSerialize["copies"] = o.Copies
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.VirtualImages) {
		toSerialize["virtualImages"] = o.VirtualImages
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

func (o *AddProvisioningLicenseRequestLicense) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"licenseType",
		"licenseKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddProvisioningLicenseRequestLicense := _AddProvisioningLicenseRequestLicense{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddProvisioningLicenseRequestLicense)

	if err != nil {
		return err
	}

	*o = AddProvisioningLicenseRequestLicense(varAddProvisioningLicenseRequestLicense)

	return err
}

type NullableAddProvisioningLicenseRequestLicense struct {
	value *AddProvisioningLicenseRequestLicense
	isSet bool
}

func (v NullableAddProvisioningLicenseRequestLicense) Get() *AddProvisioningLicenseRequestLicense {
	return v.value
}

func (v *NullableAddProvisioningLicenseRequestLicense) Set(val *AddProvisioningLicenseRequestLicense) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProvisioningLicenseRequestLicense) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProvisioningLicenseRequestLicense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProvisioningLicenseRequestLicense(val *AddProvisioningLicenseRequestLicense) *NullableAddProvisioningLicenseRequestLicense {
	return &NullableAddProvisioningLicenseRequestLicense{value: val, isSet: true}
}

func (v NullableAddProvisioningLicenseRequestLicense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProvisioningLicenseRequestLicense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


