/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIdentitySourcesRequestUserSourceConfigOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIdentitySourcesRequestUserSourceConfigOneOf3{}

// AddIdentitySourcesRequestUserSourceConfigOneOf3 Okta Configuration
type AddIdentitySourcesRequestUserSourceConfigOneOf3 struct {
	// Okta URL
	Url *string `json:"url,omitempty"`
	// Administrator API Token
	AdministratorAPIToken *string `json:"administratorAPIToken,omitempty"`
	// Required Group
	RequiredGroup *string `json:"requiredGroup,omitempty"`
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf3 instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIdentitySourcesRequestUserSourceConfigOneOf3() *AddIdentitySourcesRequestUserSourceConfigOneOf3 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf3{}
	return &this
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf3WithDefaults instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIdentitySourcesRequestUserSourceConfigOneOf3WithDefaults() *AddIdentitySourcesRequestUserSourceConfigOneOf3 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf3{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// IsSetUrl returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) IsSetUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) SetUrl(v string) {
	o.Url = &v
}

// GetAdministratorAPIToken returns the AdministratorAPIToken field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetAdministratorAPIToken() string {
	if o == nil || IsNil(o.AdministratorAPIToken) {
		var ret string
		return ret
	}
	return *o.AdministratorAPIToken
}

// GetAdministratorAPITokenOk returns a tuple with the AdministratorAPIToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetAdministratorAPITokenOk() (*string, bool) {
	if o == nil || IsNil(o.AdministratorAPIToken) {
		return nil, false
	}
	return o.AdministratorAPIToken, true
}

// IsSetAdministratorAPIToken returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) IsSetAdministratorAPIToken() bool {
	if o != nil && !IsNil(o.AdministratorAPIToken) {
		return true
	}

	return false
}

// SetAdministratorAPIToken gets a reference to the given string and assigns it to the AdministratorAPIToken field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) SetAdministratorAPIToken(v string) {
	o.AdministratorAPIToken = &v
}

// GetRequiredGroup returns the RequiredGroup field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetRequiredGroup() string {
	if o == nil || IsNil(o.RequiredGroup) {
		var ret string
		return ret
	}
	return *o.RequiredGroup
}

// GetRequiredGroupOk returns a tuple with the RequiredGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) GetRequiredGroupOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredGroup) {
		return nil, false
	}
	return o.RequiredGroup, true
}

// IsSetRequiredGroup returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) IsSetRequiredGroup() bool {
	if o != nil && !IsNil(o.RequiredGroup) {
		return true
	}

	return false
}

// SetRequiredGroup gets a reference to the given string and assigns it to the RequiredGroup field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf3) SetRequiredGroup(v string) {
	o.RequiredGroup = &v
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.AdministratorAPIToken) {
		toSerialize["administratorAPIToken"] = o.AdministratorAPIToken
	}
	if !IsNil(o.RequiredGroup) {
		toSerialize["requiredGroup"] = o.RequiredGroup
	}
	return toSerialize, nil
}

type NullableAddIdentitySourcesRequestUserSourceConfigOneOf3 struct {
	value *AddIdentitySourcesRequestUserSourceConfigOneOf3
	isSet bool
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) Get() *AddIdentitySourcesRequestUserSourceConfigOneOf3 {
	return v.value
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) Set(val *AddIdentitySourcesRequestUserSourceConfigOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentitySourcesRequestUserSourceConfigOneOf3(val *AddIdentitySourcesRequestUserSourceConfigOneOf3) *NullableAddIdentitySourcesRequestUserSourceConfigOneOf3 {
	return &NullableAddIdentitySourcesRequestUserSourceConfigOneOf3{value: val, isSet: true}
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


