/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetDeploymentVersion200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeploymentVersion200Response{}

// GetDeploymentVersion200Response struct for GetDeploymentVersion200Response
type GetDeploymentVersion200Response struct {
	Version *ListDeploymentVersions200ResponseAllOfVersionsInner `json:"version,omitempty"`
}

// NewGetDeploymentVersion200Response instantiates a new GetDeploymentVersion200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeploymentVersion200Response() *GetDeploymentVersion200Response {
	this := GetDeploymentVersion200Response{}
	return &this
}

// NewGetDeploymentVersion200ResponseWithDefaults instantiates a new GetDeploymentVersion200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeploymentVersion200ResponseWithDefaults() *GetDeploymentVersion200Response {
	this := GetDeploymentVersion200Response{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetDeploymentVersion200Response) GetVersion() ListDeploymentVersions200ResponseAllOfVersionsInner {
	if o == nil || IsNil(o.Version) {
		var ret ListDeploymentVersions200ResponseAllOfVersionsInner
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeploymentVersion200Response) GetVersionOk() (*ListDeploymentVersions200ResponseAllOfVersionsInner, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// IsSetVersion returns a boolean if a field has been set.
func (o *GetDeploymentVersion200Response) IsSetVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given ListDeploymentVersions200ResponseAllOfVersionsInner and assigns it to the Version field.
func (o *GetDeploymentVersion200Response) SetVersion(v ListDeploymentVersions200ResponseAllOfVersionsInner) {
	o.Version = &v
}

func (o GetDeploymentVersion200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeploymentVersion200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableGetDeploymentVersion200Response struct {
	value *GetDeploymentVersion200Response
	isSet bool
}

func (v NullableGetDeploymentVersion200Response) Get() *GetDeploymentVersion200Response {
	return v.value
}

func (v *NullableGetDeploymentVersion200Response) Set(val *GetDeploymentVersion200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeploymentVersion200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeploymentVersion200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeploymentVersion200Response(val *GetDeploymentVersion200Response) *NullableGetDeploymentVersion200Response {
	return &NullableGetDeploymentVersion200Response{value: val, isSet: true}
}

func (v NullableGetDeploymentVersion200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeploymentVersion200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


