/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkRouterBgpNeighborRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkRouterBgpNeighborRequest{}

// UpdateNetworkRouterBgpNeighborRequest struct for UpdateNetworkRouterBgpNeighborRequest
type UpdateNetworkRouterBgpNeighborRequest struct {
	// For a full list of available BGP Neighbor options, see bgpOptionTypes in the specific Network Router Type
	NetworkRouterBgpNeighbor map[string]interface{} `json:"networkRouterBgpNeighbor,omitempty"`
}

// NewUpdateNetworkRouterBgpNeighborRequest instantiates a new UpdateNetworkRouterBgpNeighborRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkRouterBgpNeighborRequest() *UpdateNetworkRouterBgpNeighborRequest {
	this := UpdateNetworkRouterBgpNeighborRequest{}
	return &this
}

// NewUpdateNetworkRouterBgpNeighborRequestWithDefaults instantiates a new UpdateNetworkRouterBgpNeighborRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkRouterBgpNeighborRequestWithDefaults() *UpdateNetworkRouterBgpNeighborRequest {
	this := UpdateNetworkRouterBgpNeighborRequest{}
	return &this
}

// GetNetworkRouterBgpNeighbor returns the NetworkRouterBgpNeighbor field value if set, zero value otherwise.
func (o *UpdateNetworkRouterBgpNeighborRequest) GetNetworkRouterBgpNeighbor() map[string]interface{} {
	if o == nil || IsNil(o.NetworkRouterBgpNeighbor) {
		var ret map[string]interface{}
		return ret
	}
	return o.NetworkRouterBgpNeighbor
}

// GetNetworkRouterBgpNeighborOk returns a tuple with the NetworkRouterBgpNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkRouterBgpNeighborRequest) GetNetworkRouterBgpNeighborOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NetworkRouterBgpNeighbor) {
		return map[string]interface{}{}, false
	}
	return o.NetworkRouterBgpNeighbor, true
}

// IsSetNetworkRouterBgpNeighbor returns a boolean if a field has been set.
func (o *UpdateNetworkRouterBgpNeighborRequest) IsSetNetworkRouterBgpNeighbor() bool {
	if o != nil && !IsNil(o.NetworkRouterBgpNeighbor) {
		return true
	}

	return false
}

// SetNetworkRouterBgpNeighbor gets a reference to the given map[string]interface{} and assigns it to the NetworkRouterBgpNeighbor field.
func (o *UpdateNetworkRouterBgpNeighborRequest) SetNetworkRouterBgpNeighbor(v map[string]interface{}) {
	o.NetworkRouterBgpNeighbor = v
}

func (o UpdateNetworkRouterBgpNeighborRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkRouterBgpNeighborRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkRouterBgpNeighbor) {
		toSerialize["networkRouterBgpNeighbor"] = o.NetworkRouterBgpNeighbor
	}
	return toSerialize, nil
}

type NullableUpdateNetworkRouterBgpNeighborRequest struct {
	value *UpdateNetworkRouterBgpNeighborRequest
	isSet bool
}

func (v NullableUpdateNetworkRouterBgpNeighborRequest) Get() *UpdateNetworkRouterBgpNeighborRequest {
	return v.value
}

func (v *NullableUpdateNetworkRouterBgpNeighborRequest) Set(val *UpdateNetworkRouterBgpNeighborRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkRouterBgpNeighborRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkRouterBgpNeighborRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkRouterBgpNeighborRequest(val *UpdateNetworkRouterBgpNeighborRequest) *NullableUpdateNetworkRouterBgpNeighborRequest {
	return &NullableUpdateNetworkRouterBgpNeighborRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkRouterBgpNeighborRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkRouterBgpNeighborRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


