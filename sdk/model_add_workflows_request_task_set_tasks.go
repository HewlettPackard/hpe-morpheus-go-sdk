/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddWorkflowsRequestTaskSetTasks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddWorkflowsRequestTaskSetTasks{}

// AddWorkflowsRequestTaskSetTasks List of task objects in order
type AddWorkflowsRequestTaskSetTasks struct {
	// Task ID
	TaskId *int64 `json:"taskId,omitempty"`
	// Task Phase. Pass operation for `operational` workflows.
	TaskPhase *string `json:"taskPhase,omitempty"`
}

// NewAddWorkflowsRequestTaskSetTasks instantiates a new AddWorkflowsRequestTaskSetTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddWorkflowsRequestTaskSetTasks() *AddWorkflowsRequestTaskSetTasks {
	this := AddWorkflowsRequestTaskSetTasks{}
	var taskPhase string = "provision"
	this.TaskPhase = &taskPhase
	return &this
}

// NewAddWorkflowsRequestTaskSetTasksWithDefaults instantiates a new AddWorkflowsRequestTaskSetTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddWorkflowsRequestTaskSetTasksWithDefaults() *AddWorkflowsRequestTaskSetTasks {
	this := AddWorkflowsRequestTaskSetTasks{}
	var taskPhase string = "provision"
	this.TaskPhase = &taskPhase
	return &this
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *AddWorkflowsRequestTaskSetTasks) GetTaskId() int64 {
	if o == nil || IsNil(o.TaskId) {
		var ret int64
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddWorkflowsRequestTaskSetTasks) GetTaskIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// IsSetTaskId returns a boolean if a field has been set.
func (o *AddWorkflowsRequestTaskSetTasks) IsSetTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given int64 and assigns it to the TaskId field.
func (o *AddWorkflowsRequestTaskSetTasks) SetTaskId(v int64) {
	o.TaskId = &v
}

// GetTaskPhase returns the TaskPhase field value if set, zero value otherwise.
func (o *AddWorkflowsRequestTaskSetTasks) GetTaskPhase() string {
	if o == nil || IsNil(o.TaskPhase) {
		var ret string
		return ret
	}
	return *o.TaskPhase
}

// GetTaskPhaseOk returns a tuple with the TaskPhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddWorkflowsRequestTaskSetTasks) GetTaskPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.TaskPhase) {
		return nil, false
	}
	return o.TaskPhase, true
}

// IsSetTaskPhase returns a boolean if a field has been set.
func (o *AddWorkflowsRequestTaskSetTasks) IsSetTaskPhase() bool {
	if o != nil && !IsNil(o.TaskPhase) {
		return true
	}

	return false
}

// SetTaskPhase gets a reference to the given string and assigns it to the TaskPhase field.
func (o *AddWorkflowsRequestTaskSetTasks) SetTaskPhase(v string) {
	o.TaskPhase = &v
}

func (o AddWorkflowsRequestTaskSetTasks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddWorkflowsRequestTaskSetTasks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.TaskPhase) {
		toSerialize["taskPhase"] = o.TaskPhase
	}
	return toSerialize, nil
}

type NullableAddWorkflowsRequestTaskSetTasks struct {
	value *AddWorkflowsRequestTaskSetTasks
	isSet bool
}

func (v NullableAddWorkflowsRequestTaskSetTasks) Get() *AddWorkflowsRequestTaskSetTasks {
	return v.value
}

func (v *NullableAddWorkflowsRequestTaskSetTasks) Set(val *AddWorkflowsRequestTaskSetTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableAddWorkflowsRequestTaskSetTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableAddWorkflowsRequestTaskSetTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddWorkflowsRequestTaskSetTasks(val *AddWorkflowsRequestTaskSetTasks) *NullableAddWorkflowsRequestTaskSetTasks {
	return &NullableAddWorkflowsRequestTaskSetTasks{value: val, isSet: true}
}

func (v NullableAddWorkflowsRequestTaskSetTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddWorkflowsRequestTaskSetTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


