/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddStorageBuckets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddStorageBuckets200Response{}

// AddStorageBuckets200Response struct for AddStorageBuckets200Response
type AddStorageBuckets200Response struct {
	StorageBucket *ListStorageBuckets200ResponseAllOfStorageBucketsInner `json:"storageBucket,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddStorageBuckets200Response instantiates a new AddStorageBuckets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddStorageBuckets200Response() *AddStorageBuckets200Response {
	this := AddStorageBuckets200Response{}
	return &this
}

// NewAddStorageBuckets200ResponseWithDefaults instantiates a new AddStorageBuckets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddStorageBuckets200ResponseWithDefaults() *AddStorageBuckets200Response {
	this := AddStorageBuckets200Response{}
	return &this
}

// GetStorageBucket returns the StorageBucket field value if set, zero value otherwise.
func (o *AddStorageBuckets200Response) GetStorageBucket() ListStorageBuckets200ResponseAllOfStorageBucketsInner {
	if o == nil || IsNil(o.StorageBucket) {
		var ret ListStorageBuckets200ResponseAllOfStorageBucketsInner
		return ret
	}
	return *o.StorageBucket
}

// GetStorageBucketOk returns a tuple with the StorageBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageBuckets200Response) GetStorageBucketOk() (*ListStorageBuckets200ResponseAllOfStorageBucketsInner, bool) {
	if o == nil || IsNil(o.StorageBucket) {
		return nil, false
	}
	return o.StorageBucket, true
}

// IsSetStorageBucket returns a boolean if a field has been set.
func (o *AddStorageBuckets200Response) IsSetStorageBucket() bool {
	if o != nil && !IsNil(o.StorageBucket) {
		return true
	}

	return false
}

// SetStorageBucket gets a reference to the given ListStorageBuckets200ResponseAllOfStorageBucketsInner and assigns it to the StorageBucket field.
func (o *AddStorageBuckets200Response) SetStorageBucket(v ListStorageBuckets200ResponseAllOfStorageBucketsInner) {
	o.StorageBucket = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddStorageBuckets200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageBuckets200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddStorageBuckets200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddStorageBuckets200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddStorageBuckets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddStorageBuckets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageBucket) {
		toSerialize["storageBucket"] = o.StorageBucket
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddStorageBuckets200Response struct {
	value *AddStorageBuckets200Response
	isSet bool
}

func (v NullableAddStorageBuckets200Response) Get() *AddStorageBuckets200Response {
	return v.value
}

func (v *NullableAddStorageBuckets200Response) Set(val *AddStorageBuckets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddStorageBuckets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddStorageBuckets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddStorageBuckets200Response(val *AddStorageBuckets200Response) *NullableAddStorageBuckets200Response {
	return &NullableAddStorageBuckets200Response{value: val, isSet: true}
}

func (v NullableAddStorageBuckets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddStorageBuckets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


