/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddScaleThresholds200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddScaleThresholds200Response{}

// AddScaleThresholds200Response struct for AddScaleThresholds200Response
type AddScaleThresholds200Response struct {
	ScaleThreshold *ListScaleThresholds200ResponseAllOfScaleThresholdsInner `json:"scaleThreshold,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddScaleThresholds200Response instantiates a new AddScaleThresholds200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddScaleThresholds200Response() *AddScaleThresholds200Response {
	this := AddScaleThresholds200Response{}
	return &this
}

// NewAddScaleThresholds200ResponseWithDefaults instantiates a new AddScaleThresholds200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddScaleThresholds200ResponseWithDefaults() *AddScaleThresholds200Response {
	this := AddScaleThresholds200Response{}
	return &this
}

// GetScaleThreshold returns the ScaleThreshold field value if set, zero value otherwise.
func (o *AddScaleThresholds200Response) GetScaleThreshold() ListScaleThresholds200ResponseAllOfScaleThresholdsInner {
	if o == nil || IsNil(o.ScaleThreshold) {
		var ret ListScaleThresholds200ResponseAllOfScaleThresholdsInner
		return ret
	}
	return *o.ScaleThreshold
}

// GetScaleThresholdOk returns a tuple with the ScaleThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScaleThresholds200Response) GetScaleThresholdOk() (*ListScaleThresholds200ResponseAllOfScaleThresholdsInner, bool) {
	if o == nil || IsNil(o.ScaleThreshold) {
		return nil, false
	}
	return o.ScaleThreshold, true
}

// IsSetScaleThreshold returns a boolean if a field has been set.
func (o *AddScaleThresholds200Response) IsSetScaleThreshold() bool {
	if o != nil && !IsNil(o.ScaleThreshold) {
		return true
	}

	return false
}

// SetScaleThreshold gets a reference to the given ListScaleThresholds200ResponseAllOfScaleThresholdsInner and assigns it to the ScaleThreshold field.
func (o *AddScaleThresholds200Response) SetScaleThreshold(v ListScaleThresholds200ResponseAllOfScaleThresholdsInner) {
	o.ScaleThreshold = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddScaleThresholds200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScaleThresholds200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddScaleThresholds200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddScaleThresholds200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddScaleThresholds200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddScaleThresholds200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScaleThreshold) {
		toSerialize["scaleThreshold"] = o.ScaleThreshold
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddScaleThresholds200Response struct {
	value *AddScaleThresholds200Response
	isSet bool
}

func (v NullableAddScaleThresholds200Response) Get() *AddScaleThresholds200Response {
	return v.value
}

func (v *NullableAddScaleThresholds200Response) Set(val *AddScaleThresholds200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddScaleThresholds200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddScaleThresholds200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddScaleThresholds200Response(val *AddScaleThresholds200Response) *NullableAddScaleThresholds200Response {
	return &NullableAddScaleThresholds200Response{value: val, isSet: true}
}

func (v NullableAddScaleThresholds200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddScaleThresholds200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


