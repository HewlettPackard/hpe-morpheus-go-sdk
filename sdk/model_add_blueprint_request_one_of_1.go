/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddBlueprintRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOf1{}

// AddBlueprintRequestOneOf1 struct for AddBlueprintRequestOneOf1
type AddBlueprintRequestOneOf1 struct {
	// A name for the blueprint
	Name string `json:"name"`
	// Blueprint Type
	Type string `json:"type"`
	// Array of label strings, can be used for filtering.
	Labels               []string                                `json:"labels,omitempty"`
	CloudFormation       AddBlueprintRequestOneOf1CloudFormation `json:"cloudFormation"`
	AdditionalProperties map[string]interface{}                  `json:",remain"`
}

type _AddBlueprintRequestOneOf1 AddBlueprintRequestOneOf1

// NewAddBlueprintRequestOneOf1 instantiates a new AddBlueprintRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOf1(name string, type_ string, cloudFormation AddBlueprintRequestOneOf1CloudFormation) *AddBlueprintRequestOneOf1 {
	this := AddBlueprintRequestOneOf1{}
	this.Name = name
	this.Type = type_
	this.CloudFormation = cloudFormation
	return &this
}

// NewAddBlueprintRequestOneOf1WithDefaults instantiates a new AddBlueprintRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOf1WithDefaults() *AddBlueprintRequestOneOf1 {
	this := AddBlueprintRequestOneOf1{}
	return &this
}

// GetName returns the Name field value
func (o *AddBlueprintRequestOneOf1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddBlueprintRequestOneOf1) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AddBlueprintRequestOneOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddBlueprintRequestOneOf1) SetType(v string) {
	o.Type = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf1) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf1) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf1) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *AddBlueprintRequestOneOf1) SetLabels(v []string) {
	o.Labels = v
}

// GetCloudFormation returns the CloudFormation field value
func (o *AddBlueprintRequestOneOf1) GetCloudFormation() AddBlueprintRequestOneOf1CloudFormation {
	if o == nil {
		var ret AddBlueprintRequestOneOf1CloudFormation
		return ret
	}

	return o.CloudFormation
}

// GetCloudFormationOk returns a tuple with the CloudFormation field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf1) GetCloudFormationOk() (*AddBlueprintRequestOneOf1CloudFormation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudFormation, true
}

// SetCloudFormation sets field value
func (o *AddBlueprintRequestOneOf1) SetCloudFormation(v AddBlueprintRequestOneOf1CloudFormation) {
	o.CloudFormation = v
}

func (o AddBlueprintRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["cloudFormation"] = o.CloudFormation

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddBlueprintRequestOneOf1) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
