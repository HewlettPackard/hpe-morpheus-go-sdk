/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstanceRequest{}

// UpdateInstanceRequest struct for UpdateInstanceRequest
type UpdateInstanceRequest struct {
	Instance *UpdateInstanceRequestInstance `json:"instance,omitempty"`
	Config *UpdateInstanceRequestConfig `json:"config,omitempty"`
}

// NewUpdateInstanceRequest instantiates a new UpdateInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstanceRequest() *UpdateInstanceRequest {
	this := UpdateInstanceRequest{}
	return &this
}

// NewUpdateInstanceRequestWithDefaults instantiates a new UpdateInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstanceRequestWithDefaults() *UpdateInstanceRequest {
	this := UpdateInstanceRequest{}
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *UpdateInstanceRequest) GetInstance() UpdateInstanceRequestInstance {
	if o == nil || IsNil(o.Instance) {
		var ret UpdateInstanceRequestInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceRequest) GetInstanceOk() (*UpdateInstanceRequestInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *UpdateInstanceRequest) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given UpdateInstanceRequestInstance and assigns it to the Instance field.
func (o *UpdateInstanceRequest) SetInstance(v UpdateInstanceRequestInstance) {
	o.Instance = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdateInstanceRequest) GetConfig() UpdateInstanceRequestConfig {
	if o == nil || IsNil(o.Config) {
		var ret UpdateInstanceRequestConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceRequest) GetConfigOk() (*UpdateInstanceRequestConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdateInstanceRequest) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given UpdateInstanceRequestConfig and assigns it to the Config field.
func (o *UpdateInstanceRequest) SetConfig(v UpdateInstanceRequestConfig) {
	o.Config = &v
}

func (o UpdateInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableUpdateInstanceRequest struct {
	value *UpdateInstanceRequest
	isSet bool
}

func (v NullableUpdateInstanceRequest) Get() *UpdateInstanceRequest {
	return v.value
}

func (v *NullableUpdateInstanceRequest) Set(val *UpdateInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstanceRequest(val *UpdateInstanceRequest) *NullableUpdateInstanceRequest {
	return &NullableUpdateInstanceRequest{value: val, isSet: true}
}

func (v NullableUpdateInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


