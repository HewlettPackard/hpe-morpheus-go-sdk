/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateNetworkDhcpRelayRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkDhcpRelayRequest{}

// CreateNetworkDhcpRelayRequest struct for CreateNetworkDhcpRelayRequest
type CreateNetworkDhcpRelayRequest struct {
	NetworkDhcpRelay *CreateNetworkDhcpRelayRequestNetworkDhcpRelay `json:"networkDhcpRelay,omitempty"`
}

// NewCreateNetworkDhcpRelayRequest instantiates a new CreateNetworkDhcpRelayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkDhcpRelayRequest() *CreateNetworkDhcpRelayRequest {
	this := CreateNetworkDhcpRelayRequest{}
	return &this
}

// NewCreateNetworkDhcpRelayRequestWithDefaults instantiates a new CreateNetworkDhcpRelayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkDhcpRelayRequestWithDefaults() *CreateNetworkDhcpRelayRequest {
	this := CreateNetworkDhcpRelayRequest{}
	return &this
}

// GetNetworkDhcpRelay returns the NetworkDhcpRelay field value if set, zero value otherwise.
func (o *CreateNetworkDhcpRelayRequest) GetNetworkDhcpRelay() CreateNetworkDhcpRelayRequestNetworkDhcpRelay {
	if o == nil || IsNil(o.NetworkDhcpRelay) {
		var ret CreateNetworkDhcpRelayRequestNetworkDhcpRelay
		return ret
	}
	return *o.NetworkDhcpRelay
}

// GetNetworkDhcpRelayOk returns a tuple with the NetworkDhcpRelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkDhcpRelayRequest) GetNetworkDhcpRelayOk() (*CreateNetworkDhcpRelayRequestNetworkDhcpRelay, bool) {
	if o == nil || IsNil(o.NetworkDhcpRelay) {
		return nil, false
	}
	return o.NetworkDhcpRelay, true
}

// IsSetNetworkDhcpRelay returns a boolean if a field has been set.
func (o *CreateNetworkDhcpRelayRequest) IsSetNetworkDhcpRelay() bool {
	if o != nil && !IsNil(o.NetworkDhcpRelay) {
		return true
	}

	return false
}

// SetNetworkDhcpRelay gets a reference to the given CreateNetworkDhcpRelayRequestNetworkDhcpRelay and assigns it to the NetworkDhcpRelay field.
func (o *CreateNetworkDhcpRelayRequest) SetNetworkDhcpRelay(v CreateNetworkDhcpRelayRequestNetworkDhcpRelay) {
	o.NetworkDhcpRelay = &v
}

func (o CreateNetworkDhcpRelayRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkDhcpRelayRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkDhcpRelay) {
		toSerialize["networkDhcpRelay"] = o.NetworkDhcpRelay
	}
	return toSerialize, nil
}

type NullableCreateNetworkDhcpRelayRequest struct {
	value *CreateNetworkDhcpRelayRequest
	isSet bool
}

func (v NullableCreateNetworkDhcpRelayRequest) Get() *CreateNetworkDhcpRelayRequest {
	return v.value
}

func (v *NullableCreateNetworkDhcpRelayRequest) Set(val *CreateNetworkDhcpRelayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkDhcpRelayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkDhcpRelayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkDhcpRelayRequest(val *CreateNetworkDhcpRelayRequest) *NullableCreateNetworkDhcpRelayRequest {
	return &NullableCreateNetworkDhcpRelayRequest{value: val, isSet: true}
}

func (v NullableCreateNetworkDhcpRelayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkDhcpRelayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


