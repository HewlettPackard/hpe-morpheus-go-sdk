/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddStorageVolumes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddStorageVolumes200Response{}

// AddStorageVolumes200Response struct for AddStorageVolumes200Response
type AddStorageVolumes200Response struct {
	StorageVolume *ListClusterVolumes200ResponseAllOfVolumesInner `json:"storageVolume,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddStorageVolumes200Response instantiates a new AddStorageVolumes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddStorageVolumes200Response() *AddStorageVolumes200Response {
	this := AddStorageVolumes200Response{}
	return &this
}

// NewAddStorageVolumes200ResponseWithDefaults instantiates a new AddStorageVolumes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddStorageVolumes200ResponseWithDefaults() *AddStorageVolumes200Response {
	this := AddStorageVolumes200Response{}
	return &this
}

// GetStorageVolume returns the StorageVolume field value if set, zero value otherwise.
func (o *AddStorageVolumes200Response) GetStorageVolume() ListClusterVolumes200ResponseAllOfVolumesInner {
	if o == nil || IsNil(o.StorageVolume) {
		var ret ListClusterVolumes200ResponseAllOfVolumesInner
		return ret
	}
	return *o.StorageVolume
}

// GetStorageVolumeOk returns a tuple with the StorageVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageVolumes200Response) GetStorageVolumeOk() (*ListClusterVolumes200ResponseAllOfVolumesInner, bool) {
	if o == nil || IsNil(o.StorageVolume) {
		return nil, false
	}
	return o.StorageVolume, true
}

// IsSetStorageVolume returns a boolean if a field has been set.
func (o *AddStorageVolumes200Response) IsSetStorageVolume() bool {
	if o != nil && !IsNil(o.StorageVolume) {
		return true
	}

	return false
}

// SetStorageVolume gets a reference to the given ListClusterVolumes200ResponseAllOfVolumesInner and assigns it to the StorageVolume field.
func (o *AddStorageVolumes200Response) SetStorageVolume(v ListClusterVolumes200ResponseAllOfVolumesInner) {
	o.StorageVolume = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddStorageVolumes200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageVolumes200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddStorageVolumes200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddStorageVolumes200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddStorageVolumes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddStorageVolumes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageVolume) {
		toSerialize["storageVolume"] = o.StorageVolume
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddStorageVolumes200Response struct {
	value *AddStorageVolumes200Response
	isSet bool
}

func (v NullableAddStorageVolumes200Response) Get() *AddStorageVolumes200Response {
	return v.value
}

func (v *NullableAddStorageVolumes200Response) Set(val *AddStorageVolumes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddStorageVolumes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddStorageVolumes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddStorageVolumes200Response(val *AddStorageVolumes200Response) *NullableAddStorageVolumes200Response {
	return &NullableAddStorageVolumes200Response{value: val, isSet: true}
}

func (v NullableAddStorageVolumes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddStorageVolumes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


