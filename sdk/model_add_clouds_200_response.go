/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddClouds200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClouds200Response{}

// AddClouds200Response struct for AddClouds200Response
type AddClouds200Response struct {
	Zone *ListClouds200ResponseAllOfZonesInner `json:"zone,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddClouds200Response instantiates a new AddClouds200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClouds200Response() *AddClouds200Response {
	this := AddClouds200Response{}
	return &this
}

// NewAddClouds200ResponseWithDefaults instantiates a new AddClouds200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClouds200ResponseWithDefaults() *AddClouds200Response {
	this := AddClouds200Response{}
	return &this
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *AddClouds200Response) GetZone() ListClouds200ResponseAllOfZonesInner {
	if o == nil || IsNil(o.Zone) {
		var ret ListClouds200ResponseAllOfZonesInner
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClouds200Response) GetZoneOk() (*ListClouds200ResponseAllOfZonesInner, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *AddClouds200Response) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given ListClouds200ResponseAllOfZonesInner and assigns it to the Zone field.
func (o *AddClouds200Response) SetZone(v ListClouds200ResponseAllOfZonesInner) {
	o.Zone = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddClouds200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClouds200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddClouds200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddClouds200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddClouds200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClouds200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddClouds200Response struct {
	value *AddClouds200Response
	isSet bool
}

func (v NullableAddClouds200Response) Get() *AddClouds200Response {
	return v.value
}

func (v *NullableAddClouds200Response) Set(val *AddClouds200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClouds200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClouds200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClouds200Response(val *AddClouds200Response) *NullableAddClouds200Response {
	return &NullableAddClouds200Response{value: val, isSet: true}
}

func (v NullableAddClouds200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClouds200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


