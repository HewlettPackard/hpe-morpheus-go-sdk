/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHosts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHosts200Response{}

// ListHosts200Response struct for ListHosts200Response
type ListHosts200Response struct {
	Servers []ListHosts200ResponseAllOfServersInner `json:"servers,omitempty"`
	Stats map[string]interface{} `json:"stats,omitempty"`
	Multitenant *bool `json:"multitenant,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListHosts200Response instantiates a new ListHosts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHosts200Response() *ListHosts200Response {
	this := ListHosts200Response{}
	return &this
}

// NewListHosts200ResponseWithDefaults instantiates a new ListHosts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHosts200ResponseWithDefaults() *ListHosts200Response {
	this := ListHosts200Response{}
	return &this
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *ListHosts200Response) GetServers() []ListHosts200ResponseAllOfServersInner {
	if o == nil || IsNil(o.Servers) {
		var ret []ListHosts200ResponseAllOfServersInner
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200Response) GetServersOk() ([]ListHosts200ResponseAllOfServersInner, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// IsSetServers returns a boolean if a field has been set.
func (o *ListHosts200Response) IsSetServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []ListHosts200ResponseAllOfServersInner and assigns it to the Servers field.
func (o *ListHosts200Response) SetServers(v []ListHosts200ResponseAllOfServersInner) {
	o.Servers = v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ListHosts200Response) GetStats() map[string]interface{} {
	if o == nil || IsNil(o.Stats) {
		var ret map[string]interface{}
		return ret
	}
	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200Response) GetStatsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Stats) {
		return map[string]interface{}{}, false
	}
	return o.Stats, true
}

// IsSetStats returns a boolean if a field has been set.
func (o *ListHosts200Response) IsSetStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given map[string]interface{} and assigns it to the Stats field.
func (o *ListHosts200Response) SetStats(v map[string]interface{}) {
	o.Stats = v
}

// GetMultitenant returns the Multitenant field value if set, zero value otherwise.
func (o *ListHosts200Response) GetMultitenant() bool {
	if o == nil || IsNil(o.Multitenant) {
		var ret bool
		return ret
	}
	return *o.Multitenant
}

// GetMultitenantOk returns a tuple with the Multitenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200Response) GetMultitenantOk() (*bool, bool) {
	if o == nil || IsNil(o.Multitenant) {
		return nil, false
	}
	return o.Multitenant, true
}

// IsSetMultitenant returns a boolean if a field has been set.
func (o *ListHosts200Response) IsSetMultitenant() bool {
	if o != nil && !IsNil(o.Multitenant) {
		return true
	}

	return false
}

// SetMultitenant gets a reference to the given bool and assigns it to the Multitenant field.
func (o *ListHosts200Response) SetMultitenant(v bool) {
	o.Multitenant = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListHosts200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListHosts200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListHosts200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListHosts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHosts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Multitenant) {
		toSerialize["multitenant"] = o.Multitenant
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListHosts200Response struct {
	value *ListHosts200Response
	isSet bool
}

func (v NullableListHosts200Response) Get() *ListHosts200Response {
	return v.value
}

func (v *NullableListHosts200Response) Set(val *ListHosts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListHosts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListHosts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHosts200Response(val *ListHosts200Response) *NullableListHosts200Response {
	return &NullableListHosts200Response{value: val, isSet: true}
}

func (v NullableListHosts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHosts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


