/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetOptionListItems200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOptionListItems200Response{}

// GetOptionListItems200Response struct for GetOptionListItems200Response
type GetOptionListItems200Response struct {
	ListItems []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"listItems,omitempty"`
}

// NewGetOptionListItems200Response instantiates a new GetOptionListItems200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOptionListItems200Response() *GetOptionListItems200Response {
	this := GetOptionListItems200Response{}
	return &this
}

// NewGetOptionListItems200ResponseWithDefaults instantiates a new GetOptionListItems200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOptionListItems200ResponseWithDefaults() *GetOptionListItems200Response {
	this := GetOptionListItems200Response{}
	return &this
}

// GetListItems returns the ListItems field value if set, zero value otherwise.
func (o *GetOptionListItems200Response) GetListItems() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.ListItems) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.ListItems
}

// GetListItemsOk returns a tuple with the ListItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOptionListItems200Response) GetListItemsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.ListItems) {
		return nil, false
	}
	return o.ListItems, true
}

// IsSetListItems returns a boolean if a field has been set.
func (o *GetOptionListItems200Response) IsSetListItems() bool {
	if o != nil && !IsNil(o.ListItems) {
		return true
	}

	return false
}

// SetListItems gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the ListItems field.
func (o *GetOptionListItems200Response) SetListItems(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.ListItems = v
}

func (o GetOptionListItems200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOptionListItems200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ListItems) {
		toSerialize["listItems"] = o.ListItems
	}
	return toSerialize, nil
}

type NullableGetOptionListItems200Response struct {
	value *GetOptionListItems200Response
	isSet bool
}

func (v NullableGetOptionListItems200Response) Get() *GetOptionListItems200Response {
	return v.value
}

func (v *NullableGetOptionListItems200Response) Set(val *GetOptionListItems200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOptionListItems200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOptionListItems200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOptionListItems200Response(val *GetOptionListItems200Response) *NullableGetOptionListItems200Response {
	return &NullableGetOptionListItems200Response{value: val, isSet: true}
}

func (v NullableGetOptionListItems200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOptionListItems200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


