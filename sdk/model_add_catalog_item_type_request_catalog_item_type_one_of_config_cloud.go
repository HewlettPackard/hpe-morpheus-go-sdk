/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud{}

// AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud struct for AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud
type AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud struct {
	Id AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId `json:"id"`
	// The cloud name
	Name *string `json:"name,omitempty"`
}

type _AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud

// NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud instantiates a new AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud(id AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId) *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud {
	this := AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud{}
	this.Id = id
	return &this
}

// NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudWithDefaults instantiates a new AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudWithDefaults() *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud {
	this := AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud{}
	return &this
}

// GetId returns the Id field value
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) GetId() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) GetIdOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) SetId(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloudId) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) SetName(v string) {
	o.Name = &v
}

func (o AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud := _AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud)

	if err != nil {
		return err
	}

	*o = AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud(varAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud)

	return err
}

type NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud struct {
	value *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud
	isSet bool
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) Get() *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud {
	return v.value
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) Set(val *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud(val *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud {
	return &NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud{value: val, isSet: true}
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


