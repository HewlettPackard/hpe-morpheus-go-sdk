/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkGroups200ResponseNetworkGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkGroups200ResponseNetworkGroupsInner{}

// GetNetworkGroups200ResponseNetworkGroupsInner struct for GetNetworkGroups200ResponseNetworkGroupsInner
type GetNetworkGroups200ResponseNetworkGroupsInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Active *bool `json:"active,omitempty"`
	Networks []int64 `json:"networks,omitempty"`
	Subnets []map[string]interface{} `json:"subnets,omitempty"`
	Tenants []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"tenants,omitempty"`
}

// NewGetNetworkGroups200ResponseNetworkGroupsInner instantiates a new GetNetworkGroups200ResponseNetworkGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkGroups200ResponseNetworkGroupsInner() *GetNetworkGroups200ResponseNetworkGroupsInner {
	this := GetNetworkGroups200ResponseNetworkGroupsInner{}
	return &this
}

// NewGetNetworkGroups200ResponseNetworkGroupsInnerWithDefaults instantiates a new GetNetworkGroups200ResponseNetworkGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkGroups200ResponseNetworkGroupsInnerWithDefaults() *GetNetworkGroups200ResponseNetworkGroupsInner {
	this := GetNetworkGroups200ResponseNetworkGroupsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetVisibility(v string) {
	o.Visibility = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetActive(v bool) {
	o.Active = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetNetworks() []int64 {
	if o == nil || IsNil(o.Networks) {
		var ret []int64
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetNetworksOk() ([]int64, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// IsSetNetworks returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []int64 and assigns it to the Networks field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetNetworks(v []int64) {
	o.Networks = v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetSubnets() []map[string]interface{} {
	if o == nil || IsNil(o.Subnets) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetSubnetsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// IsSetSubnets returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetSubnets() bool {
	if o != nil && !IsNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []map[string]interface{} and assigns it to the Subnets field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetSubnets(v []map[string]interface{}) {
	o.Subnets = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetTenants() []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Tenants) {
		var ret []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) GetTenantsOk() ([]ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Tenants field.
func (o *GetNetworkGroups200ResponseNetworkGroupsInner) SetTenants(v []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Tenants = v
}

func (o GetNetworkGroups200ResponseNetworkGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkGroups200ResponseNetworkGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

type NullableGetNetworkGroups200ResponseNetworkGroupsInner struct {
	value *GetNetworkGroups200ResponseNetworkGroupsInner
	isSet bool
}

func (v NullableGetNetworkGroups200ResponseNetworkGroupsInner) Get() *GetNetworkGroups200ResponseNetworkGroupsInner {
	return v.value
}

func (v *NullableGetNetworkGroups200ResponseNetworkGroupsInner) Set(val *GetNetworkGroups200ResponseNetworkGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkGroups200ResponseNetworkGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkGroups200ResponseNetworkGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkGroups200ResponseNetworkGroupsInner(val *GetNetworkGroups200ResponseNetworkGroupsInner) *NullableGetNetworkGroups200ResponseNetworkGroupsInner {
	return &NullableGetNetworkGroups200ResponseNetworkGroupsInner{value: val, isSet: true}
}

func (v NullableGetNetworkGroups200ResponseNetworkGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkGroups200ResponseNetworkGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


