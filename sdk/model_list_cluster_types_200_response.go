/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterTypes200Response{}

// ListClusterTypes200Response struct for ListClusterTypes200Response
type ListClusterTypes200Response struct {
	ClusterTypes []ListClusterTypes200ResponseAllOfClusterTypesInner `json:"clusterTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterTypes200Response instantiates a new ListClusterTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterTypes200Response() *ListClusterTypes200Response {
	this := ListClusterTypes200Response{}
	return &this
}

// NewListClusterTypes200ResponseWithDefaults instantiates a new ListClusterTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterTypes200ResponseWithDefaults() *ListClusterTypes200Response {
	this := ListClusterTypes200Response{}
	return &this
}

// GetClusterTypes returns the ClusterTypes field value if set, zero value otherwise.
func (o *ListClusterTypes200Response) GetClusterTypes() []ListClusterTypes200ResponseAllOfClusterTypesInner {
	if o == nil || IsNil(o.ClusterTypes) {
		var ret []ListClusterTypes200ResponseAllOfClusterTypesInner
		return ret
	}
	return o.ClusterTypes
}

// GetClusterTypesOk returns a tuple with the ClusterTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterTypes200Response) GetClusterTypesOk() ([]ListClusterTypes200ResponseAllOfClusterTypesInner, bool) {
	if o == nil || IsNil(o.ClusterTypes) {
		return nil, false
	}
	return o.ClusterTypes, true
}

// IsSetClusterTypes returns a boolean if a field has been set.
func (o *ListClusterTypes200Response) IsSetClusterTypes() bool {
	if o != nil && !IsNil(o.ClusterTypes) {
		return true
	}

	return false
}

// SetClusterTypes gets a reference to the given []ListClusterTypes200ResponseAllOfClusterTypesInner and assigns it to the ClusterTypes field.
func (o *ListClusterTypes200Response) SetClusterTypes(v []ListClusterTypes200ResponseAllOfClusterTypesInner) {
	o.ClusterTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterTypes) {
		toSerialize["clusterTypes"] = o.ClusterTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterTypes200Response struct {
	value *ListClusterTypes200Response
	isSet bool
}

func (v NullableListClusterTypes200Response) Get() *ListClusterTypes200Response {
	return v.value
}

func (v *NullableListClusterTypes200Response) Set(val *ListClusterTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterTypes200Response(val *ListClusterTypes200Response) *NullableListClusterTypes200Response {
	return &NullableListClusterTypes200Response{value: val, isSet: true}
}

func (v NullableListClusterTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


