/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListInstanceServicePlans200ResponsePlansInnerDatastores type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstanceServicePlans200ResponsePlansInnerDatastores{}

// ListInstanceServicePlans200ResponsePlansInnerDatastores struct for ListInstanceServicePlans200ResponsePlansInnerDatastores
type ListInstanceServicePlans200ResponsePlansInnerDatastores struct {
	Cluster []SnapshotsInstance200ResponseSnapshotsInnerZone `json:"cluster,omitempty"`
	Store []SnapshotsInstance200ResponseSnapshotsInnerZone `json:"store,omitempty"`
}

// NewListInstanceServicePlans200ResponsePlansInnerDatastores instantiates a new ListInstanceServicePlans200ResponsePlansInnerDatastores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstanceServicePlans200ResponsePlansInnerDatastores() *ListInstanceServicePlans200ResponsePlansInnerDatastores {
	this := ListInstanceServicePlans200ResponsePlansInnerDatastores{}
	return &this
}

// NewListInstanceServicePlans200ResponsePlansInnerDatastoresWithDefaults instantiates a new ListInstanceServicePlans200ResponsePlansInnerDatastores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstanceServicePlans200ResponsePlansInnerDatastoresWithDefaults() *ListInstanceServicePlans200ResponsePlansInnerDatastores {
	this := ListInstanceServicePlans200ResponsePlansInnerDatastores{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) GetCluster() []SnapshotsInstance200ResponseSnapshotsInnerZone {
	if o == nil || IsNil(o.Cluster) {
		var ret []SnapshotsInstance200ResponseSnapshotsInnerZone
		return ret
	}
	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) GetClusterOk() ([]SnapshotsInstance200ResponseSnapshotsInnerZone, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given []SnapshotsInstance200ResponseSnapshotsInnerZone and assigns it to the Cluster field.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) SetCluster(v []SnapshotsInstance200ResponseSnapshotsInnerZone) {
	o.Cluster = v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) GetStore() []SnapshotsInstance200ResponseSnapshotsInnerZone {
	if o == nil || IsNil(o.Store) {
		var ret []SnapshotsInstance200ResponseSnapshotsInnerZone
		return ret
	}
	return o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) GetStoreOk() ([]SnapshotsInstance200ResponseSnapshotsInnerZone, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// IsSetStore returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) IsSetStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given []SnapshotsInstance200ResponseSnapshotsInnerZone and assigns it to the Store field.
func (o *ListInstanceServicePlans200ResponsePlansInnerDatastores) SetStore(v []SnapshotsInstance200ResponseSnapshotsInnerZone) {
	o.Store = v
}

func (o ListInstanceServicePlans200ResponsePlansInnerDatastores) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstanceServicePlans200ResponsePlansInnerDatastores) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	return toSerialize, nil
}

type NullableListInstanceServicePlans200ResponsePlansInnerDatastores struct {
	value *ListInstanceServicePlans200ResponsePlansInnerDatastores
	isSet bool
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerDatastores) Get() *ListInstanceServicePlans200ResponsePlansInnerDatastores {
	return v.value
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerDatastores) Set(val *ListInstanceServicePlans200ResponsePlansInnerDatastores) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerDatastores) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerDatastores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstanceServicePlans200ResponsePlansInnerDatastores(val *ListInstanceServicePlans200ResponsePlansInnerDatastores) *NullableListInstanceServicePlans200ResponsePlansInnerDatastores {
	return &NullableListInstanceServicePlans200ResponsePlansInnerDatastores{value: val, isSet: true}
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerDatastores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerDatastores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


