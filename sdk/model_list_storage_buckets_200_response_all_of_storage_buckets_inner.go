/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListStorageBuckets200ResponseAllOfStorageBucketsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStorageBuckets200ResponseAllOfStorageBucketsInner{}

// ListStorageBuckets200ResponseAllOfStorageBucketsInner struct for ListStorageBuckets200ResponseAllOfStorageBucketsInner
type ListStorageBuckets200ResponseAllOfStorageBucketsInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Active *bool `json:"active,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	ProviderType *string `json:"providerType,omitempty"`
	Config *ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig `json:"config,omitempty"`
	BucketName *string `json:"bucketName,omitempty"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	DefaultBackupTarget *bool `json:"defaultBackupTarget,omitempty"`
	DefaultDeploymentTarget *bool `json:"defaultDeploymentTarget,omitempty"`
	DefaultVirtualImageTarget *bool `json:"defaultVirtualImageTarget,omitempty"`
	CopyToStore *bool `json:"copyToStore,omitempty"`
	RetentionPolicyType *string `json:"retentionPolicyType,omitempty"`
	RetentionPolicyDays *string `json:"retentionPolicyDays,omitempty"`
	RetentionProvider *string `json:"retentionProvider,omitempty"`
}

// NewListStorageBuckets200ResponseAllOfStorageBucketsInner instantiates a new ListStorageBuckets200ResponseAllOfStorageBucketsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageBuckets200ResponseAllOfStorageBucketsInner() *ListStorageBuckets200ResponseAllOfStorageBucketsInner {
	this := ListStorageBuckets200ResponseAllOfStorageBucketsInner{}
	return &this
}

// NewListStorageBuckets200ResponseAllOfStorageBucketsInnerWithDefaults instantiates a new ListStorageBuckets200ResponseAllOfStorageBucketsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageBuckets200ResponseAllOfStorageBucketsInnerWithDefaults() *ListStorageBuckets200ResponseAllOfStorageBucketsInner {
	this := ListStorageBuckets200ResponseAllOfStorageBucketsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetName(v string) {
	o.Name = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetActive(v bool) {
	o.Active = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetAccountId() int64 {
	if o == nil || IsNil(o.AccountId) {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// IsSetAccountId returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetProviderType() string {
	if o == nil || IsNil(o.ProviderType) {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetProviderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderType) {
		return nil, false
	}
	return o.ProviderType, true
}

// IsSetProviderType returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetProviderType() bool {
	if o != nil && !IsNil(o.ProviderType) {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetConfig() ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig {
	if o == nil || IsNil(o.Config) {
		var ret ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetConfigOk() (*ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig and assigns it to the Config field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetConfig(v ListStorageBuckets200ResponseAllOfStorageBucketsInnerConfig) {
	o.Config = &v
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetBucketName() string {
	if o == nil || IsNil(o.BucketName) {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetBucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.BucketName) {
		return nil, false
	}
	return o.BucketName, true
}

// IsSetBucketName returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetBucketName() bool {
	if o != nil && !IsNil(o.BucketName) {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetBucketName(v string) {
	o.BucketName = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// IsSetReadOnly returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetDefaultBackupTarget returns the DefaultBackupTarget field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultBackupTarget() bool {
	if o == nil || IsNil(o.DefaultBackupTarget) {
		var ret bool
		return ret
	}
	return *o.DefaultBackupTarget
}

// GetDefaultBackupTargetOk returns a tuple with the DefaultBackupTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultBackupTargetOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultBackupTarget) {
		return nil, false
	}
	return o.DefaultBackupTarget, true
}

// IsSetDefaultBackupTarget returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetDefaultBackupTarget() bool {
	if o != nil && !IsNil(o.DefaultBackupTarget) {
		return true
	}

	return false
}

// SetDefaultBackupTarget gets a reference to the given bool and assigns it to the DefaultBackupTarget field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetDefaultBackupTarget(v bool) {
	o.DefaultBackupTarget = &v
}

// GetDefaultDeploymentTarget returns the DefaultDeploymentTarget field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultDeploymentTarget() bool {
	if o == nil || IsNil(o.DefaultDeploymentTarget) {
		var ret bool
		return ret
	}
	return *o.DefaultDeploymentTarget
}

// GetDefaultDeploymentTargetOk returns a tuple with the DefaultDeploymentTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultDeploymentTargetOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultDeploymentTarget) {
		return nil, false
	}
	return o.DefaultDeploymentTarget, true
}

// IsSetDefaultDeploymentTarget returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetDefaultDeploymentTarget() bool {
	if o != nil && !IsNil(o.DefaultDeploymentTarget) {
		return true
	}

	return false
}

// SetDefaultDeploymentTarget gets a reference to the given bool and assigns it to the DefaultDeploymentTarget field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetDefaultDeploymentTarget(v bool) {
	o.DefaultDeploymentTarget = &v
}

// GetDefaultVirtualImageTarget returns the DefaultVirtualImageTarget field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultVirtualImageTarget() bool {
	if o == nil || IsNil(o.DefaultVirtualImageTarget) {
		var ret bool
		return ret
	}
	return *o.DefaultVirtualImageTarget
}

// GetDefaultVirtualImageTargetOk returns a tuple with the DefaultVirtualImageTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetDefaultVirtualImageTargetOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultVirtualImageTarget) {
		return nil, false
	}
	return o.DefaultVirtualImageTarget, true
}

// IsSetDefaultVirtualImageTarget returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetDefaultVirtualImageTarget() bool {
	if o != nil && !IsNil(o.DefaultVirtualImageTarget) {
		return true
	}

	return false
}

// SetDefaultVirtualImageTarget gets a reference to the given bool and assigns it to the DefaultVirtualImageTarget field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetDefaultVirtualImageTarget(v bool) {
	o.DefaultVirtualImageTarget = &v
}

// GetCopyToStore returns the CopyToStore field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetCopyToStore() bool {
	if o == nil || IsNil(o.CopyToStore) {
		var ret bool
		return ret
	}
	return *o.CopyToStore
}

// GetCopyToStoreOk returns a tuple with the CopyToStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetCopyToStoreOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyToStore) {
		return nil, false
	}
	return o.CopyToStore, true
}

// IsSetCopyToStore returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetCopyToStore() bool {
	if o != nil && !IsNil(o.CopyToStore) {
		return true
	}

	return false
}

// SetCopyToStore gets a reference to the given bool and assigns it to the CopyToStore field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetCopyToStore(v bool) {
	o.CopyToStore = &v
}

// GetRetentionPolicyType returns the RetentionPolicyType field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionPolicyType() string {
	if o == nil || IsNil(o.RetentionPolicyType) {
		var ret string
		return ret
	}
	return *o.RetentionPolicyType
}

// GetRetentionPolicyTypeOk returns a tuple with the RetentionPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionPolicyType) {
		return nil, false
	}
	return o.RetentionPolicyType, true
}

// IsSetRetentionPolicyType returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetRetentionPolicyType() bool {
	if o != nil && !IsNil(o.RetentionPolicyType) {
		return true
	}

	return false
}

// SetRetentionPolicyType gets a reference to the given string and assigns it to the RetentionPolicyType field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetRetentionPolicyType(v string) {
	o.RetentionPolicyType = &v
}

// GetRetentionPolicyDays returns the RetentionPolicyDays field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionPolicyDays() string {
	if o == nil || IsNil(o.RetentionPolicyDays) {
		var ret string
		return ret
	}
	return *o.RetentionPolicyDays
}

// GetRetentionPolicyDaysOk returns a tuple with the RetentionPolicyDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionPolicyDaysOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionPolicyDays) {
		return nil, false
	}
	return o.RetentionPolicyDays, true
}

// IsSetRetentionPolicyDays returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetRetentionPolicyDays() bool {
	if o != nil && !IsNil(o.RetentionPolicyDays) {
		return true
	}

	return false
}

// SetRetentionPolicyDays gets a reference to the given string and assigns it to the RetentionPolicyDays field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetRetentionPolicyDays(v string) {
	o.RetentionPolicyDays = &v
}

// GetRetentionProvider returns the RetentionProvider field value if set, zero value otherwise.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionProvider() string {
	if o == nil || IsNil(o.RetentionProvider) {
		var ret string
		return ret
	}
	return *o.RetentionProvider
}

// GetRetentionProviderOk returns a tuple with the RetentionProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) GetRetentionProviderOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionProvider) {
		return nil, false
	}
	return o.RetentionProvider, true
}

// IsSetRetentionProvider returns a boolean if a field has been set.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSetRetentionProvider() bool {
	if o != nil && !IsNil(o.RetentionProvider) {
		return true
	}

	return false
}

// SetRetentionProvider gets a reference to the given string and assigns it to the RetentionProvider field.
func (o *ListStorageBuckets200ResponseAllOfStorageBucketsInner) SetRetentionProvider(v string) {
	o.RetentionProvider = &v
}

func (o ListStorageBuckets200ResponseAllOfStorageBucketsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStorageBuckets200ResponseAllOfStorageBucketsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.ProviderType) {
		toSerialize["providerType"] = o.ProviderType
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.BucketName) {
		toSerialize["bucketName"] = o.BucketName
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if !IsNil(o.DefaultBackupTarget) {
		toSerialize["defaultBackupTarget"] = o.DefaultBackupTarget
	}
	if !IsNil(o.DefaultDeploymentTarget) {
		toSerialize["defaultDeploymentTarget"] = o.DefaultDeploymentTarget
	}
	if !IsNil(o.DefaultVirtualImageTarget) {
		toSerialize["defaultVirtualImageTarget"] = o.DefaultVirtualImageTarget
	}
	if !IsNil(o.CopyToStore) {
		toSerialize["copyToStore"] = o.CopyToStore
	}
	if !IsNil(o.RetentionPolicyType) {
		toSerialize["retentionPolicyType"] = o.RetentionPolicyType
	}
	if !IsNil(o.RetentionPolicyDays) {
		toSerialize["retentionPolicyDays"] = o.RetentionPolicyDays
	}
	if !IsNil(o.RetentionProvider) {
		toSerialize["retentionProvider"] = o.RetentionProvider
	}
	return toSerialize, nil
}

type NullableListStorageBuckets200ResponseAllOfStorageBucketsInner struct {
	value *ListStorageBuckets200ResponseAllOfStorageBucketsInner
	isSet bool
}

func (v NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) Get() *ListStorageBuckets200ResponseAllOfStorageBucketsInner {
	return v.value
}

func (v *NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) Set(val *ListStorageBuckets200ResponseAllOfStorageBucketsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageBuckets200ResponseAllOfStorageBucketsInner(val *ListStorageBuckets200ResponseAllOfStorageBucketsInner) *NullableListStorageBuckets200ResponseAllOfStorageBucketsInner {
	return &NullableListStorageBuckets200ResponseAllOfStorageBucketsInner{value: val, isSet: true}
}

func (v NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageBuckets200ResponseAllOfStorageBucketsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


