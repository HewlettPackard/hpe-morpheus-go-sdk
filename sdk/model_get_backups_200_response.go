/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetBackups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBackups200Response{}

// GetBackups200Response struct for GetBackups200Response
type GetBackups200Response struct {
	Backup *ListBackups200ResponseAllOfBackupsInner `json:"backup,omitempty"`
}

// NewGetBackups200Response instantiates a new GetBackups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBackups200Response() *GetBackups200Response {
	this := GetBackups200Response{}
	return &this
}

// NewGetBackups200ResponseWithDefaults instantiates a new GetBackups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBackups200ResponseWithDefaults() *GetBackups200Response {
	this := GetBackups200Response{}
	return &this
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *GetBackups200Response) GetBackup() ListBackups200ResponseAllOfBackupsInner {
	if o == nil || IsNil(o.Backup) {
		var ret ListBackups200ResponseAllOfBackupsInner
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBackups200Response) GetBackupOk() (*ListBackups200ResponseAllOfBackupsInner, bool) {
	if o == nil || IsNil(o.Backup) {
		return nil, false
	}
	return o.Backup, true
}

// IsSetBackup returns a boolean if a field has been set.
func (o *GetBackups200Response) IsSetBackup() bool {
	if o != nil && !IsNil(o.Backup) {
		return true
	}

	return false
}

// SetBackup gets a reference to the given ListBackups200ResponseAllOfBackupsInner and assigns it to the Backup field.
func (o *GetBackups200Response) SetBackup(v ListBackups200ResponseAllOfBackupsInner) {
	o.Backup = &v
}

func (o GetBackups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBackups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Backup) {
		toSerialize["backup"] = o.Backup
	}
	return toSerialize, nil
}

type NullableGetBackups200Response struct {
	value *GetBackups200Response
	isSet bool
}

func (v NullableGetBackups200Response) Get() *GetBackups200Response {
	return v.value
}

func (v *NullableGetBackups200Response) Set(val *GetBackups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBackups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBackups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBackups200Response(val *GetBackups200Response) *NullableGetBackups200Response {
	return &NullableGetBackups200Response{value: val, isSet: true}
}

func (v NullableGetBackups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBackups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


