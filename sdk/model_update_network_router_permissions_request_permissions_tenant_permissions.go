/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions{}

// UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions struct for UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions
type UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions struct {
	// Array of tenant account IDs
	Accounts []int64 `json:"accounts,omitempty"`
}

// NewUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions instantiates a new UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions() *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions {
	this := UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions{}
	return &this
}

// NewUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissionsWithDefaults instantiates a new UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissionsWithDefaults() *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions {
	this := UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) GetAccounts() []int64 {
	if o == nil || IsNil(o.Accounts) {
		var ret []int64
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) GetAccountsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// IsSetAccounts returns a boolean if a field has been set.
func (o *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) IsSetAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []int64 and assigns it to the Accounts field.
func (o *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) SetAccounts(v []int64) {
	o.Accounts = v
}

func (o UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	return toSerialize, nil
}

type NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions struct {
	value *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions
	isSet bool
}

func (v NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) Get() *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions {
	return v.value
}

func (v *NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) Set(val *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions(val *UpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) *NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions {
	return &NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions{value: val, isSet: true}
}

func (v NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkRouterPermissionsRequestPermissionsTenantPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


