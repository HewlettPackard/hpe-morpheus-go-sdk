/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddDeploymentVersion200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDeploymentVersion200Response{}

// AddDeploymentVersion200Response struct for AddDeploymentVersion200Response
type AddDeploymentVersion200Response struct {
	Version *ListDeploymentVersions200ResponseAllOfVersionsInner `json:"version,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddDeploymentVersion200Response instantiates a new AddDeploymentVersion200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDeploymentVersion200Response() *AddDeploymentVersion200Response {
	this := AddDeploymentVersion200Response{}
	return &this
}

// NewAddDeploymentVersion200ResponseWithDefaults instantiates a new AddDeploymentVersion200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDeploymentVersion200ResponseWithDefaults() *AddDeploymentVersion200Response {
	this := AddDeploymentVersion200Response{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AddDeploymentVersion200Response) GetVersion() ListDeploymentVersions200ResponseAllOfVersionsInner {
	if o == nil || IsNil(o.Version) {
		var ret ListDeploymentVersions200ResponseAllOfVersionsInner
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDeploymentVersion200Response) GetVersionOk() (*ListDeploymentVersions200ResponseAllOfVersionsInner, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// IsSetVersion returns a boolean if a field has been set.
func (o *AddDeploymentVersion200Response) IsSetVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given ListDeploymentVersions200ResponseAllOfVersionsInner and assigns it to the Version field.
func (o *AddDeploymentVersion200Response) SetVersion(v ListDeploymentVersions200ResponseAllOfVersionsInner) {
	o.Version = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddDeploymentVersion200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDeploymentVersion200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddDeploymentVersion200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddDeploymentVersion200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddDeploymentVersion200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDeploymentVersion200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddDeploymentVersion200Response struct {
	value *AddDeploymentVersion200Response
	isSet bool
}

func (v NullableAddDeploymentVersion200Response) Get() *AddDeploymentVersion200Response {
	return v.value
}

func (v *NullableAddDeploymentVersion200Response) Set(val *AddDeploymentVersion200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDeploymentVersion200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDeploymentVersion200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDeploymentVersion200Response(val *AddDeploymentVersion200Response) *NullableAddDeploymentVersion200Response {
	return &NullableAddDeploymentVersion200Response{value: val, isSet: true}
}

func (v NullableAddDeploymentVersion200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDeploymentVersion200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


