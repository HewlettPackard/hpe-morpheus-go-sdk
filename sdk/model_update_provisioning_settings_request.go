/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateProvisioningSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProvisioningSettingsRequest{}

// UpdateProvisioningSettingsRequest struct for UpdateProvisioningSettingsRequest
type UpdateProvisioningSettingsRequest struct {
	ProvisioningSettings *UpdateProvisioningSettingsRequestProvisioningSettings `json:"provisioningSettings,omitempty"`
	AdditionalProperties map[string]interface{}                                 `json:",remain"`
}

type _UpdateProvisioningSettingsRequest UpdateProvisioningSettingsRequest

// NewUpdateProvisioningSettingsRequest instantiates a new UpdateProvisioningSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProvisioningSettingsRequest() *UpdateProvisioningSettingsRequest {
	this := UpdateProvisioningSettingsRequest{}
	return &this
}

// NewUpdateProvisioningSettingsRequestWithDefaults instantiates a new UpdateProvisioningSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProvisioningSettingsRequestWithDefaults() *UpdateProvisioningSettingsRequest {
	this := UpdateProvisioningSettingsRequest{}
	return &this
}

// GetProvisioningSettings returns the ProvisioningSettings field value if set, zero value otherwise.
func (o *UpdateProvisioningSettingsRequest) GetProvisioningSettings() UpdateProvisioningSettingsRequestProvisioningSettings {
	if o == nil || IsNil(o.ProvisioningSettings) {
		var ret UpdateProvisioningSettingsRequestProvisioningSettings
		return ret
	}
	return *o.ProvisioningSettings
}

// GetProvisioningSettingsOk returns a tuple with the ProvisioningSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProvisioningSettingsRequest) GetProvisioningSettingsOk() (*UpdateProvisioningSettingsRequestProvisioningSettings, bool) {
	if o == nil || IsNil(o.ProvisioningSettings) {
		return nil, false
	}
	return o.ProvisioningSettings, true
}

// IsSetProvisioningSettings returns a boolean if a field has been set.
func (o *UpdateProvisioningSettingsRequest) IsSetProvisioningSettings() bool {
	if o != nil && !IsNil(o.ProvisioningSettings) {
		return true
	}

	return false
}

// SetProvisioningSettings gets a reference to the given UpdateProvisioningSettingsRequestProvisioningSettings and assigns it to the ProvisioningSettings field.
func (o *UpdateProvisioningSettingsRequest) SetProvisioningSettings(v UpdateProvisioningSettingsRequestProvisioningSettings) {
	o.ProvisioningSettings = &v
}

func (o UpdateProvisioningSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProvisioningSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProvisioningSettings) {
		toSerialize["provisioningSettings"] = o.ProvisioningSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateProvisioningSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
