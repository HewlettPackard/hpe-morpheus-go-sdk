/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the WikiPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WikiPage{}

// WikiPage struct for WikiPage
type WikiPage struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	UrlName *string `json:"urlName,omitempty"`
	Category *string `json:"category,omitempty"`
	RefId *string `json:"refId,omitempty"`
	RefType *string `json:"refType,omitempty"`
	Format *string `json:"format,omitempty"`
	Content *string `json:"content,omitempty"`
	CreatedBy *ListActivity200ResponseAllOfActivityInnerActivityInnerUser `json:"createdBy,omitempty"`
	UpdatedBy *ListActivity200ResponseAllOfActivityInnerActivityInnerUser `json:"updatedBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewWikiPage instantiates a new WikiPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWikiPage() *WikiPage {
	this := WikiPage{}
	return &this
}

// NewWikiPageWithDefaults instantiates a new WikiPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWikiPageWithDefaults() *WikiPage {
	this := WikiPage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WikiPage) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *WikiPage) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *WikiPage) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WikiPage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *WikiPage) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WikiPage) SetName(v string) {
	o.Name = &v
}

// GetUrlName returns the UrlName field value if set, zero value otherwise.
func (o *WikiPage) GetUrlName() string {
	if o == nil || IsNil(o.UrlName) {
		var ret string
		return ret
	}
	return *o.UrlName
}

// GetUrlNameOk returns a tuple with the UrlName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetUrlNameOk() (*string, bool) {
	if o == nil || IsNil(o.UrlName) {
		return nil, false
	}
	return o.UrlName, true
}

// IsSetUrlName returns a boolean if a field has been set.
func (o *WikiPage) IsSetUrlName() bool {
	if o != nil && !IsNil(o.UrlName) {
		return true
	}

	return false
}

// SetUrlName gets a reference to the given string and assigns it to the UrlName field.
func (o *WikiPage) SetUrlName(v string) {
	o.UrlName = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *WikiPage) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *WikiPage) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *WikiPage) SetCategory(v string) {
	o.Category = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *WikiPage) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *WikiPage) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *WikiPage) SetRefId(v string) {
	o.RefId = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *WikiPage) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *WikiPage) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *WikiPage) SetRefType(v string) {
	o.RefType = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *WikiPage) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// IsSetFormat returns a boolean if a field has been set.
func (o *WikiPage) IsSetFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *WikiPage) SetFormat(v string) {
	o.Format = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *WikiPage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// IsSetContent returns a boolean if a field has been set.
func (o *WikiPage) IsSetContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *WikiPage) SetContent(v string) {
	o.Content = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WikiPage) GetCreatedBy() ListActivity200ResponseAllOfActivityInnerActivityInnerUser {
	if o == nil || IsNil(o.CreatedBy) {
		var ret ListActivity200ResponseAllOfActivityInnerActivityInnerUser
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetCreatedByOk() (*ListActivity200ResponseAllOfActivityInnerActivityInnerUser, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// IsSetCreatedBy returns a boolean if a field has been set.
func (o *WikiPage) IsSetCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given ListActivity200ResponseAllOfActivityInnerActivityInnerUser and assigns it to the CreatedBy field.
func (o *WikiPage) SetCreatedBy(v ListActivity200ResponseAllOfActivityInnerActivityInnerUser) {
	o.CreatedBy = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WikiPage) GetUpdatedBy() ListActivity200ResponseAllOfActivityInnerActivityInnerUser {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret ListActivity200ResponseAllOfActivityInnerActivityInnerUser
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetUpdatedByOk() (*ListActivity200ResponseAllOfActivityInnerActivityInnerUser, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// IsSetUpdatedBy returns a boolean if a field has been set.
func (o *WikiPage) IsSetUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given ListActivity200ResponseAllOfActivityInnerActivityInnerUser and assigns it to the UpdatedBy field.
func (o *WikiPage) SetUpdatedBy(v ListActivity200ResponseAllOfActivityInnerActivityInnerUser) {
	o.UpdatedBy = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *WikiPage) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *WikiPage) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *WikiPage) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *WikiPage) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WikiPage) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *WikiPage) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *WikiPage) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o WikiPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WikiPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UrlName) {
		toSerialize["urlName"] = o.UrlName
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableWikiPage struct {
	value *WikiPage
	isSet bool
}

func (v NullableWikiPage) Get() *WikiPage {
	return v.value
}

func (v *NullableWikiPage) Set(val *WikiPage) {
	v.value = val
	v.isSet = true
}

func (v NullableWikiPage) IsSet() bool {
	return v.isSet
}

func (v *NullableWikiPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWikiPage(val *WikiPage) *NullableWikiPage {
	return &NullableWikiPage{value: val, isSet: true}
}

func (v NullableWikiPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWikiPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


