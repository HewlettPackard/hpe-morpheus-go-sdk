/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetAlerts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAlerts200Response{}

// GetAlerts200Response struct for GetAlerts200Response
type GetAlerts200Response struct {
	Alert *ListAlerts200ResponseAllOfAlertsInner `json:"alert,omitempty"`
	Checks []GetAlerts200ResponseAllOfChecksInner `json:"checks,omitempty"`
	CheckGroups []GetAlerts200ResponseAllOfCheckGroupsInner `json:"checkGroups,omitempty"`
	Apps []GetAlerts200ResponseAllOfAppsInner `json:"apps,omitempty"`
}

// NewGetAlerts200Response instantiates a new GetAlerts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlerts200Response() *GetAlerts200Response {
	this := GetAlerts200Response{}
	return &this
}

// NewGetAlerts200ResponseWithDefaults instantiates a new GetAlerts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlerts200ResponseWithDefaults() *GetAlerts200Response {
	this := GetAlerts200Response{}
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *GetAlerts200Response) GetAlert() ListAlerts200ResponseAllOfAlertsInner {
	if o == nil || IsNil(o.Alert) {
		var ret ListAlerts200ResponseAllOfAlertsInner
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlerts200Response) GetAlertOk() (*ListAlerts200ResponseAllOfAlertsInner, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// IsSetAlert returns a boolean if a field has been set.
func (o *GetAlerts200Response) IsSetAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given ListAlerts200ResponseAllOfAlertsInner and assigns it to the Alert field.
func (o *GetAlerts200Response) SetAlert(v ListAlerts200ResponseAllOfAlertsInner) {
	o.Alert = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *GetAlerts200Response) GetChecks() []GetAlerts200ResponseAllOfChecksInner {
	if o == nil || IsNil(o.Checks) {
		var ret []GetAlerts200ResponseAllOfChecksInner
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlerts200Response) GetChecksOk() ([]GetAlerts200ResponseAllOfChecksInner, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// IsSetChecks returns a boolean if a field has been set.
func (o *GetAlerts200Response) IsSetChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []GetAlerts200ResponseAllOfChecksInner and assigns it to the Checks field.
func (o *GetAlerts200Response) SetChecks(v []GetAlerts200ResponseAllOfChecksInner) {
	o.Checks = v
}

// GetCheckGroups returns the CheckGroups field value if set, zero value otherwise.
func (o *GetAlerts200Response) GetCheckGroups() []GetAlerts200ResponseAllOfCheckGroupsInner {
	if o == nil || IsNil(o.CheckGroups) {
		var ret []GetAlerts200ResponseAllOfCheckGroupsInner
		return ret
	}
	return o.CheckGroups
}

// GetCheckGroupsOk returns a tuple with the CheckGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlerts200Response) GetCheckGroupsOk() ([]GetAlerts200ResponseAllOfCheckGroupsInner, bool) {
	if o == nil || IsNil(o.CheckGroups) {
		return nil, false
	}
	return o.CheckGroups, true
}

// IsSetCheckGroups returns a boolean if a field has been set.
func (o *GetAlerts200Response) IsSetCheckGroups() bool {
	if o != nil && !IsNil(o.CheckGroups) {
		return true
	}

	return false
}

// SetCheckGroups gets a reference to the given []GetAlerts200ResponseAllOfCheckGroupsInner and assigns it to the CheckGroups field.
func (o *GetAlerts200Response) SetCheckGroups(v []GetAlerts200ResponseAllOfCheckGroupsInner) {
	o.CheckGroups = v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *GetAlerts200Response) GetApps() []GetAlerts200ResponseAllOfAppsInner {
	if o == nil || IsNil(o.Apps) {
		var ret []GetAlerts200ResponseAllOfAppsInner
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlerts200Response) GetAppsOk() ([]GetAlerts200ResponseAllOfAppsInner, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// IsSetApps returns a boolean if a field has been set.
func (o *GetAlerts200Response) IsSetApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []GetAlerts200ResponseAllOfAppsInner and assigns it to the Apps field.
func (o *GetAlerts200Response) SetApps(v []GetAlerts200ResponseAllOfAppsInner) {
	o.Apps = v
}

func (o GetAlerts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAlerts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	if !IsNil(o.CheckGroups) {
		toSerialize["checkGroups"] = o.CheckGroups
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	return toSerialize, nil
}

type NullableGetAlerts200Response struct {
	value *GetAlerts200Response
	isSet bool
}

func (v NullableGetAlerts200Response) Get() *GetAlerts200Response {
	return v.value
}

func (v *NullableGetAlerts200Response) Set(val *GetAlerts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlerts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlerts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlerts200Response(val *GetAlerts200Response) *NullableGetAlerts200Response {
	return &NullableGetAlerts200Response{value: val, isSet: true}
}

func (v NullableGetAlerts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlerts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


