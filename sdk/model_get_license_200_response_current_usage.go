/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetLicense200ResponseCurrentUsage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLicense200ResponseCurrentUsage{}

// GetLicense200ResponseCurrentUsage struct for GetLicense200ResponseCurrentUsage
type GetLicense200ResponseCurrentUsage struct {
	// Total Used Memory (bytes)
	Memory *int64 `json:"memory,omitempty"`
	// Total Used Storage (bytes)
	Storage *int64 `json:"storage,omitempty"`
	// Total Workloads
	Workloads *int64 `json:"workloads,omitempty"`
	// Total Discovered Servers
	DiscoveredServers *int64 `json:"discoveredServers,omitempty"`
	// Total Hosts
	Hosts *int64 `json:"hosts,omitempty"`
	// Total HPE VM Hosts
	Mvm *int64 `json:"mvm,omitempty"`
	// Total HPE VM Sockets
	MvmSockets *int64 `json:"mvmSockets,omitempty"`
	// Total IAC Deployments
	Iac *int64 `json:"iac,omitempty"`
	// Total Xaas Instances
	Xaas *int64 `json:"xaas,omitempty"`
	// Total Executions
	Executions *int64 `json:"executions,omitempty"`
	// Total Distributed Workers
	DistributedWorkers *int64 `json:"distributedWorkers,omitempty"`
	// Total Discovered Objects
	DiscoveredObjects *int64 `json:"discoveredObjects,omitempty"`
}

// NewGetLicense200ResponseCurrentUsage instantiates a new GetLicense200ResponseCurrentUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLicense200ResponseCurrentUsage() *GetLicense200ResponseCurrentUsage {
	this := GetLicense200ResponseCurrentUsage{}
	return &this
}

// NewGetLicense200ResponseCurrentUsageWithDefaults instantiates a new GetLicense200ResponseCurrentUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLicense200ResponseCurrentUsageWithDefaults() *GetLicense200ResponseCurrentUsage {
	this := GetLicense200ResponseCurrentUsage{}
	return &this
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetMemory() int64 {
	if o == nil || IsNil(o.Memory) {
		var ret int64
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// IsSetMemory returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *GetLicense200ResponseCurrentUsage) SetMemory(v int64) {
	o.Memory = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetStorage() int64 {
	if o == nil || IsNil(o.Storage) {
		var ret int64
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetStorageOk() (*int64, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// IsSetStorage returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given int64 and assigns it to the Storage field.
func (o *GetLicense200ResponseCurrentUsage) SetStorage(v int64) {
	o.Storage = &v
}

// GetWorkloads returns the Workloads field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetWorkloads() int64 {
	if o == nil || IsNil(o.Workloads) {
		var ret int64
		return ret
	}
	return *o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetWorkloadsOk() (*int64, bool) {
	if o == nil || IsNil(o.Workloads) {
		return nil, false
	}
	return o.Workloads, true
}

// IsSetWorkloads returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetWorkloads() bool {
	if o != nil && !IsNil(o.Workloads) {
		return true
	}

	return false
}

// SetWorkloads gets a reference to the given int64 and assigns it to the Workloads field.
func (o *GetLicense200ResponseCurrentUsage) SetWorkloads(v int64) {
	o.Workloads = &v
}

// GetDiscoveredServers returns the DiscoveredServers field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetDiscoveredServers() int64 {
	if o == nil || IsNil(o.DiscoveredServers) {
		var ret int64
		return ret
	}
	return *o.DiscoveredServers
}

// GetDiscoveredServersOk returns a tuple with the DiscoveredServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetDiscoveredServersOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscoveredServers) {
		return nil, false
	}
	return o.DiscoveredServers, true
}

// IsSetDiscoveredServers returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetDiscoveredServers() bool {
	if o != nil && !IsNil(o.DiscoveredServers) {
		return true
	}

	return false
}

// SetDiscoveredServers gets a reference to the given int64 and assigns it to the DiscoveredServers field.
func (o *GetLicense200ResponseCurrentUsage) SetDiscoveredServers(v int64) {
	o.DiscoveredServers = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetHosts() int64 {
	if o == nil || IsNil(o.Hosts) {
		var ret int64
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetHostsOk() (*int64, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// IsSetHosts returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given int64 and assigns it to the Hosts field.
func (o *GetLicense200ResponseCurrentUsage) SetHosts(v int64) {
	o.Hosts = &v
}

// GetMvm returns the Mvm field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetMvm() int64 {
	if o == nil || IsNil(o.Mvm) {
		var ret int64
		return ret
	}
	return *o.Mvm
}

// GetMvmOk returns a tuple with the Mvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetMvmOk() (*int64, bool) {
	if o == nil || IsNil(o.Mvm) {
		return nil, false
	}
	return o.Mvm, true
}

// IsSetMvm returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetMvm() bool {
	if o != nil && !IsNil(o.Mvm) {
		return true
	}

	return false
}

// SetMvm gets a reference to the given int64 and assigns it to the Mvm field.
func (o *GetLicense200ResponseCurrentUsage) SetMvm(v int64) {
	o.Mvm = &v
}

// GetMvmSockets returns the MvmSockets field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetMvmSockets() int64 {
	if o == nil || IsNil(o.MvmSockets) {
		var ret int64
		return ret
	}
	return *o.MvmSockets
}

// GetMvmSocketsOk returns a tuple with the MvmSockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetMvmSocketsOk() (*int64, bool) {
	if o == nil || IsNil(o.MvmSockets) {
		return nil, false
	}
	return o.MvmSockets, true
}

// IsSetMvmSockets returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetMvmSockets() bool {
	if o != nil && !IsNil(o.MvmSockets) {
		return true
	}

	return false
}

// SetMvmSockets gets a reference to the given int64 and assigns it to the MvmSockets field.
func (o *GetLicense200ResponseCurrentUsage) SetMvmSockets(v int64) {
	o.MvmSockets = &v
}

// GetIac returns the Iac field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetIac() int64 {
	if o == nil || IsNil(o.Iac) {
		var ret int64
		return ret
	}
	return *o.Iac
}

// GetIacOk returns a tuple with the Iac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetIacOk() (*int64, bool) {
	if o == nil || IsNil(o.Iac) {
		return nil, false
	}
	return o.Iac, true
}

// IsSetIac returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetIac() bool {
	if o != nil && !IsNil(o.Iac) {
		return true
	}

	return false
}

// SetIac gets a reference to the given int64 and assigns it to the Iac field.
func (o *GetLicense200ResponseCurrentUsage) SetIac(v int64) {
	o.Iac = &v
}

// GetXaas returns the Xaas field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetXaas() int64 {
	if o == nil || IsNil(o.Xaas) {
		var ret int64
		return ret
	}
	return *o.Xaas
}

// GetXaasOk returns a tuple with the Xaas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetXaasOk() (*int64, bool) {
	if o == nil || IsNil(o.Xaas) {
		return nil, false
	}
	return o.Xaas, true
}

// IsSetXaas returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetXaas() bool {
	if o != nil && !IsNil(o.Xaas) {
		return true
	}

	return false
}

// SetXaas gets a reference to the given int64 and assigns it to the Xaas field.
func (o *GetLicense200ResponseCurrentUsage) SetXaas(v int64) {
	o.Xaas = &v
}

// GetExecutions returns the Executions field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetExecutions() int64 {
	if o == nil || IsNil(o.Executions) {
		var ret int64
		return ret
	}
	return *o.Executions
}

// GetExecutionsOk returns a tuple with the Executions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetExecutionsOk() (*int64, bool) {
	if o == nil || IsNil(o.Executions) {
		return nil, false
	}
	return o.Executions, true
}

// IsSetExecutions returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetExecutions() bool {
	if o != nil && !IsNil(o.Executions) {
		return true
	}

	return false
}

// SetExecutions gets a reference to the given int64 and assigns it to the Executions field.
func (o *GetLicense200ResponseCurrentUsage) SetExecutions(v int64) {
	o.Executions = &v
}

// GetDistributedWorkers returns the DistributedWorkers field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetDistributedWorkers() int64 {
	if o == nil || IsNil(o.DistributedWorkers) {
		var ret int64
		return ret
	}
	return *o.DistributedWorkers
}

// GetDistributedWorkersOk returns a tuple with the DistributedWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetDistributedWorkersOk() (*int64, bool) {
	if o == nil || IsNil(o.DistributedWorkers) {
		return nil, false
	}
	return o.DistributedWorkers, true
}

// IsSetDistributedWorkers returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetDistributedWorkers() bool {
	if o != nil && !IsNil(o.DistributedWorkers) {
		return true
	}

	return false
}

// SetDistributedWorkers gets a reference to the given int64 and assigns it to the DistributedWorkers field.
func (o *GetLicense200ResponseCurrentUsage) SetDistributedWorkers(v int64) {
	o.DistributedWorkers = &v
}

// GetDiscoveredObjects returns the DiscoveredObjects field value if set, zero value otherwise.
func (o *GetLicense200ResponseCurrentUsage) GetDiscoveredObjects() int64 {
	if o == nil || IsNil(o.DiscoveredObjects) {
		var ret int64
		return ret
	}
	return *o.DiscoveredObjects
}

// GetDiscoveredObjectsOk returns a tuple with the DiscoveredObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicense200ResponseCurrentUsage) GetDiscoveredObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscoveredObjects) {
		return nil, false
	}
	return o.DiscoveredObjects, true
}

// IsSetDiscoveredObjects returns a boolean if a field has been set.
func (o *GetLicense200ResponseCurrentUsage) IsSetDiscoveredObjects() bool {
	if o != nil && !IsNil(o.DiscoveredObjects) {
		return true
	}

	return false
}

// SetDiscoveredObjects gets a reference to the given int64 and assigns it to the DiscoveredObjects field.
func (o *GetLicense200ResponseCurrentUsage) SetDiscoveredObjects(v int64) {
	o.DiscoveredObjects = &v
}

func (o GetLicense200ResponseCurrentUsage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLicense200ResponseCurrentUsage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.Workloads) {
		toSerialize["workloads"] = o.Workloads
	}
	if !IsNil(o.DiscoveredServers) {
		toSerialize["discoveredServers"] = o.DiscoveredServers
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.Mvm) {
		toSerialize["mvm"] = o.Mvm
	}
	if !IsNil(o.MvmSockets) {
		toSerialize["mvmSockets"] = o.MvmSockets
	}
	if !IsNil(o.Iac) {
		toSerialize["iac"] = o.Iac
	}
	if !IsNil(o.Xaas) {
		toSerialize["xaas"] = o.Xaas
	}
	if !IsNil(o.Executions) {
		toSerialize["executions"] = o.Executions
	}
	if !IsNil(o.DistributedWorkers) {
		toSerialize["distributedWorkers"] = o.DistributedWorkers
	}
	if !IsNil(o.DiscoveredObjects) {
		toSerialize["discoveredObjects"] = o.DiscoveredObjects
	}
	return toSerialize, nil
}

type NullableGetLicense200ResponseCurrentUsage struct {
	value *GetLicense200ResponseCurrentUsage
	isSet bool
}

func (v NullableGetLicense200ResponseCurrentUsage) Get() *GetLicense200ResponseCurrentUsage {
	return v.value
}

func (v *NullableGetLicense200ResponseCurrentUsage) Set(val *GetLicense200ResponseCurrentUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLicense200ResponseCurrentUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLicense200ResponseCurrentUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLicense200ResponseCurrentUsage(val *GetLicense200ResponseCurrentUsage) *NullableGetLicense200ResponseCurrentUsage {
	return &NullableGetLicense200ResponseCurrentUsage{value: val, isSet: true}
}

func (v NullableGetLicense200ResponseCurrentUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLicense200ResponseCurrentUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


