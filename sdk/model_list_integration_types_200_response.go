/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIntegrationTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntegrationTypes200Response{}

// ListIntegrationTypes200Response struct for ListIntegrationTypes200Response
type ListIntegrationTypes200Response struct {
	IntegrationTypes []ListIntegrationTypes200ResponseAllOfIntegrationTypesInner `json:"integrationTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListIntegrationTypes200Response instantiates a new ListIntegrationTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntegrationTypes200Response() *ListIntegrationTypes200Response {
	this := ListIntegrationTypes200Response{}
	return &this
}

// NewListIntegrationTypes200ResponseWithDefaults instantiates a new ListIntegrationTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntegrationTypes200ResponseWithDefaults() *ListIntegrationTypes200Response {
	this := ListIntegrationTypes200Response{}
	return &this
}

// GetIntegrationTypes returns the IntegrationTypes field value if set, zero value otherwise.
func (o *ListIntegrationTypes200Response) GetIntegrationTypes() []ListIntegrationTypes200ResponseAllOfIntegrationTypesInner {
	if o == nil || IsNil(o.IntegrationTypes) {
		var ret []ListIntegrationTypes200ResponseAllOfIntegrationTypesInner
		return ret
	}
	return o.IntegrationTypes
}

// GetIntegrationTypesOk returns a tuple with the IntegrationTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationTypes200Response) GetIntegrationTypesOk() ([]ListIntegrationTypes200ResponseAllOfIntegrationTypesInner, bool) {
	if o == nil || IsNil(o.IntegrationTypes) {
		return nil, false
	}
	return o.IntegrationTypes, true
}

// IsSetIntegrationTypes returns a boolean if a field has been set.
func (o *ListIntegrationTypes200Response) IsSetIntegrationTypes() bool {
	if o != nil && !IsNil(o.IntegrationTypes) {
		return true
	}

	return false
}

// SetIntegrationTypes gets a reference to the given []ListIntegrationTypes200ResponseAllOfIntegrationTypesInner and assigns it to the IntegrationTypes field.
func (o *ListIntegrationTypes200Response) SetIntegrationTypes(v []ListIntegrationTypes200ResponseAllOfIntegrationTypesInner) {
	o.IntegrationTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListIntegrationTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListIntegrationTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListIntegrationTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListIntegrationTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIntegrationTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntegrationTypes) {
		toSerialize["integrationTypes"] = o.IntegrationTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListIntegrationTypes200Response struct {
	value *ListIntegrationTypes200Response
	isSet bool
}

func (v NullableListIntegrationTypes200Response) Get() *ListIntegrationTypes200Response {
	return v.value
}

func (v *NullableListIntegrationTypes200Response) Set(val *ListIntegrationTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntegrationTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntegrationTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntegrationTypes200Response(val *ListIntegrationTypes200Response) *NullableListIntegrationTypes200Response {
	return &NullableListIntegrationTypes200Response{value: val, isSet: true}
}

func (v NullableListIntegrationTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntegrationTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


