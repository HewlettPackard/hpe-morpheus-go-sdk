/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClusterRequest{}

// AddClusterRequest struct for AddClusterRequest
type AddClusterRequest struct {
	Cluster *AddClusterRequestCluster `json:"cluster,omitempty"`
}

// NewAddClusterRequest instantiates a new AddClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClusterRequest() *AddClusterRequest {
	this := AddClusterRequest{}
	return &this
}

// NewAddClusterRequestWithDefaults instantiates a new AddClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClusterRequestWithDefaults() *AddClusterRequest {
	this := AddClusterRequest{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AddClusterRequest) GetCluster() AddClusterRequestCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret AddClusterRequestCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequest) GetClusterOk() (*AddClusterRequestCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *AddClusterRequest) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given AddClusterRequestCluster and assigns it to the Cluster field.
func (o *AddClusterRequest) SetCluster(v AddClusterRequestCluster) {
	o.Cluster = &v
}

func (o AddClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableAddClusterRequest struct {
	value *AddClusterRequest
	isSet bool
}

func (v NullableAddClusterRequest) Get() *AddClusterRequest {
	return v.value
}

func (v *NullableAddClusterRequest) Set(val *AddClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClusterRequest(val *AddClusterRequest) *NullableAddClusterRequest {
	return &NullableAddClusterRequest{value: val, isSet: true}
}

func (v NullableAddClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


