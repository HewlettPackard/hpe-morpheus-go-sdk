/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHostDevices200ResponseDevicesInnerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHostDevices200ResponseDevicesInnerType{}

// ListHostDevices200ResponseDevicesInnerType struct for ListHostDevices200ResponseDevicesInnerType
type ListHostDevices200ResponseDevicesInnerType struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Family *string `json:"family,omitempty"`
	BusType *string `json:"busType,omitempty"`
	Assignable *bool `json:"assignable,omitempty"`
	Hotpluggable *bool `json:"hotpluggable,omitempty"`
	VendorId *int32 `json:"vendorId,omitempty"`
	ProductId *int32 `json:"productId,omitempty"`
}

// NewListHostDevices200ResponseDevicesInnerType instantiates a new ListHostDevices200ResponseDevicesInnerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHostDevices200ResponseDevicesInnerType() *ListHostDevices200ResponseDevicesInnerType {
	this := ListHostDevices200ResponseDevicesInnerType{}
	return &this
}

// NewListHostDevices200ResponseDevicesInnerTypeWithDefaults instantiates a new ListHostDevices200ResponseDevicesInnerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHostDevices200ResponseDevicesInnerTypeWithDefaults() *ListHostDevices200ResponseDevicesInnerType {
	this := ListHostDevices200ResponseDevicesInnerType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetName(v string) {
	o.Name = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// IsSetFamily returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetFamily(v string) {
	o.Family = &v
}

// GetBusType returns the BusType field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetBusType() string {
	if o == nil || IsNil(o.BusType) {
		var ret string
		return ret
	}
	return *o.BusType
}

// GetBusTypeOk returns a tuple with the BusType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetBusTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BusType) {
		return nil, false
	}
	return o.BusType, true
}

// IsSetBusType returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetBusType() bool {
	if o != nil && !IsNil(o.BusType) {
		return true
	}

	return false
}

// SetBusType gets a reference to the given string and assigns it to the BusType field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetBusType(v string) {
	o.BusType = &v
}

// GetAssignable returns the Assignable field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetAssignable() bool {
	if o == nil || IsNil(o.Assignable) {
		var ret bool
		return ret
	}
	return *o.Assignable
}

// GetAssignableOk returns a tuple with the Assignable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetAssignableOk() (*bool, bool) {
	if o == nil || IsNil(o.Assignable) {
		return nil, false
	}
	return o.Assignable, true
}

// IsSetAssignable returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetAssignable() bool {
	if o != nil && !IsNil(o.Assignable) {
		return true
	}

	return false
}

// SetAssignable gets a reference to the given bool and assigns it to the Assignable field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetAssignable(v bool) {
	o.Assignable = &v
}

// GetHotpluggable returns the Hotpluggable field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetHotpluggable() bool {
	if o == nil || IsNil(o.Hotpluggable) {
		var ret bool
		return ret
	}
	return *o.Hotpluggable
}

// GetHotpluggableOk returns a tuple with the Hotpluggable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetHotpluggableOk() (*bool, bool) {
	if o == nil || IsNil(o.Hotpluggable) {
		return nil, false
	}
	return o.Hotpluggable, true
}

// IsSetHotpluggable returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetHotpluggable() bool {
	if o != nil && !IsNil(o.Hotpluggable) {
		return true
	}

	return false
}

// SetHotpluggable gets a reference to the given bool and assigns it to the Hotpluggable field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetHotpluggable(v bool) {
	o.Hotpluggable = &v
}

// GetVendorId returns the VendorId field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetVendorId() int32 {
	if o == nil || IsNil(o.VendorId) {
		var ret int32
		return ret
	}
	return *o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetVendorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VendorId) {
		return nil, false
	}
	return o.VendorId, true
}

// IsSetVendorId returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetVendorId() bool {
	if o != nil && !IsNil(o.VendorId) {
		return true
	}

	return false
}

// SetVendorId gets a reference to the given int32 and assigns it to the VendorId field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetVendorId(v int32) {
	o.VendorId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ListHostDevices200ResponseDevicesInnerType) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// IsSetProductId returns a boolean if a field has been set.
func (o *ListHostDevices200ResponseDevicesInnerType) IsSetProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *ListHostDevices200ResponseDevicesInnerType) SetProductId(v int32) {
	o.ProductId = &v
}

func (o ListHostDevices200ResponseDevicesInnerType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHostDevices200ResponseDevicesInnerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	if !IsNil(o.BusType) {
		toSerialize["busType"] = o.BusType
	}
	if !IsNil(o.Assignable) {
		toSerialize["assignable"] = o.Assignable
	}
	if !IsNil(o.Hotpluggable) {
		toSerialize["hotpluggable"] = o.Hotpluggable
	}
	if !IsNil(o.VendorId) {
		toSerialize["vendorId"] = o.VendorId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	return toSerialize, nil
}

type NullableListHostDevices200ResponseDevicesInnerType struct {
	value *ListHostDevices200ResponseDevicesInnerType
	isSet bool
}

func (v NullableListHostDevices200ResponseDevicesInnerType) Get() *ListHostDevices200ResponseDevicesInnerType {
	return v.value
}

func (v *NullableListHostDevices200ResponseDevicesInnerType) Set(val *ListHostDevices200ResponseDevicesInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableListHostDevices200ResponseDevicesInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableListHostDevices200ResponseDevicesInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHostDevices200ResponseDevicesInnerType(val *ListHostDevices200ResponseDevicesInnerType) *NullableListHostDevices200ResponseDevicesInnerType {
	return &NullableListHostDevices200ResponseDevicesInnerType{value: val, isSet: true}
}

func (v NullableListHostDevices200ResponseDevicesInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHostDevices200ResponseDevicesInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


