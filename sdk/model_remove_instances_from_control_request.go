/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the RemoveInstancesFromControlRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveInstancesFromControlRequest{}

// RemoveInstancesFromControlRequest struct for RemoveInstancesFromControlRequest
type RemoveInstancesFromControlRequest struct {
	// Array of Ids of brownfield Instances to be deleted
	Ids                  []int64                `json:"ids,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _RemoveInstancesFromControlRequest RemoveInstancesFromControlRequest

// NewRemoveInstancesFromControlRequest instantiates a new RemoveInstancesFromControlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveInstancesFromControlRequest() *RemoveInstancesFromControlRequest {
	this := RemoveInstancesFromControlRequest{}
	return &this
}

// NewRemoveInstancesFromControlRequestWithDefaults instantiates a new RemoveInstancesFromControlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveInstancesFromControlRequestWithDefaults() *RemoveInstancesFromControlRequest {
	this := RemoveInstancesFromControlRequest{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *RemoveInstancesFromControlRequest) GetIds() []int64 {
	if o == nil || IsNil(o.Ids) {
		var ret []int64
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveInstancesFromControlRequest) GetIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// IsSetIds returns a boolean if a field has been set.
func (o *RemoveInstancesFromControlRequest) IsSetIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int64 and assigns it to the Ids field.
func (o *RemoveInstancesFromControlRequest) SetIds(v []int64) {
	o.Ids = v
}

func (o RemoveInstancesFromControlRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveInstancesFromControlRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *RemoveInstancesFromControlRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
