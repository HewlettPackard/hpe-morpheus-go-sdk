/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateMuteAllCheckApps200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMuteAllCheckApps200Response{}

// UpdateMuteAllCheckApps200Response struct for UpdateMuteAllCheckApps200Response
type UpdateMuteAllCheckApps200Response struct {
	Success *bool `json:"success,omitempty"`
	Muted *bool `json:"muted,omitempty"`
	Updated *int64 `json:"updated,omitempty"`
}

// NewUpdateMuteAllCheckApps200Response instantiates a new UpdateMuteAllCheckApps200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMuteAllCheckApps200Response() *UpdateMuteAllCheckApps200Response {
	this := UpdateMuteAllCheckApps200Response{}
	return &this
}

// NewUpdateMuteAllCheckApps200ResponseWithDefaults instantiates a new UpdateMuteAllCheckApps200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMuteAllCheckApps200ResponseWithDefaults() *UpdateMuteAllCheckApps200Response {
	this := UpdateMuteAllCheckApps200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateMuteAllCheckApps200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMuteAllCheckApps200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *UpdateMuteAllCheckApps200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateMuteAllCheckApps200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetMuted returns the Muted field value if set, zero value otherwise.
func (o *UpdateMuteAllCheckApps200Response) GetMuted() bool {
	if o == nil || IsNil(o.Muted) {
		var ret bool
		return ret
	}
	return *o.Muted
}

// GetMutedOk returns a tuple with the Muted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMuteAllCheckApps200Response) GetMutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Muted) {
		return nil, false
	}
	return o.Muted, true
}

// IsSetMuted returns a boolean if a field has been set.
func (o *UpdateMuteAllCheckApps200Response) IsSetMuted() bool {
	if o != nil && !IsNil(o.Muted) {
		return true
	}

	return false
}

// SetMuted gets a reference to the given bool and assigns it to the Muted field.
func (o *UpdateMuteAllCheckApps200Response) SetMuted(v bool) {
	o.Muted = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateMuteAllCheckApps200Response) GetUpdated() int64 {
	if o == nil || IsNil(o.Updated) {
		var ret int64
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMuteAllCheckApps200Response) GetUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// IsSetUpdated returns a boolean if a field has been set.
func (o *UpdateMuteAllCheckApps200Response) IsSetUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given int64 and assigns it to the Updated field.
func (o *UpdateMuteAllCheckApps200Response) SetUpdated(v int64) {
	o.Updated = &v
}

func (o UpdateMuteAllCheckApps200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMuteAllCheckApps200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Muted) {
		toSerialize["muted"] = o.Muted
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateMuteAllCheckApps200Response struct {
	value *UpdateMuteAllCheckApps200Response
	isSet bool
}

func (v NullableUpdateMuteAllCheckApps200Response) Get() *UpdateMuteAllCheckApps200Response {
	return v.value
}

func (v *NullableUpdateMuteAllCheckApps200Response) Set(val *UpdateMuteAllCheckApps200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMuteAllCheckApps200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMuteAllCheckApps200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMuteAllCheckApps200Response(val *UpdateMuteAllCheckApps200Response) *NullableUpdateMuteAllCheckApps200Response {
	return &NullableUpdateMuteAllCheckApps200Response{value: val, isSet: true}
}

func (v NullableUpdateMuteAllCheckApps200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMuteAllCheckApps200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


