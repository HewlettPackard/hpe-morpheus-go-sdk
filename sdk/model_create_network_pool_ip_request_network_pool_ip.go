/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateNetworkPoolIpRequestNetworkPoolIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkPoolIpRequestNetworkPoolIp{}

// CreateNetworkPoolIpRequestNetworkPoolIp struct for CreateNetworkPoolIpRequestNetworkPoolIp
type CreateNetworkPoolIpRequestNetworkPoolIp struct {
	// IP Address
	IpAddress *string `json:"ipAddress,omitempty"`
	// Hostname
	Hostname *string `json:"hostname,omitempty"`
	// Type of associated resource such as a host/server
	RefType *string `json:"refType,omitempty"`
	// ID of associated resource such as a host/server
	RefId *int64 `json:"refId,omitempty"`
}

// NewCreateNetworkPoolIpRequestNetworkPoolIp instantiates a new CreateNetworkPoolIpRequestNetworkPoolIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkPoolIpRequestNetworkPoolIp() *CreateNetworkPoolIpRequestNetworkPoolIp {
	this := CreateNetworkPoolIpRequestNetworkPoolIp{}
	return &this
}

// NewCreateNetworkPoolIpRequestNetworkPoolIpWithDefaults instantiates a new CreateNetworkPoolIpRequestNetworkPoolIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkPoolIpRequestNetworkPoolIpWithDefaults() *CreateNetworkPoolIpRequestNetworkPoolIp {
	this := CreateNetworkPoolIpRequestNetworkPoolIp{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// IsSetIpAddress returns a boolean if a field has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) IsSetIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// IsSetHostname returns a boolean if a field has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) IsSetHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) SetHostname(v string) {
	o.Hostname = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *CreateNetworkPoolIpRequestNetworkPoolIp) SetRefId(v int64) {
	o.RefId = &v
}

func (o CreateNetworkPoolIpRequestNetworkPoolIp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkPoolIpRequestNetworkPoolIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	return toSerialize, nil
}

type NullableCreateNetworkPoolIpRequestNetworkPoolIp struct {
	value *CreateNetworkPoolIpRequestNetworkPoolIp
	isSet bool
}

func (v NullableCreateNetworkPoolIpRequestNetworkPoolIp) Get() *CreateNetworkPoolIpRequestNetworkPoolIp {
	return v.value
}

func (v *NullableCreateNetworkPoolIpRequestNetworkPoolIp) Set(val *CreateNetworkPoolIpRequestNetworkPoolIp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkPoolIpRequestNetworkPoolIp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkPoolIpRequestNetworkPoolIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkPoolIpRequestNetworkPoolIp(val *CreateNetworkPoolIpRequestNetworkPoolIp) *NullableCreateNetworkPoolIpRequestNetworkPoolIp {
	return &NullableCreateNetworkPoolIpRequestNetworkPoolIp{value: val, isSet: true}
}

func (v NullableCreateNetworkPoolIpRequestNetworkPoolIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkPoolIpRequestNetworkPoolIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


