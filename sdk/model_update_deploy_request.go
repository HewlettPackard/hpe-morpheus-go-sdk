/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateDeployRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDeployRequest{}

// UpdateDeployRequest struct for UpdateDeployRequest
type UpdateDeployRequest struct {
	AppDeploy *UpdateDeployRequestAppDeploy `json:"appDeploy,omitempty"`
}

// NewUpdateDeployRequest instantiates a new UpdateDeployRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDeployRequest() *UpdateDeployRequest {
	this := UpdateDeployRequest{}
	return &this
}

// NewUpdateDeployRequestWithDefaults instantiates a new UpdateDeployRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeployRequestWithDefaults() *UpdateDeployRequest {
	this := UpdateDeployRequest{}
	return &this
}

// GetAppDeploy returns the AppDeploy field value if set, zero value otherwise.
func (o *UpdateDeployRequest) GetAppDeploy() UpdateDeployRequestAppDeploy {
	if o == nil || IsNil(o.AppDeploy) {
		var ret UpdateDeployRequestAppDeploy
		return ret
	}
	return *o.AppDeploy
}

// GetAppDeployOk returns a tuple with the AppDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeployRequest) GetAppDeployOk() (*UpdateDeployRequestAppDeploy, bool) {
	if o == nil || IsNil(o.AppDeploy) {
		return nil, false
	}
	return o.AppDeploy, true
}

// IsSetAppDeploy returns a boolean if a field has been set.
func (o *UpdateDeployRequest) IsSetAppDeploy() bool {
	if o != nil && !IsNil(o.AppDeploy) {
		return true
	}

	return false
}

// SetAppDeploy gets a reference to the given UpdateDeployRequestAppDeploy and assigns it to the AppDeploy field.
func (o *UpdateDeployRequest) SetAppDeploy(v UpdateDeployRequestAppDeploy) {
	o.AppDeploy = &v
}

func (o UpdateDeployRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDeployRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppDeploy) {
		toSerialize["appDeploy"] = o.AppDeploy
	}
	return toSerialize, nil
}

type NullableUpdateDeployRequest struct {
	value *UpdateDeployRequest
	isSet bool
}

func (v NullableUpdateDeployRequest) Get() *UpdateDeployRequest {
	return v.value
}

func (v *NullableUpdateDeployRequest) Set(val *UpdateDeployRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeployRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeployRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeployRequest(val *UpdateDeployRequest) *NullableUpdateDeployRequest {
	return &NullableUpdateDeployRequest{value: val, isSet: true}
}

func (v NullableUpdateDeployRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeployRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


