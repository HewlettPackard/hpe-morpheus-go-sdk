/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateUserSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserSettingsRequest{}

// UpdateUserSettingsRequest struct for UpdateUserSettingsRequest
type UpdateUserSettingsRequest struct {
	User                 *UpdateUserSettingsRequestUser `json:"user,omitempty"`
	AdditionalProperties map[string]interface{}         `json:",remain"`
}

type _UpdateUserSettingsRequest UpdateUserSettingsRequest

// NewUpdateUserSettingsRequest instantiates a new UpdateUserSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserSettingsRequest() *UpdateUserSettingsRequest {
	this := UpdateUserSettingsRequest{}
	return &this
}

// NewUpdateUserSettingsRequestWithDefaults instantiates a new UpdateUserSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserSettingsRequestWithDefaults() *UpdateUserSettingsRequest {
	this := UpdateUserSettingsRequest{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UpdateUserSettingsRequest) GetUser() UpdateUserSettingsRequestUser {
	if o == nil || IsNil(o.User) {
		var ret UpdateUserSettingsRequestUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserSettingsRequest) GetUserOk() (*UpdateUserSettingsRequestUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *UpdateUserSettingsRequest) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UpdateUserSettingsRequestUser and assigns it to the User field.
func (o *UpdateUserSettingsRequest) SetUser(v UpdateUserSettingsRequestUser) {
	o.User = &v
}

func (o UpdateUserSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateUserSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
