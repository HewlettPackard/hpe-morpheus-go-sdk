/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the OptionTypeList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionTypeList{}

// OptionTypeList struct for OptionTypeList
type OptionTypeList struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Type *string `json:"type,omitempty"`
	SourceUrl *string `json:"sourceUrl,omitempty"`
	SourceMethod *string `json:"sourceMethod,omitempty"`
	ApiType *string `json:"apiType,omitempty"`
	IgnoreSSLErrors *bool `json:"ignoreSSLErrors,omitempty"`
	RealTime *bool `json:"realTime,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Config *ListOptionLists200ResponseAllOfOptionTypesInnerConfig `json:"config,omitempty"`
	Credential *ListClouds200ResponseAllOfZonesInnerCredentialAnyOf `json:"credential,omitempty"`
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	ServicePassword *string `json:"servicePassword,omitempty"`
	InitialDataset *string `json:"initialDataset,omitempty"`
	TranslationScript *string `json:"translationScript,omitempty"`
	RequestScript *string `json:"requestScript,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
}

// NewOptionTypeList instantiates a new OptionTypeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionTypeList() *OptionTypeList {
	this := OptionTypeList{}
	return &this
}

// NewOptionTypeListWithDefaults instantiates a new OptionTypeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionTypeListWithDefaults() *OptionTypeList {
	this := OptionTypeList{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionTypeList) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OptionTypeList) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OptionTypeList) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OptionTypeList) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OptionTypeList) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OptionTypeList) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *OptionTypeList) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *OptionTypeList) SetLabels(v []string) {
	o.Labels = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OptionTypeList) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OptionTypeList) SetType(v string) {
	o.Type = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *OptionTypeList) GetSourceUrl() string {
	if o == nil || IsNil(o.SourceUrl) {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetSourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUrl) {
		return nil, false
	}
	return o.SourceUrl, true
}

// IsSetSourceUrl returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetSourceUrl() bool {
	if o != nil && !IsNil(o.SourceUrl) {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *OptionTypeList) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetSourceMethod returns the SourceMethod field value if set, zero value otherwise.
func (o *OptionTypeList) GetSourceMethod() string {
	if o == nil || IsNil(o.SourceMethod) {
		var ret string
		return ret
	}
	return *o.SourceMethod
}

// GetSourceMethodOk returns a tuple with the SourceMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetSourceMethodOk() (*string, bool) {
	if o == nil || IsNil(o.SourceMethod) {
		return nil, false
	}
	return o.SourceMethod, true
}

// IsSetSourceMethod returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetSourceMethod() bool {
	if o != nil && !IsNil(o.SourceMethod) {
		return true
	}

	return false
}

// SetSourceMethod gets a reference to the given string and assigns it to the SourceMethod field.
func (o *OptionTypeList) SetSourceMethod(v string) {
	o.SourceMethod = &v
}

// GetApiType returns the ApiType field value if set, zero value otherwise.
func (o *OptionTypeList) GetApiType() string {
	if o == nil || IsNil(o.ApiType) {
		var ret string
		return ret
	}
	return *o.ApiType
}

// GetApiTypeOk returns a tuple with the ApiType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetApiTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApiType) {
		return nil, false
	}
	return o.ApiType, true
}

// IsSetApiType returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetApiType() bool {
	if o != nil && !IsNil(o.ApiType) {
		return true
	}

	return false
}

// SetApiType gets a reference to the given string and assigns it to the ApiType field.
func (o *OptionTypeList) SetApiType(v string) {
	o.ApiType = &v
}

// GetIgnoreSSLErrors returns the IgnoreSSLErrors field value if set, zero value otherwise.
func (o *OptionTypeList) GetIgnoreSSLErrors() bool {
	if o == nil || IsNil(o.IgnoreSSLErrors) {
		var ret bool
		return ret
	}
	return *o.IgnoreSSLErrors
}

// GetIgnoreSSLErrorsOk returns a tuple with the IgnoreSSLErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetIgnoreSSLErrorsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreSSLErrors) {
		return nil, false
	}
	return o.IgnoreSSLErrors, true
}

// IsSetIgnoreSSLErrors returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetIgnoreSSLErrors() bool {
	if o != nil && !IsNil(o.IgnoreSSLErrors) {
		return true
	}

	return false
}

// SetIgnoreSSLErrors gets a reference to the given bool and assigns it to the IgnoreSSLErrors field.
func (o *OptionTypeList) SetIgnoreSSLErrors(v bool) {
	o.IgnoreSSLErrors = &v
}

// GetRealTime returns the RealTime field value if set, zero value otherwise.
func (o *OptionTypeList) GetRealTime() bool {
	if o == nil || IsNil(o.RealTime) {
		var ret bool
		return ret
	}
	return *o.RealTime
}

// GetRealTimeOk returns a tuple with the RealTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetRealTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.RealTime) {
		return nil, false
	}
	return o.RealTime, true
}

// IsSetRealTime returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetRealTime() bool {
	if o != nil && !IsNil(o.RealTime) {
		return true
	}

	return false
}

// SetRealTime gets a reference to the given bool and assigns it to the RealTime field.
func (o *OptionTypeList) SetRealTime(v bool) {
	o.RealTime = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OptionTypeList) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OptionTypeList) SetVisibility(v string) {
	o.Visibility = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *OptionTypeList) GetConfig() ListOptionLists200ResponseAllOfOptionTypesInnerConfig {
	if o == nil || IsNil(o.Config) {
		var ret ListOptionLists200ResponseAllOfOptionTypesInnerConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetConfigOk() (*ListOptionLists200ResponseAllOfOptionTypesInnerConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ListOptionLists200ResponseAllOfOptionTypesInnerConfig and assigns it to the Config field.
func (o *OptionTypeList) SetConfig(v ListOptionLists200ResponseAllOfOptionTypesInnerConfig) {
	o.Config = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *OptionTypeList) GetCredential() ListClouds200ResponseAllOfZonesInnerCredentialAnyOf {
	if o == nil || IsNil(o.Credential) {
		var ret ListClouds200ResponseAllOfZonesInnerCredentialAnyOf
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetCredentialOk() (*ListClouds200ResponseAllOfZonesInnerCredentialAnyOf, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// IsSetCredential returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given ListClouds200ResponseAllOfZonesInnerCredentialAnyOf and assigns it to the Credential field.
func (o *OptionTypeList) SetCredential(v ListClouds200ResponseAllOfZonesInnerCredentialAnyOf) {
	o.Credential = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *OptionTypeList) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *OptionTypeList) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *OptionTypeList) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *OptionTypeList) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetInitialDataset returns the InitialDataset field value if set, zero value otherwise.
func (o *OptionTypeList) GetInitialDataset() string {
	if o == nil || IsNil(o.InitialDataset) {
		var ret string
		return ret
	}
	return *o.InitialDataset
}

// GetInitialDatasetOk returns a tuple with the InitialDataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetInitialDatasetOk() (*string, bool) {
	if o == nil || IsNil(o.InitialDataset) {
		return nil, false
	}
	return o.InitialDataset, true
}

// IsSetInitialDataset returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetInitialDataset() bool {
	if o != nil && !IsNil(o.InitialDataset) {
		return true
	}

	return false
}

// SetInitialDataset gets a reference to the given string and assigns it to the InitialDataset field.
func (o *OptionTypeList) SetInitialDataset(v string) {
	o.InitialDataset = &v
}

// GetTranslationScript returns the TranslationScript field value if set, zero value otherwise.
func (o *OptionTypeList) GetTranslationScript() string {
	if o == nil || IsNil(o.TranslationScript) {
		var ret string
		return ret
	}
	return *o.TranslationScript
}

// GetTranslationScriptOk returns a tuple with the TranslationScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetTranslationScriptOk() (*string, bool) {
	if o == nil || IsNil(o.TranslationScript) {
		return nil, false
	}
	return o.TranslationScript, true
}

// IsSetTranslationScript returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetTranslationScript() bool {
	if o != nil && !IsNil(o.TranslationScript) {
		return true
	}

	return false
}

// SetTranslationScript gets a reference to the given string and assigns it to the TranslationScript field.
func (o *OptionTypeList) SetTranslationScript(v string) {
	o.TranslationScript = &v
}

// GetRequestScript returns the RequestScript field value if set, zero value otherwise.
func (o *OptionTypeList) GetRequestScript() string {
	if o == nil || IsNil(o.RequestScript) {
		var ret string
		return ret
	}
	return *o.RequestScript
}

// GetRequestScriptOk returns a tuple with the RequestScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetRequestScriptOk() (*string, bool) {
	if o == nil || IsNil(o.RequestScript) {
		return nil, false
	}
	return o.RequestScript, true
}

// IsSetRequestScript returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetRequestScript() bool {
	if o != nil && !IsNil(o.RequestScript) {
		return true
	}

	return false
}

// SetRequestScript gets a reference to the given string and assigns it to the RequestScript field.
func (o *OptionTypeList) SetRequestScript(v string) {
	o.RequestScript = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *OptionTypeList) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeList) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *OptionTypeList) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *OptionTypeList) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

func (o OptionTypeList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionTypeList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SourceUrl) {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	if !IsNil(o.SourceMethod) {
		toSerialize["sourceMethod"] = o.SourceMethod
	}
	if !IsNil(o.ApiType) {
		toSerialize["apiType"] = o.ApiType
	}
	if !IsNil(o.IgnoreSSLErrors) {
		toSerialize["ignoreSSLErrors"] = o.IgnoreSSLErrors
	}
	if !IsNil(o.RealTime) {
		toSerialize["realTime"] = o.RealTime
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.InitialDataset) {
		toSerialize["initialDataset"] = o.InitialDataset
	}
	if !IsNil(o.TranslationScript) {
		toSerialize["translationScript"] = o.TranslationScript
	}
	if !IsNil(o.RequestScript) {
		toSerialize["requestScript"] = o.RequestScript
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return toSerialize, nil
}

type NullableOptionTypeList struct {
	value *OptionTypeList
	isSet bool
}

func (v NullableOptionTypeList) Get() *OptionTypeList {
	return v.value
}

func (v *NullableOptionTypeList) Set(val *OptionTypeList) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionTypeList) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionTypeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionTypeList(val *OptionTypeList) *NullableOptionTypeList {
	return &NullableOptionTypeList{value: val, isSet: true}
}

func (v NullableOptionTypeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionTypeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


