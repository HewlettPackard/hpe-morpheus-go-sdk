/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogItemTypeInstanceScribe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogItemTypeInstanceScribe{}

// CatalogItemTypeInstanceScribe struct for CatalogItemTypeInstanceScribe
type CatalogItemTypeInstanceScribe struct {
	Group AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup `json:"group"`
	Cloud AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud `json:"cloud"`
	// The type of instance by code we want to fetch.
	Type string `json:"type"`
	// Name of the instance to be created.
	Name string `json:"name"`
	Config AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig `json:"config"`
	// The (optional) volumes parameter is for LV configuration, can create additional LVs at provision It should be passed as an array of
	Volumes []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner `json:"volumes"`
	// Hostname of the instance to be created.  Can be the same as the instance name.
	HostName *string `json:"hostName,omitempty"`
	// Environment code
	Environment *string `json:"environment,omitempty"`
	Layout AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout `json:"layout"`
	Plan AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan `json:"plan"`
	// Version of the layout to create.
	Version *string `json:"version,omitempty"`
	// Environment Variables, an array of objects that have name and value.
	Evars []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"evars,omitempty"`
	ServicePlanOptions *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions `json:"servicePlanOptions,omitempty"`
	// Key for security group configuration. It should be passed as an array of objects containing the id of the security group to assign the instance to.
	SecurityGroups []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner `json:"securityGroups,omitempty"`
	// The networkInterfaces parameter is for network configuration.  The Options API `/api/options/zoneNetworkOptions?zoneId=5&provisionTypeId=10` can be used to see which options are available. 
	NetworkInterfaces []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner `json:"networkInterfaces,omitempty"`
	// Array of strings (keywords).
	Labels []string `json:"labels,omitempty"`
	// Metadata tags, Array of objects having a name and value.
	Tags []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"tags,omitempty"`
	// Alias for `tags`.
	Metadata []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"metadata,omitempty"`
	// The ports parameter is for port configuration.  The layout may have default ports, which are defined in node types, that are always configured. This parameter will be for additional custom ports to be opened. 
	Ports []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner `json:"ports,omitempty"`
	// The Workflow ID to execute.
	TaskSetId *int64 `json:"taskSetId,omitempty"`
	// The Workflow Name to execute.
	TaskSetName *string `json:"taskSetName,omitempty"`
}

type _CatalogItemTypeInstanceScribe CatalogItemTypeInstanceScribe

// NewCatalogItemTypeInstanceScribe instantiates a new CatalogItemTypeInstanceScribe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogItemTypeInstanceScribe(group AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup, cloud AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud, type_ string, name string, config AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig, volumes []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner, layout AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout, plan AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan) *CatalogItemTypeInstanceScribe {
	this := CatalogItemTypeInstanceScribe{}
	this.Group = group
	this.Cloud = cloud
	this.Type = type_
	this.Name = name
	this.Config = config
	this.Volumes = volumes
	this.Layout = layout
	this.Plan = plan
	return &this
}

// NewCatalogItemTypeInstanceScribeWithDefaults instantiates a new CatalogItemTypeInstanceScribe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogItemTypeInstanceScribeWithDefaults() *CatalogItemTypeInstanceScribe {
	this := CatalogItemTypeInstanceScribe{}
	return &this
}

// GetGroup returns the Group field value
func (o *CatalogItemTypeInstanceScribe) GetGroup() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetGroupOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *CatalogItemTypeInstanceScribe) SetGroup(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigGroup) {
	o.Group = v
}

// GetCloud returns the Cloud field value
func (o *CatalogItemTypeInstanceScribe) GetCloud() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetCloudOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *CatalogItemTypeInstanceScribe) SetCloud(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigCloud) {
	o.Cloud = v
}

// GetType returns the Type field value
func (o *CatalogItemTypeInstanceScribe) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CatalogItemTypeInstanceScribe) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *CatalogItemTypeInstanceScribe) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogItemTypeInstanceScribe) SetName(v string) {
	o.Name = v
}

// GetConfig returns the Config field value
func (o *CatalogItemTypeInstanceScribe) GetConfig() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetConfigOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *CatalogItemTypeInstanceScribe) SetConfig(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig) {
	o.Config = v
}

// GetVolumes returns the Volumes field value
func (o *CatalogItemTypeInstanceScribe) GetVolumes() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner {
	if o == nil {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner
		return ret
	}

	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetVolumesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Volumes, true
}

// SetVolumes sets field value
func (o *CatalogItemTypeInstanceScribe) SetVolumes(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner) {
	o.Volumes = v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// IsSetHostName returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *CatalogItemTypeInstanceScribe) SetHostName(v string) {
	o.HostName = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// IsSetEnvironment returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *CatalogItemTypeInstanceScribe) SetEnvironment(v string) {
	o.Environment = &v
}

// GetLayout returns the Layout field value
func (o *CatalogItemTypeInstanceScribe) GetLayout() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetLayoutOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *CatalogItemTypeInstanceScribe) SetLayout(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigLayout) {
	o.Layout = v
}

// GetPlan returns the Plan field value
func (o *CatalogItemTypeInstanceScribe) GetPlan() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetPlanOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *CatalogItemTypeInstanceScribe) SetPlan(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPlan) {
	o.Plan = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// IsSetVersion returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CatalogItemTypeInstanceScribe) SetVersion(v string) {
	o.Version = &v
}

// GetEvars returns the Evars field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetEvars() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Evars) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Evars
}

// GetEvarsOk returns a tuple with the Evars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetEvarsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Evars) {
		return nil, false
	}
	return o.Evars, true
}

// IsSetEvars returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetEvars() bool {
	if o != nil && !IsNil(o.Evars) {
		return true
	}

	return false
}

// SetEvars gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Evars field.
func (o *CatalogItemTypeInstanceScribe) SetEvars(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Evars = v
}

// GetServicePlanOptions returns the ServicePlanOptions field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetServicePlanOptions() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions {
	if o == nil || IsNil(o.ServicePlanOptions) {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions
		return ret
	}
	return *o.ServicePlanOptions
}

// GetServicePlanOptionsOk returns a tuple with the ServicePlanOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetServicePlanOptionsOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions, bool) {
	if o == nil || IsNil(o.ServicePlanOptions) {
		return nil, false
	}
	return o.ServicePlanOptions, true
}

// IsSetServicePlanOptions returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetServicePlanOptions() bool {
	if o != nil && !IsNil(o.ServicePlanOptions) {
		return true
	}

	return false
}

// SetServicePlanOptions gets a reference to the given AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions and assigns it to the ServicePlanOptions field.
func (o *CatalogItemTypeInstanceScribe) SetServicePlanOptions(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions) {
	o.ServicePlanOptions = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetSecurityGroups() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner {
	if o == nil || IsNil(o.SecurityGroups) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetSecurityGroupsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// IsSetSecurityGroups returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner and assigns it to the SecurityGroups field.
func (o *CatalogItemTypeInstanceScribe) SetSecurityGroups(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigSecurityGroupsInner) {
	o.SecurityGroups = v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetNetworkInterfaces() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetNetworkInterfacesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// IsSetNetworkInterfaces returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner and assigns it to the NetworkInterfaces field.
func (o *CatalogItemTypeInstanceScribe) SetNetworkInterfaces(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner) {
	o.NetworkInterfaces = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *CatalogItemTypeInstanceScribe) SetLabels(v []string) {
	o.Labels = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetTags() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetTagsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Tags field.
func (o *CatalogItemTypeInstanceScribe) SetTags(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Tags = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetMetadata() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Metadata) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetMetadataOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// IsSetMetadata returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Metadata field.
func (o *CatalogItemTypeInstanceScribe) SetMetadata(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Metadata = v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetPorts() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner {
	if o == nil || IsNil(o.Ports) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetPortsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// IsSetPorts returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner and assigns it to the Ports field.
func (o *CatalogItemTypeInstanceScribe) SetPorts(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) {
	o.Ports = v
}

// GetTaskSetId returns the TaskSetId field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetTaskSetId() int64 {
	if o == nil || IsNil(o.TaskSetId) {
		var ret int64
		return ret
	}
	return *o.TaskSetId
}

// GetTaskSetIdOk returns a tuple with the TaskSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetTaskSetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TaskSetId) {
		return nil, false
	}
	return o.TaskSetId, true
}

// IsSetTaskSetId returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetTaskSetId() bool {
	if o != nil && !IsNil(o.TaskSetId) {
		return true
	}

	return false
}

// SetTaskSetId gets a reference to the given int64 and assigns it to the TaskSetId field.
func (o *CatalogItemTypeInstanceScribe) SetTaskSetId(v int64) {
	o.TaskSetId = &v
}

// GetTaskSetName returns the TaskSetName field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribe) GetTaskSetName() string {
	if o == nil || IsNil(o.TaskSetName) {
		var ret string
		return ret
	}
	return *o.TaskSetName
}

// GetTaskSetNameOk returns a tuple with the TaskSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribe) GetTaskSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaskSetName) {
		return nil, false
	}
	return o.TaskSetName, true
}

// IsSetTaskSetName returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribe) IsSetTaskSetName() bool {
	if o != nil && !IsNil(o.TaskSetName) {
		return true
	}

	return false
}

// SetTaskSetName gets a reference to the given string and assigns it to the TaskSetName field.
func (o *CatalogItemTypeInstanceScribe) SetTaskSetName(v string) {
	o.TaskSetName = &v
}

func (o CatalogItemTypeInstanceScribe) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogItemTypeInstanceScribe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["group"] = o.Group
	toSerialize["cloud"] = o.Cloud
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["config"] = o.Config
	toSerialize["volumes"] = o.Volumes
	if !IsNil(o.HostName) {
		toSerialize["hostName"] = o.HostName
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	toSerialize["layout"] = o.Layout
	toSerialize["plan"] = o.Plan
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Evars) {
		toSerialize["evars"] = o.Evars
	}
	if !IsNil(o.ServicePlanOptions) {
		toSerialize["servicePlanOptions"] = o.ServicePlanOptions
	}
	if !IsNil(o.SecurityGroups) {
		toSerialize["securityGroups"] = o.SecurityGroups
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.TaskSetId) {
		toSerialize["taskSetId"] = o.TaskSetId
	}
	if !IsNil(o.TaskSetName) {
		toSerialize["taskSetName"] = o.TaskSetName
	}
	return toSerialize, nil
}

func (o *CatalogItemTypeInstanceScribe) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"group",
		"cloud",
		"type",
		"name",
		"config",
		"volumes",
		"layout",
		"plan",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogItemTypeInstanceScribe := _CatalogItemTypeInstanceScribe{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogItemTypeInstanceScribe)

	if err != nil {
		return err
	}

	*o = CatalogItemTypeInstanceScribe(varCatalogItemTypeInstanceScribe)

	return err
}

type NullableCatalogItemTypeInstanceScribe struct {
	value *CatalogItemTypeInstanceScribe
	isSet bool
}

func (v NullableCatalogItemTypeInstanceScribe) Get() *CatalogItemTypeInstanceScribe {
	return v.value
}

func (v *NullableCatalogItemTypeInstanceScribe) Set(val *CatalogItemTypeInstanceScribe) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogItemTypeInstanceScribe) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogItemTypeInstanceScribe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogItemTypeInstanceScribe(val *CatalogItemTypeInstanceScribe) *NullableCatalogItemTypeInstanceScribe {
	return &NullableCatalogItemTypeInstanceScribe{value: val, isSet: true}
}

func (v NullableCatalogItemTypeInstanceScribe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogItemTypeInstanceScribe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


