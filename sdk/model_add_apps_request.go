/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddAppsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAppsRequest{}

// AddAppsRequest struct for AddAppsRequest
type AddAppsRequest struct {
	TemplateId *int64 `json:"templateId,omitempty"`
	BlueprintId AddAppsRequestBlueprintId `json:"blueprintId"`
	// A unique name for the app
	Name string `json:"name"`
	// Description
	Description *string `json:"description,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	Group *AddAppsRequestGroup `json:"group,omitempty"`
	DefaultCloud *AddAppsRequestDefaultCloud `json:"defaultCloud,omitempty"`
	// Environment code (appContext)
	Environment *string `json:"environment,omitempty"`
	// Configuration of app elements
	Tiers map[string]interface{} `json:"tiers,omitempty"`
}

type _AddAppsRequest AddAppsRequest

// NewAddAppsRequest instantiates a new AddAppsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAppsRequest(blueprintId AddAppsRequestBlueprintId, name string) *AddAppsRequest {
	this := AddAppsRequest{}
	this.BlueprintId = blueprintId
	this.Name = name
	return &this
}

// NewAddAppsRequestWithDefaults instantiates a new AddAppsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAppsRequestWithDefaults() *AddAppsRequest {
	this := AddAppsRequest{}
	return &this
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *AddAppsRequest) GetTemplateId() int64 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int64
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetTemplateIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// IsSetTemplateId returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int64 and assigns it to the TemplateId field.
func (o *AddAppsRequest) SetTemplateId(v int64) {
	o.TemplateId = &v
}

// GetBlueprintId returns the BlueprintId field value
func (o *AddAppsRequest) GetBlueprintId() AddAppsRequestBlueprintId {
	if o == nil {
		var ret AddAppsRequestBlueprintId
		return ret
	}

	return o.BlueprintId
}

// GetBlueprintIdOk returns a tuple with the BlueprintId field value
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetBlueprintIdOk() (*AddAppsRequestBlueprintId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlueprintId, true
}

// SetBlueprintId sets field value
func (o *AddAppsRequest) SetBlueprintId(v AddAppsRequestBlueprintId) {
	o.BlueprintId = v
}

// GetName returns the Name field value
func (o *AddAppsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddAppsRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddAppsRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddAppsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AddAppsRequest) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *AddAppsRequest) SetLabels(v []string) {
	o.Labels = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *AddAppsRequest) GetGroup() AddAppsRequestGroup {
	if o == nil || IsNil(o.Group) {
		var ret AddAppsRequestGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetGroupOk() (*AddAppsRequestGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// IsSetGroup returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given AddAppsRequestGroup and assigns it to the Group field.
func (o *AddAppsRequest) SetGroup(v AddAppsRequestGroup) {
	o.Group = &v
}

// GetDefaultCloud returns the DefaultCloud field value if set, zero value otherwise.
func (o *AddAppsRequest) GetDefaultCloud() AddAppsRequestDefaultCloud {
	if o == nil || IsNil(o.DefaultCloud) {
		var ret AddAppsRequestDefaultCloud
		return ret
	}
	return *o.DefaultCloud
}

// GetDefaultCloudOk returns a tuple with the DefaultCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetDefaultCloudOk() (*AddAppsRequestDefaultCloud, bool) {
	if o == nil || IsNil(o.DefaultCloud) {
		return nil, false
	}
	return o.DefaultCloud, true
}

// IsSetDefaultCloud returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetDefaultCloud() bool {
	if o != nil && !IsNil(o.DefaultCloud) {
		return true
	}

	return false
}

// SetDefaultCloud gets a reference to the given AddAppsRequestDefaultCloud and assigns it to the DefaultCloud field.
func (o *AddAppsRequest) SetDefaultCloud(v AddAppsRequestDefaultCloud) {
	o.DefaultCloud = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AddAppsRequest) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// IsSetEnvironment returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AddAppsRequest) SetEnvironment(v string) {
	o.Environment = &v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *AddAppsRequest) GetTiers() map[string]interface{} {
	if o == nil || IsNil(o.Tiers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAppsRequest) GetTiersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tiers) {
		return map[string]interface{}{}, false
	}
	return o.Tiers, true
}

// IsSetTiers returns a boolean if a field has been set.
func (o *AddAppsRequest) IsSetTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given map[string]interface{} and assigns it to the Tiers field.
func (o *AddAppsRequest) SetTiers(v map[string]interface{}) {
	o.Tiers = v
}

func (o AddAppsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAppsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	toSerialize["blueprintId"] = o.BlueprintId
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.DefaultCloud) {
		toSerialize["defaultCloud"] = o.DefaultCloud
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	return toSerialize, nil
}

func (o *AddAppsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"blueprintId",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddAppsRequest := _AddAppsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddAppsRequest)

	if err != nil {
		return err
	}

	*o = AddAppsRequest(varAddAppsRequest)

	return err
}

type NullableAddAppsRequest struct {
	value *AddAppsRequest
	isSet bool
}

func (v NullableAddAppsRequest) Get() *AddAppsRequest {
	return v.value
}

func (v *NullableAddAppsRequest) Set(val *AddAppsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAppsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAppsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAppsRequest(val *AddAppsRequest) *NullableAddAppsRequest {
	return &NullableAddAppsRequest{value: val, isSet: true}
}

func (v NullableAddAppsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAppsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


