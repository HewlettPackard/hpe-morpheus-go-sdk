/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddClusterRequestCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClusterRequestCluster{}

// AddClusterRequestCluster struct for AddClusterRequestCluster
type AddClusterRequestCluster struct {
	Type AddClusterRequestClusterType `json:"type"`
	// Name of the cluster to be created
	Name string `json:"name"`
	// Description of the cluster to be created
	Description *string `json:"description,omitempty"`
	// Array of strings (keywords). This will override labels passed under the `server` object.
	Labels []string `json:"labels,omitempty"`
	Group AddClusterRequestClusterGroup `json:"group"`
	Cloud AddClusterRequestClusterCloud `json:"cloud"`
	Layout AddClusterRequestClusterLayout `json:"layout"`
	Server AddClusterRequestClusterServer `json:"server"`
	// Automatically Power on VMs
	AutoRecoverPowerState *bool `json:"autoRecoverPowerState,omitempty"`
	// Optional Workflow Id desired to be run
	TaskSetId *int64 `json:"taskSetId,omitempty"`
}

type _AddClusterRequestCluster AddClusterRequestCluster

// NewAddClusterRequestCluster instantiates a new AddClusterRequestCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClusterRequestCluster(type_ AddClusterRequestClusterType, name string, group AddClusterRequestClusterGroup, cloud AddClusterRequestClusterCloud, layout AddClusterRequestClusterLayout, server AddClusterRequestClusterServer) *AddClusterRequestCluster {
	this := AddClusterRequestCluster{}
	this.Type = type_
	this.Name = name
	this.Group = group
	this.Cloud = cloud
	this.Layout = layout
	this.Server = server
	var autoRecoverPowerState bool = false
	this.AutoRecoverPowerState = &autoRecoverPowerState
	return &this
}

// NewAddClusterRequestClusterWithDefaults instantiates a new AddClusterRequestCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClusterRequestClusterWithDefaults() *AddClusterRequestCluster {
	this := AddClusterRequestCluster{}
	var autoRecoverPowerState bool = false
	this.AutoRecoverPowerState = &autoRecoverPowerState
	return &this
}

// GetType returns the Type field value
func (o *AddClusterRequestCluster) GetType() AddClusterRequestClusterType {
	if o == nil {
		var ret AddClusterRequestClusterType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetTypeOk() (*AddClusterRequestClusterType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddClusterRequestCluster) SetType(v AddClusterRequestClusterType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *AddClusterRequestCluster) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddClusterRequestCluster) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddClusterRequestCluster) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddClusterRequestCluster) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddClusterRequestCluster) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AddClusterRequestCluster) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *AddClusterRequestCluster) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *AddClusterRequestCluster) SetLabels(v []string) {
	o.Labels = v
}

// GetGroup returns the Group field value
func (o *AddClusterRequestCluster) GetGroup() AddClusterRequestClusterGroup {
	if o == nil {
		var ret AddClusterRequestClusterGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetGroupOk() (*AddClusterRequestClusterGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *AddClusterRequestCluster) SetGroup(v AddClusterRequestClusterGroup) {
	o.Group = v
}

// GetCloud returns the Cloud field value
func (o *AddClusterRequestCluster) GetCloud() AddClusterRequestClusterCloud {
	if o == nil {
		var ret AddClusterRequestClusterCloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetCloudOk() (*AddClusterRequestClusterCloud, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *AddClusterRequestCluster) SetCloud(v AddClusterRequestClusterCloud) {
	o.Cloud = v
}

// GetLayout returns the Layout field value
func (o *AddClusterRequestCluster) GetLayout() AddClusterRequestClusterLayout {
	if o == nil {
		var ret AddClusterRequestClusterLayout
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetLayoutOk() (*AddClusterRequestClusterLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *AddClusterRequestCluster) SetLayout(v AddClusterRequestClusterLayout) {
	o.Layout = v
}

// GetServer returns the Server field value
func (o *AddClusterRequestCluster) GetServer() AddClusterRequestClusterServer {
	if o == nil {
		var ret AddClusterRequestClusterServer
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetServerOk() (*AddClusterRequestClusterServer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *AddClusterRequestCluster) SetServer(v AddClusterRequestClusterServer) {
	o.Server = v
}

// GetAutoRecoverPowerState returns the AutoRecoverPowerState field value if set, zero value otherwise.
func (o *AddClusterRequestCluster) GetAutoRecoverPowerState() bool {
	if o == nil || IsNil(o.AutoRecoverPowerState) {
		var ret bool
		return ret
	}
	return *o.AutoRecoverPowerState
}

// GetAutoRecoverPowerStateOk returns a tuple with the AutoRecoverPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetAutoRecoverPowerStateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRecoverPowerState) {
		return nil, false
	}
	return o.AutoRecoverPowerState, true
}

// IsSetAutoRecoverPowerState returns a boolean if a field has been set.
func (o *AddClusterRequestCluster) IsSetAutoRecoverPowerState() bool {
	if o != nil && !IsNil(o.AutoRecoverPowerState) {
		return true
	}

	return false
}

// SetAutoRecoverPowerState gets a reference to the given bool and assigns it to the AutoRecoverPowerState field.
func (o *AddClusterRequestCluster) SetAutoRecoverPowerState(v bool) {
	o.AutoRecoverPowerState = &v
}

// GetTaskSetId returns the TaskSetId field value if set, zero value otherwise.
func (o *AddClusterRequestCluster) GetTaskSetId() int64 {
	if o == nil || IsNil(o.TaskSetId) {
		var ret int64
		return ret
	}
	return *o.TaskSetId
}

// GetTaskSetIdOk returns a tuple with the TaskSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequestCluster) GetTaskSetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TaskSetId) {
		return nil, false
	}
	return o.TaskSetId, true
}

// IsSetTaskSetId returns a boolean if a field has been set.
func (o *AddClusterRequestCluster) IsSetTaskSetId() bool {
	if o != nil && !IsNil(o.TaskSetId) {
		return true
	}

	return false
}

// SetTaskSetId gets a reference to the given int64 and assigns it to the TaskSetId field.
func (o *AddClusterRequestCluster) SetTaskSetId(v int64) {
	o.TaskSetId = &v
}

func (o AddClusterRequestCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClusterRequestCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["group"] = o.Group
	toSerialize["cloud"] = o.Cloud
	toSerialize["layout"] = o.Layout
	toSerialize["server"] = o.Server
	if !IsNil(o.AutoRecoverPowerState) {
		toSerialize["autoRecoverPowerState"] = o.AutoRecoverPowerState
	}
	if !IsNil(o.TaskSetId) {
		toSerialize["taskSetId"] = o.TaskSetId
	}
	return toSerialize, nil
}

func (o *AddClusterRequestCluster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"name",
		"group",
		"cloud",
		"layout",
		"server",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddClusterRequestCluster := _AddClusterRequestCluster{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddClusterRequestCluster)

	if err != nil {
		return err
	}

	*o = AddClusterRequestCluster(varAddClusterRequestCluster)

	return err
}

type NullableAddClusterRequestCluster struct {
	value *AddClusterRequestCluster
	isSet bool
}

func (v NullableAddClusterRequestCluster) Get() *AddClusterRequestCluster {
	return v.value
}

func (v *NullableAddClusterRequestCluster) Set(val *AddClusterRequestCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClusterRequestCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClusterRequestCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClusterRequestCluster(val *AddClusterRequestCluster) *NullableAddClusterRequestCluster {
	return &NullableAddClusterRequestCluster{value: val, isSet: true}
}

func (v NullableAddClusterRequestCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClusterRequestCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


