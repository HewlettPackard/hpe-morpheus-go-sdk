/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddVirtualImage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVirtualImage200Response{}

// AddVirtualImage200Response struct for AddVirtualImage200Response
type AddVirtualImage200Response struct {
	VirtualImage *ListVirtualImages200ResponseAllOfVirtualImagesInner `json:"virtualImage,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddVirtualImage200Response instantiates a new AddVirtualImage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVirtualImage200Response() *AddVirtualImage200Response {
	this := AddVirtualImage200Response{}
	return &this
}

// NewAddVirtualImage200ResponseWithDefaults instantiates a new AddVirtualImage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVirtualImage200ResponseWithDefaults() *AddVirtualImage200Response {
	this := AddVirtualImage200Response{}
	return &this
}

// GetVirtualImage returns the VirtualImage field value if set, zero value otherwise.
func (o *AddVirtualImage200Response) GetVirtualImage() ListVirtualImages200ResponseAllOfVirtualImagesInner {
	if o == nil || IsNil(o.VirtualImage) {
		var ret ListVirtualImages200ResponseAllOfVirtualImagesInner
		return ret
	}
	return *o.VirtualImage
}

// GetVirtualImageOk returns a tuple with the VirtualImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVirtualImage200Response) GetVirtualImageOk() (*ListVirtualImages200ResponseAllOfVirtualImagesInner, bool) {
	if o == nil || IsNil(o.VirtualImage) {
		return nil, false
	}
	return o.VirtualImage, true
}

// IsSetVirtualImage returns a boolean if a field has been set.
func (o *AddVirtualImage200Response) IsSetVirtualImage() bool {
	if o != nil && !IsNil(o.VirtualImage) {
		return true
	}

	return false
}

// SetVirtualImage gets a reference to the given ListVirtualImages200ResponseAllOfVirtualImagesInner and assigns it to the VirtualImage field.
func (o *AddVirtualImage200Response) SetVirtualImage(v ListVirtualImages200ResponseAllOfVirtualImagesInner) {
	o.VirtualImage = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddVirtualImage200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVirtualImage200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddVirtualImage200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddVirtualImage200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddVirtualImage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVirtualImage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VirtualImage) {
		toSerialize["virtualImage"] = o.VirtualImage
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddVirtualImage200Response struct {
	value *AddVirtualImage200Response
	isSet bool
}

func (v NullableAddVirtualImage200Response) Get() *AddVirtualImage200Response {
	return v.value
}

func (v *NullableAddVirtualImage200Response) Set(val *AddVirtualImage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVirtualImage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVirtualImage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVirtualImage200Response(val *AddVirtualImage200Response) *NullableAddVirtualImage200Response {
	return &NullableAddVirtualImage200Response{value: val, isSet: true}
}

func (v NullableAddVirtualImage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVirtualImage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


