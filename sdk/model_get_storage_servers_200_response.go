/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetStorageServers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStorageServers200Response{}

// GetStorageServers200Response struct for GetStorageServers200Response
type GetStorageServers200Response struct {
	StorageServer *ListStorageServers200ResponseAllOfStorageServersInner `json:"storageServer,omitempty"`
}

// NewGetStorageServers200Response instantiates a new GetStorageServers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStorageServers200Response() *GetStorageServers200Response {
	this := GetStorageServers200Response{}
	return &this
}

// NewGetStorageServers200ResponseWithDefaults instantiates a new GetStorageServers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStorageServers200ResponseWithDefaults() *GetStorageServers200Response {
	this := GetStorageServers200Response{}
	return &this
}

// GetStorageServer returns the StorageServer field value if set, zero value otherwise.
func (o *GetStorageServers200Response) GetStorageServer() ListStorageServers200ResponseAllOfStorageServersInner {
	if o == nil || IsNil(o.StorageServer) {
		var ret ListStorageServers200ResponseAllOfStorageServersInner
		return ret
	}
	return *o.StorageServer
}

// GetStorageServerOk returns a tuple with the StorageServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorageServers200Response) GetStorageServerOk() (*ListStorageServers200ResponseAllOfStorageServersInner, bool) {
	if o == nil || IsNil(o.StorageServer) {
		return nil, false
	}
	return o.StorageServer, true
}

// IsSetStorageServer returns a boolean if a field has been set.
func (o *GetStorageServers200Response) IsSetStorageServer() bool {
	if o != nil && !IsNil(o.StorageServer) {
		return true
	}

	return false
}

// SetStorageServer gets a reference to the given ListStorageServers200ResponseAllOfStorageServersInner and assigns it to the StorageServer field.
func (o *GetStorageServers200Response) SetStorageServer(v ListStorageServers200ResponseAllOfStorageServersInner) {
	o.StorageServer = &v
}

func (o GetStorageServers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStorageServers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageServer) {
		toSerialize["storageServer"] = o.StorageServer
	}
	return toSerialize, nil
}

type NullableGetStorageServers200Response struct {
	value *GetStorageServers200Response
	isSet bool
}

func (v NullableGetStorageServers200Response) Get() *GetStorageServers200Response {
	return v.value
}

func (v *NullableGetStorageServers200Response) Set(val *GetStorageServers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStorageServers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStorageServers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStorageServers200Response(val *GetStorageServers200Response) *NullableGetStorageServers200Response {
	return &NullableGetStorageServers200Response{value: val, isSet: true}
}

func (v NullableGetStorageServers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStorageServers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


