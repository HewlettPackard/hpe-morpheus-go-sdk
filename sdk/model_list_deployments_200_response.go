/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListDeployments200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDeployments200Response{}

// ListDeployments200Response struct for ListDeployments200Response
type ListDeployments200Response struct {
	Deployments []ListDeployments200ResponseAllOfDeploymentsInner `json:"deployments,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListDeployments200Response instantiates a new ListDeployments200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeployments200Response() *ListDeployments200Response {
	this := ListDeployments200Response{}
	return &this
}

// NewListDeployments200ResponseWithDefaults instantiates a new ListDeployments200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeployments200ResponseWithDefaults() *ListDeployments200Response {
	this := ListDeployments200Response{}
	return &this
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *ListDeployments200Response) GetDeployments() []ListDeployments200ResponseAllOfDeploymentsInner {
	if o == nil || IsNil(o.Deployments) {
		var ret []ListDeployments200ResponseAllOfDeploymentsInner
		return ret
	}
	return o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeployments200Response) GetDeploymentsOk() ([]ListDeployments200ResponseAllOfDeploymentsInner, bool) {
	if o == nil || IsNil(o.Deployments) {
		return nil, false
	}
	return o.Deployments, true
}

// IsSetDeployments returns a boolean if a field has been set.
func (o *ListDeployments200Response) IsSetDeployments() bool {
	if o != nil && !IsNil(o.Deployments) {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []ListDeployments200ResponseAllOfDeploymentsInner and assigns it to the Deployments field.
func (o *ListDeployments200Response) SetDeployments(v []ListDeployments200ResponseAllOfDeploymentsInner) {
	o.Deployments = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListDeployments200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeployments200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListDeployments200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListDeployments200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListDeployments200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDeployments200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deployments) {
		toSerialize["deployments"] = o.Deployments
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListDeployments200Response struct {
	value *ListDeployments200Response
	isSet bool
}

func (v NullableListDeployments200Response) Get() *ListDeployments200Response {
	return v.value
}

func (v *NullableListDeployments200Response) Set(val *ListDeployments200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeployments200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeployments200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeployments200Response(val *ListDeployments200Response) *NullableListDeployments200Response {
	return &NullableListDeployments200Response{value: val, isSet: true}
}

func (v NullableListDeployments200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeployments200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


