/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddUserTenantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserTenantRequest{}

// AddUserTenantRequest struct for AddUserTenantRequest
type AddUserTenantRequest struct {
	User                 AddUserTenantRequestUser `json:"user"`
	AdditionalProperties map[string]interface{}   `json:",remain"`
}

type _AddUserTenantRequest AddUserTenantRequest

// NewAddUserTenantRequest instantiates a new AddUserTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserTenantRequest(user AddUserTenantRequestUser) *AddUserTenantRequest {
	this := AddUserTenantRequest{}
	this.User = user
	return &this
}

// NewAddUserTenantRequestWithDefaults instantiates a new AddUserTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserTenantRequestWithDefaults() *AddUserTenantRequest {
	this := AddUserTenantRequest{}
	return &this
}

// GetUser returns the User field value
func (o *AddUserTenantRequest) GetUser() AddUserTenantRequestUser {
	if o == nil {
		var ret AddUserTenantRequestUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *AddUserTenantRequest) GetUserOk() (*AddUserTenantRequestUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *AddUserTenantRequest) SetUser(v AddUserTenantRequestUser) {
	o.User = v
}

func (o AddUserTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserTenantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddUserTenantRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
