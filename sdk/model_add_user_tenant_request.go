/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddUserTenantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserTenantRequest{}

// AddUserTenantRequest struct for AddUserTenantRequest
type AddUserTenantRequest struct {
	User AddUserTenantRequestUser `json:"user"`
}

type _AddUserTenantRequest AddUserTenantRequest

// NewAddUserTenantRequest instantiates a new AddUserTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserTenantRequest(user AddUserTenantRequestUser) *AddUserTenantRequest {
	this := AddUserTenantRequest{}
	this.User = user
	return &this
}

// NewAddUserTenantRequestWithDefaults instantiates a new AddUserTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserTenantRequestWithDefaults() *AddUserTenantRequest {
	this := AddUserTenantRequest{}
	return &this
}

// GetUser returns the User field value
func (o *AddUserTenantRequest) GetUser() AddUserTenantRequestUser {
	if o == nil {
		var ret AddUserTenantRequestUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *AddUserTenantRequest) GetUserOk() (*AddUserTenantRequestUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *AddUserTenantRequest) SetUser(v AddUserTenantRequestUser) {
	o.User = v
}

func (o AddUserTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserTenantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *AddUserTenantRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddUserTenantRequest := _AddUserTenantRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddUserTenantRequest)

	if err != nil {
		return err
	}

	*o = AddUserTenantRequest(varAddUserTenantRequest)

	return err
}

type NullableAddUserTenantRequest struct {
	value *AddUserTenantRequest
	isSet bool
}

func (v NullableAddUserTenantRequest) Get() *AddUserTenantRequest {
	return v.value
}

func (v *NullableAddUserTenantRequest) Set(val *AddUserTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserTenantRequest(val *AddUserTenantRequest) *NullableAddUserTenantRequest {
	return &NullableAddUserTenantRequest{value: val, isSet: true}
}

func (v NullableAddUserTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


