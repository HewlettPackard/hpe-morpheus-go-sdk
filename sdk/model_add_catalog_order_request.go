/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddCatalogOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCatalogOrderRequest{}

// AddCatalogOrderRequest struct for AddCatalogOrderRequest
type AddCatalogOrderRequest struct {
	Order *AddCatalogOrderRequestOrder `json:"order,omitempty"`
}

// NewAddCatalogOrderRequest instantiates a new AddCatalogOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCatalogOrderRequest() *AddCatalogOrderRequest {
	this := AddCatalogOrderRequest{}
	return &this
}

// NewAddCatalogOrderRequestWithDefaults instantiates a new AddCatalogOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCatalogOrderRequestWithDefaults() *AddCatalogOrderRequest {
	this := AddCatalogOrderRequest{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *AddCatalogOrderRequest) GetOrder() AddCatalogOrderRequestOrder {
	if o == nil || IsNil(o.Order) {
		var ret AddCatalogOrderRequestOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogOrderRequest) GetOrderOk() (*AddCatalogOrderRequestOrder, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// IsSetOrder returns a boolean if a field has been set.
func (o *AddCatalogOrderRequest) IsSetOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AddCatalogOrderRequestOrder and assigns it to the Order field.
func (o *AddCatalogOrderRequest) SetOrder(v AddCatalogOrderRequestOrder) {
	o.Order = &v
}

func (o AddCatalogOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCatalogOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableAddCatalogOrderRequest struct {
	value *AddCatalogOrderRequest
	isSet bool
}

func (v NullableAddCatalogOrderRequest) Get() *AddCatalogOrderRequest {
	return v.value
}

func (v *NullableAddCatalogOrderRequest) Set(val *AddCatalogOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCatalogOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCatalogOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCatalogOrderRequest(val *AddCatalogOrderRequest) *NullableAddCatalogOrderRequest {
	return &NullableAddCatalogOrderRequest{value: val, isSet: true}
}

func (v NullableAddCatalogOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCatalogOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


