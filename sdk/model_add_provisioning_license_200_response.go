/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddProvisioningLicense200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProvisioningLicense200Response{}

// AddProvisioningLicense200Response struct for AddProvisioningLicense200Response
type AddProvisioningLicense200Response struct {
	Success *bool `json:"success,omitempty"`
	License *GetAlerts200ResponseAllOfChecksInnerAccount `json:"license,omitempty"`
}

// NewAddProvisioningLicense200Response instantiates a new AddProvisioningLicense200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProvisioningLicense200Response() *AddProvisioningLicense200Response {
	this := AddProvisioningLicense200Response{}
	return &this
}

// NewAddProvisioningLicense200ResponseWithDefaults instantiates a new AddProvisioningLicense200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProvisioningLicense200ResponseWithDefaults() *AddProvisioningLicense200Response {
	this := AddProvisioningLicense200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddProvisioningLicense200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicense200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddProvisioningLicense200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddProvisioningLicense200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *AddProvisioningLicense200Response) GetLicense() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.License) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProvisioningLicense200Response) GetLicenseOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// IsSetLicense returns a boolean if a field has been set.
func (o *AddProvisioningLicense200Response) IsSetLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the License field.
func (o *AddProvisioningLicense200Response) SetLicense(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.License = &v
}

func (o AddProvisioningLicense200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProvisioningLicense200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	return toSerialize, nil
}

type NullableAddProvisioningLicense200Response struct {
	value *AddProvisioningLicense200Response
	isSet bool
}

func (v NullableAddProvisioningLicense200Response) Get() *AddProvisioningLicense200Response {
	return v.value
}

func (v *NullableAddProvisioningLicense200Response) Set(val *AddProvisioningLicense200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProvisioningLicense200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProvisioningLicense200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProvisioningLicense200Response(val *AddProvisioningLicense200Response) *NullableAddProvisioningLicense200Response {
	return &NullableAddProvisioningLicense200Response{value: val, isSet: true}
}

func (v NullableAddProvisioningLicense200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProvisioningLicense200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


