/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTenantSubtenantGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTenantSubtenantGroups200Response{}

// ListTenantSubtenantGroups200Response struct for ListTenantSubtenantGroups200Response
type ListTenantSubtenantGroups200Response struct {
	Groups []ListTenantSubtenantGroups200ResponseAllOfGroupsInner `json:"groups,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListTenantSubtenantGroups200Response instantiates a new ListTenantSubtenantGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTenantSubtenantGroups200Response() *ListTenantSubtenantGroups200Response {
	this := ListTenantSubtenantGroups200Response{}
	return &this
}

// NewListTenantSubtenantGroups200ResponseWithDefaults instantiates a new ListTenantSubtenantGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTenantSubtenantGroups200ResponseWithDefaults() *ListTenantSubtenantGroups200Response {
	this := ListTenantSubtenantGroups200Response{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ListTenantSubtenantGroups200Response) GetGroups() []ListTenantSubtenantGroups200ResponseAllOfGroupsInner {
	if o == nil || IsNil(o.Groups) {
		var ret []ListTenantSubtenantGroups200ResponseAllOfGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantSubtenantGroups200Response) GetGroupsOk() ([]ListTenantSubtenantGroups200ResponseAllOfGroupsInner, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// IsSetGroups returns a boolean if a field has been set.
func (o *ListTenantSubtenantGroups200Response) IsSetGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []ListTenantSubtenantGroups200ResponseAllOfGroupsInner and assigns it to the Groups field.
func (o *ListTenantSubtenantGroups200Response) SetGroups(v []ListTenantSubtenantGroups200ResponseAllOfGroupsInner) {
	o.Groups = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListTenantSubtenantGroups200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantSubtenantGroups200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListTenantSubtenantGroups200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListTenantSubtenantGroups200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListTenantSubtenantGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTenantSubtenantGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListTenantSubtenantGroups200Response struct {
	value *ListTenantSubtenantGroups200Response
	isSet bool
}

func (v NullableListTenantSubtenantGroups200Response) Get() *ListTenantSubtenantGroups200Response {
	return v.value
}

func (v *NullableListTenantSubtenantGroups200Response) Set(val *ListTenantSubtenantGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListTenantSubtenantGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListTenantSubtenantGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTenantSubtenantGroups200Response(val *ListTenantSubtenantGroups200Response) *NullableListTenantSubtenantGroups200Response {
	return &NullableListTenantSubtenantGroups200Response{value: val, isSet: true}
}

func (v NullableListTenantSubtenantGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTenantSubtenantGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


