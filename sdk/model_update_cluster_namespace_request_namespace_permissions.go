/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateClusterNamespaceRequestNamespacePermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateClusterNamespaceRequestNamespacePermissions{}

// UpdateClusterNamespaceRequestNamespacePermissions struct for UpdateClusterNamespaceRequestNamespacePermissions
type UpdateClusterNamespaceRequestNamespacePermissions struct {
	ResourcePermissions *AddClusterNamespaceRequestNamespaceResourcePermissions `json:"resourcePermissions,omitempty"`
}

// NewUpdateClusterNamespaceRequestNamespacePermissions instantiates a new UpdateClusterNamespaceRequestNamespacePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterNamespaceRequestNamespacePermissions() *UpdateClusterNamespaceRequestNamespacePermissions {
	this := UpdateClusterNamespaceRequestNamespacePermissions{}
	return &this
}

// NewUpdateClusterNamespaceRequestNamespacePermissionsWithDefaults instantiates a new UpdateClusterNamespaceRequestNamespacePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterNamespaceRequestNamespacePermissionsWithDefaults() *UpdateClusterNamespaceRequestNamespacePermissions {
	this := UpdateClusterNamespaceRequestNamespacePermissions{}
	return &this
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *UpdateClusterNamespaceRequestNamespacePermissions) GetResourcePermissions() AddClusterNamespaceRequestNamespaceResourcePermissions {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret AddClusterNamespaceRequestNamespaceResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterNamespaceRequestNamespacePermissions) GetResourcePermissionsOk() (*AddClusterNamespaceRequestNamespaceResourcePermissions, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *UpdateClusterNamespaceRequestNamespacePermissions) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given AddClusterNamespaceRequestNamespaceResourcePermissions and assigns it to the ResourcePermissions field.
func (o *UpdateClusterNamespaceRequestNamespacePermissions) SetResourcePermissions(v AddClusterNamespaceRequestNamespaceResourcePermissions) {
	o.ResourcePermissions = &v
}

func (o UpdateClusterNamespaceRequestNamespacePermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateClusterNamespaceRequestNamespacePermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}
	return toSerialize, nil
}

type NullableUpdateClusterNamespaceRequestNamespacePermissions struct {
	value *UpdateClusterNamespaceRequestNamespacePermissions
	isSet bool
}

func (v NullableUpdateClusterNamespaceRequestNamespacePermissions) Get() *UpdateClusterNamespaceRequestNamespacePermissions {
	return v.value
}

func (v *NullableUpdateClusterNamespaceRequestNamespacePermissions) Set(val *UpdateClusterNamespaceRequestNamespacePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterNamespaceRequestNamespacePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterNamespaceRequestNamespacePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterNamespaceRequestNamespacePermissions(val *UpdateClusterNamespaceRequestNamespacePermissions) *NullableUpdateClusterNamespaceRequestNamespacePermissions {
	return &NullableUpdateClusterNamespaceRequestNamespacePermissions{value: val, isSet: true}
}

func (v NullableUpdateClusterNamespaceRequestNamespacePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterNamespaceRequestNamespacePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


