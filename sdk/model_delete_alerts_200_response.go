/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the DeleteAlerts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteAlerts200Response{}

// DeleteAlerts200Response struct for DeleteAlerts200Response
type DeleteAlerts200Response struct {
	Success *bool `json:"success,omitempty"`
}

// NewDeleteAlerts200Response instantiates a new DeleteAlerts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAlerts200Response() *DeleteAlerts200Response {
	this := DeleteAlerts200Response{}
	return &this
}

// NewDeleteAlerts200ResponseWithDefaults instantiates a new DeleteAlerts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAlerts200ResponseWithDefaults() *DeleteAlerts200Response {
	this := DeleteAlerts200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DeleteAlerts200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAlerts200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *DeleteAlerts200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *DeleteAlerts200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o DeleteAlerts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteAlerts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableDeleteAlerts200Response struct {
	value *DeleteAlerts200Response
	isSet bool
}

func (v NullableDeleteAlerts200Response) Get() *DeleteAlerts200Response {
	return v.value
}

func (v *NullableDeleteAlerts200Response) Set(val *DeleteAlerts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAlerts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAlerts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAlerts200Response(val *DeleteAlerts200Response) *NullableDeleteAlerts200Response {
	return &NullableDeleteAlerts200Response{value: val, isSet: true}
}

func (v NullableDeleteAlerts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAlerts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


