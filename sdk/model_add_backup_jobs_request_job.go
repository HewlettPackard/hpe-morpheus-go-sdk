/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddBackupJobsRequestJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBackupJobsRequestJob{}

// AddBackupJobsRequestJob struct for AddBackupJobsRequestJob
type AddBackupJobsRequestJob struct {
	// A name for the backup job
	Name string `json:"name"`
	// A code for the backup job
	Code *string `json:"code,omitempty"`
	// Execute Schedule ID to use for the backup job
	ScheduleId *int64 `json:"scheduleId,omitempty"`
	// Retention Count. By default the backup settings value will be used.
	RetentionCount *int64 `json:"retentionCount,omitempty"`
}

type _AddBackupJobsRequestJob AddBackupJobsRequestJob

// NewAddBackupJobsRequestJob instantiates a new AddBackupJobsRequestJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBackupJobsRequestJob(name string) *AddBackupJobsRequestJob {
	this := AddBackupJobsRequestJob{}
	this.Name = name
	return &this
}

// NewAddBackupJobsRequestJobWithDefaults instantiates a new AddBackupJobsRequestJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBackupJobsRequestJobWithDefaults() *AddBackupJobsRequestJob {
	this := AddBackupJobsRequestJob{}
	return &this
}

// GetName returns the Name field value
func (o *AddBackupJobsRequestJob) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddBackupJobsRequestJob) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddBackupJobsRequestJob) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AddBackupJobsRequestJob) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBackupJobsRequestJob) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *AddBackupJobsRequestJob) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AddBackupJobsRequestJob) SetCode(v string) {
	o.Code = &v
}

// GetScheduleId returns the ScheduleId field value if set, zero value otherwise.
func (o *AddBackupJobsRequestJob) GetScheduleId() int64 {
	if o == nil || IsNil(o.ScheduleId) {
		var ret int64
		return ret
	}
	return *o.ScheduleId
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBackupJobsRequestJob) GetScheduleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ScheduleId) {
		return nil, false
	}
	return o.ScheduleId, true
}

// IsSetScheduleId returns a boolean if a field has been set.
func (o *AddBackupJobsRequestJob) IsSetScheduleId() bool {
	if o != nil && !IsNil(o.ScheduleId) {
		return true
	}

	return false
}

// SetScheduleId gets a reference to the given int64 and assigns it to the ScheduleId field.
func (o *AddBackupJobsRequestJob) SetScheduleId(v int64) {
	o.ScheduleId = &v
}

// GetRetentionCount returns the RetentionCount field value if set, zero value otherwise.
func (o *AddBackupJobsRequestJob) GetRetentionCount() int64 {
	if o == nil || IsNil(o.RetentionCount) {
		var ret int64
		return ret
	}
	return *o.RetentionCount
}

// GetRetentionCountOk returns a tuple with the RetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBackupJobsRequestJob) GetRetentionCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RetentionCount) {
		return nil, false
	}
	return o.RetentionCount, true
}

// IsSetRetentionCount returns a boolean if a field has been set.
func (o *AddBackupJobsRequestJob) IsSetRetentionCount() bool {
	if o != nil && !IsNil(o.RetentionCount) {
		return true
	}

	return false
}

// SetRetentionCount gets a reference to the given int64 and assigns it to the RetentionCount field.
func (o *AddBackupJobsRequestJob) SetRetentionCount(v int64) {
	o.RetentionCount = &v
}

func (o AddBackupJobsRequestJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBackupJobsRequestJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.ScheduleId) {
		toSerialize["scheduleId"] = o.ScheduleId
	}
	if !IsNil(o.RetentionCount) {
		toSerialize["retentionCount"] = o.RetentionCount
	}
	return toSerialize, nil
}

func (o *AddBackupJobsRequestJob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBackupJobsRequestJob := _AddBackupJobsRequestJob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddBackupJobsRequestJob)

	if err != nil {
		return err
	}

	*o = AddBackupJobsRequestJob(varAddBackupJobsRequestJob)

	return err
}

type NullableAddBackupJobsRequestJob struct {
	value *AddBackupJobsRequestJob
	isSet bool
}

func (v NullableAddBackupJobsRequestJob) Get() *AddBackupJobsRequestJob {
	return v.value
}

func (v *NullableAddBackupJobsRequestJob) Set(val *AddBackupJobsRequestJob) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBackupJobsRequestJob) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBackupJobsRequestJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBackupJobsRequestJob(val *AddBackupJobsRequestJob) *NullableAddBackupJobsRequestJob {
	return &NullableAddBackupJobsRequestJob{value: val, isSet: true}
}

func (v NullableAddBackupJobsRequestJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBackupJobsRequestJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


