/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterServerCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterServerCreate{}

// ClusterServerCreate struct for ClusterServerCreate
type ClusterServerCreate struct {
	Config AddClusterRequestClusterServerConfig `json:"config"`
	ServerType *AddClusterRequestClusterServerServerType `json:"serverType,omitempty"`
	// Name to be used for host(s) created in the cluster
	Name string `json:"name"`
	Plan AddClusterRequestClusterServerPlan `json:"plan"`
	ServicePlanOptions *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions `json:"servicePlanOptions,omitempty"`
	// The (optional) volumes parameter is for LV configuration, can create additional LVs at provision It should be passed as an array of Objects
	Volumes []AddClusterRequestClusterServerVolumesInner `json:"volumes,omitempty"`
	// The networkInterfaces parameter is for network configuration.  The Options API /api/options/zoneNetworkOptions can be used to see which options are available.  It should be passed as an array of Objects with the following attributes 
	NetworkInterfaces []AddClusterRequestClusterServerNetworkInterfacesInner `json:"networkInterfaces,omitempty"`
	// Key for security group configuration.
	SecurityGroups []string `json:"securityGroups,omitempty"`
	// Visibility for server host
	Visibility *string `json:"visibility,omitempty"`
	UserGroup *AddClusterRequestClusterServerUserGroup `json:"userGroup,omitempty"`
	// Network domain
	NetworkDomain *string `json:"networkDomain,omitempty"`
	// Hostname for server host
	Hostname *string `json:"hostname,omitempty"`
	// Number of workers or hosts
	NodeCount *int64 `json:"nodeCount,omitempty"`
	// Metadata tags, Array of objects having a name and value.
	Tags []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"tags,omitempty"`
	// Array of strings (keywords). This will set labels on the server and also on the cluster as well by default.
	Labels []string `json:"labels,omitempty"`
	// Array of Host IPs and Names. This is used in conjunction with sshUsername and sshPassword/sshKeyPair to add existing hosts such as with HPE VM clusters.
	SshHosts []AddClusterRequestClusterServerSshHostsInner `json:"sshHosts,omitempty"`
	// SSH Username
	SshUsername *string `json:"sshUsername,omitempty"`
	// SSH Password
	SshPassword *string `json:"sshPassword,omitempty"`
	SshKeyPair *AddClusterRequestClusterServerSshKeyPair `json:"sshKeyPair,omitempty"`
}

type _ClusterServerCreate ClusterServerCreate

// NewClusterServerCreate instantiates a new ClusterServerCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterServerCreate(config AddClusterRequestClusterServerConfig, name string, plan AddClusterRequestClusterServerPlan) *ClusterServerCreate {
	this := ClusterServerCreate{}
	this.Config = config
	this.Name = name
	this.Plan = plan
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewClusterServerCreateWithDefaults instantiates a new ClusterServerCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterServerCreateWithDefaults() *ClusterServerCreate {
	this := ClusterServerCreate{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetConfig returns the Config field value
func (o *ClusterServerCreate) GetConfig() AddClusterRequestClusterServerConfig {
	if o == nil {
		var ret AddClusterRequestClusterServerConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetConfigOk() (*AddClusterRequestClusterServerConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *ClusterServerCreate) SetConfig(v AddClusterRequestClusterServerConfig) {
	o.Config = v
}

// GetServerType returns the ServerType field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetServerType() AddClusterRequestClusterServerServerType {
	if o == nil || IsNil(o.ServerType) {
		var ret AddClusterRequestClusterServerServerType
		return ret
	}
	return *o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetServerTypeOk() (*AddClusterRequestClusterServerServerType, bool) {
	if o == nil || IsNil(o.ServerType) {
		return nil, false
	}
	return o.ServerType, true
}

// IsSetServerType returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetServerType() bool {
	if o != nil && !IsNil(o.ServerType) {
		return true
	}

	return false
}

// SetServerType gets a reference to the given AddClusterRequestClusterServerServerType and assigns it to the ServerType field.
func (o *ClusterServerCreate) SetServerType(v AddClusterRequestClusterServerServerType) {
	o.ServerType = &v
}

// GetName returns the Name field value
func (o *ClusterServerCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterServerCreate) SetName(v string) {
	o.Name = v
}

// GetPlan returns the Plan field value
func (o *ClusterServerCreate) GetPlan() AddClusterRequestClusterServerPlan {
	if o == nil {
		var ret AddClusterRequestClusterServerPlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetPlanOk() (*AddClusterRequestClusterServerPlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *ClusterServerCreate) SetPlan(v AddClusterRequestClusterServerPlan) {
	o.Plan = v
}

// GetServicePlanOptions returns the ServicePlanOptions field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetServicePlanOptions() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions {
	if o == nil || IsNil(o.ServicePlanOptions) {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions
		return ret
	}
	return *o.ServicePlanOptions
}

// GetServicePlanOptionsOk returns a tuple with the ServicePlanOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetServicePlanOptionsOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions, bool) {
	if o == nil || IsNil(o.ServicePlanOptions) {
		return nil, false
	}
	return o.ServicePlanOptions, true
}

// IsSetServicePlanOptions returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetServicePlanOptions() bool {
	if o != nil && !IsNil(o.ServicePlanOptions) {
		return true
	}

	return false
}

// SetServicePlanOptions gets a reference to the given AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions and assigns it to the ServicePlanOptions field.
func (o *ClusterServerCreate) SetServicePlanOptions(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions) {
	o.ServicePlanOptions = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetVolumes() []AddClusterRequestClusterServerVolumesInner {
	if o == nil || IsNil(o.Volumes) {
		var ret []AddClusterRequestClusterServerVolumesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetVolumesOk() ([]AddClusterRequestClusterServerVolumesInner, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// IsSetVolumes returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []AddClusterRequestClusterServerVolumesInner and assigns it to the Volumes field.
func (o *ClusterServerCreate) SetVolumes(v []AddClusterRequestClusterServerVolumesInner) {
	o.Volumes = v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetNetworkInterfaces() []AddClusterRequestClusterServerNetworkInterfacesInner {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []AddClusterRequestClusterServerNetworkInterfacesInner
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetNetworkInterfacesOk() ([]AddClusterRequestClusterServerNetworkInterfacesInner, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// IsSetNetworkInterfaces returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []AddClusterRequestClusterServerNetworkInterfacesInner and assigns it to the NetworkInterfaces field.
func (o *ClusterServerCreate) SetNetworkInterfaces(v []AddClusterRequestClusterServerNetworkInterfacesInner) {
	o.NetworkInterfaces = v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetSecurityGroups() []string {
	if o == nil || IsNil(o.SecurityGroups) {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// IsSetSecurityGroups returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *ClusterServerCreate) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ClusterServerCreate) SetVisibility(v string) {
	o.Visibility = &v
}

// GetUserGroup returns the UserGroup field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetUserGroup() AddClusterRequestClusterServerUserGroup {
	if o == nil || IsNil(o.UserGroup) {
		var ret AddClusterRequestClusterServerUserGroup
		return ret
	}
	return *o.UserGroup
}

// GetUserGroupOk returns a tuple with the UserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetUserGroupOk() (*AddClusterRequestClusterServerUserGroup, bool) {
	if o == nil || IsNil(o.UserGroup) {
		return nil, false
	}
	return o.UserGroup, true
}

// IsSetUserGroup returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetUserGroup() bool {
	if o != nil && !IsNil(o.UserGroup) {
		return true
	}

	return false
}

// SetUserGroup gets a reference to the given AddClusterRequestClusterServerUserGroup and assigns it to the UserGroup field.
func (o *ClusterServerCreate) SetUserGroup(v AddClusterRequestClusterServerUserGroup) {
	o.UserGroup = &v
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetNetworkDomain() string {
	if o == nil || IsNil(o.NetworkDomain) {
		var ret string
		return ret
	}
	return *o.NetworkDomain
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetNetworkDomainOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkDomain) {
		return nil, false
	}
	return o.NetworkDomain, true
}

// IsSetNetworkDomain returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetNetworkDomain() bool {
	if o != nil && !IsNil(o.NetworkDomain) {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given string and assigns it to the NetworkDomain field.
func (o *ClusterServerCreate) SetNetworkDomain(v string) {
	o.NetworkDomain = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// IsSetHostname returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *ClusterServerCreate) SetHostname(v string) {
	o.Hostname = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetNodeCount() int64 {
	if o == nil || IsNil(o.NodeCount) {
		var ret int64
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetNodeCountOk() (*int64, bool) {
	if o == nil || IsNil(o.NodeCount) {
		return nil, false
	}
	return o.NodeCount, true
}

// IsSetNodeCount returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetNodeCount() bool {
	if o != nil && !IsNil(o.NodeCount) {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int64 and assigns it to the NodeCount field.
func (o *ClusterServerCreate) SetNodeCount(v int64) {
	o.NodeCount = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetTags() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetTagsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Tags field.
func (o *ClusterServerCreate) SetTags(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Tags = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterServerCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetSshHosts returns the SshHosts field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetSshHosts() []AddClusterRequestClusterServerSshHostsInner {
	if o == nil || IsNil(o.SshHosts) {
		var ret []AddClusterRequestClusterServerSshHostsInner
		return ret
	}
	return o.SshHosts
}

// GetSshHostsOk returns a tuple with the SshHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetSshHostsOk() ([]AddClusterRequestClusterServerSshHostsInner, bool) {
	if o == nil || IsNil(o.SshHosts) {
		return nil, false
	}
	return o.SshHosts, true
}

// IsSetSshHosts returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetSshHosts() bool {
	if o != nil && !IsNil(o.SshHosts) {
		return true
	}

	return false
}

// SetSshHosts gets a reference to the given []AddClusterRequestClusterServerSshHostsInner and assigns it to the SshHosts field.
func (o *ClusterServerCreate) SetSshHosts(v []AddClusterRequestClusterServerSshHostsInner) {
	o.SshHosts = v
}

// GetSshUsername returns the SshUsername field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetSshUsername() string {
	if o == nil || IsNil(o.SshUsername) {
		var ret string
		return ret
	}
	return *o.SshUsername
}

// GetSshUsernameOk returns a tuple with the SshUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetSshUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SshUsername) {
		return nil, false
	}
	return o.SshUsername, true
}

// IsSetSshUsername returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetSshUsername() bool {
	if o != nil && !IsNil(o.SshUsername) {
		return true
	}

	return false
}

// SetSshUsername gets a reference to the given string and assigns it to the SshUsername field.
func (o *ClusterServerCreate) SetSshUsername(v string) {
	o.SshUsername = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetSshPassword() string {
	if o == nil || IsNil(o.SshPassword) {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetSshPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SshPassword) {
		return nil, false
	}
	return o.SshPassword, true
}

// IsSetSshPassword returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetSshPassword() bool {
	if o != nil && !IsNil(o.SshPassword) {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *ClusterServerCreate) SetSshPassword(v string) {
	o.SshPassword = &v
}

// GetSshKeyPair returns the SshKeyPair field value if set, zero value otherwise.
func (o *ClusterServerCreate) GetSshKeyPair() AddClusterRequestClusterServerSshKeyPair {
	if o == nil || IsNil(o.SshKeyPair) {
		var ret AddClusterRequestClusterServerSshKeyPair
		return ret
	}
	return *o.SshKeyPair
}

// GetSshKeyPairOk returns a tuple with the SshKeyPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerCreate) GetSshKeyPairOk() (*AddClusterRequestClusterServerSshKeyPair, bool) {
	if o == nil || IsNil(o.SshKeyPair) {
		return nil, false
	}
	return o.SshKeyPair, true
}

// IsSetSshKeyPair returns a boolean if a field has been set.
func (o *ClusterServerCreate) IsSetSshKeyPair() bool {
	if o != nil && !IsNil(o.SshKeyPair) {
		return true
	}

	return false
}

// SetSshKeyPair gets a reference to the given AddClusterRequestClusterServerSshKeyPair and assigns it to the SshKeyPair field.
func (o *ClusterServerCreate) SetSshKeyPair(v AddClusterRequestClusterServerSshKeyPair) {
	o.SshKeyPair = &v
}

func (o ClusterServerCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterServerCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	if !IsNil(o.ServerType) {
		toSerialize["serverType"] = o.ServerType
	}
	toSerialize["name"] = o.Name
	toSerialize["plan"] = o.Plan
	if !IsNil(o.ServicePlanOptions) {
		toSerialize["servicePlanOptions"] = o.ServicePlanOptions
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if !IsNil(o.SecurityGroups) {
		toSerialize["securityGroups"] = o.SecurityGroups
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.UserGroup) {
		toSerialize["userGroup"] = o.UserGroup
	}
	if !IsNil(o.NetworkDomain) {
		toSerialize["networkDomain"] = o.NetworkDomain
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.NodeCount) {
		toSerialize["nodeCount"] = o.NodeCount
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.SshHosts) {
		toSerialize["sshHosts"] = o.SshHosts
	}
	if !IsNil(o.SshUsername) {
		toSerialize["sshUsername"] = o.SshUsername
	}
	if !IsNil(o.SshPassword) {
		toSerialize["sshPassword"] = o.SshPassword
	}
	if !IsNil(o.SshKeyPair) {
		toSerialize["sshKeyPair"] = o.SshKeyPair
	}
	return toSerialize, nil
}

func (o *ClusterServerCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"config",
		"name",
		"plan",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterServerCreate := _ClusterServerCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterServerCreate)

	if err != nil {
		return err
	}

	*o = ClusterServerCreate(varClusterServerCreate)

	return err
}

type NullableClusterServerCreate struct {
	value *ClusterServerCreate
	isSet bool
}

func (v NullableClusterServerCreate) Get() *ClusterServerCreate {
	return v.value
}

func (v *NullableClusterServerCreate) Set(val *ClusterServerCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterServerCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterServerCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterServerCreate(val *ClusterServerCreate) *NullableClusterServerCreate {
	return &NullableClusterServerCreate{value: val, isSet: true}
}

func (v NullableClusterServerCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterServerCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


