/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListJobs200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListJobs200Response{}

// ListJobs200Response struct for ListJobs200Response
type ListJobs200Response struct {
	Jobs []ListJobs200ResponseAllOfJobsInner `json:"jobs,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListJobs200Response instantiates a new ListJobs200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListJobs200Response() *ListJobs200Response {
	this := ListJobs200Response{}
	return &this
}

// NewListJobs200ResponseWithDefaults instantiates a new ListJobs200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListJobs200ResponseWithDefaults() *ListJobs200Response {
	this := ListJobs200Response{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *ListJobs200Response) GetJobs() []ListJobs200ResponseAllOfJobsInner {
	if o == nil || IsNil(o.Jobs) {
		var ret []ListJobs200ResponseAllOfJobsInner
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200Response) GetJobsOk() ([]ListJobs200ResponseAllOfJobsInner, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// IsSetJobs returns a boolean if a field has been set.
func (o *ListJobs200Response) IsSetJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []ListJobs200ResponseAllOfJobsInner and assigns it to the Jobs field.
func (o *ListJobs200Response) SetJobs(v []ListJobs200ResponseAllOfJobsInner) {
	o.Jobs = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListJobs200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListJobs200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListJobs200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListJobs200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListJobs200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListJobs200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListJobs200Response struct {
	value *ListJobs200Response
	isSet bool
}

func (v NullableListJobs200Response) Get() *ListJobs200Response {
	return v.value
}

func (v *NullableListJobs200Response) Set(val *ListJobs200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListJobs200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListJobs200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListJobs200Response(val *ListJobs200Response) *NullableListJobs200Response {
	return &NullableListJobs200Response{value: val, isSet: true}
}

func (v NullableListJobs200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListJobs200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


