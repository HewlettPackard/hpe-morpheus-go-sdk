/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkCreate{}

// NetworkCreate struct for NetworkCreate
type NetworkCreate struct {
	// Name
	Name string `json:"name"`
	// Display Name
	DisplayName *string `json:"displayName,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	Site CreateNetworksRequestNetworkSite `json:"site"`
	Zone CreateNetworksRequestNetworkZone `json:"zone"`
	Type *CreateNetworksRequestNetworkType `json:"type,omitempty"`
	Ipv4Enabled *bool `json:"ipv4Enabled,omitempty"`
	Ipv6Enabled *bool `json:"ipv6Enabled,omitempty"`
	// CIDR Network
	Cidr *string `json:"cidr,omitempty"`
	// Network Gateway
	Gateway *string `json:"gateway,omitempty"`
	// Primary DNS Server
	DnsPrimary *string `json:"dnsPrimary,omitempty"`
	// Secondary DNS Server
	DnsSecondary *string `json:"dnsSecondary,omitempty"`
	// IPv6 Network Gateway
	GatewayIPv6 *string `json:"gatewayIPv6,omitempty"`
	NetmaskIPv6 *string `json:"netmaskIPv6,omitempty"`
	// Primary IPv6 DNS Server
	DnsPrimaryIPv6 *string `json:"dnsPrimaryIPv6,omitempty"`
	// Secondary IPv6 DNS Server
	DnsSecondaryIPv6 *string `json:"dnsSecondaryIPv6,omitempty"`
	// IPv6 Network CIDR
	CidrIPv6 *string `json:"cidrIPv6,omitempty"`
	VlanId *int64 `json:"vlanId,omitempty"`
	// Network Pool ID
	Pool *int64 `json:"pool,omitempty"`
	// IPv6 Network Pool ID
	PoolIPv6 *int64 `json:"poolIPv6,omitempty"`
	// Allow IP Override
	AllowStaticOverride *bool `json:"allowStaticOverride,omitempty"`
	// Assign Public IP
	AssignPublicIp *bool `json:"assignPublicIp,omitempty"`
	// Activate (true) or disable (false) the network
	Active *bool `json:"active,omitempty"`
	// DHCP Server enabled network
	DhcpServer *bool `json:"dhcpServer,omitempty"`
	// IPv6 DHCP Server enabled network
	DhcpServerIPv6 *bool `json:"dhcpServerIPv6,omitempty"`
	NetworkDomain *CreateNetworksRequestNetworkNetworkDomain `json:"networkDomain,omitempty"`
	// Search Domains
	SearchDomains *string `json:"searchDomains,omitempty"`
	NetworkProxy *CreateNetworksRequestNetworkNetworkProxy `json:"networkProxy,omitempty"`
	// Bypass Proxy for Appliance URL
	ApplianceUrlProxyBypass *bool `json:"applianceUrlProxyBypass,omitempty"`
	// Comma-separated list of ip addresses or name servers to exclude proxy traversal for. Typically locally routable servers are excluded.
	NoProxy *string `json:"noProxy,omitempty"`
	// Visibility, private or public.
	Visibility *string `json:"visibility,omitempty"`
	Config *CreateNetworksRequestNetworkConfig `json:"config,omitempty"`
	// Array of tenant account ids that are allowed access
	Tenants []GetAlerts200ResponseAllOfChecksInnerAccount `json:"tenants,omitempty"`
	ResourcePermissions *CreateNetworksRequestNetworkResourcePermissions `json:"resourcePermissions,omitempty"`
}

type _NetworkCreate NetworkCreate

// NewNetworkCreate instantiates a new NetworkCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkCreate(name string, site CreateNetworksRequestNetworkSite, zone CreateNetworksRequestNetworkZone) *NetworkCreate {
	this := NetworkCreate{}
	this.Name = name
	this.Site = site
	this.Zone = zone
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewNetworkCreateWithDefaults instantiates a new NetworkCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkCreateWithDefaults() *NetworkCreate {
	this := NetworkCreate{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetName returns the Name field value
func (o *NetworkCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkCreate) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *NetworkCreate) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// IsSetDisplayName returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *NetworkCreate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *NetworkCreate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *NetworkCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkCreate) SetDescription(v string) {
	o.Description = &v
}

// GetSite returns the Site field value
func (o *NetworkCreate) GetSite() CreateNetworksRequestNetworkSite {
	if o == nil {
		var ret CreateNetworksRequestNetworkSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetSiteOk() (*CreateNetworksRequestNetworkSite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *NetworkCreate) SetSite(v CreateNetworksRequestNetworkSite) {
	o.Site = v
}

// GetZone returns the Zone field value
func (o *NetworkCreate) GetZone() CreateNetworksRequestNetworkZone {
	if o == nil {
		var ret CreateNetworksRequestNetworkZone
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetZoneOk() (*CreateNetworksRequestNetworkZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *NetworkCreate) SetZone(v CreateNetworksRequestNetworkZone) {
	o.Zone = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkCreate) GetType() CreateNetworksRequestNetworkType {
	if o == nil || IsNil(o.Type) {
		var ret CreateNetworksRequestNetworkType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetTypeOk() (*CreateNetworksRequestNetworkType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CreateNetworksRequestNetworkType and assigns it to the Type field.
func (o *NetworkCreate) SetType(v CreateNetworksRequestNetworkType) {
	o.Type = &v
}

// GetIpv4Enabled returns the Ipv4Enabled field value if set, zero value otherwise.
func (o *NetworkCreate) GetIpv4Enabled() bool {
	if o == nil || IsNil(o.Ipv4Enabled) {
		var ret bool
		return ret
	}
	return *o.Ipv4Enabled
}

// GetIpv4EnabledOk returns a tuple with the Ipv4Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetIpv4EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv4Enabled) {
		return nil, false
	}
	return o.Ipv4Enabled, true
}

// IsSetIpv4Enabled returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetIpv4Enabled() bool {
	if o != nil && !IsNil(o.Ipv4Enabled) {
		return true
	}

	return false
}

// SetIpv4Enabled gets a reference to the given bool and assigns it to the Ipv4Enabled field.
func (o *NetworkCreate) SetIpv4Enabled(v bool) {
	o.Ipv4Enabled = &v
}

// GetIpv6Enabled returns the Ipv6Enabled field value if set, zero value otherwise.
func (o *NetworkCreate) GetIpv6Enabled() bool {
	if o == nil || IsNil(o.Ipv6Enabled) {
		var ret bool
		return ret
	}
	return *o.Ipv6Enabled
}

// GetIpv6EnabledOk returns a tuple with the Ipv6Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetIpv6EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv6Enabled) {
		return nil, false
	}
	return o.Ipv6Enabled, true
}

// IsSetIpv6Enabled returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetIpv6Enabled() bool {
	if o != nil && !IsNil(o.Ipv6Enabled) {
		return true
	}

	return false
}

// SetIpv6Enabled gets a reference to the given bool and assigns it to the Ipv6Enabled field.
func (o *NetworkCreate) SetIpv6Enabled(v bool) {
	o.Ipv6Enabled = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *NetworkCreate) GetCidr() string {
	if o == nil || IsNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetCidrOk() (*string, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// IsSetCidr returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *NetworkCreate) SetCidr(v string) {
	o.Cidr = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *NetworkCreate) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// IsSetGateway returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *NetworkCreate) SetGateway(v string) {
	o.Gateway = &v
}

// GetDnsPrimary returns the DnsPrimary field value if set, zero value otherwise.
func (o *NetworkCreate) GetDnsPrimary() string {
	if o == nil || IsNil(o.DnsPrimary) {
		var ret string
		return ret
	}
	return *o.DnsPrimary
}

// GetDnsPrimaryOk returns a tuple with the DnsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDnsPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.DnsPrimary) {
		return nil, false
	}
	return o.DnsPrimary, true
}

// IsSetDnsPrimary returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDnsPrimary() bool {
	if o != nil && !IsNil(o.DnsPrimary) {
		return true
	}

	return false
}

// SetDnsPrimary gets a reference to the given string and assigns it to the DnsPrimary field.
func (o *NetworkCreate) SetDnsPrimary(v string) {
	o.DnsPrimary = &v
}

// GetDnsSecondary returns the DnsSecondary field value if set, zero value otherwise.
func (o *NetworkCreate) GetDnsSecondary() string {
	if o == nil || IsNil(o.DnsSecondary) {
		var ret string
		return ret
	}
	return *o.DnsSecondary
}

// GetDnsSecondaryOk returns a tuple with the DnsSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDnsSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.DnsSecondary) {
		return nil, false
	}
	return o.DnsSecondary, true
}

// IsSetDnsSecondary returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDnsSecondary() bool {
	if o != nil && !IsNil(o.DnsSecondary) {
		return true
	}

	return false
}

// SetDnsSecondary gets a reference to the given string and assigns it to the DnsSecondary field.
func (o *NetworkCreate) SetDnsSecondary(v string) {
	o.DnsSecondary = &v
}

// GetGatewayIPv6 returns the GatewayIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetGatewayIPv6() string {
	if o == nil || IsNil(o.GatewayIPv6) {
		var ret string
		return ret
	}
	return *o.GatewayIPv6
}

// GetGatewayIPv6Ok returns a tuple with the GatewayIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetGatewayIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.GatewayIPv6) {
		return nil, false
	}
	return o.GatewayIPv6, true
}

// IsSetGatewayIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetGatewayIPv6() bool {
	if o != nil && !IsNil(o.GatewayIPv6) {
		return true
	}

	return false
}

// SetGatewayIPv6 gets a reference to the given string and assigns it to the GatewayIPv6 field.
func (o *NetworkCreate) SetGatewayIPv6(v string) {
	o.GatewayIPv6 = &v
}

// GetNetmaskIPv6 returns the NetmaskIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetNetmaskIPv6() string {
	if o == nil || IsNil(o.NetmaskIPv6) {
		var ret string
		return ret
	}
	return *o.NetmaskIPv6
}

// GetNetmaskIPv6Ok returns a tuple with the NetmaskIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetNetmaskIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.NetmaskIPv6) {
		return nil, false
	}
	return o.NetmaskIPv6, true
}

// IsSetNetmaskIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetNetmaskIPv6() bool {
	if o != nil && !IsNil(o.NetmaskIPv6) {
		return true
	}

	return false
}

// SetNetmaskIPv6 gets a reference to the given string and assigns it to the NetmaskIPv6 field.
func (o *NetworkCreate) SetNetmaskIPv6(v string) {
	o.NetmaskIPv6 = &v
}

// GetDnsPrimaryIPv6 returns the DnsPrimaryIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetDnsPrimaryIPv6() string {
	if o == nil || IsNil(o.DnsPrimaryIPv6) {
		var ret string
		return ret
	}
	return *o.DnsPrimaryIPv6
}

// GetDnsPrimaryIPv6Ok returns a tuple with the DnsPrimaryIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDnsPrimaryIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.DnsPrimaryIPv6) {
		return nil, false
	}
	return o.DnsPrimaryIPv6, true
}

// IsSetDnsPrimaryIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDnsPrimaryIPv6() bool {
	if o != nil && !IsNil(o.DnsPrimaryIPv6) {
		return true
	}

	return false
}

// SetDnsPrimaryIPv6 gets a reference to the given string and assigns it to the DnsPrimaryIPv6 field.
func (o *NetworkCreate) SetDnsPrimaryIPv6(v string) {
	o.DnsPrimaryIPv6 = &v
}

// GetDnsSecondaryIPv6 returns the DnsSecondaryIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetDnsSecondaryIPv6() string {
	if o == nil || IsNil(o.DnsSecondaryIPv6) {
		var ret string
		return ret
	}
	return *o.DnsSecondaryIPv6
}

// GetDnsSecondaryIPv6Ok returns a tuple with the DnsSecondaryIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDnsSecondaryIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.DnsSecondaryIPv6) {
		return nil, false
	}
	return o.DnsSecondaryIPv6, true
}

// IsSetDnsSecondaryIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDnsSecondaryIPv6() bool {
	if o != nil && !IsNil(o.DnsSecondaryIPv6) {
		return true
	}

	return false
}

// SetDnsSecondaryIPv6 gets a reference to the given string and assigns it to the DnsSecondaryIPv6 field.
func (o *NetworkCreate) SetDnsSecondaryIPv6(v string) {
	o.DnsSecondaryIPv6 = &v
}

// GetCidrIPv6 returns the CidrIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetCidrIPv6() string {
	if o == nil || IsNil(o.CidrIPv6) {
		var ret string
		return ret
	}
	return *o.CidrIPv6
}

// GetCidrIPv6Ok returns a tuple with the CidrIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetCidrIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.CidrIPv6) {
		return nil, false
	}
	return o.CidrIPv6, true
}

// IsSetCidrIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetCidrIPv6() bool {
	if o != nil && !IsNil(o.CidrIPv6) {
		return true
	}

	return false
}

// SetCidrIPv6 gets a reference to the given string and assigns it to the CidrIPv6 field.
func (o *NetworkCreate) SetCidrIPv6(v string) {
	o.CidrIPv6 = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *NetworkCreate) GetVlanId() int64 {
	if o == nil || IsNil(o.VlanId) {
		var ret int64
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetVlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// IsSetVlanId returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int64 and assigns it to the VlanId field.
func (o *NetworkCreate) SetVlanId(v int64) {
	o.VlanId = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *NetworkCreate) GetPool() int64 {
	if o == nil || IsNil(o.Pool) {
		var ret int64
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetPoolOk() (*int64, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// IsSetPool returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given int64 and assigns it to the Pool field.
func (o *NetworkCreate) SetPool(v int64) {
	o.Pool = &v
}

// GetPoolIPv6 returns the PoolIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetPoolIPv6() int64 {
	if o == nil || IsNil(o.PoolIPv6) {
		var ret int64
		return ret
	}
	return *o.PoolIPv6
}

// GetPoolIPv6Ok returns a tuple with the PoolIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetPoolIPv6Ok() (*int64, bool) {
	if o == nil || IsNil(o.PoolIPv6) {
		return nil, false
	}
	return o.PoolIPv6, true
}

// IsSetPoolIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetPoolIPv6() bool {
	if o != nil && !IsNil(o.PoolIPv6) {
		return true
	}

	return false
}

// SetPoolIPv6 gets a reference to the given int64 and assigns it to the PoolIPv6 field.
func (o *NetworkCreate) SetPoolIPv6(v int64) {
	o.PoolIPv6 = &v
}

// GetAllowStaticOverride returns the AllowStaticOverride field value if set, zero value otherwise.
func (o *NetworkCreate) GetAllowStaticOverride() bool {
	if o == nil || IsNil(o.AllowStaticOverride) {
		var ret bool
		return ret
	}
	return *o.AllowStaticOverride
}

// GetAllowStaticOverrideOk returns a tuple with the AllowStaticOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetAllowStaticOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowStaticOverride) {
		return nil, false
	}
	return o.AllowStaticOverride, true
}

// IsSetAllowStaticOverride returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetAllowStaticOverride() bool {
	if o != nil && !IsNil(o.AllowStaticOverride) {
		return true
	}

	return false
}

// SetAllowStaticOverride gets a reference to the given bool and assigns it to the AllowStaticOverride field.
func (o *NetworkCreate) SetAllowStaticOverride(v bool) {
	o.AllowStaticOverride = &v
}

// GetAssignPublicIp returns the AssignPublicIp field value if set, zero value otherwise.
func (o *NetworkCreate) GetAssignPublicIp() bool {
	if o == nil || IsNil(o.AssignPublicIp) {
		var ret bool
		return ret
	}
	return *o.AssignPublicIp
}

// GetAssignPublicIpOk returns a tuple with the AssignPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetAssignPublicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.AssignPublicIp) {
		return nil, false
	}
	return o.AssignPublicIp, true
}

// IsSetAssignPublicIp returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetAssignPublicIp() bool {
	if o != nil && !IsNil(o.AssignPublicIp) {
		return true
	}

	return false
}

// SetAssignPublicIp gets a reference to the given bool and assigns it to the AssignPublicIp field.
func (o *NetworkCreate) SetAssignPublicIp(v bool) {
	o.AssignPublicIp = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *NetworkCreate) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *NetworkCreate) SetActive(v bool) {
	o.Active = &v
}

// GetDhcpServer returns the DhcpServer field value if set, zero value otherwise.
func (o *NetworkCreate) GetDhcpServer() bool {
	if o == nil || IsNil(o.DhcpServer) {
		var ret bool
		return ret
	}
	return *o.DhcpServer
}

// GetDhcpServerOk returns a tuple with the DhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDhcpServerOk() (*bool, bool) {
	if o == nil || IsNil(o.DhcpServer) {
		return nil, false
	}
	return o.DhcpServer, true
}

// IsSetDhcpServer returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDhcpServer() bool {
	if o != nil && !IsNil(o.DhcpServer) {
		return true
	}

	return false
}

// SetDhcpServer gets a reference to the given bool and assigns it to the DhcpServer field.
func (o *NetworkCreate) SetDhcpServer(v bool) {
	o.DhcpServer = &v
}

// GetDhcpServerIPv6 returns the DhcpServerIPv6 field value if set, zero value otherwise.
func (o *NetworkCreate) GetDhcpServerIPv6() bool {
	if o == nil || IsNil(o.DhcpServerIPv6) {
		var ret bool
		return ret
	}
	return *o.DhcpServerIPv6
}

// GetDhcpServerIPv6Ok returns a tuple with the DhcpServerIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetDhcpServerIPv6Ok() (*bool, bool) {
	if o == nil || IsNil(o.DhcpServerIPv6) {
		return nil, false
	}
	return o.DhcpServerIPv6, true
}

// IsSetDhcpServerIPv6 returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetDhcpServerIPv6() bool {
	if o != nil && !IsNil(o.DhcpServerIPv6) {
		return true
	}

	return false
}

// SetDhcpServerIPv6 gets a reference to the given bool and assigns it to the DhcpServerIPv6 field.
func (o *NetworkCreate) SetDhcpServerIPv6(v bool) {
	o.DhcpServerIPv6 = &v
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise.
func (o *NetworkCreate) GetNetworkDomain() CreateNetworksRequestNetworkNetworkDomain {
	if o == nil || IsNil(o.NetworkDomain) {
		var ret CreateNetworksRequestNetworkNetworkDomain
		return ret
	}
	return *o.NetworkDomain
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetNetworkDomainOk() (*CreateNetworksRequestNetworkNetworkDomain, bool) {
	if o == nil || IsNil(o.NetworkDomain) {
		return nil, false
	}
	return o.NetworkDomain, true
}

// IsSetNetworkDomain returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetNetworkDomain() bool {
	if o != nil && !IsNil(o.NetworkDomain) {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given CreateNetworksRequestNetworkNetworkDomain and assigns it to the NetworkDomain field.
func (o *NetworkCreate) SetNetworkDomain(v CreateNetworksRequestNetworkNetworkDomain) {
	o.NetworkDomain = &v
}

// GetSearchDomains returns the SearchDomains field value if set, zero value otherwise.
func (o *NetworkCreate) GetSearchDomains() string {
	if o == nil || IsNil(o.SearchDomains) {
		var ret string
		return ret
	}
	return *o.SearchDomains
}

// GetSearchDomainsOk returns a tuple with the SearchDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetSearchDomainsOk() (*string, bool) {
	if o == nil || IsNil(o.SearchDomains) {
		return nil, false
	}
	return o.SearchDomains, true
}

// IsSetSearchDomains returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetSearchDomains() bool {
	if o != nil && !IsNil(o.SearchDomains) {
		return true
	}

	return false
}

// SetSearchDomains gets a reference to the given string and assigns it to the SearchDomains field.
func (o *NetworkCreate) SetSearchDomains(v string) {
	o.SearchDomains = &v
}

// GetNetworkProxy returns the NetworkProxy field value if set, zero value otherwise.
func (o *NetworkCreate) GetNetworkProxy() CreateNetworksRequestNetworkNetworkProxy {
	if o == nil || IsNil(o.NetworkProxy) {
		var ret CreateNetworksRequestNetworkNetworkProxy
		return ret
	}
	return *o.NetworkProxy
}

// GetNetworkProxyOk returns a tuple with the NetworkProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetNetworkProxyOk() (*CreateNetworksRequestNetworkNetworkProxy, bool) {
	if o == nil || IsNil(o.NetworkProxy) {
		return nil, false
	}
	return o.NetworkProxy, true
}

// IsSetNetworkProxy returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetNetworkProxy() bool {
	if o != nil && !IsNil(o.NetworkProxy) {
		return true
	}

	return false
}

// SetNetworkProxy gets a reference to the given CreateNetworksRequestNetworkNetworkProxy and assigns it to the NetworkProxy field.
func (o *NetworkCreate) SetNetworkProxy(v CreateNetworksRequestNetworkNetworkProxy) {
	o.NetworkProxy = &v
}

// GetApplianceUrlProxyBypass returns the ApplianceUrlProxyBypass field value if set, zero value otherwise.
func (o *NetworkCreate) GetApplianceUrlProxyBypass() bool {
	if o == nil || IsNil(o.ApplianceUrlProxyBypass) {
		var ret bool
		return ret
	}
	return *o.ApplianceUrlProxyBypass
}

// GetApplianceUrlProxyBypassOk returns a tuple with the ApplianceUrlProxyBypass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetApplianceUrlProxyBypassOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplianceUrlProxyBypass) {
		return nil, false
	}
	return o.ApplianceUrlProxyBypass, true
}

// IsSetApplianceUrlProxyBypass returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetApplianceUrlProxyBypass() bool {
	if o != nil && !IsNil(o.ApplianceUrlProxyBypass) {
		return true
	}

	return false
}

// SetApplianceUrlProxyBypass gets a reference to the given bool and assigns it to the ApplianceUrlProxyBypass field.
func (o *NetworkCreate) SetApplianceUrlProxyBypass(v bool) {
	o.ApplianceUrlProxyBypass = &v
}

// GetNoProxy returns the NoProxy field value if set, zero value otherwise.
func (o *NetworkCreate) GetNoProxy() string {
	if o == nil || IsNil(o.NoProxy) {
		var ret string
		return ret
	}
	return *o.NoProxy
}

// GetNoProxyOk returns a tuple with the NoProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetNoProxyOk() (*string, bool) {
	if o == nil || IsNil(o.NoProxy) {
		return nil, false
	}
	return o.NoProxy, true
}

// IsSetNoProxy returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetNoProxy() bool {
	if o != nil && !IsNil(o.NoProxy) {
		return true
	}

	return false
}

// SetNoProxy gets a reference to the given string and assigns it to the NoProxy field.
func (o *NetworkCreate) SetNoProxy(v string) {
	o.NoProxy = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *NetworkCreate) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *NetworkCreate) SetVisibility(v string) {
	o.Visibility = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *NetworkCreate) GetConfig() CreateNetworksRequestNetworkConfig {
	if o == nil || IsNil(o.Config) {
		var ret CreateNetworksRequestNetworkConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetConfigOk() (*CreateNetworksRequestNetworkConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given CreateNetworksRequestNetworkConfig and assigns it to the Config field.
func (o *NetworkCreate) SetConfig(v CreateNetworksRequestNetworkConfig) {
	o.Config = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *NetworkCreate) GetTenants() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Tenants) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetTenantsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Tenants field.
func (o *NetworkCreate) SetTenants(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Tenants = v
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *NetworkCreate) GetResourcePermissions() CreateNetworksRequestNetworkResourcePermissions {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret CreateNetworksRequestNetworkResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkCreate) GetResourcePermissionsOk() (*CreateNetworksRequestNetworkResourcePermissions, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *NetworkCreate) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given CreateNetworksRequestNetworkResourcePermissions and assigns it to the ResourcePermissions field.
func (o *NetworkCreate) SetResourcePermissions(v CreateNetworksRequestNetworkResourcePermissions) {
	o.ResourcePermissions = &v
}

func (o NetworkCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["site"] = o.Site
	toSerialize["zone"] = o.Zone
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Ipv4Enabled) {
		toSerialize["ipv4Enabled"] = o.Ipv4Enabled
	}
	if !IsNil(o.Ipv6Enabled) {
		toSerialize["ipv6Enabled"] = o.Ipv6Enabled
	}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.DnsPrimary) {
		toSerialize["dnsPrimary"] = o.DnsPrimary
	}
	if !IsNil(o.DnsSecondary) {
		toSerialize["dnsSecondary"] = o.DnsSecondary
	}
	if !IsNil(o.GatewayIPv6) {
		toSerialize["gatewayIPv6"] = o.GatewayIPv6
	}
	if !IsNil(o.NetmaskIPv6) {
		toSerialize["netmaskIPv6"] = o.NetmaskIPv6
	}
	if !IsNil(o.DnsPrimaryIPv6) {
		toSerialize["dnsPrimaryIPv6"] = o.DnsPrimaryIPv6
	}
	if !IsNil(o.DnsSecondaryIPv6) {
		toSerialize["dnsSecondaryIPv6"] = o.DnsSecondaryIPv6
	}
	if !IsNil(o.CidrIPv6) {
		toSerialize["cidrIPv6"] = o.CidrIPv6
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlanId"] = o.VlanId
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.PoolIPv6) {
		toSerialize["poolIPv6"] = o.PoolIPv6
	}
	if !IsNil(o.AllowStaticOverride) {
		toSerialize["allowStaticOverride"] = o.AllowStaticOverride
	}
	if !IsNil(o.AssignPublicIp) {
		toSerialize["assignPublicIp"] = o.AssignPublicIp
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.DhcpServer) {
		toSerialize["dhcpServer"] = o.DhcpServer
	}
	if !IsNil(o.DhcpServerIPv6) {
		toSerialize["dhcpServerIPv6"] = o.DhcpServerIPv6
	}
	if !IsNil(o.NetworkDomain) {
		toSerialize["networkDomain"] = o.NetworkDomain
	}
	if !IsNil(o.SearchDomains) {
		toSerialize["searchDomains"] = o.SearchDomains
	}
	if !IsNil(o.NetworkProxy) {
		toSerialize["networkProxy"] = o.NetworkProxy
	}
	if !IsNil(o.ApplianceUrlProxyBypass) {
		toSerialize["applianceUrlProxyBypass"] = o.ApplianceUrlProxyBypass
	}
	if !IsNil(o.NoProxy) {
		toSerialize["noProxy"] = o.NoProxy
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}
	return toSerialize, nil
}

func (o *NetworkCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"site",
		"zone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkCreate := _NetworkCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkCreate)

	if err != nil {
		return err
	}

	*o = NetworkCreate(varNetworkCreate)

	return err
}

type NullableNetworkCreate struct {
	value *NetworkCreate
	isSet bool
}

func (v NullableNetworkCreate) Get() *NetworkCreate {
	return v.value
}

func (v *NullableNetworkCreate) Set(val *NetworkCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkCreate(val *NetworkCreate) *NullableNetworkCreate {
	return &NullableNetworkCreate{value: val, isSet: true}
}

func (v NullableNetworkCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


