/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHistory200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHistory200Response{}

// ListHistory200Response struct for ListHistory200Response
type ListHistory200Response struct {
	Processes []ListHistory200ResponseAllOfProcessesInner `json:"processes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListHistory200Response instantiates a new ListHistory200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHistory200Response() *ListHistory200Response {
	this := ListHistory200Response{}
	return &this
}

// NewListHistory200ResponseWithDefaults instantiates a new ListHistory200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHistory200ResponseWithDefaults() *ListHistory200Response {
	this := ListHistory200Response{}
	return &this
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *ListHistory200Response) GetProcesses() []ListHistory200ResponseAllOfProcessesInner {
	if o == nil || IsNil(o.Processes) {
		var ret []ListHistory200ResponseAllOfProcessesInner
		return ret
	}
	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHistory200Response) GetProcessesOk() ([]ListHistory200ResponseAllOfProcessesInner, bool) {
	if o == nil || IsNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// IsSetProcesses returns a boolean if a field has been set.
func (o *ListHistory200Response) IsSetProcesses() bool {
	if o != nil && !IsNil(o.Processes) {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []ListHistory200ResponseAllOfProcessesInner and assigns it to the Processes field.
func (o *ListHistory200Response) SetProcesses(v []ListHistory200ResponseAllOfProcessesInner) {
	o.Processes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListHistory200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHistory200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListHistory200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListHistory200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListHistory200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHistory200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Processes) {
		toSerialize["processes"] = o.Processes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListHistory200Response struct {
	value *ListHistory200Response
	isSet bool
}

func (v NullableListHistory200Response) Get() *ListHistory200Response {
	return v.value
}

func (v *NullableListHistory200Response) Set(val *ListHistory200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListHistory200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListHistory200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHistory200Response(val *ListHistory200Response) *NullableListHistory200Response {
	return &NullableListHistory200Response{value: val, isSet: true}
}

func (v NullableListHistory200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHistory200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


