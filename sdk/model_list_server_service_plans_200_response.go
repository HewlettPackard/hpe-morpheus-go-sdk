/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListServerServicePlans200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServerServicePlans200Response{}

// ListServerServicePlans200Response struct for ListServerServicePlans200Response
type ListServerServicePlans200Response struct {
	Plans []ListServerServicePlans200ResponsePlansInner `json:"plans,omitempty"`
}

// NewListServerServicePlans200Response instantiates a new ListServerServicePlans200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServerServicePlans200Response() *ListServerServicePlans200Response {
	this := ListServerServicePlans200Response{}
	return &this
}

// NewListServerServicePlans200ResponseWithDefaults instantiates a new ListServerServicePlans200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServerServicePlans200ResponseWithDefaults() *ListServerServicePlans200Response {
	this := ListServerServicePlans200Response{}
	return &this
}

// GetPlans returns the Plans field value if set, zero value otherwise.
func (o *ListServerServicePlans200Response) GetPlans() []ListServerServicePlans200ResponsePlansInner {
	if o == nil || IsNil(o.Plans) {
		var ret []ListServerServicePlans200ResponsePlansInner
		return ret
	}
	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServerServicePlans200Response) GetPlansOk() ([]ListServerServicePlans200ResponsePlansInner, bool) {
	if o == nil || IsNil(o.Plans) {
		return nil, false
	}
	return o.Plans, true
}

// IsSetPlans returns a boolean if a field has been set.
func (o *ListServerServicePlans200Response) IsSetPlans() bool {
	if o != nil && !IsNil(o.Plans) {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []ListServerServicePlans200ResponsePlansInner and assigns it to the Plans field.
func (o *ListServerServicePlans200Response) SetPlans(v []ListServerServicePlans200ResponsePlansInner) {
	o.Plans = v
}

func (o ListServerServicePlans200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServerServicePlans200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plans) {
		toSerialize["plans"] = o.Plans
	}
	return toSerialize, nil
}

type NullableListServerServicePlans200Response struct {
	value *ListServerServicePlans200Response
	isSet bool
}

func (v NullableListServerServicePlans200Response) Get() *ListServerServicePlans200Response {
	return v.value
}

func (v *NullableListServerServicePlans200Response) Set(val *ListServerServicePlans200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListServerServicePlans200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListServerServicePlans200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServerServicePlans200Response(val *ListServerServicePlans200Response) *NullableListServerServicePlans200Response {
	return &NullableListServerServicePlans200Response{value: val, isSet: true}
}

func (v NullableListServerServicePlans200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServerServicePlans200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


