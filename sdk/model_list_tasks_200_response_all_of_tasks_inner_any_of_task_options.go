/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions{}

// ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions struct for ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions
type ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions struct {
	AnsibleOptions *string `json:"ansibleOptions,omitempty"`
	AnsiblePlaybook *string `json:"ansiblePlaybook,omitempty"`
	SshKey *string `json:"sshKey,omitempty"`
	Port *string `json:"port,omitempty"`
	LocalScriptGitRef *string `json:"localScriptGitRef,omitempty"`
	Password *string `json:"password,omitempty"`
	PasswordHash *string `json:"passwordHash,omitempty"`
	LocalScriptGitId *string `json:"localScriptGitId,omitempty"`
	AnsibleGitId *string `json:"ansibleGitId,omitempty"`
	Host *string `json:"host,omitempty"`
	AnsibleSkipTags *string `json:"ansibleSkipTags,omitempty"`
	AnsibleTags *string `json:"ansibleTags,omitempty"`
	Username *string `json:"username,omitempty"`
	AnsibleGitRef *string `json:"ansibleGitRef,omitempty"`
}

// NewListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions() *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions{}
	return &this
}

// NewListTasks200ResponseAllOfTasksInnerAnyOfTaskOptionsWithDefaults instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasks200ResponseAllOfTasksInnerAnyOfTaskOptionsWithDefaults() *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions{}
	return &this
}

// GetAnsibleOptions returns the AnsibleOptions field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleOptions() string {
	if o == nil || IsNil(o.AnsibleOptions) {
		var ret string
		return ret
	}
	return *o.AnsibleOptions
}

// GetAnsibleOptionsOk returns a tuple with the AnsibleOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.AnsibleOptions) {
		return nil, false
	}
	return o.AnsibleOptions, true
}

// IsSetAnsibleOptions returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsibleOptions() bool {
	if o != nil && !IsNil(o.AnsibleOptions) {
		return true
	}

	return false
}

// SetAnsibleOptions gets a reference to the given string and assigns it to the AnsibleOptions field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsibleOptions(v string) {
	o.AnsibleOptions = &v
}

// GetAnsiblePlaybook returns the AnsiblePlaybook field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsiblePlaybook() string {
	if o == nil || IsNil(o.AnsiblePlaybook) {
		var ret string
		return ret
	}
	return *o.AnsiblePlaybook
}

// GetAnsiblePlaybookOk returns a tuple with the AnsiblePlaybook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsiblePlaybookOk() (*string, bool) {
	if o == nil || IsNil(o.AnsiblePlaybook) {
		return nil, false
	}
	return o.AnsiblePlaybook, true
}

// IsSetAnsiblePlaybook returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsiblePlaybook() bool {
	if o != nil && !IsNil(o.AnsiblePlaybook) {
		return true
	}

	return false
}

// SetAnsiblePlaybook gets a reference to the given string and assigns it to the AnsiblePlaybook field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsiblePlaybook(v string) {
	o.AnsiblePlaybook = &v
}

// GetSshKey returns the SshKey field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetSshKey() string {
	if o == nil || IsNil(o.SshKey) {
		var ret string
		return ret
	}
	return *o.SshKey
}

// GetSshKeyOk returns a tuple with the SshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetSshKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshKey) {
		return nil, false
	}
	return o.SshKey, true
}

// IsSetSshKey returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}

// SetSshKey gets a reference to the given string and assigns it to the SshKey field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetSshKey(v string) {
	o.SshKey = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// IsSetPort returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetPort(v string) {
	o.Port = &v
}

// GetLocalScriptGitRef returns the LocalScriptGitRef field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetLocalScriptGitRef() string {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitRef
}

// GetLocalScriptGitRefOk returns a tuple with the LocalScriptGitRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetLocalScriptGitRefOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		return nil, false
	}
	return o.LocalScriptGitRef, true
}

// IsSetLocalScriptGitRef returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetLocalScriptGitRef() bool {
	if o != nil && !IsNil(o.LocalScriptGitRef) {
		return true
	}

	return false
}

// SetLocalScriptGitRef gets a reference to the given string and assigns it to the LocalScriptGitRef field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetLocalScriptGitRef(v string) {
	o.LocalScriptGitRef = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// IsSetPassword returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordHash returns the PasswordHash field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPasswordHash() string {
	if o == nil || IsNil(o.PasswordHash) {
		var ret string
		return ret
	}
	return *o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHash) {
		return nil, false
	}
	return o.PasswordHash, true
}

// IsSetPasswordHash returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetPasswordHash() bool {
	if o != nil && !IsNil(o.PasswordHash) {
		return true
	}

	return false
}

// SetPasswordHash gets a reference to the given string and assigns it to the PasswordHash field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetPasswordHash(v string) {
	o.PasswordHash = &v
}

// GetLocalScriptGitId returns the LocalScriptGitId field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetLocalScriptGitId() string {
	if o == nil || IsNil(o.LocalScriptGitId) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitId
}

// GetLocalScriptGitIdOk returns a tuple with the LocalScriptGitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetLocalScriptGitIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitId) {
		return nil, false
	}
	return o.LocalScriptGitId, true
}

// IsSetLocalScriptGitId returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetLocalScriptGitId() bool {
	if o != nil && !IsNil(o.LocalScriptGitId) {
		return true
	}

	return false
}

// SetLocalScriptGitId gets a reference to the given string and assigns it to the LocalScriptGitId field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetLocalScriptGitId(v string) {
	o.LocalScriptGitId = &v
}

// GetAnsibleGitId returns the AnsibleGitId field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleGitId() string {
	if o == nil || IsNil(o.AnsibleGitId) {
		var ret string
		return ret
	}
	return *o.AnsibleGitId
}

// GetAnsibleGitIdOk returns a tuple with the AnsibleGitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleGitIdOk() (*string, bool) {
	if o == nil || IsNil(o.AnsibleGitId) {
		return nil, false
	}
	return o.AnsibleGitId, true
}

// IsSetAnsibleGitId returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsibleGitId() bool {
	if o != nil && !IsNil(o.AnsibleGitId) {
		return true
	}

	return false
}

// SetAnsibleGitId gets a reference to the given string and assigns it to the AnsibleGitId field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsibleGitId(v string) {
	o.AnsibleGitId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// IsSetHost returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetHost(v string) {
	o.Host = &v
}

// GetAnsibleSkipTags returns the AnsibleSkipTags field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleSkipTags() string {
	if o == nil || IsNil(o.AnsibleSkipTags) {
		var ret string
		return ret
	}
	return *o.AnsibleSkipTags
}

// GetAnsibleSkipTagsOk returns a tuple with the AnsibleSkipTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleSkipTagsOk() (*string, bool) {
	if o == nil || IsNil(o.AnsibleSkipTags) {
		return nil, false
	}
	return o.AnsibleSkipTags, true
}

// IsSetAnsibleSkipTags returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsibleSkipTags() bool {
	if o != nil && !IsNil(o.AnsibleSkipTags) {
		return true
	}

	return false
}

// SetAnsibleSkipTags gets a reference to the given string and assigns it to the AnsibleSkipTags field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsibleSkipTags(v string) {
	o.AnsibleSkipTags = &v
}

// GetAnsibleTags returns the AnsibleTags field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleTags() string {
	if o == nil || IsNil(o.AnsibleTags) {
		var ret string
		return ret
	}
	return *o.AnsibleTags
}

// GetAnsibleTagsOk returns a tuple with the AnsibleTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleTagsOk() (*string, bool) {
	if o == nil || IsNil(o.AnsibleTags) {
		return nil, false
	}
	return o.AnsibleTags, true
}

// IsSetAnsibleTags returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsibleTags() bool {
	if o != nil && !IsNil(o.AnsibleTags) {
		return true
	}

	return false
}

// SetAnsibleTags gets a reference to the given string and assigns it to the AnsibleTags field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsibleTags(v string) {
	o.AnsibleTags = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetUsername(v string) {
	o.Username = &v
}

// GetAnsibleGitRef returns the AnsibleGitRef field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleGitRef() string {
	if o == nil || IsNil(o.AnsibleGitRef) {
		var ret string
		return ret
	}
	return *o.AnsibleGitRef
}

// GetAnsibleGitRefOk returns a tuple with the AnsibleGitRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) GetAnsibleGitRefOk() (*string, bool) {
	if o == nil || IsNil(o.AnsibleGitRef) {
		return nil, false
	}
	return o.AnsibleGitRef, true
}

// IsSetAnsibleGitRef returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSetAnsibleGitRef() bool {
	if o != nil && !IsNil(o.AnsibleGitRef) {
		return true
	}

	return false
}

// SetAnsibleGitRef gets a reference to the given string and assigns it to the AnsibleGitRef field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) SetAnsibleGitRef(v string) {
	o.AnsibleGitRef = &v
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnsibleOptions) {
		toSerialize["ansibleOptions"] = o.AnsibleOptions
	}
	if !IsNil(o.AnsiblePlaybook) {
		toSerialize["ansiblePlaybook"] = o.AnsiblePlaybook
	}
	if !IsNil(o.SshKey) {
		toSerialize["sshKey"] = o.SshKey
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.LocalScriptGitRef) {
		toSerialize["localScriptGitRef"] = o.LocalScriptGitRef
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PasswordHash) {
		toSerialize["passwordHash"] = o.PasswordHash
	}
	if !IsNil(o.LocalScriptGitId) {
		toSerialize["localScriptGitId"] = o.LocalScriptGitId
	}
	if !IsNil(o.AnsibleGitId) {
		toSerialize["ansibleGitId"] = o.AnsibleGitId
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.AnsibleSkipTags) {
		toSerialize["ansibleSkipTags"] = o.AnsibleSkipTags
	}
	if !IsNil(o.AnsibleTags) {
		toSerialize["ansibleTags"] = o.AnsibleTags
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.AnsibleGitRef) {
		toSerialize["ansibleGitRef"] = o.AnsibleGitRef
	}
	return toSerialize, nil
}

type NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions struct {
	value *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions
	isSet bool
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) Get() *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions {
	return v.value
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) Set(val *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions(val *ListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) *NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions {
	return &NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions{value: val, isSet: true}
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOfTaskOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


