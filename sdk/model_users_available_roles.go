/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UsersAvailableRoles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersAvailableRoles{}

// UsersAvailableRoles struct for UsersAvailableRoles
type UsersAvailableRoles struct {
	Roles                []ListUsersAvailableRoles200ResponseRolesInner `json:"roles,omitempty"`
	AdditionalProperties map[string]interface{}                         `json:",remain"`
}

type _UsersAvailableRoles UsersAvailableRoles

// NewUsersAvailableRoles instantiates a new UsersAvailableRoles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersAvailableRoles() *UsersAvailableRoles {
	this := UsersAvailableRoles{}
	return &this
}

// NewUsersAvailableRolesWithDefaults instantiates a new UsersAvailableRoles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersAvailableRolesWithDefaults() *UsersAvailableRoles {
	this := UsersAvailableRoles{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UsersAvailableRoles) GetRoles() []ListUsersAvailableRoles200ResponseRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []ListUsersAvailableRoles200ResponseRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersAvailableRoles) GetRolesOk() ([]ListUsersAvailableRoles200ResponseRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// IsSetRoles returns a boolean if a field has been set.
func (o *UsersAvailableRoles) IsSetRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ListUsersAvailableRoles200ResponseRolesInner and assigns it to the Roles field.
func (o *UsersAvailableRoles) SetRoles(v []ListUsersAvailableRoles200ResponseRolesInner) {
	o.Roles = v
}

func (o UsersAvailableRoles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersAvailableRoles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UsersAvailableRoles) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
