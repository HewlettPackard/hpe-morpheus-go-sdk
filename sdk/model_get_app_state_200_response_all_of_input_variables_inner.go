/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetAppState200ResponseAllOfInputVariablesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppState200ResponseAllOfInputVariablesInner{}

// GetAppState200ResponseAllOfInputVariablesInner struct for GetAppState200ResponseAllOfInputVariablesInner
type GetAppState200ResponseAllOfInputVariablesInner struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
	Sensitive *bool `json:"sensitive,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewGetAppState200ResponseAllOfInputVariablesInner instantiates a new GetAppState200ResponseAllOfInputVariablesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppState200ResponseAllOfInputVariablesInner() *GetAppState200ResponseAllOfInputVariablesInner {
	this := GetAppState200ResponseAllOfInputVariablesInner{}
	return &this
}

// NewGetAppState200ResponseAllOfInputVariablesInnerWithDefaults instantiates a new GetAppState200ResponseAllOfInputVariablesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppState200ResponseAllOfInputVariablesInnerWithDefaults() *GetAppState200ResponseAllOfInputVariablesInner {
	this := GetAppState200ResponseAllOfInputVariablesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAppState200ResponseAllOfInputVariablesInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// IsSetValue returns a boolean if a field has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) IsSetValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GetAppState200ResponseAllOfInputVariablesInner) SetValue(v string) {
	o.Value = &v
}

// GetSensitive returns the Sensitive field value if set, zero value otherwise.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetSensitive() bool {
	if o == nil || IsNil(o.Sensitive) {
		var ret bool
		return ret
	}
	return *o.Sensitive
}

// GetSensitiveOk returns a tuple with the Sensitive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetSensitiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Sensitive) {
		return nil, false
	}
	return o.Sensitive, true
}

// IsSetSensitive returns a boolean if a field has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) IsSetSensitive() bool {
	if o != nil && !IsNil(o.Sensitive) {
		return true
	}

	return false
}

// SetSensitive gets a reference to the given bool and assigns it to the Sensitive field.
func (o *GetAppState200ResponseAllOfInputVariablesInner) SetSensitive(v bool) {
	o.Sensitive = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *GetAppState200ResponseAllOfInputVariablesInner) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAppState200ResponseAllOfInputVariablesInner) SetType(v string) {
	o.Type = &v
}

func (o GetAppState200ResponseAllOfInputVariablesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppState200ResponseAllOfInputVariablesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Sensitive) {
		toSerialize["sensitive"] = o.Sensitive
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetAppState200ResponseAllOfInputVariablesInner struct {
	value *GetAppState200ResponseAllOfInputVariablesInner
	isSet bool
}

func (v NullableGetAppState200ResponseAllOfInputVariablesInner) Get() *GetAppState200ResponseAllOfInputVariablesInner {
	return v.value
}

func (v *NullableGetAppState200ResponseAllOfInputVariablesInner) Set(val *GetAppState200ResponseAllOfInputVariablesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppState200ResponseAllOfInputVariablesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppState200ResponseAllOfInputVariablesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppState200ResponseAllOfInputVariablesInner(val *GetAppState200ResponseAllOfInputVariablesInner) *NullableGetAppState200ResponseAllOfInputVariablesInner {
	return &NullableGetAppState200ResponseAllOfInputVariablesInner{value: val, isSet: true}
}

func (v NullableGetAppState200ResponseAllOfInputVariablesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppState200ResponseAllOfInputVariablesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


