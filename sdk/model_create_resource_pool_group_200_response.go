/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateResourcePoolGroup200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateResourcePoolGroup200Response{}

// CreateResourcePoolGroup200Response struct for CreateResourcePoolGroup200Response
type CreateResourcePoolGroup200Response struct {
	ResourcePoolGroup    *GetResourcePoolGroups200ResponseResourcePoolGroupsInner `json:"resourcePoolGroup,omitempty"`
	AdditionalProperties map[string]interface{}                                   `json:",remain"`
}

type _CreateResourcePoolGroup200Response CreateResourcePoolGroup200Response

// NewCreateResourcePoolGroup200Response instantiates a new CreateResourcePoolGroup200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateResourcePoolGroup200Response() *CreateResourcePoolGroup200Response {
	this := CreateResourcePoolGroup200Response{}
	return &this
}

// NewCreateResourcePoolGroup200ResponseWithDefaults instantiates a new CreateResourcePoolGroup200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateResourcePoolGroup200ResponseWithDefaults() *CreateResourcePoolGroup200Response {
	this := CreateResourcePoolGroup200Response{}
	return &this
}

// GetResourcePoolGroup returns the ResourcePoolGroup field value if set, zero value otherwise.
func (o *CreateResourcePoolGroup200Response) GetResourcePoolGroup() GetResourcePoolGroups200ResponseResourcePoolGroupsInner {
	if o == nil || IsNil(o.ResourcePoolGroup) {
		var ret GetResourcePoolGroups200ResponseResourcePoolGroupsInner
		return ret
	}
	return *o.ResourcePoolGroup
}

// GetResourcePoolGroupOk returns a tuple with the ResourcePoolGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResourcePoolGroup200Response) GetResourcePoolGroupOk() (*GetResourcePoolGroups200ResponseResourcePoolGroupsInner, bool) {
	if o == nil || IsNil(o.ResourcePoolGroup) {
		return nil, false
	}
	return o.ResourcePoolGroup, true
}

// IsSetResourcePoolGroup returns a boolean if a field has been set.
func (o *CreateResourcePoolGroup200Response) IsSetResourcePoolGroup() bool {
	if o != nil && !IsNil(o.ResourcePoolGroup) {
		return true
	}

	return false
}

// SetResourcePoolGroup gets a reference to the given GetResourcePoolGroups200ResponseResourcePoolGroupsInner and assigns it to the ResourcePoolGroup field.
func (o *CreateResourcePoolGroup200Response) SetResourcePoolGroup(v GetResourcePoolGroups200ResponseResourcePoolGroupsInner) {
	o.ResourcePoolGroup = &v
}

func (o CreateResourcePoolGroup200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateResourcePoolGroup200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourcePoolGroup) {
		toSerialize["resourcePoolGroup"] = o.ResourcePoolGroup
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *CreateResourcePoolGroup200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
