/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListInstanceServicePlans200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstanceServicePlans200Response{}

// ListInstanceServicePlans200Response struct for ListInstanceServicePlans200Response
type ListInstanceServicePlans200Response struct {
	Plans []ListInstanceServicePlans200ResponsePlansInner `json:"plans,omitempty"`
}

// NewListInstanceServicePlans200Response instantiates a new ListInstanceServicePlans200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstanceServicePlans200Response() *ListInstanceServicePlans200Response {
	this := ListInstanceServicePlans200Response{}
	return &this
}

// NewListInstanceServicePlans200ResponseWithDefaults instantiates a new ListInstanceServicePlans200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstanceServicePlans200ResponseWithDefaults() *ListInstanceServicePlans200Response {
	this := ListInstanceServicePlans200Response{}
	return &this
}

// GetPlans returns the Plans field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200Response) GetPlans() []ListInstanceServicePlans200ResponsePlansInner {
	if o == nil || IsNil(o.Plans) {
		var ret []ListInstanceServicePlans200ResponsePlansInner
		return ret
	}
	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200Response) GetPlansOk() ([]ListInstanceServicePlans200ResponsePlansInner, bool) {
	if o == nil || IsNil(o.Plans) {
		return nil, false
	}
	return o.Plans, true
}

// IsSetPlans returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200Response) IsSetPlans() bool {
	if o != nil && !IsNil(o.Plans) {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []ListInstanceServicePlans200ResponsePlansInner and assigns it to the Plans field.
func (o *ListInstanceServicePlans200Response) SetPlans(v []ListInstanceServicePlans200ResponsePlansInner) {
	o.Plans = v
}

func (o ListInstanceServicePlans200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstanceServicePlans200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plans) {
		toSerialize["plans"] = o.Plans
	}
	return toSerialize, nil
}

type NullableListInstanceServicePlans200Response struct {
	value *ListInstanceServicePlans200Response
	isSet bool
}

func (v NullableListInstanceServicePlans200Response) Get() *ListInstanceServicePlans200Response {
	return v.value
}

func (v *NullableListInstanceServicePlans200Response) Set(val *ListInstanceServicePlans200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstanceServicePlans200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstanceServicePlans200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstanceServicePlans200Response(val *ListInstanceServicePlans200Response) *NullableListInstanceServicePlans200Response {
	return &NullableListInstanceServicePlans200Response{value: val, isSet: true}
}

func (v NullableListInstanceServicePlans200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstanceServicePlans200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


