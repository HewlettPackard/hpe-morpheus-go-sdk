/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListBackupSettings200ResponseBackupSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackupSettings200ResponseBackupSettings{}

// ListBackupSettings200ResponseBackupSettings struct for ListBackupSettings200ResponseBackupSettings
type ListBackupSettings200ResponseBackupSettings struct {
	BackupsEnabled *bool `json:"backupsEnabled,omitempty"`
	CreateBackups *bool `json:"createBackups,omitempty"`
	BackupAppliance *bool `json:"backupAppliance,omitempty"`
	DefaultStorageBucket *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"defaultStorageBucket,omitempty"`
	DefaultSchedule *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"defaultSchedule,omitempty"`
	RetentionCount *int64 `json:"retentionCount,omitempty"`
}

// NewListBackupSettings200ResponseBackupSettings instantiates a new ListBackupSettings200ResponseBackupSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackupSettings200ResponseBackupSettings() *ListBackupSettings200ResponseBackupSettings {
	this := ListBackupSettings200ResponseBackupSettings{}
	return &this
}

// NewListBackupSettings200ResponseBackupSettingsWithDefaults instantiates a new ListBackupSettings200ResponseBackupSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackupSettings200ResponseBackupSettingsWithDefaults() *ListBackupSettings200ResponseBackupSettings {
	this := ListBackupSettings200ResponseBackupSettings{}
	return &this
}

// GetBackupsEnabled returns the BackupsEnabled field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetBackupsEnabled() bool {
	if o == nil || IsNil(o.BackupsEnabled) {
		var ret bool
		return ret
	}
	return *o.BackupsEnabled
}

// GetBackupsEnabledOk returns a tuple with the BackupsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetBackupsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupsEnabled) {
		return nil, false
	}
	return o.BackupsEnabled, true
}

// IsSetBackupsEnabled returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetBackupsEnabled() bool {
	if o != nil && !IsNil(o.BackupsEnabled) {
		return true
	}

	return false
}

// SetBackupsEnabled gets a reference to the given bool and assigns it to the BackupsEnabled field.
func (o *ListBackupSettings200ResponseBackupSettings) SetBackupsEnabled(v bool) {
	o.BackupsEnabled = &v
}

// GetCreateBackups returns the CreateBackups field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetCreateBackups() bool {
	if o == nil || IsNil(o.CreateBackups) {
		var ret bool
		return ret
	}
	return *o.CreateBackups
}

// GetCreateBackupsOk returns a tuple with the CreateBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetCreateBackupsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateBackups) {
		return nil, false
	}
	return o.CreateBackups, true
}

// IsSetCreateBackups returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetCreateBackups() bool {
	if o != nil && !IsNil(o.CreateBackups) {
		return true
	}

	return false
}

// SetCreateBackups gets a reference to the given bool and assigns it to the CreateBackups field.
func (o *ListBackupSettings200ResponseBackupSettings) SetCreateBackups(v bool) {
	o.CreateBackups = &v
}

// GetBackupAppliance returns the BackupAppliance field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetBackupAppliance() bool {
	if o == nil || IsNil(o.BackupAppliance) {
		var ret bool
		return ret
	}
	return *o.BackupAppliance
}

// GetBackupApplianceOk returns a tuple with the BackupAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetBackupApplianceOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupAppliance) {
		return nil, false
	}
	return o.BackupAppliance, true
}

// IsSetBackupAppliance returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetBackupAppliance() bool {
	if o != nil && !IsNil(o.BackupAppliance) {
		return true
	}

	return false
}

// SetBackupAppliance gets a reference to the given bool and assigns it to the BackupAppliance field.
func (o *ListBackupSettings200ResponseBackupSettings) SetBackupAppliance(v bool) {
	o.BackupAppliance = &v
}

// GetDefaultStorageBucket returns the DefaultStorageBucket field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetDefaultStorageBucket() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.DefaultStorageBucket) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.DefaultStorageBucket
}

// GetDefaultStorageBucketOk returns a tuple with the DefaultStorageBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetDefaultStorageBucketOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.DefaultStorageBucket) {
		return nil, false
	}
	return o.DefaultStorageBucket, true
}

// IsSetDefaultStorageBucket returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetDefaultStorageBucket() bool {
	if o != nil && !IsNil(o.DefaultStorageBucket) {
		return true
	}

	return false
}

// SetDefaultStorageBucket gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the DefaultStorageBucket field.
func (o *ListBackupSettings200ResponseBackupSettings) SetDefaultStorageBucket(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.DefaultStorageBucket = &v
}

// GetDefaultSchedule returns the DefaultSchedule field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetDefaultSchedule() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.DefaultSchedule) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.DefaultSchedule
}

// GetDefaultScheduleOk returns a tuple with the DefaultSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetDefaultScheduleOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.DefaultSchedule) {
		return nil, false
	}
	return o.DefaultSchedule, true
}

// IsSetDefaultSchedule returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetDefaultSchedule() bool {
	if o != nil && !IsNil(o.DefaultSchedule) {
		return true
	}

	return false
}

// SetDefaultSchedule gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the DefaultSchedule field.
func (o *ListBackupSettings200ResponseBackupSettings) SetDefaultSchedule(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.DefaultSchedule = &v
}

// GetRetentionCount returns the RetentionCount field value if set, zero value otherwise.
func (o *ListBackupSettings200ResponseBackupSettings) GetRetentionCount() int64 {
	if o == nil || IsNil(o.RetentionCount) {
		var ret int64
		return ret
	}
	return *o.RetentionCount
}

// GetRetentionCountOk returns a tuple with the RetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupSettings200ResponseBackupSettings) GetRetentionCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RetentionCount) {
		return nil, false
	}
	return o.RetentionCount, true
}

// IsSetRetentionCount returns a boolean if a field has been set.
func (o *ListBackupSettings200ResponseBackupSettings) IsSetRetentionCount() bool {
	if o != nil && !IsNil(o.RetentionCount) {
		return true
	}

	return false
}

// SetRetentionCount gets a reference to the given int64 and assigns it to the RetentionCount field.
func (o *ListBackupSettings200ResponseBackupSettings) SetRetentionCount(v int64) {
	o.RetentionCount = &v
}

func (o ListBackupSettings200ResponseBackupSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackupSettings200ResponseBackupSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupsEnabled) {
		toSerialize["backupsEnabled"] = o.BackupsEnabled
	}
	if !IsNil(o.CreateBackups) {
		toSerialize["createBackups"] = o.CreateBackups
	}
	if !IsNil(o.BackupAppliance) {
		toSerialize["backupAppliance"] = o.BackupAppliance
	}
	if !IsNil(o.DefaultStorageBucket) {
		toSerialize["defaultStorageBucket"] = o.DefaultStorageBucket
	}
	if !IsNil(o.DefaultSchedule) {
		toSerialize["defaultSchedule"] = o.DefaultSchedule
	}
	if !IsNil(o.RetentionCount) {
		toSerialize["retentionCount"] = o.RetentionCount
	}
	return toSerialize, nil
}

type NullableListBackupSettings200ResponseBackupSettings struct {
	value *ListBackupSettings200ResponseBackupSettings
	isSet bool
}

func (v NullableListBackupSettings200ResponseBackupSettings) Get() *ListBackupSettings200ResponseBackupSettings {
	return v.value
}

func (v *NullableListBackupSettings200ResponseBackupSettings) Set(val *ListBackupSettings200ResponseBackupSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackupSettings200ResponseBackupSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackupSettings200ResponseBackupSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackupSettings200ResponseBackupSettings(val *ListBackupSettings200ResponseBackupSettings) *NullableListBackupSettings200ResponseBackupSettings {
	return &NullableListBackupSettings200ResponseBackupSettings{value: val, isSet: true}
}

func (v NullableListBackupSettings200ResponseBackupSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackupSettings200ResponseBackupSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


