/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddChecks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddChecks200Response{}

// AddChecks200Response struct for AddChecks200Response
type AddChecks200Response struct {
	Check                *GetAlerts200ResponseAllOfChecksInner `json:"check,omitempty"`
	Success              *bool                                 `json:"success,omitempty"`
	AdditionalProperties map[string]interface{}                `json:",remain"`
}

type _AddChecks200Response AddChecks200Response

// NewAddChecks200Response instantiates a new AddChecks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddChecks200Response() *AddChecks200Response {
	this := AddChecks200Response{}
	return &this
}

// NewAddChecks200ResponseWithDefaults instantiates a new AddChecks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddChecks200ResponseWithDefaults() *AddChecks200Response {
	this := AddChecks200Response{}
	return &this
}

// GetCheck returns the Check field value if set, zero value otherwise.
func (o *AddChecks200Response) GetCheck() GetAlerts200ResponseAllOfChecksInner {
	if o == nil || IsNil(o.Check) {
		var ret GetAlerts200ResponseAllOfChecksInner
		return ret
	}
	return *o.Check
}

// GetCheckOk returns a tuple with the Check field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecks200Response) GetCheckOk() (*GetAlerts200ResponseAllOfChecksInner, bool) {
	if o == nil || IsNil(o.Check) {
		return nil, false
	}
	return o.Check, true
}

// IsSetCheck returns a boolean if a field has been set.
func (o *AddChecks200Response) IsSetCheck() bool {
	if o != nil && !IsNil(o.Check) {
		return true
	}

	return false
}

// SetCheck gets a reference to the given GetAlerts200ResponseAllOfChecksInner and assigns it to the Check field.
func (o *AddChecks200Response) SetCheck(v GetAlerts200ResponseAllOfChecksInner) {
	o.Check = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddChecks200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecks200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddChecks200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddChecks200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddChecks200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddChecks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Check) {
		toSerialize["check"] = o.Check
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddChecks200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
