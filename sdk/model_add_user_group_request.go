/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddUserGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserGroupRequest{}

// AddUserGroupRequest struct for AddUserGroupRequest
type AddUserGroupRequest struct {
	UserGroup            AddUserGroupRequestUserGroup `json:"userGroup"`
	AdditionalProperties map[string]interface{}       `json:",remain"`
}

type _AddUserGroupRequest AddUserGroupRequest

// NewAddUserGroupRequest instantiates a new AddUserGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserGroupRequest(userGroup AddUserGroupRequestUserGroup) *AddUserGroupRequest {
	this := AddUserGroupRequest{}
	this.UserGroup = userGroup
	return &this
}

// NewAddUserGroupRequestWithDefaults instantiates a new AddUserGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserGroupRequestWithDefaults() *AddUserGroupRequest {
	this := AddUserGroupRequest{}
	return &this
}

// GetUserGroup returns the UserGroup field value
func (o *AddUserGroupRequest) GetUserGroup() AddUserGroupRequestUserGroup {
	if o == nil {
		var ret AddUserGroupRequestUserGroup
		return ret
	}

	return o.UserGroup
}

// GetUserGroupOk returns a tuple with the UserGroup field value
// and a boolean to check if the value has been set.
func (o *AddUserGroupRequest) GetUserGroupOk() (*AddUserGroupRequestUserGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserGroup, true
}

// SetUserGroup sets field value
func (o *AddUserGroupRequest) SetUserGroup(v AddUserGroupRequestUserGroup) {
	o.UserGroup = v
}

func (o AddUserGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userGroup"] = o.UserGroup

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddUserGroupRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
