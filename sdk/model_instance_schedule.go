/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the InstanceSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceSchedule{}

// InstanceSchedule struct for InstanceSchedule
type InstanceSchedule struct {
	Id *int64 `json:"id,omitempty"`
	ScheduleType *string `json:"scheduleType,omitempty"`
	// Time Zone eg. America/New_York, Europe/Amsterdam, etc. Only used and required for scheduleType `dayOfWeek`
	ScheduleTimezone *string `json:"scheduleTimezone,omitempty"`
	// Start day of the week 1-7 (Sun-Sat). Only used and required for scheduleType `dayOfWeek`
	StartDayOfWeek *int32 `json:"startDayOfWeek,omitempty"`
	// Start time of the day in 24-hour format. Only used and required for scheduleType `dayOfWeek`
	StartTime *string `json:"startTime,omitempty"`
	// End day of the week 1-7 (Sun-Sat). Only used and required for scheduleType `dayOfWeek`
	EndDayOfWeek *int32 `json:"endDayOfWeek,omitempty"`
	// End time of the day in 24-hour format. Only used and required for scheduleType `dayOfWeek`
	EndTime *string `json:"endTime,omitempty"`
	// Start Date. Only used and required for scheduleType `exact`
	StartDate *time.Time `json:"startDate,omitempty"`
	// End Date. Only used and required for scheduleType `exact`
	EndDate *time.Time `json:"endDate,omitempty"`
	// Start day and time or start date formatted for display
	StartDisplay *string `json:"startDisplay,omitempty"`
	// End day and time or end date formatted for display
	EndDisplay *string `json:"endDisplay,omitempty"`
	Threshold *GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold `json:"threshold,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInstanceSchedule instantiates a new InstanceSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceSchedule() *InstanceSchedule {
	this := InstanceSchedule{}
	var scheduleType string = "dayOfWeek"
	this.ScheduleType = &scheduleType
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	return &this
}

// NewInstanceScheduleWithDefaults instantiates a new InstanceSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceScheduleWithDefaults() *InstanceSchedule {
	this := InstanceSchedule{}
	var scheduleType string = "dayOfWeek"
	this.ScheduleType = &scheduleType
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceSchedule) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InstanceSchedule) SetId(v int64) {
	o.Id = &v
}

// GetScheduleType returns the ScheduleType field value if set, zero value otherwise.
func (o *InstanceSchedule) GetScheduleType() string {
	if o == nil || IsNil(o.ScheduleType) {
		var ret string
		return ret
	}
	return *o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetScheduleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleType) {
		return nil, false
	}
	return o.ScheduleType, true
}

// IsSetScheduleType returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetScheduleType() bool {
	if o != nil && !IsNil(o.ScheduleType) {
		return true
	}

	return false
}

// SetScheduleType gets a reference to the given string and assigns it to the ScheduleType field.
func (o *InstanceSchedule) SetScheduleType(v string) {
	o.ScheduleType = &v
}

// GetScheduleTimezone returns the ScheduleTimezone field value if set, zero value otherwise.
func (o *InstanceSchedule) GetScheduleTimezone() string {
	if o == nil || IsNil(o.ScheduleTimezone) {
		var ret string
		return ret
	}
	return *o.ScheduleTimezone
}

// GetScheduleTimezoneOk returns a tuple with the ScheduleTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetScheduleTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleTimezone) {
		return nil, false
	}
	return o.ScheduleTimezone, true
}

// IsSetScheduleTimezone returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetScheduleTimezone() bool {
	if o != nil && !IsNil(o.ScheduleTimezone) {
		return true
	}

	return false
}

// SetScheduleTimezone gets a reference to the given string and assigns it to the ScheduleTimezone field.
func (o *InstanceSchedule) SetScheduleTimezone(v string) {
	o.ScheduleTimezone = &v
}

// GetStartDayOfWeek returns the StartDayOfWeek field value if set, zero value otherwise.
func (o *InstanceSchedule) GetStartDayOfWeek() int32 {
	if o == nil || IsNil(o.StartDayOfWeek) {
		var ret int32
		return ret
	}
	return *o.StartDayOfWeek
}

// GetStartDayOfWeekOk returns a tuple with the StartDayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetStartDayOfWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.StartDayOfWeek) {
		return nil, false
	}
	return o.StartDayOfWeek, true
}

// IsSetStartDayOfWeek returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetStartDayOfWeek() bool {
	if o != nil && !IsNil(o.StartDayOfWeek) {
		return true
	}

	return false
}

// SetStartDayOfWeek gets a reference to the given int32 and assigns it to the StartDayOfWeek field.
func (o *InstanceSchedule) SetStartDayOfWeek(v int32) {
	o.StartDayOfWeek = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *InstanceSchedule) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// IsSetStartTime returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *InstanceSchedule) SetStartTime(v string) {
	o.StartTime = &v
}

// GetEndDayOfWeek returns the EndDayOfWeek field value if set, zero value otherwise.
func (o *InstanceSchedule) GetEndDayOfWeek() int32 {
	if o == nil || IsNil(o.EndDayOfWeek) {
		var ret int32
		return ret
	}
	return *o.EndDayOfWeek
}

// GetEndDayOfWeekOk returns a tuple with the EndDayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetEndDayOfWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.EndDayOfWeek) {
		return nil, false
	}
	return o.EndDayOfWeek, true
}

// IsSetEndDayOfWeek returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetEndDayOfWeek() bool {
	if o != nil && !IsNil(o.EndDayOfWeek) {
		return true
	}

	return false
}

// SetEndDayOfWeek gets a reference to the given int32 and assigns it to the EndDayOfWeek field.
func (o *InstanceSchedule) SetEndDayOfWeek(v int32) {
	o.EndDayOfWeek = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *InstanceSchedule) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// IsSetEndTime returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *InstanceSchedule) SetEndTime(v string) {
	o.EndTime = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InstanceSchedule) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// IsSetStartDate returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *InstanceSchedule) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InstanceSchedule) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// IsSetEndDate returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *InstanceSchedule) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetStartDisplay returns the StartDisplay field value if set, zero value otherwise.
func (o *InstanceSchedule) GetStartDisplay() string {
	if o == nil || IsNil(o.StartDisplay) {
		var ret string
		return ret
	}
	return *o.StartDisplay
}

// GetStartDisplayOk returns a tuple with the StartDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetStartDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.StartDisplay) {
		return nil, false
	}
	return o.StartDisplay, true
}

// IsSetStartDisplay returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetStartDisplay() bool {
	if o != nil && !IsNil(o.StartDisplay) {
		return true
	}

	return false
}

// SetStartDisplay gets a reference to the given string and assigns it to the StartDisplay field.
func (o *InstanceSchedule) SetStartDisplay(v string) {
	o.StartDisplay = &v
}

// GetEndDisplay returns the EndDisplay field value if set, zero value otherwise.
func (o *InstanceSchedule) GetEndDisplay() string {
	if o == nil || IsNil(o.EndDisplay) {
		var ret string
		return ret
	}
	return *o.EndDisplay
}

// GetEndDisplayOk returns a tuple with the EndDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetEndDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.EndDisplay) {
		return nil, false
	}
	return o.EndDisplay, true
}

// IsSetEndDisplay returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetEndDisplay() bool {
	if o != nil && !IsNil(o.EndDisplay) {
		return true
	}

	return false
}

// SetEndDisplay gets a reference to the given string and assigns it to the EndDisplay field.
func (o *InstanceSchedule) SetEndDisplay(v string) {
	o.EndDisplay = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *InstanceSchedule) GetThreshold() GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold {
	if o == nil || IsNil(o.Threshold) {
		var ret GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetThresholdOk() (*GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// IsSetThreshold returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold and assigns it to the Threshold field.
func (o *InstanceSchedule) SetThreshold(v GetInstanceThreshold200ResponseInstanceSchedulesInnerThreshold) {
	o.Threshold = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InstanceSchedule) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InstanceSchedule) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InstanceSchedule) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSchedule) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *InstanceSchedule) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InstanceSchedule) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InstanceSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ScheduleType) {
		toSerialize["scheduleType"] = o.ScheduleType
	}
	if !IsNil(o.ScheduleTimezone) {
		toSerialize["scheduleTimezone"] = o.ScheduleTimezone
	}
	if !IsNil(o.StartDayOfWeek) {
		toSerialize["startDayOfWeek"] = o.StartDayOfWeek
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndDayOfWeek) {
		toSerialize["endDayOfWeek"] = o.EndDayOfWeek
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.StartDisplay) {
		toSerialize["startDisplay"] = o.StartDisplay
	}
	if !IsNil(o.EndDisplay) {
		toSerialize["endDisplay"] = o.EndDisplay
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableInstanceSchedule struct {
	value *InstanceSchedule
	isSet bool
}

func (v NullableInstanceSchedule) Get() *InstanceSchedule {
	return v.value
}

func (v *NullableInstanceSchedule) Set(val *InstanceSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceSchedule(val *InstanceSchedule) *NullableInstanceSchedule {
	return &NullableInstanceSchedule{value: val, isSet: true}
}

func (v NullableInstanceSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


