/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the PrepareAppApply200ResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrepareAppApply200ResponseAllOfData{}

// PrepareAppApply200ResponseAllOfData struct for PrepareAppApply200ResponseAllOfData
type PrepareAppApply200ResponseAllOfData struct {
	Image *string `json:"image,omitempty"`
	Name *string `json:"name,omitempty"`
	AutoValidate *bool `json:"autoValidate,omitempty"`
	Terraform *PrepareAppApply200ResponseAllOfDataTerraform `json:"terraform,omitempty"`
	Type *string `json:"type,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	BlueprintName *string `json:"blueprintName,omitempty"`
	Description *string `json:"description,omitempty"`
	TemplateId *int64 `json:"templateId,omitempty"`
	BlueprintId *int64 `json:"blueprintId,omitempty"`
	Group *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"group,omitempty"`
}

// NewPrepareAppApply200ResponseAllOfData instantiates a new PrepareAppApply200ResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareAppApply200ResponseAllOfData() *PrepareAppApply200ResponseAllOfData {
	this := PrepareAppApply200ResponseAllOfData{}
	return &this
}

// NewPrepareAppApply200ResponseAllOfDataWithDefaults instantiates a new PrepareAppApply200ResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareAppApply200ResponseAllOfDataWithDefaults() *PrepareAppApply200ResponseAllOfData {
	this := PrepareAppApply200ResponseAllOfData{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// IsSetImage returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *PrepareAppApply200ResponseAllOfData) SetImage(v string) {
	o.Image = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PrepareAppApply200ResponseAllOfData) SetName(v string) {
	o.Name = &v
}

// GetAutoValidate returns the AutoValidate field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetAutoValidate() bool {
	if o == nil || IsNil(o.AutoValidate) {
		var ret bool
		return ret
	}
	return *o.AutoValidate
}

// GetAutoValidateOk returns a tuple with the AutoValidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetAutoValidateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoValidate) {
		return nil, false
	}
	return o.AutoValidate, true
}

// IsSetAutoValidate returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetAutoValidate() bool {
	if o != nil && !IsNil(o.AutoValidate) {
		return true
	}

	return false
}

// SetAutoValidate gets a reference to the given bool and assigns it to the AutoValidate field.
func (o *PrepareAppApply200ResponseAllOfData) SetAutoValidate(v bool) {
	o.AutoValidate = &v
}

// GetTerraform returns the Terraform field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetTerraform() PrepareAppApply200ResponseAllOfDataTerraform {
	if o == nil || IsNil(o.Terraform) {
		var ret PrepareAppApply200ResponseAllOfDataTerraform
		return ret
	}
	return *o.Terraform
}

// GetTerraformOk returns a tuple with the Terraform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetTerraformOk() (*PrepareAppApply200ResponseAllOfDataTerraform, bool) {
	if o == nil || IsNil(o.Terraform) {
		return nil, false
	}
	return o.Terraform, true
}

// IsSetTerraform returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetTerraform() bool {
	if o != nil && !IsNil(o.Terraform) {
		return true
	}

	return false
}

// SetTerraform gets a reference to the given PrepareAppApply200ResponseAllOfDataTerraform and assigns it to the Terraform field.
func (o *PrepareAppApply200ResponseAllOfData) SetTerraform(v PrepareAppApply200ResponseAllOfDataTerraform) {
	o.Terraform = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PrepareAppApply200ResponseAllOfData) SetType(v string) {
	o.Type = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *PrepareAppApply200ResponseAllOfData) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetBlueprintName returns the BlueprintName field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetBlueprintName() string {
	if o == nil || IsNil(o.BlueprintName) {
		var ret string
		return ret
	}
	return *o.BlueprintName
}

// GetBlueprintNameOk returns a tuple with the BlueprintName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetBlueprintNameOk() (*string, bool) {
	if o == nil || IsNil(o.BlueprintName) {
		return nil, false
	}
	return o.BlueprintName, true
}

// IsSetBlueprintName returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetBlueprintName() bool {
	if o != nil && !IsNil(o.BlueprintName) {
		return true
	}

	return false
}

// SetBlueprintName gets a reference to the given string and assigns it to the BlueprintName field.
func (o *PrepareAppApply200ResponseAllOfData) SetBlueprintName(v string) {
	o.BlueprintName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PrepareAppApply200ResponseAllOfData) SetDescription(v string) {
	o.Description = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetTemplateId() int64 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int64
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetTemplateIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// IsSetTemplateId returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int64 and assigns it to the TemplateId field.
func (o *PrepareAppApply200ResponseAllOfData) SetTemplateId(v int64) {
	o.TemplateId = &v
}

// GetBlueprintId returns the BlueprintId field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetBlueprintId() int64 {
	if o == nil || IsNil(o.BlueprintId) {
		var ret int64
		return ret
	}
	return *o.BlueprintId
}

// GetBlueprintIdOk returns a tuple with the BlueprintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetBlueprintIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BlueprintId) {
		return nil, false
	}
	return o.BlueprintId, true
}

// IsSetBlueprintId returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetBlueprintId() bool {
	if o != nil && !IsNil(o.BlueprintId) {
		return true
	}

	return false
}

// SetBlueprintId gets a reference to the given int64 and assigns it to the BlueprintId field.
func (o *PrepareAppApply200ResponseAllOfData) SetBlueprintId(v int64) {
	o.BlueprintId = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PrepareAppApply200ResponseAllOfData) GetGroup() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Group) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAppApply200ResponseAllOfData) GetGroupOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// IsSetGroup returns a boolean if a field has been set.
func (o *PrepareAppApply200ResponseAllOfData) IsSetGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Group field.
func (o *PrepareAppApply200ResponseAllOfData) SetGroup(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Group = &v
}

func (o PrepareAppApply200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrepareAppApply200ResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AutoValidate) {
		toSerialize["autoValidate"] = o.AutoValidate
	}
	if !IsNil(o.Terraform) {
		toSerialize["terraform"] = o.Terraform
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.BlueprintName) {
		toSerialize["blueprintName"] = o.BlueprintName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.BlueprintId) {
		toSerialize["blueprintId"] = o.BlueprintId
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullablePrepareAppApply200ResponseAllOfData struct {
	value *PrepareAppApply200ResponseAllOfData
	isSet bool
}

func (v NullablePrepareAppApply200ResponseAllOfData) Get() *PrepareAppApply200ResponseAllOfData {
	return v.value
}

func (v *NullablePrepareAppApply200ResponseAllOfData) Set(val *PrepareAppApply200ResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareAppApply200ResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareAppApply200ResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareAppApply200ResponseAllOfData(val *PrepareAppApply200ResponseAllOfData) *NullablePrepareAppApply200ResponseAllOfData {
	return &NullablePrepareAppApply200ResponseAllOfData{value: val, isSet: true}
}

func (v NullablePrepareAppApply200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareAppApply200ResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


