/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListLogSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLogSettings200Response{}

// ListLogSettings200Response struct for ListLogSettings200Response
type ListLogSettings200Response struct {
	LogSettings *ListLogSettings200ResponseLogSettings `json:"logSettings,omitempty"`
}

// NewListLogSettings200Response instantiates a new ListLogSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLogSettings200Response() *ListLogSettings200Response {
	this := ListLogSettings200Response{}
	return &this
}

// NewListLogSettings200ResponseWithDefaults instantiates a new ListLogSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLogSettings200ResponseWithDefaults() *ListLogSettings200Response {
	this := ListLogSettings200Response{}
	return &this
}

// GetLogSettings returns the LogSettings field value if set, zero value otherwise.
func (o *ListLogSettings200Response) GetLogSettings() ListLogSettings200ResponseLogSettings {
	if o == nil || IsNil(o.LogSettings) {
		var ret ListLogSettings200ResponseLogSettings
		return ret
	}
	return *o.LogSettings
}

// GetLogSettingsOk returns a tuple with the LogSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLogSettings200Response) GetLogSettingsOk() (*ListLogSettings200ResponseLogSettings, bool) {
	if o == nil || IsNil(o.LogSettings) {
		return nil, false
	}
	return o.LogSettings, true
}

// IsSetLogSettings returns a boolean if a field has been set.
func (o *ListLogSettings200Response) IsSetLogSettings() bool {
	if o != nil && !IsNil(o.LogSettings) {
		return true
	}

	return false
}

// SetLogSettings gets a reference to the given ListLogSettings200ResponseLogSettings and assigns it to the LogSettings field.
func (o *ListLogSettings200Response) SetLogSettings(v ListLogSettings200ResponseLogSettings) {
	o.LogSettings = &v
}

func (o ListLogSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLogSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogSettings) {
		toSerialize["logSettings"] = o.LogSettings
	}
	return toSerialize, nil
}

type NullableListLogSettings200Response struct {
	value *ListLogSettings200Response
	isSet bool
}

func (v NullableListLogSettings200Response) Get() *ListLogSettings200Response {
	return v.value
}

func (v *NullableListLogSettings200Response) Set(val *ListLogSettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListLogSettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListLogSettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLogSettings200Response(val *ListLogSettings200Response) *NullableListLogSettings200Response {
	return &NullableListLogSettings200Response{value: val, isSet: true}
}

func (v NullableListLogSettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLogSettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


