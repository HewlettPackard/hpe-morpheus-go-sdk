/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the IdentitySourcesADConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentitySourcesADConfig{}

// IdentitySourcesADConfig struct for IdentitySourcesADConfig
type IdentitySourcesADConfig struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Code *string `json:"code,omitempty"`
	Type *string `json:"type,omitempty"`
	Active *bool `json:"active,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	AutoSyncOnLogin *bool `json:"autoSyncOnLogin,omitempty"`
	ExternalLogin *bool `json:"externalLogin,omitempty"`
	AllowCustomMappings *bool `json:"allowCustomMappings,omitempty"`
	ManualRoleAssignment *bool `json:"manualRoleAssignment,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
	DefaultAccountRole *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole `json:"defaultAccountRole,omitempty"`
	Config *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config `json:"config,omitempty"`
	RoleMappings []ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner `json:"roleMappings,omitempty"`
	Subdomain *string `json:"subdomain,omitempty"`
	LoginURL *string `json:"loginURL,omitempty"`
	ProviderSettings map[string]interface{} `json:"providerSettings,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewIdentitySourcesADConfig instantiates a new IdentitySourcesADConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentitySourcesADConfig() *IdentitySourcesADConfig {
	this := IdentitySourcesADConfig{}
	return &this
}

// NewIdentitySourcesADConfigWithDefaults instantiates a new IdentitySourcesADConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentitySourcesADConfigWithDefaults() *IdentitySourcesADConfig {
	this := IdentitySourcesADConfig{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IdentitySourcesADConfig) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentitySourcesADConfig) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IdentitySourcesADConfig) SetDescription(v string) {
	o.Description = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *IdentitySourcesADConfig) SetCode(v string) {
	o.Code = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentitySourcesADConfig) SetType(v string) {
	o.Type = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *IdentitySourcesADConfig) SetActive(v bool) {
	o.Active = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// IsSetDeleted returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *IdentitySourcesADConfig) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetAutoSyncOnLogin returns the AutoSyncOnLogin field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetAutoSyncOnLogin() bool {
	if o == nil || IsNil(o.AutoSyncOnLogin) {
		var ret bool
		return ret
	}
	return *o.AutoSyncOnLogin
}

// GetAutoSyncOnLoginOk returns a tuple with the AutoSyncOnLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetAutoSyncOnLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSyncOnLogin) {
		return nil, false
	}
	return o.AutoSyncOnLogin, true
}

// IsSetAutoSyncOnLogin returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetAutoSyncOnLogin() bool {
	if o != nil && !IsNil(o.AutoSyncOnLogin) {
		return true
	}

	return false
}

// SetAutoSyncOnLogin gets a reference to the given bool and assigns it to the AutoSyncOnLogin field.
func (o *IdentitySourcesADConfig) SetAutoSyncOnLogin(v bool) {
	o.AutoSyncOnLogin = &v
}

// GetExternalLogin returns the ExternalLogin field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetExternalLogin() bool {
	if o == nil || IsNil(o.ExternalLogin) {
		var ret bool
		return ret
	}
	return *o.ExternalLogin
}

// GetExternalLoginOk returns a tuple with the ExternalLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetExternalLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalLogin) {
		return nil, false
	}
	return o.ExternalLogin, true
}

// IsSetExternalLogin returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetExternalLogin() bool {
	if o != nil && !IsNil(o.ExternalLogin) {
		return true
	}

	return false
}

// SetExternalLogin gets a reference to the given bool and assigns it to the ExternalLogin field.
func (o *IdentitySourcesADConfig) SetExternalLogin(v bool) {
	o.ExternalLogin = &v
}

// GetAllowCustomMappings returns the AllowCustomMappings field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetAllowCustomMappings() bool {
	if o == nil || IsNil(o.AllowCustomMappings) {
		var ret bool
		return ret
	}
	return *o.AllowCustomMappings
}

// GetAllowCustomMappingsOk returns a tuple with the AllowCustomMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetAllowCustomMappingsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCustomMappings) {
		return nil, false
	}
	return o.AllowCustomMappings, true
}

// IsSetAllowCustomMappings returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetAllowCustomMappings() bool {
	if o != nil && !IsNil(o.AllowCustomMappings) {
		return true
	}

	return false
}

// SetAllowCustomMappings gets a reference to the given bool and assigns it to the AllowCustomMappings field.
func (o *IdentitySourcesADConfig) SetAllowCustomMappings(v bool) {
	o.AllowCustomMappings = &v
}

// GetManualRoleAssignment returns the ManualRoleAssignment field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetManualRoleAssignment() bool {
	if o == nil || IsNil(o.ManualRoleAssignment) {
		var ret bool
		return ret
	}
	return *o.ManualRoleAssignment
}

// GetManualRoleAssignmentOk returns a tuple with the ManualRoleAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetManualRoleAssignmentOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualRoleAssignment) {
		return nil, false
	}
	return o.ManualRoleAssignment, true
}

// IsSetManualRoleAssignment returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetManualRoleAssignment() bool {
	if o != nil && !IsNil(o.ManualRoleAssignment) {
		return true
	}

	return false
}

// SetManualRoleAssignment gets a reference to the given bool and assigns it to the ManualRoleAssignment field.
func (o *IdentitySourcesADConfig) SetManualRoleAssignment(v bool) {
	o.ManualRoleAssignment = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *IdentitySourcesADConfig) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

// GetDefaultAccountRole returns the DefaultAccountRole field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetDefaultAccountRole() ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole {
	if o == nil || IsNil(o.DefaultAccountRole) {
		var ret ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole
		return ret
	}
	return *o.DefaultAccountRole
}

// GetDefaultAccountRoleOk returns a tuple with the DefaultAccountRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetDefaultAccountRoleOk() (*ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole, bool) {
	if o == nil || IsNil(o.DefaultAccountRole) {
		return nil, false
	}
	return o.DefaultAccountRole, true
}

// IsSetDefaultAccountRole returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetDefaultAccountRole() bool {
	if o != nil && !IsNil(o.DefaultAccountRole) {
		return true
	}

	return false
}

// SetDefaultAccountRole gets a reference to the given ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole and assigns it to the DefaultAccountRole field.
func (o *IdentitySourcesADConfig) SetDefaultAccountRole(v ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOfDefaultAccountRole) {
	o.DefaultAccountRole = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetConfig() ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config {
	if o == nil || IsNil(o.Config) {
		var ret ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetConfigOk() (*ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config and assigns it to the Config field.
func (o *IdentitySourcesADConfig) SetConfig(v ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2Config) {
	o.Config = &v
}

// GetRoleMappings returns the RoleMappings field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetRoleMappings() []ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner {
	if o == nil || IsNil(o.RoleMappings) {
		var ret []ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner
		return ret
	}
	return o.RoleMappings
}

// GetRoleMappingsOk returns a tuple with the RoleMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetRoleMappingsOk() ([]ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner, bool) {
	if o == nil || IsNil(o.RoleMappings) {
		return nil, false
	}
	return o.RoleMappings, true
}

// IsSetRoleMappings returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetRoleMappings() bool {
	if o != nil && !IsNil(o.RoleMappings) {
		return true
	}

	return false
}

// SetRoleMappings gets a reference to the given []ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner and assigns it to the RoleMappings field.
func (o *IdentitySourcesADConfig) SetRoleMappings(v []ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1RoleMappingsInner) {
	o.RoleMappings = v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// IsSetSubdomain returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *IdentitySourcesADConfig) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetLoginURL returns the LoginURL field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetLoginURL() string {
	if o == nil || IsNil(o.LoginURL) {
		var ret string
		return ret
	}
	return *o.LoginURL
}

// GetLoginURLOk returns a tuple with the LoginURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetLoginURLOk() (*string, bool) {
	if o == nil || IsNil(o.LoginURL) {
		return nil, false
	}
	return o.LoginURL, true
}

// IsSetLoginURL returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetLoginURL() bool {
	if o != nil && !IsNil(o.LoginURL) {
		return true
	}

	return false
}

// SetLoginURL gets a reference to the given string and assigns it to the LoginURL field.
func (o *IdentitySourcesADConfig) SetLoginURL(v string) {
	o.LoginURL = &v
}

// GetProviderSettings returns the ProviderSettings field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetProviderSettings() map[string]interface{} {
	if o == nil || IsNil(o.ProviderSettings) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProviderSettings
}

// GetProviderSettingsOk returns a tuple with the ProviderSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetProviderSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProviderSettings) {
		return map[string]interface{}{}, false
	}
	return o.ProviderSettings, true
}

// IsSetProviderSettings returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetProviderSettings() bool {
	if o != nil && !IsNil(o.ProviderSettings) {
		return true
	}

	return false
}

// SetProviderSettings gets a reference to the given map[string]interface{} and assigns it to the ProviderSettings field.
func (o *IdentitySourcesADConfig) SetProviderSettings(v map[string]interface{}) {
	o.ProviderSettings = v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *IdentitySourcesADConfig) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *IdentitySourcesADConfig) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesADConfig) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *IdentitySourcesADConfig) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *IdentitySourcesADConfig) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o IdentitySourcesADConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentitySourcesADConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.AutoSyncOnLogin) {
		toSerialize["autoSyncOnLogin"] = o.AutoSyncOnLogin
	}
	if !IsNil(o.ExternalLogin) {
		toSerialize["externalLogin"] = o.ExternalLogin
	}
	if !IsNil(o.AllowCustomMappings) {
		toSerialize["allowCustomMappings"] = o.AllowCustomMappings
	}
	if !IsNil(o.ManualRoleAssignment) {
		toSerialize["manualRoleAssignment"] = o.ManualRoleAssignment
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.DefaultAccountRole) {
		toSerialize["defaultAccountRole"] = o.DefaultAccountRole
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.RoleMappings) {
		toSerialize["roleMappings"] = o.RoleMappings
	}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !IsNil(o.LoginURL) {
		toSerialize["loginURL"] = o.LoginURL
	}
	if !IsNil(o.ProviderSettings) {
		toSerialize["providerSettings"] = o.ProviderSettings
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableIdentitySourcesADConfig struct {
	value *IdentitySourcesADConfig
	isSet bool
}

func (v NullableIdentitySourcesADConfig) Get() *IdentitySourcesADConfig {
	return v.value
}

func (v *NullableIdentitySourcesADConfig) Set(val *IdentitySourcesADConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentitySourcesADConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentitySourcesADConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentitySourcesADConfig(val *IdentitySourcesADConfig) *NullableIdentitySourcesADConfig {
	return &NullableIdentitySourcesADConfig{value: val, isSet: true}
}

func (v NullableIdentitySourcesADConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentitySourcesADConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


