/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddStorageServersRequestStorageServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddStorageServersRequestStorageServer{}

// AddStorageServersRequestStorageServer struct for AddStorageServersRequestStorageServer
type AddStorageServersRequestStorageServer struct {
	// Name
	Name string `json:"name"`
	// The `Storage Type` Code or ID
	Type string `json:"type"`
	// description
	Description *string `json:"description,omitempty"`
	// The enabled flag
	Enabled *bool `json:"enabled,omitempty"`
	// Configuration object with parameters that vary by `type`
	Config map[string]interface{} `json:"config"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Array of tenant account ids that are allowed access
	Tenants []GetAlerts200ResponseAllOfChecksInnerAccount `json:"tenants,omitempty"`
}

type _AddStorageServersRequestStorageServer AddStorageServersRequestStorageServer

// NewAddStorageServersRequestStorageServer instantiates a new AddStorageServersRequestStorageServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddStorageServersRequestStorageServer(name string, type_ string, config map[string]interface{}) *AddStorageServersRequestStorageServer {
	this := AddStorageServersRequestStorageServer{}
	this.Name = name
	this.Type = type_
	var enabled bool = true
	this.Enabled = &enabled
	this.Config = config
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewAddStorageServersRequestStorageServerWithDefaults instantiates a new AddStorageServersRequestStorageServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddStorageServersRequestStorageServerWithDefaults() *AddStorageServersRequestStorageServer {
	this := AddStorageServersRequestStorageServer{}
	var enabled bool = true
	this.Enabled = &enabled
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetName returns the Name field value
func (o *AddStorageServersRequestStorageServer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddStorageServersRequestStorageServer) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AddStorageServersRequestStorageServer) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddStorageServersRequestStorageServer) SetType(v string) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddStorageServersRequestStorageServer) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddStorageServersRequestStorageServer) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddStorageServersRequestStorageServer) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddStorageServersRequestStorageServer) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *AddStorageServersRequestStorageServer) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddStorageServersRequestStorageServer) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetConfig returns the Config field value
func (o *AddStorageServersRequestStorageServer) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *AddStorageServersRequestStorageServer) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AddStorageServersRequestStorageServer) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *AddStorageServersRequestStorageServer) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AddStorageServersRequestStorageServer) SetVisibility(v string) {
	o.Visibility = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *AddStorageServersRequestStorageServer) GetTenants() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Tenants) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServersRequestStorageServer) GetTenantsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *AddStorageServersRequestStorageServer) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Tenants field.
func (o *AddStorageServersRequestStorageServer) SetTenants(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Tenants = v
}

func (o AddStorageServersRequestStorageServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddStorageServersRequestStorageServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["config"] = o.Config
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

func (o *AddStorageServersRequestStorageServer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddStorageServersRequestStorageServer := _AddStorageServersRequestStorageServer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddStorageServersRequestStorageServer)

	if err != nil {
		return err
	}

	*o = AddStorageServersRequestStorageServer(varAddStorageServersRequestStorageServer)

	return err
}

type NullableAddStorageServersRequestStorageServer struct {
	value *AddStorageServersRequestStorageServer
	isSet bool
}

func (v NullableAddStorageServersRequestStorageServer) Get() *AddStorageServersRequestStorageServer {
	return v.value
}

func (v *NullableAddStorageServersRequestStorageServer) Set(val *AddStorageServersRequestStorageServer) {
	v.value = val
	v.isSet = true
}

func (v NullableAddStorageServersRequestStorageServer) IsSet() bool {
	return v.isSet
}

func (v *NullableAddStorageServersRequestStorageServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddStorageServersRequestStorageServer(val *AddStorageServersRequestStorageServer) *NullableAddStorageServersRequestStorageServer {
	return &NullableAddStorageServersRequestStorageServer{value: val, isSet: true}
}

func (v NullableAddStorageServersRequestStorageServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddStorageServersRequestStorageServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


