/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdatePluginRequestPlugin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePluginRequestPlugin{}

// UpdatePluginRequestPlugin struct for UpdatePluginRequestPlugin
type UpdatePluginRequestPlugin struct {
	// Can be used to disable the plugin
	Enabled *bool `json:"enabled,omitempty"`
	// Configuration object that contains settings for the applicable option types.
	Config map[string]interface{} `json:"config,omitempty"`
}

// NewUpdatePluginRequestPlugin instantiates a new UpdatePluginRequestPlugin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePluginRequestPlugin() *UpdatePluginRequestPlugin {
	this := UpdatePluginRequestPlugin{}
	return &this
}

// NewUpdatePluginRequestPluginWithDefaults instantiates a new UpdatePluginRequestPlugin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePluginRequestPluginWithDefaults() *UpdatePluginRequestPlugin {
	this := UpdatePluginRequestPlugin{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdatePluginRequestPlugin) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePluginRequestPlugin) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *UpdatePluginRequestPlugin) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdatePluginRequestPlugin) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdatePluginRequestPlugin) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePluginRequestPlugin) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdatePluginRequestPlugin) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *UpdatePluginRequestPlugin) SetConfig(v map[string]interface{}) {
	o.Config = v
}

func (o UpdatePluginRequestPlugin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePluginRequestPlugin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableUpdatePluginRequestPlugin struct {
	value *UpdatePluginRequestPlugin
	isSet bool
}

func (v NullableUpdatePluginRequestPlugin) Get() *UpdatePluginRequestPlugin {
	return v.value
}

func (v *NullableUpdatePluginRequestPlugin) Set(val *UpdatePluginRequestPlugin) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePluginRequestPlugin) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePluginRequestPlugin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePluginRequestPlugin(val *UpdatePluginRequestPlugin) *NullableUpdatePluginRequestPlugin {
	return &NullableUpdatePluginRequestPlugin{value: val, isSet: true}
}

func (v NullableUpdatePluginRequestPlugin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePluginRequestPlugin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


