/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListBackupResults200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackupResults200Response{}

// ListBackupResults200Response struct for ListBackupResults200Response
type ListBackupResults200Response struct {
	Results []ListBackupResults200ResponseAllOfResultsInner `json:"results,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListBackupResults200Response instantiates a new ListBackupResults200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackupResults200Response() *ListBackupResults200Response {
	this := ListBackupResults200Response{}
	return &this
}

// NewListBackupResults200ResponseWithDefaults instantiates a new ListBackupResults200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackupResults200ResponseWithDefaults() *ListBackupResults200Response {
	this := ListBackupResults200Response{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *ListBackupResults200Response) GetResults() []ListBackupResults200ResponseAllOfResultsInner {
	if o == nil || IsNil(o.Results) {
		var ret []ListBackupResults200ResponseAllOfResultsInner
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupResults200Response) GetResultsOk() ([]ListBackupResults200ResponseAllOfResultsInner, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// IsSetResults returns a boolean if a field has been set.
func (o *ListBackupResults200Response) IsSetResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []ListBackupResults200ResponseAllOfResultsInner and assigns it to the Results field.
func (o *ListBackupResults200Response) SetResults(v []ListBackupResults200ResponseAllOfResultsInner) {
	o.Results = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListBackupResults200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupResults200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListBackupResults200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListBackupResults200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListBackupResults200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackupResults200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListBackupResults200Response struct {
	value *ListBackupResults200Response
	isSet bool
}

func (v NullableListBackupResults200Response) Get() *ListBackupResults200Response {
	return v.value
}

func (v *NullableListBackupResults200Response) Set(val *ListBackupResults200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackupResults200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackupResults200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackupResults200Response(val *ListBackupResults200Response) *NullableListBackupResults200Response {
	return &NullableListBackupResults200Response{value: val, isSet: true}
}

func (v NullableListBackupResults200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackupResults200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


