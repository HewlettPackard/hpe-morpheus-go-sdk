/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListUserGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUserGroups200Response{}

// ListUserGroups200Response struct for ListUserGroups200Response
type ListUserGroups200Response struct {
	UserGroups []ListUserGroups200ResponseAllOfUserGroupsInner `json:"userGroups,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListUserGroups200Response instantiates a new ListUserGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserGroups200Response() *ListUserGroups200Response {
	this := ListUserGroups200Response{}
	return &this
}

// NewListUserGroups200ResponseWithDefaults instantiates a new ListUserGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserGroups200ResponseWithDefaults() *ListUserGroups200Response {
	this := ListUserGroups200Response{}
	return &this
}

// GetUserGroups returns the UserGroups field value if set, zero value otherwise.
func (o *ListUserGroups200Response) GetUserGroups() []ListUserGroups200ResponseAllOfUserGroupsInner {
	if o == nil || IsNil(o.UserGroups) {
		var ret []ListUserGroups200ResponseAllOfUserGroupsInner
		return ret
	}
	return o.UserGroups
}

// GetUserGroupsOk returns a tuple with the UserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserGroups200Response) GetUserGroupsOk() ([]ListUserGroups200ResponseAllOfUserGroupsInner, bool) {
	if o == nil || IsNil(o.UserGroups) {
		return nil, false
	}
	return o.UserGroups, true
}

// IsSetUserGroups returns a boolean if a field has been set.
func (o *ListUserGroups200Response) IsSetUserGroups() bool {
	if o != nil && !IsNil(o.UserGroups) {
		return true
	}

	return false
}

// SetUserGroups gets a reference to the given []ListUserGroups200ResponseAllOfUserGroupsInner and assigns it to the UserGroups field.
func (o *ListUserGroups200Response) SetUserGroups(v []ListUserGroups200ResponseAllOfUserGroupsInner) {
	o.UserGroups = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListUserGroups200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserGroups200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListUserGroups200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListUserGroups200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListUserGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUserGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserGroups) {
		toSerialize["userGroups"] = o.UserGroups
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListUserGroups200Response struct {
	value *ListUserGroups200Response
	isSet bool
}

func (v NullableListUserGroups200Response) Get() *ListUserGroups200Response {
	return v.value
}

func (v *NullableListUserGroups200Response) Set(val *ListUserGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserGroups200Response(val *ListUserGroups200Response) *NullableListUserGroups200Response {
	return &NullableListUserGroups200Response{value: val, isSet: true}
}

func (v NullableListUserGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


