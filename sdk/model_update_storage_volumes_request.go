/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateStorageVolumesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStorageVolumesRequest{}

// UpdateStorageVolumesRequest struct for UpdateStorageVolumesRequest
type UpdateStorageVolumesRequest struct {
	StorageVolume UpdateStorageVolumesRequestStorageVolume `json:"storageVolume"`
}

type _UpdateStorageVolumesRequest UpdateStorageVolumesRequest

// NewUpdateStorageVolumesRequest instantiates a new UpdateStorageVolumesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStorageVolumesRequest(storageVolume UpdateStorageVolumesRequestStorageVolume) *UpdateStorageVolumesRequest {
	this := UpdateStorageVolumesRequest{}
	this.StorageVolume = storageVolume
	return &this
}

// NewUpdateStorageVolumesRequestWithDefaults instantiates a new UpdateStorageVolumesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStorageVolumesRequestWithDefaults() *UpdateStorageVolumesRequest {
	this := UpdateStorageVolumesRequest{}
	return &this
}

// GetStorageVolume returns the StorageVolume field value
func (o *UpdateStorageVolumesRequest) GetStorageVolume() UpdateStorageVolumesRequestStorageVolume {
	if o == nil {
		var ret UpdateStorageVolumesRequestStorageVolume
		return ret
	}

	return o.StorageVolume
}

// GetStorageVolumeOk returns a tuple with the StorageVolume field value
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequest) GetStorageVolumeOk() (*UpdateStorageVolumesRequestStorageVolume, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageVolume, true
}

// SetStorageVolume sets field value
func (o *UpdateStorageVolumesRequest) SetStorageVolume(v UpdateStorageVolumesRequestStorageVolume) {
	o.StorageVolume = v
}

func (o UpdateStorageVolumesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStorageVolumesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storageVolume"] = o.StorageVolume
	return toSerialize, nil
}

func (o *UpdateStorageVolumesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"storageVolume",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateStorageVolumesRequest := _UpdateStorageVolumesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateStorageVolumesRequest)

	if err != nil {
		return err
	}

	*o = UpdateStorageVolumesRequest(varUpdateStorageVolumesRequest)

	return err
}

type NullableUpdateStorageVolumesRequest struct {
	value *UpdateStorageVolumesRequest
	isSet bool
}

func (v NullableUpdateStorageVolumesRequest) Get() *UpdateStorageVolumesRequest {
	return v.value
}

func (v *NullableUpdateStorageVolumesRequest) Set(val *UpdateStorageVolumesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStorageVolumesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStorageVolumesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStorageVolumesRequest(val *UpdateStorageVolumesRequest) *NullableUpdateStorageVolumesRequest {
	return &NullableUpdateStorageVolumesRequest{value: val, isSet: true}
}

func (v NullableUpdateStorageVolumesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStorageVolumesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


