/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateCloudFolders200ResponseFolder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCloudFolders200ResponseFolder{}

// UpdateCloudFolders200ResponseFolder struct for UpdateCloudFolders200ResponseFolder
type UpdateCloudFolders200ResponseFolder struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Zone *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"zone,omitempty"`
	Parent *GetAlerts200ResponseAllOfCheckGroupsInnerInstance `json:"parent,omitempty"`
	Type *string `json:"type,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	DefaultFolder *bool `json:"defaultFolder,omitempty"`
	DefaultStore *bool `json:"defaultStore,omitempty"`
	Active *bool `json:"active,omitempty"`
	Tenants []ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner `json:"tenants,omitempty"`
	ResourcePermissions *ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission `json:"resourcePermissions,omitempty"`
	Depth *int64 `json:"depth,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewUpdateCloudFolders200ResponseFolder instantiates a new UpdateCloudFolders200ResponseFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCloudFolders200ResponseFolder() *UpdateCloudFolders200ResponseFolder {
	this := UpdateCloudFolders200ResponseFolder{}
	return &this
}

// NewUpdateCloudFolders200ResponseFolderWithDefaults instantiates a new UpdateCloudFolders200ResponseFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCloudFolders200ResponseFolderWithDefaults() *UpdateCloudFolders200ResponseFolder {
	this := UpdateCloudFolders200ResponseFolder{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UpdateCloudFolders200ResponseFolder) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCloudFolders200ResponseFolder) SetName(v string) {
	o.Name = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetZone() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Zone) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetZoneOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Zone field.
func (o *UpdateCloudFolders200ResponseFolder) SetZone(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Zone = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetParent() GetAlerts200ResponseAllOfCheckGroupsInnerInstance {
	if o == nil || IsNil(o.Parent) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInnerInstance
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetParentOk() (*GetAlerts200ResponseAllOfCheckGroupsInnerInstance, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// IsSetParent returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInnerInstance and assigns it to the Parent field.
func (o *UpdateCloudFolders200ResponseFolder) SetParent(v GetAlerts200ResponseAllOfCheckGroupsInnerInstance) {
	o.Parent = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateCloudFolders200ResponseFolder) SetType(v string) {
	o.Type = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *UpdateCloudFolders200ResponseFolder) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *UpdateCloudFolders200ResponseFolder) SetVisibility(v string) {
	o.Visibility = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// IsSetReadOnly returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *UpdateCloudFolders200ResponseFolder) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetDefaultFolder returns the DefaultFolder field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetDefaultFolder() bool {
	if o == nil || IsNil(o.DefaultFolder) {
		var ret bool
		return ret
	}
	return *o.DefaultFolder
}

// GetDefaultFolderOk returns a tuple with the DefaultFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetDefaultFolderOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultFolder) {
		return nil, false
	}
	return o.DefaultFolder, true
}

// IsSetDefaultFolder returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetDefaultFolder() bool {
	if o != nil && !IsNil(o.DefaultFolder) {
		return true
	}

	return false
}

// SetDefaultFolder gets a reference to the given bool and assigns it to the DefaultFolder field.
func (o *UpdateCloudFolders200ResponseFolder) SetDefaultFolder(v bool) {
	o.DefaultFolder = &v
}

// GetDefaultStore returns the DefaultStore field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetDefaultStore() bool {
	if o == nil || IsNil(o.DefaultStore) {
		var ret bool
		return ret
	}
	return *o.DefaultStore
}

// GetDefaultStoreOk returns a tuple with the DefaultStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetDefaultStoreOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultStore) {
		return nil, false
	}
	return o.DefaultStore, true
}

// IsSetDefaultStore returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetDefaultStore() bool {
	if o != nil && !IsNil(o.DefaultStore) {
		return true
	}

	return false
}

// SetDefaultStore gets a reference to the given bool and assigns it to the DefaultStore field.
func (o *UpdateCloudFolders200ResponseFolder) SetDefaultStore(v bool) {
	o.DefaultStore = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *UpdateCloudFolders200ResponseFolder) SetActive(v bool) {
	o.Active = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetTenants() []ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner {
	if o == nil || IsNil(o.Tenants) {
		var ret []ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetTenantsOk() ([]ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner and assigns it to the Tenants field.
func (o *UpdateCloudFolders200ResponseFolder) SetTenants(v []ListCloudDatastores200ResponseAllOfDatastoresInnerTenantsInner) {
	o.Tenants = v
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetResourcePermissions() ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetResourcePermissionsOk() (*ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission and assigns it to the ResourcePermissions field.
func (o *UpdateCloudFolders200ResponseFolder) SetResourcePermissions(v ListCloudDatastores200ResponseAllOfDatastoresInnerResourcePermission) {
	o.ResourcePermissions = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetDepth() int64 {
	if o == nil || IsNil(o.Depth) {
		var ret int64
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetDepthOk() (*int64, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// IsSetDepth returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int64 and assigns it to the Depth field.
func (o *UpdateCloudFolders200ResponseFolder) SetDepth(v int64) {
	o.Depth = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateCloudFolders200ResponseFolder) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFolders200ResponseFolder) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *UpdateCloudFolders200ResponseFolder) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateCloudFolders200ResponseFolder) SetSuccess(v bool) {
	o.Success = &v
}

func (o UpdateCloudFolders200ResponseFolder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCloudFolders200ResponseFolder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if !IsNil(o.DefaultFolder) {
		toSerialize["defaultFolder"] = o.DefaultFolder
	}
	if !IsNil(o.DefaultStore) {
		toSerialize["defaultStore"] = o.DefaultStore
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableUpdateCloudFolders200ResponseFolder struct {
	value *UpdateCloudFolders200ResponseFolder
	isSet bool
}

func (v NullableUpdateCloudFolders200ResponseFolder) Get() *UpdateCloudFolders200ResponseFolder {
	return v.value
}

func (v *NullableUpdateCloudFolders200ResponseFolder) Set(val *UpdateCloudFolders200ResponseFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCloudFolders200ResponseFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCloudFolders200ResponseFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCloudFolders200ResponseFolder(val *UpdateCloudFolders200ResponseFolder) *NullableUpdateCloudFolders200ResponseFolder {
	return &NullableUpdateCloudFolders200ResponseFolder{value: val, isSet: true}
}

func (v NullableUpdateCloudFolders200ResponseFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCloudFolders200ResponseFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


