/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkDhcpRelays200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkDhcpRelays200Response{}

// GetNetworkDhcpRelays200Response struct for GetNetworkDhcpRelays200Response
type GetNetworkDhcpRelays200Response struct {
	NetworkDhcpRelays interface{} `json:"networkDhcpRelays,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewGetNetworkDhcpRelays200Response instantiates a new GetNetworkDhcpRelays200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkDhcpRelays200Response() *GetNetworkDhcpRelays200Response {
	this := GetNetworkDhcpRelays200Response{}
	return &this
}

// NewGetNetworkDhcpRelays200ResponseWithDefaults instantiates a new GetNetworkDhcpRelays200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkDhcpRelays200ResponseWithDefaults() *GetNetworkDhcpRelays200Response {
	this := GetNetworkDhcpRelays200Response{}
	return &this
}

// GetNetworkDhcpRelays returns the NetworkDhcpRelays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetNetworkDhcpRelays200Response) GetNetworkDhcpRelays() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NetworkDhcpRelays
}

// GetNetworkDhcpRelaysOk returns a tuple with the NetworkDhcpRelays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetNetworkDhcpRelays200Response) GetNetworkDhcpRelaysOk() (*interface{}, bool) {
	if o == nil || IsNil(o.NetworkDhcpRelays) {
		return nil, false
	}
	return &o.NetworkDhcpRelays, true
}

// IsSetNetworkDhcpRelays returns a boolean if a field has been set.
func (o *GetNetworkDhcpRelays200Response) IsSetNetworkDhcpRelays() bool {
	if o != nil && !IsNil(o.NetworkDhcpRelays) {
		return true
	}

	return false
}

// SetNetworkDhcpRelays gets a reference to the given interface{} and assigns it to the NetworkDhcpRelays field.
func (o *GetNetworkDhcpRelays200Response) SetNetworkDhcpRelays(v interface{}) {
	o.NetworkDhcpRelays = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetNetworkDhcpRelays200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkDhcpRelays200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *GetNetworkDhcpRelays200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *GetNetworkDhcpRelays200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o GetNetworkDhcpRelays200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkDhcpRelays200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkDhcpRelays != nil {
		toSerialize["networkDhcpRelays"] = o.NetworkDhcpRelays
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableGetNetworkDhcpRelays200Response struct {
	value *GetNetworkDhcpRelays200Response
	isSet bool
}

func (v NullableGetNetworkDhcpRelays200Response) Get() *GetNetworkDhcpRelays200Response {
	return v.value
}

func (v *NullableGetNetworkDhcpRelays200Response) Set(val *GetNetworkDhcpRelays200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkDhcpRelays200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkDhcpRelays200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkDhcpRelays200Response(val *GetNetworkDhcpRelays200Response) *NullableGetNetworkDhcpRelays200Response {
	return &NullableGetNetworkDhcpRelays200Response{value: val, isSet: true}
}

func (v NullableGetNetworkDhcpRelays200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkDhcpRelays200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


