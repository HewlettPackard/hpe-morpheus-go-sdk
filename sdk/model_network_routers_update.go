/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the NetworkRoutersUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkRoutersUpdate{}

// NetworkRoutersUpdate struct for NetworkRoutersUpdate
type NetworkRoutersUpdate struct {
	// Name
	Name *string `json:"name,omitempty"`
	Type *UpdateNetworkRouterRequestNetworkRouterType `json:"type,omitempty"`
	Site *UpdateNetworkRouterRequestNetworkRouterSite `json:"site,omitempty"`
	// Can be used to enable / disable the network router (true, false). Default is on
	Enabled *bool `json:"enabled,omitempty"`
	Zone *UpdateNetworkRouterRequestNetworkRouterZone `json:"zone,omitempty"`
	NetworkServer *UpdateNetworkRouterRequestNetworkRouterNetworkServer `json:"networkServer,omitempty"`
}

// NewNetworkRoutersUpdate instantiates a new NetworkRoutersUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRoutersUpdate() *NetworkRoutersUpdate {
	this := NetworkRoutersUpdate{}
	return &this
}

// NewNetworkRoutersUpdateWithDefaults instantiates a new NetworkRoutersUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRoutersUpdateWithDefaults() *NetworkRoutersUpdate {
	this := NetworkRoutersUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkRoutersUpdate) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetType() UpdateNetworkRouterRequestNetworkRouterType {
	if o == nil || IsNil(o.Type) {
		var ret UpdateNetworkRouterRequestNetworkRouterType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetTypeOk() (*UpdateNetworkRouterRequestNetworkRouterType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given UpdateNetworkRouterRequestNetworkRouterType and assigns it to the Type field.
func (o *NetworkRoutersUpdate) SetType(v UpdateNetworkRouterRequestNetworkRouterType) {
	o.Type = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetSite() UpdateNetworkRouterRequestNetworkRouterSite {
	if o == nil || IsNil(o.Site) {
		var ret UpdateNetworkRouterRequestNetworkRouterSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetSiteOk() (*UpdateNetworkRouterRequestNetworkRouterSite, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// IsSetSite returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given UpdateNetworkRouterRequestNetworkRouterSite and assigns it to the Site field.
func (o *NetworkRoutersUpdate) SetSite(v UpdateNetworkRouterRequestNetworkRouterSite) {
	o.Site = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRoutersUpdate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetZone() UpdateNetworkRouterRequestNetworkRouterZone {
	if o == nil || IsNil(o.Zone) {
		var ret UpdateNetworkRouterRequestNetworkRouterZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetZoneOk() (*UpdateNetworkRouterRequestNetworkRouterZone, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given UpdateNetworkRouterRequestNetworkRouterZone and assigns it to the Zone field.
func (o *NetworkRoutersUpdate) SetZone(v UpdateNetworkRouterRequestNetworkRouterZone) {
	o.Zone = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *NetworkRoutersUpdate) GetNetworkServer() UpdateNetworkRouterRequestNetworkRouterNetworkServer {
	if o == nil || IsNil(o.NetworkServer) {
		var ret UpdateNetworkRouterRequestNetworkRouterNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersUpdate) GetNetworkServerOk() (*UpdateNetworkRouterRequestNetworkRouterNetworkServer, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *NetworkRoutersUpdate) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given UpdateNetworkRouterRequestNetworkRouterNetworkServer and assigns it to the NetworkServer field.
func (o *NetworkRoutersUpdate) SetNetworkServer(v UpdateNetworkRouterRequestNetworkRouterNetworkServer) {
	o.NetworkServer = &v
}

func (o NetworkRoutersUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkRoutersUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	return toSerialize, nil
}

type NullableNetworkRoutersUpdate struct {
	value *NetworkRoutersUpdate
	isSet bool
}

func (v NullableNetworkRoutersUpdate) Get() *NetworkRoutersUpdate {
	return v.value
}

func (v *NullableNetworkRoutersUpdate) Set(val *NetworkRoutersUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRoutersUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRoutersUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRoutersUpdate(val *NetworkRoutersUpdate) *NullableNetworkRoutersUpdate {
	return &NullableNetworkRoutersUpdate{value: val, isSet: true}
}

func (v NullableNetworkRoutersUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRoutersUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


