/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTenantsAvailableRoles200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTenantsAvailableRoles200Response{}

// ListTenantsAvailableRoles200Response struct for ListTenantsAvailableRoles200Response
type ListTenantsAvailableRoles200Response struct {
	Roles []ListTenantsAvailableRoles200ResponseRolesInner `json:"roles,omitempty"`
}

// NewListTenantsAvailableRoles200Response instantiates a new ListTenantsAvailableRoles200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTenantsAvailableRoles200Response() *ListTenantsAvailableRoles200Response {
	this := ListTenantsAvailableRoles200Response{}
	return &this
}

// NewListTenantsAvailableRoles200ResponseWithDefaults instantiates a new ListTenantsAvailableRoles200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTenantsAvailableRoles200ResponseWithDefaults() *ListTenantsAvailableRoles200Response {
	this := ListTenantsAvailableRoles200Response{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200Response) GetRoles() []ListTenantsAvailableRoles200ResponseRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []ListTenantsAvailableRoles200ResponseRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200Response) GetRolesOk() ([]ListTenantsAvailableRoles200ResponseRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// IsSetRoles returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200Response) IsSetRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ListTenantsAvailableRoles200ResponseRolesInner and assigns it to the Roles field.
func (o *ListTenantsAvailableRoles200Response) SetRoles(v []ListTenantsAvailableRoles200ResponseRolesInner) {
	o.Roles = v
}

func (o ListTenantsAvailableRoles200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTenantsAvailableRoles200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableListTenantsAvailableRoles200Response struct {
	value *ListTenantsAvailableRoles200Response
	isSet bool
}

func (v NullableListTenantsAvailableRoles200Response) Get() *ListTenantsAvailableRoles200Response {
	return v.value
}

func (v *NullableListTenantsAvailableRoles200Response) Set(val *ListTenantsAvailableRoles200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListTenantsAvailableRoles200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListTenantsAvailableRoles200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTenantsAvailableRoles200Response(val *ListTenantsAvailableRoles200Response) *NullableListTenantsAvailableRoles200Response {
	return &NullableListTenantsAvailableRoles200Response{value: val, isSet: true}
}

func (v NullableListTenantsAvailableRoles200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTenantsAvailableRoles200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


