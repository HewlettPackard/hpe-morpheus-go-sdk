/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHealth200ResponseAllOfHealthThreads type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHealth200ResponseAllOfHealthThreads{}

// ListHealth200ResponseAllOfHealthThreads struct for ListHealth200ResponseAllOfHealthThreads
type ListHealth200ResponseAllOfHealthThreads struct {
	Success *bool `json:"success,omitempty"`
	ThreadList []map[string]interface{} `json:"threadList,omitempty"`
	BusyThreads []ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner `json:"busyThreads,omitempty"`
	BlockedThreads []map[string]interface{} `json:"blockedThreads,omitempty"`
	RunningThreads []map[string]interface{} `json:"runningThreads,omitempty"`
	TotalCpuTime *int64 `json:"totalCpuTime,omitempty"`
	TotalThreads *int64 `json:"totalThreads,omitempty"`
	RunningWebThreads *int64 `json:"runningWebThreads,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewListHealth200ResponseAllOfHealthThreads instantiates a new ListHealth200ResponseAllOfHealthThreads object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHealth200ResponseAllOfHealthThreads() *ListHealth200ResponseAllOfHealthThreads {
	this := ListHealth200ResponseAllOfHealthThreads{}
	return &this
}

// NewListHealth200ResponseAllOfHealthThreadsWithDefaults instantiates a new ListHealth200ResponseAllOfHealthThreads object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHealth200ResponseAllOfHealthThreadsWithDefaults() *ListHealth200ResponseAllOfHealthThreads {
	this := ListHealth200ResponseAllOfHealthThreads{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetSuccess(v bool) {
	o.Success = &v
}

// GetThreadList returns the ThreadList field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetThreadList() []map[string]interface{} {
	if o == nil || IsNil(o.ThreadList) {
		var ret []map[string]interface{}
		return ret
	}
	return o.ThreadList
}

// GetThreadListOk returns a tuple with the ThreadList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetThreadListOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ThreadList) {
		return nil, false
	}
	return o.ThreadList, true
}

// IsSetThreadList returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetThreadList() bool {
	if o != nil && !IsNil(o.ThreadList) {
		return true
	}

	return false
}

// SetThreadList gets a reference to the given []map[string]interface{} and assigns it to the ThreadList field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetThreadList(v []map[string]interface{}) {
	o.ThreadList = v
}

// GetBusyThreads returns the BusyThreads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetBusyThreads() []ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner {
	if o == nil || IsNil(o.BusyThreads) {
		var ret []ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner
		return ret
	}
	return o.BusyThreads
}

// GetBusyThreadsOk returns a tuple with the BusyThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetBusyThreadsOk() ([]ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner, bool) {
	if o == nil || IsNil(o.BusyThreads) {
		return nil, false
	}
	return o.BusyThreads, true
}

// IsSetBusyThreads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetBusyThreads() bool {
	if o != nil && !IsNil(o.BusyThreads) {
		return true
	}

	return false
}

// SetBusyThreads gets a reference to the given []ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner and assigns it to the BusyThreads field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetBusyThreads(v []ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) {
	o.BusyThreads = v
}

// GetBlockedThreads returns the BlockedThreads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetBlockedThreads() []map[string]interface{} {
	if o == nil || IsNil(o.BlockedThreads) {
		var ret []map[string]interface{}
		return ret
	}
	return o.BlockedThreads
}

// GetBlockedThreadsOk returns a tuple with the BlockedThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetBlockedThreadsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.BlockedThreads) {
		return nil, false
	}
	return o.BlockedThreads, true
}

// IsSetBlockedThreads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetBlockedThreads() bool {
	if o != nil && !IsNil(o.BlockedThreads) {
		return true
	}

	return false
}

// SetBlockedThreads gets a reference to the given []map[string]interface{} and assigns it to the BlockedThreads field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetBlockedThreads(v []map[string]interface{}) {
	o.BlockedThreads = v
}

// GetRunningThreads returns the RunningThreads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetRunningThreads() []map[string]interface{} {
	if o == nil || IsNil(o.RunningThreads) {
		var ret []map[string]interface{}
		return ret
	}
	return o.RunningThreads
}

// GetRunningThreadsOk returns a tuple with the RunningThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetRunningThreadsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.RunningThreads) {
		return nil, false
	}
	return o.RunningThreads, true
}

// IsSetRunningThreads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetRunningThreads() bool {
	if o != nil && !IsNil(o.RunningThreads) {
		return true
	}

	return false
}

// SetRunningThreads gets a reference to the given []map[string]interface{} and assigns it to the RunningThreads field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetRunningThreads(v []map[string]interface{}) {
	o.RunningThreads = v
}

// GetTotalCpuTime returns the TotalCpuTime field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetTotalCpuTime() int64 {
	if o == nil || IsNil(o.TotalCpuTime) {
		var ret int64
		return ret
	}
	return *o.TotalCpuTime
}

// GetTotalCpuTimeOk returns a tuple with the TotalCpuTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetTotalCpuTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCpuTime) {
		return nil, false
	}
	return o.TotalCpuTime, true
}

// IsSetTotalCpuTime returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetTotalCpuTime() bool {
	if o != nil && !IsNil(o.TotalCpuTime) {
		return true
	}

	return false
}

// SetTotalCpuTime gets a reference to the given int64 and assigns it to the TotalCpuTime field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetTotalCpuTime(v int64) {
	o.TotalCpuTime = &v
}

// GetTotalThreads returns the TotalThreads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetTotalThreads() int64 {
	if o == nil || IsNil(o.TotalThreads) {
		var ret int64
		return ret
	}
	return *o.TotalThreads
}

// GetTotalThreadsOk returns a tuple with the TotalThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetTotalThreadsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalThreads) {
		return nil, false
	}
	return o.TotalThreads, true
}

// IsSetTotalThreads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetTotalThreads() bool {
	if o != nil && !IsNil(o.TotalThreads) {
		return true
	}

	return false
}

// SetTotalThreads gets a reference to the given int64 and assigns it to the TotalThreads field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetTotalThreads(v int64) {
	o.TotalThreads = &v
}

// GetRunningWebThreads returns the RunningWebThreads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetRunningWebThreads() int64 {
	if o == nil || IsNil(o.RunningWebThreads) {
		var ret int64
		return ret
	}
	return *o.RunningWebThreads
}

// GetRunningWebThreadsOk returns a tuple with the RunningWebThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetRunningWebThreadsOk() (*int64, bool) {
	if o == nil || IsNil(o.RunningWebThreads) {
		return nil, false
	}
	return o.RunningWebThreads, true
}

// IsSetRunningWebThreads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetRunningWebThreads() bool {
	if o != nil && !IsNil(o.RunningWebThreads) {
		return true
	}

	return false
}

// SetRunningWebThreads gets a reference to the given int64 and assigns it to the RunningWebThreads field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetRunningWebThreads(v int64) {
	o.RunningWebThreads = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreads) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreads) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListHealth200ResponseAllOfHealthThreads) SetStatus(v string) {
	o.Status = &v
}

func (o ListHealth200ResponseAllOfHealthThreads) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHealth200ResponseAllOfHealthThreads) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ThreadList) {
		toSerialize["threadList"] = o.ThreadList
	}
	if !IsNil(o.BusyThreads) {
		toSerialize["busyThreads"] = o.BusyThreads
	}
	if !IsNil(o.BlockedThreads) {
		toSerialize["blockedThreads"] = o.BlockedThreads
	}
	if !IsNil(o.RunningThreads) {
		toSerialize["runningThreads"] = o.RunningThreads
	}
	if !IsNil(o.TotalCpuTime) {
		toSerialize["totalCpuTime"] = o.TotalCpuTime
	}
	if !IsNil(o.TotalThreads) {
		toSerialize["totalThreads"] = o.TotalThreads
	}
	if !IsNil(o.RunningWebThreads) {
		toSerialize["runningWebThreads"] = o.RunningWebThreads
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableListHealth200ResponseAllOfHealthThreads struct {
	value *ListHealth200ResponseAllOfHealthThreads
	isSet bool
}

func (v NullableListHealth200ResponseAllOfHealthThreads) Get() *ListHealth200ResponseAllOfHealthThreads {
	return v.value
}

func (v *NullableListHealth200ResponseAllOfHealthThreads) Set(val *ListHealth200ResponseAllOfHealthThreads) {
	v.value = val
	v.isSet = true
}

func (v NullableListHealth200ResponseAllOfHealthThreads) IsSet() bool {
	return v.isSet
}

func (v *NullableListHealth200ResponseAllOfHealthThreads) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHealth200ResponseAllOfHealthThreads(val *ListHealth200ResponseAllOfHealthThreads) *NullableListHealth200ResponseAllOfHealthThreads {
	return &NullableListHealth200ResponseAllOfHealthThreads{value: val, isSet: true}
}

func (v NullableListHealth200ResponseAllOfHealthThreads) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHealth200ResponseAllOfHealthThreads) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


