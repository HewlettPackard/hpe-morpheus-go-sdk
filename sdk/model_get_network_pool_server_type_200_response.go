/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkPoolServerType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkPoolServerType200Response{}

// GetNetworkPoolServerType200Response struct for GetNetworkPoolServerType200Response
type GetNetworkPoolServerType200Response struct {
	NetworkPoolServerType *ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner `json:"networkPoolServerType,omitempty"`
}

// NewGetNetworkPoolServerType200Response instantiates a new GetNetworkPoolServerType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkPoolServerType200Response() *GetNetworkPoolServerType200Response {
	this := GetNetworkPoolServerType200Response{}
	return &this
}

// NewGetNetworkPoolServerType200ResponseWithDefaults instantiates a new GetNetworkPoolServerType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkPoolServerType200ResponseWithDefaults() *GetNetworkPoolServerType200Response {
	this := GetNetworkPoolServerType200Response{}
	return &this
}

// GetNetworkPoolServerType returns the NetworkPoolServerType field value if set, zero value otherwise.
func (o *GetNetworkPoolServerType200Response) GetNetworkPoolServerType() ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner {
	if o == nil || IsNil(o.NetworkPoolServerType) {
		var ret ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner
		return ret
	}
	return *o.NetworkPoolServerType
}

// GetNetworkPoolServerTypeOk returns a tuple with the NetworkPoolServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkPoolServerType200Response) GetNetworkPoolServerTypeOk() (*ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner, bool) {
	if o == nil || IsNil(o.NetworkPoolServerType) {
		return nil, false
	}
	return o.NetworkPoolServerType, true
}

// IsSetNetworkPoolServerType returns a boolean if a field has been set.
func (o *GetNetworkPoolServerType200Response) IsSetNetworkPoolServerType() bool {
	if o != nil && !IsNil(o.NetworkPoolServerType) {
		return true
	}

	return false
}

// SetNetworkPoolServerType gets a reference to the given ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner and assigns it to the NetworkPoolServerType field.
func (o *GetNetworkPoolServerType200Response) SetNetworkPoolServerType(v ListNetworkPoolServerTypes200ResponseAllOfNetworkPoolServerTypesInner) {
	o.NetworkPoolServerType = &v
}

func (o GetNetworkPoolServerType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkPoolServerType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkPoolServerType) {
		toSerialize["networkPoolServerType"] = o.NetworkPoolServerType
	}
	return toSerialize, nil
}

type NullableGetNetworkPoolServerType200Response struct {
	value *GetNetworkPoolServerType200Response
	isSet bool
}

func (v NullableGetNetworkPoolServerType200Response) Get() *GetNetworkPoolServerType200Response {
	return v.value
}

func (v *NullableGetNetworkPoolServerType200Response) Set(val *GetNetworkPoolServerType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkPoolServerType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkPoolServerType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkPoolServerType200Response(val *GetNetworkPoolServerType200Response) *NullableGetNetworkPoolServerType200Response {
	return &NullableGetNetworkPoolServerType200Response{value: val, isSet: true}
}

func (v NullableGetNetworkPoolServerType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkPoolServerType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


