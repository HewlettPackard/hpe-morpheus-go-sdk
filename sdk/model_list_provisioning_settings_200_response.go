/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListProvisioningSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProvisioningSettings200Response{}

// ListProvisioningSettings200Response struct for ListProvisioningSettings200Response
type ListProvisioningSettings200Response struct {
	ProvisioningSettings *ListProvisioningSettings200ResponseProvisioningSettings `json:"provisioningSettings,omitempty"`
	AdditionalProperties map[string]interface{}                                   `json:",remain"`
}

type _ListProvisioningSettings200Response ListProvisioningSettings200Response

// NewListProvisioningSettings200Response instantiates a new ListProvisioningSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProvisioningSettings200Response() *ListProvisioningSettings200Response {
	this := ListProvisioningSettings200Response{}
	return &this
}

// NewListProvisioningSettings200ResponseWithDefaults instantiates a new ListProvisioningSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProvisioningSettings200ResponseWithDefaults() *ListProvisioningSettings200Response {
	this := ListProvisioningSettings200Response{}
	return &this
}

// GetProvisioningSettings returns the ProvisioningSettings field value if set, zero value otherwise.
func (o *ListProvisioningSettings200Response) GetProvisioningSettings() ListProvisioningSettings200ResponseProvisioningSettings {
	if o == nil || IsNil(o.ProvisioningSettings) {
		var ret ListProvisioningSettings200ResponseProvisioningSettings
		return ret
	}
	return *o.ProvisioningSettings
}

// GetProvisioningSettingsOk returns a tuple with the ProvisioningSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProvisioningSettings200Response) GetProvisioningSettingsOk() (*ListProvisioningSettings200ResponseProvisioningSettings, bool) {
	if o == nil || IsNil(o.ProvisioningSettings) {
		return nil, false
	}
	return o.ProvisioningSettings, true
}

// IsSetProvisioningSettings returns a boolean if a field has been set.
func (o *ListProvisioningSettings200Response) IsSetProvisioningSettings() bool {
	if o != nil && !IsNil(o.ProvisioningSettings) {
		return true
	}

	return false
}

// SetProvisioningSettings gets a reference to the given ListProvisioningSettings200ResponseProvisioningSettings and assigns it to the ProvisioningSettings field.
func (o *ListProvisioningSettings200Response) SetProvisioningSettings(v ListProvisioningSettings200ResponseProvisioningSettings) {
	o.ProvisioningSettings = &v
}

func (o ListProvisioningSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProvisioningSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProvisioningSettings) {
		toSerialize["provisioningSettings"] = o.ProvisioningSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListProvisioningSettings200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
