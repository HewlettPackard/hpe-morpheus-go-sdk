/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHealth200ResponseAllOfHealthRabbitQueuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHealth200ResponseAllOfHealthRabbitQueuesInner{}

// ListHealth200ResponseAllOfHealthRabbitQueuesInner struct for ListHealth200ResponseAllOfHealthRabbitQueuesInner
type ListHealth200ResponseAllOfHealthRabbitQueuesInner struct {
	Name *string `json:"name,omitempty"`
	Count *int64 `json:"count,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewListHealth200ResponseAllOfHealthRabbitQueuesInner instantiates a new ListHealth200ResponseAllOfHealthRabbitQueuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHealth200ResponseAllOfHealthRabbitQueuesInner() *ListHealth200ResponseAllOfHealthRabbitQueuesInner {
	this := ListHealth200ResponseAllOfHealthRabbitQueuesInner{}
	return &this
}

// NewListHealth200ResponseAllOfHealthRabbitQueuesInnerWithDefaults instantiates a new ListHealth200ResponseAllOfHealthRabbitQueuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHealth200ResponseAllOfHealthRabbitQueuesInnerWithDefaults() *ListHealth200ResponseAllOfHealthRabbitQueuesInner {
	this := ListHealth200ResponseAllOfHealthRabbitQueuesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) SetName(v string) {
	o.Name = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// IsSetCount returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) IsSetCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) SetCount(v int64) {
	o.Count = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListHealth200ResponseAllOfHealthRabbitQueuesInner) SetStatus(v string) {
	o.Status = &v
}

func (o ListHealth200ResponseAllOfHealthRabbitQueuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHealth200ResponseAllOfHealthRabbitQueuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableListHealth200ResponseAllOfHealthRabbitQueuesInner struct {
	value *ListHealth200ResponseAllOfHealthRabbitQueuesInner
	isSet bool
}

func (v NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) Get() *ListHealth200ResponseAllOfHealthRabbitQueuesInner {
	return v.value
}

func (v *NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) Set(val *ListHealth200ResponseAllOfHealthRabbitQueuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHealth200ResponseAllOfHealthRabbitQueuesInner(val *ListHealth200ResponseAllOfHealthRabbitQueuesInner) *NullableListHealth200ResponseAllOfHealthRabbitQueuesInner {
	return &NullableListHealth200ResponseAllOfHealthRabbitQueuesInner{value: val, isSet: true}
}

func (v NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHealth200ResponseAllOfHealthRabbitQueuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


