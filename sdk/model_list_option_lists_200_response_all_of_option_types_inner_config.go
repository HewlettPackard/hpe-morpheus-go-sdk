/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListOptionLists200ResponseAllOfOptionTypesInnerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOptionLists200ResponseAllOfOptionTypesInnerConfig{}

// ListOptionLists200ResponseAllOfOptionTypesInnerConfig struct for ListOptionLists200ResponseAllOfOptionTypesInnerConfig
type ListOptionLists200ResponseAllOfOptionTypesInnerConfig struct {
	SourceHeaders        []ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner `json:"sourceHeaders,omitempty"`
	AdditionalProperties map[string]interface{}                                                    `json:",remain"`
}

type _ListOptionLists200ResponseAllOfOptionTypesInnerConfig ListOptionLists200ResponseAllOfOptionTypesInnerConfig

// NewListOptionLists200ResponseAllOfOptionTypesInnerConfig instantiates a new ListOptionLists200ResponseAllOfOptionTypesInnerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOptionLists200ResponseAllOfOptionTypesInnerConfig() *ListOptionLists200ResponseAllOfOptionTypesInnerConfig {
	this := ListOptionLists200ResponseAllOfOptionTypesInnerConfig{}
	return &this
}

// NewListOptionLists200ResponseAllOfOptionTypesInnerConfigWithDefaults instantiates a new ListOptionLists200ResponseAllOfOptionTypesInnerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOptionLists200ResponseAllOfOptionTypesInnerConfigWithDefaults() *ListOptionLists200ResponseAllOfOptionTypesInnerConfig {
	this := ListOptionLists200ResponseAllOfOptionTypesInnerConfig{}
	return &this
}

// GetSourceHeaders returns the SourceHeaders field value if set, zero value otherwise.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfig) GetSourceHeaders() []ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner {
	if o == nil || IsNil(o.SourceHeaders) {
		var ret []ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner
		return ret
	}
	return o.SourceHeaders
}

// GetSourceHeadersOk returns a tuple with the SourceHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfig) GetSourceHeadersOk() ([]ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner, bool) {
	if o == nil || IsNil(o.SourceHeaders) {
		return nil, false
	}
	return o.SourceHeaders, true
}

// IsSetSourceHeaders returns a boolean if a field has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfig) IsSetSourceHeaders() bool {
	if o != nil && !IsNil(o.SourceHeaders) {
		return true
	}

	return false
}

// SetSourceHeaders gets a reference to the given []ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner and assigns it to the SourceHeaders field.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfig) SetSourceHeaders(v []ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) {
	o.SourceHeaders = v
}

func (o ListOptionLists200ResponseAllOfOptionTypesInnerConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOptionLists200ResponseAllOfOptionTypesInnerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceHeaders) {
		toSerialize["sourceHeaders"] = o.SourceHeaders
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfig) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
