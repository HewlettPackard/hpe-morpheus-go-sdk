/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)


// ListIdentitySources200ResponseAllOfUserSourcesInner struct for ListIdentitySources200ResponseAllOfUserSourcesInner
type ListIdentitySources200ResponseAllOfUserSourcesInner struct {
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6
	ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7 *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ListIdentitySources200ResponseAllOfUserSourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6 = nil
	}

	// try to unmarshal JSON data into ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7
	err = json.Unmarshal(data, &dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7);
	if err == nil {
		jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7, _ := json.Marshal(dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7)
		if string(jsonListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7) == "{}" { // empty struct
			dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7 = nil
		} else {
			return nil // data stored in dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7, return on the first match
		}
	} else {
		dst.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ListIdentitySources200ResponseAllOfUserSourcesInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListIdentitySources200ResponseAllOfUserSourcesInner) MarshalJSON() ([]byte, error) {
	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf2)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf3)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf4)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf5)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf6)
	}

	if src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7 != nil {
		return json.Marshal(&src.ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf7)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableListIdentitySources200ResponseAllOfUserSourcesInner struct {
	value *ListIdentitySources200ResponseAllOfUserSourcesInner
	isSet bool
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInner) Get() *ListIdentitySources200ResponseAllOfUserSourcesInner {
	return v.value
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInner) Set(val *ListIdentitySources200ResponseAllOfUserSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIdentitySources200ResponseAllOfUserSourcesInner(val *ListIdentitySources200ResponseAllOfUserSourcesInner) *NullableListIdentitySources200ResponseAllOfUserSourcesInner {
	return &NullableListIdentitySources200ResponseAllOfUserSourcesInner{value: val, isSet: true}
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


