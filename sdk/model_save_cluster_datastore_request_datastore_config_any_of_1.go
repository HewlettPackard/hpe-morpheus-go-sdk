/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SaveClusterDatastoreRequestDatastoreConfigAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SaveClusterDatastoreRequestDatastoreConfigAnyOf1{}

// SaveClusterDatastoreRequestDatastoreConfigAnyOf1 struct for SaveClusterDatastoreRequestDatastoreConfigAnyOf1
type SaveClusterDatastoreRequestDatastoreConfigAnyOf1 struct {
	// Block device for target GFS2.
	BlockDevice          *string                `json:"blockDevice,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _SaveClusterDatastoreRequestDatastoreConfigAnyOf1 SaveClusterDatastoreRequestDatastoreConfigAnyOf1

// NewSaveClusterDatastoreRequestDatastoreConfigAnyOf1 instantiates a new SaveClusterDatastoreRequestDatastoreConfigAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaveClusterDatastoreRequestDatastoreConfigAnyOf1() *SaveClusterDatastoreRequestDatastoreConfigAnyOf1 {
	this := SaveClusterDatastoreRequestDatastoreConfigAnyOf1{}
	return &this
}

// NewSaveClusterDatastoreRequestDatastoreConfigAnyOf1WithDefaults instantiates a new SaveClusterDatastoreRequestDatastoreConfigAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaveClusterDatastoreRequestDatastoreConfigAnyOf1WithDefaults() *SaveClusterDatastoreRequestDatastoreConfigAnyOf1 {
	this := SaveClusterDatastoreRequestDatastoreConfigAnyOf1{}
	return &this
}

// GetBlockDevice returns the BlockDevice field value if set, zero value otherwise.
func (o *SaveClusterDatastoreRequestDatastoreConfigAnyOf1) GetBlockDevice() string {
	if o == nil || IsNil(o.BlockDevice) {
		var ret string
		return ret
	}
	return *o.BlockDevice
}

// GetBlockDeviceOk returns a tuple with the BlockDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaveClusterDatastoreRequestDatastoreConfigAnyOf1) GetBlockDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.BlockDevice) {
		return nil, false
	}
	return o.BlockDevice, true
}

// IsSetBlockDevice returns a boolean if a field has been set.
func (o *SaveClusterDatastoreRequestDatastoreConfigAnyOf1) IsSetBlockDevice() bool {
	if o != nil && !IsNil(o.BlockDevice) {
		return true
	}

	return false
}

// SetBlockDevice gets a reference to the given string and assigns it to the BlockDevice field.
func (o *SaveClusterDatastoreRequestDatastoreConfigAnyOf1) SetBlockDevice(v string) {
	o.BlockDevice = &v
}

func (o SaveClusterDatastoreRequestDatastoreConfigAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SaveClusterDatastoreRequestDatastoreConfigAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockDevice) {
		toSerialize["blockDevice"] = o.BlockDevice
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *SaveClusterDatastoreRequestDatastoreConfigAnyOf1) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
