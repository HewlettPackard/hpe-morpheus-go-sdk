/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetIntegrationInventory200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegrationInventory200Response{}

// GetIntegrationInventory200Response struct for GetIntegrationInventory200Response
type GetIntegrationInventory200Response struct {
	Inventory *ListIntegrationInventory200ResponseAllOfInventoryInner `json:"inventory,omitempty"`
}

// NewGetIntegrationInventory200Response instantiates a new GetIntegrationInventory200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegrationInventory200Response() *GetIntegrationInventory200Response {
	this := GetIntegrationInventory200Response{}
	return &this
}

// NewGetIntegrationInventory200ResponseWithDefaults instantiates a new GetIntegrationInventory200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegrationInventory200ResponseWithDefaults() *GetIntegrationInventory200Response {
	this := GetIntegrationInventory200Response{}
	return &this
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *GetIntegrationInventory200Response) GetInventory() ListIntegrationInventory200ResponseAllOfInventoryInner {
	if o == nil || IsNil(o.Inventory) {
		var ret ListIntegrationInventory200ResponseAllOfInventoryInner
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegrationInventory200Response) GetInventoryOk() (*ListIntegrationInventory200ResponseAllOfInventoryInner, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// IsSetInventory returns a boolean if a field has been set.
func (o *GetIntegrationInventory200Response) IsSetInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given ListIntegrationInventory200ResponseAllOfInventoryInner and assigns it to the Inventory field.
func (o *GetIntegrationInventory200Response) SetInventory(v ListIntegrationInventory200ResponseAllOfInventoryInner) {
	o.Inventory = &v
}

func (o GetIntegrationInventory200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegrationInventory200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	return toSerialize, nil
}

type NullableGetIntegrationInventory200Response struct {
	value *GetIntegrationInventory200Response
	isSet bool
}

func (v NullableGetIntegrationInventory200Response) Get() *GetIntegrationInventory200Response {
	return v.value
}

func (v *NullableGetIntegrationInventory200Response) Set(val *GetIntegrationInventory200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegrationInventory200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegrationInventory200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegrationInventory200Response(val *GetIntegrationInventory200Response) *NullableGetIntegrationInventory200Response {
	return &NullableGetIntegrationInventory200Response{value: val, isSet: true}
}

func (v NullableGetIntegrationInventory200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegrationInventory200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


