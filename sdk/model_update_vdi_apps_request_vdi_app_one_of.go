/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"os"
)

// checks if the UpdateVDIAppsRequestVdiAppOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateVDIAppsRequestVdiAppOneOf{}

// UpdateVDIAppsRequestVdiAppOneOf struct for UpdateVDIAppsRequestVdiAppOneOf
type UpdateVDIAppsRequestVdiAppOneOf struct {
	// VDI App name
	Name *string `json:"name,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Icon Path. A relative location of an icon image
	IconPath **os.File `json:"iconPath,omitempty"`
	// The RDS App Name Prefix.  Must start with '||'
	LaunchPrefix *string `json:"launchPrefix,omitempty"`
}

// NewUpdateVDIAppsRequestVdiAppOneOf instantiates a new UpdateVDIAppsRequestVdiAppOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVDIAppsRequestVdiAppOneOf() *UpdateVDIAppsRequestVdiAppOneOf {
	this := UpdateVDIAppsRequestVdiAppOneOf{}
	return &this
}

// NewUpdateVDIAppsRequestVdiAppOneOfWithDefaults instantiates a new UpdateVDIAppsRequestVdiAppOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVDIAppsRequestVdiAppOneOfWithDefaults() *UpdateVDIAppsRequestVdiAppOneOf {
	this := UpdateVDIAppsRequestVdiAppOneOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateVDIAppsRequestVdiAppOneOf) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateVDIAppsRequestVdiAppOneOf) SetDescription(v string) {
	o.Description = &v
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetIconPath() *os.File {
	if o == nil || IsNil(o.IconPath) {
		var ret *os.File
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetIconPathOk() (**os.File, bool) {
	if o == nil || IsNil(o.IconPath) {
		return nil, false
	}
	return o.IconPath, true
}

// IsSetIconPath returns a boolean if a field has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) IsSetIconPath() bool {
	if o != nil && !IsNil(o.IconPath) {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given *os.File and assigns it to the IconPath field.
func (o *UpdateVDIAppsRequestVdiAppOneOf) SetIconPath(v *os.File) {
	o.IconPath = &v
}

// GetLaunchPrefix returns the LaunchPrefix field value if set, zero value otherwise.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetLaunchPrefix() string {
	if o == nil || IsNil(o.LaunchPrefix) {
		var ret string
		return ret
	}
	return *o.LaunchPrefix
}

// GetLaunchPrefixOk returns a tuple with the LaunchPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) GetLaunchPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchPrefix) {
		return nil, false
	}
	return o.LaunchPrefix, true
}

// IsSetLaunchPrefix returns a boolean if a field has been set.
func (o *UpdateVDIAppsRequestVdiAppOneOf) IsSetLaunchPrefix() bool {
	if o != nil && !IsNil(o.LaunchPrefix) {
		return true
	}

	return false
}

// SetLaunchPrefix gets a reference to the given string and assigns it to the LaunchPrefix field.
func (o *UpdateVDIAppsRequestVdiAppOneOf) SetLaunchPrefix(v string) {
	o.LaunchPrefix = &v
}

func (o UpdateVDIAppsRequestVdiAppOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateVDIAppsRequestVdiAppOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IconPath) {
		toSerialize["iconPath"] = o.IconPath
	}
	if !IsNil(o.LaunchPrefix) {
		toSerialize["launchPrefix"] = o.LaunchPrefix
	}
	return toSerialize, nil
}

type NullableUpdateVDIAppsRequestVdiAppOneOf struct {
	value *UpdateVDIAppsRequestVdiAppOneOf
	isSet bool
}

func (v NullableUpdateVDIAppsRequestVdiAppOneOf) Get() *UpdateVDIAppsRequestVdiAppOneOf {
	return v.value
}

func (v *NullableUpdateVDIAppsRequestVdiAppOneOf) Set(val *UpdateVDIAppsRequestVdiAppOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVDIAppsRequestVdiAppOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVDIAppsRequestVdiAppOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVDIAppsRequestVdiAppOneOf(val *UpdateVDIAppsRequestVdiAppOneOf) *NullableUpdateVDIAppsRequestVdiAppOneOf {
	return &NullableUpdateVDIAppsRequestVdiAppOneOf{value: val, isSet: true}
}

func (v NullableUpdateVDIAppsRequestVdiAppOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVDIAppsRequestVdiAppOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


