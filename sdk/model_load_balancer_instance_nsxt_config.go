/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the LoadBalancerInstanceNSXTConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerInstanceNSXTConfig{}

// LoadBalancerInstanceNSXTConfig struct for LoadBalancerInstanceNSXTConfig
type LoadBalancerInstanceNSXTConfig struct {
	// The Load Balancer Application Profile ID The Options API `/api/options/nsxt/nsxtLBVirtualServerApplicationProfile?loadBalancerId=42&loadBalancerInstance.vipProtocol=tcp` can be used to see which options are available. 
	ApplicationProfile *string `json:"applicationProfile,omitempty"`
}

// NewLoadBalancerInstanceNSXTConfig instantiates a new LoadBalancerInstanceNSXTConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerInstanceNSXTConfig() *LoadBalancerInstanceNSXTConfig {
	this := LoadBalancerInstanceNSXTConfig{}
	return &this
}

// NewLoadBalancerInstanceNSXTConfigWithDefaults instantiates a new LoadBalancerInstanceNSXTConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerInstanceNSXTConfigWithDefaults() *LoadBalancerInstanceNSXTConfig {
	this := LoadBalancerInstanceNSXTConfig{}
	return &this
}

// GetApplicationProfile returns the ApplicationProfile field value if set, zero value otherwise.
func (o *LoadBalancerInstanceNSXTConfig) GetApplicationProfile() string {
	if o == nil || IsNil(o.ApplicationProfile) {
		var ret string
		return ret
	}
	return *o.ApplicationProfile
}

// GetApplicationProfileOk returns a tuple with the ApplicationProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInstanceNSXTConfig) GetApplicationProfileOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationProfile) {
		return nil, false
	}
	return o.ApplicationProfile, true
}

// IsSetApplicationProfile returns a boolean if a field has been set.
func (o *LoadBalancerInstanceNSXTConfig) IsSetApplicationProfile() bool {
	if o != nil && !IsNil(o.ApplicationProfile) {
		return true
	}

	return false
}

// SetApplicationProfile gets a reference to the given string and assigns it to the ApplicationProfile field.
func (o *LoadBalancerInstanceNSXTConfig) SetApplicationProfile(v string) {
	o.ApplicationProfile = &v
}

func (o LoadBalancerInstanceNSXTConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerInstanceNSXTConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationProfile) {
		toSerialize["applicationProfile"] = o.ApplicationProfile
	}
	return toSerialize, nil
}

type NullableLoadBalancerInstanceNSXTConfig struct {
	value *LoadBalancerInstanceNSXTConfig
	isSet bool
}

func (v NullableLoadBalancerInstanceNSXTConfig) Get() *LoadBalancerInstanceNSXTConfig {
	return v.value
}

func (v *NullableLoadBalancerInstanceNSXTConfig) Set(val *LoadBalancerInstanceNSXTConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerInstanceNSXTConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerInstanceNSXTConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerInstanceNSXTConfig(val *LoadBalancerInstanceNSXTConfig) *NullableLoadBalancerInstanceNSXTConfig {
	return &NullableLoadBalancerInstanceNSXTConfig{value: val, isSet: true}
}

func (v NullableLoadBalancerInstanceNSXTConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerInstanceNSXTConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


