/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the VdiApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VdiApp{}

// VdiApp struct for VdiApp
type VdiApp struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	LaunchPrefix *string `json:"launchPrefix,omitempty"`
	IconPath *string `json:"iconPath,omitempty"`
	Logo *string `json:"logo,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewVdiApp instantiates a new VdiApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiApp() *VdiApp {
	this := VdiApp{}
	return &this
}

// NewVdiAppWithDefaults instantiates a new VdiApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiAppWithDefaults() *VdiApp {
	this := VdiApp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VdiApp) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *VdiApp) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VdiApp) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdiApp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *VdiApp) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdiApp) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VdiApp) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *VdiApp) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VdiApp) SetDescription(v string) {
	o.Description = &v
}

// GetLaunchPrefix returns the LaunchPrefix field value if set, zero value otherwise.
func (o *VdiApp) GetLaunchPrefix() string {
	if o == nil || IsNil(o.LaunchPrefix) {
		var ret string
		return ret
	}
	return *o.LaunchPrefix
}

// GetLaunchPrefixOk returns a tuple with the LaunchPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetLaunchPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchPrefix) {
		return nil, false
	}
	return o.LaunchPrefix, true
}

// IsSetLaunchPrefix returns a boolean if a field has been set.
func (o *VdiApp) IsSetLaunchPrefix() bool {
	if o != nil && !IsNil(o.LaunchPrefix) {
		return true
	}

	return false
}

// SetLaunchPrefix gets a reference to the given string and assigns it to the LaunchPrefix field.
func (o *VdiApp) SetLaunchPrefix(v string) {
	o.LaunchPrefix = &v
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *VdiApp) GetIconPath() string {
	if o == nil || IsNil(o.IconPath) {
		var ret string
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetIconPathOk() (*string, bool) {
	if o == nil || IsNil(o.IconPath) {
		return nil, false
	}
	return o.IconPath, true
}

// IsSetIconPath returns a boolean if a field has been set.
func (o *VdiApp) IsSetIconPath() bool {
	if o != nil && !IsNil(o.IconPath) {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given string and assigns it to the IconPath field.
func (o *VdiApp) SetIconPath(v string) {
	o.IconPath = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *VdiApp) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// IsSetLogo returns a boolean if a field has been set.
func (o *VdiApp) IsSetLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *VdiApp) SetLogo(v string) {
	o.Logo = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *VdiApp) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *VdiApp) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *VdiApp) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *VdiApp) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiApp) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *VdiApp) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *VdiApp) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o VdiApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VdiApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LaunchPrefix) {
		toSerialize["launchPrefix"] = o.LaunchPrefix
	}
	if !IsNil(o.IconPath) {
		toSerialize["iconPath"] = o.IconPath
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableVdiApp struct {
	value *VdiApp
	isSet bool
}

func (v NullableVdiApp) Get() *VdiApp {
	return v.value
}

func (v *NullableVdiApp) Set(val *VdiApp) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiApp) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiApp(val *VdiApp) *NullableVdiApp {
	return &NullableVdiApp{value: val, isSet: true}
}

func (v NullableVdiApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


