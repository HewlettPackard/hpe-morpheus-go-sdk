/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListWhitelabelSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWhitelabelSettings200Response{}

// ListWhitelabelSettings200Response struct for ListWhitelabelSettings200Response
type ListWhitelabelSettings200Response struct {
	WhitelabelSettings   *ListWhitelabelSettings200ResponseWhitelabelSettings `json:"whitelabelSettings,omitempty"`
	AdditionalProperties map[string]interface{}                               `json:",remain"`
}

type _ListWhitelabelSettings200Response ListWhitelabelSettings200Response

// NewListWhitelabelSettings200Response instantiates a new ListWhitelabelSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWhitelabelSettings200Response() *ListWhitelabelSettings200Response {
	this := ListWhitelabelSettings200Response{}
	return &this
}

// NewListWhitelabelSettings200ResponseWithDefaults instantiates a new ListWhitelabelSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWhitelabelSettings200ResponseWithDefaults() *ListWhitelabelSettings200Response {
	this := ListWhitelabelSettings200Response{}
	return &this
}

// GetWhitelabelSettings returns the WhitelabelSettings field value if set, zero value otherwise.
func (o *ListWhitelabelSettings200Response) GetWhitelabelSettings() ListWhitelabelSettings200ResponseWhitelabelSettings {
	if o == nil || IsNil(o.WhitelabelSettings) {
		var ret ListWhitelabelSettings200ResponseWhitelabelSettings
		return ret
	}
	return *o.WhitelabelSettings
}

// GetWhitelabelSettingsOk returns a tuple with the WhitelabelSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWhitelabelSettings200Response) GetWhitelabelSettingsOk() (*ListWhitelabelSettings200ResponseWhitelabelSettings, bool) {
	if o == nil || IsNil(o.WhitelabelSettings) {
		return nil, false
	}
	return o.WhitelabelSettings, true
}

// IsSetWhitelabelSettings returns a boolean if a field has been set.
func (o *ListWhitelabelSettings200Response) IsSetWhitelabelSettings() bool {
	if o != nil && !IsNil(o.WhitelabelSettings) {
		return true
	}

	return false
}

// SetWhitelabelSettings gets a reference to the given ListWhitelabelSettings200ResponseWhitelabelSettings and assigns it to the WhitelabelSettings field.
func (o *ListWhitelabelSettings200Response) SetWhitelabelSettings(v ListWhitelabelSettings200ResponseWhitelabelSettings) {
	o.WhitelabelSettings = &v
}

func (o ListWhitelabelSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWhitelabelSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WhitelabelSettings) {
		toSerialize["whitelabelSettings"] = o.WhitelabelSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListWhitelabelSettings200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
