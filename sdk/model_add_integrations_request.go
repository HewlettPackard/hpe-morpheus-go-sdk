/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AddIntegrationsRequest - struct for AddIntegrationsRequest
type AddIntegrationsRequest struct {
	AddIntegrationsRequestOneOf *AddIntegrationsRequestOneOf
	AddIntegrationsRequestOneOf1 *AddIntegrationsRequestOneOf1
	AddIntegrationsRequestOneOf2 *AddIntegrationsRequestOneOf2
	AddIntegrationsRequestOneOf3 *AddIntegrationsRequestOneOf3
	AddIntegrationsRequestOneOf4 *AddIntegrationsRequestOneOf4
	AddIntegrationsRequestOneOf5 *AddIntegrationsRequestOneOf5
	AddIntegrationsRequestOneOf6 *AddIntegrationsRequestOneOf6
}

// AddIntegrationsRequestOneOfAsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOfAsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf: v,
	}
}

// AddIntegrationsRequestOneOf1AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf1 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf1AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf1) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf1: v,
	}
}

// AddIntegrationsRequestOneOf2AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf2 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf2AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf2) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf2: v,
	}
}

// AddIntegrationsRequestOneOf3AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf3 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf3AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf3) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf3: v,
	}
}

// AddIntegrationsRequestOneOf4AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf4 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf4AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf4) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf4: v,
	}
}

// AddIntegrationsRequestOneOf5AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf5 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf5AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf5) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf5: v,
	}
}

// AddIntegrationsRequestOneOf6AsAddIntegrationsRequest is a convenience function that returns AddIntegrationsRequestOneOf6 wrapped in AddIntegrationsRequest
func AddIntegrationsRequestOneOf6AsAddIntegrationsRequest(v *AddIntegrationsRequestOneOf6) AddIntegrationsRequest {
	return AddIntegrationsRequest{
		AddIntegrationsRequestOneOf6: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddIntegrationsRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddIntegrationsRequestOneOf
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf)
	if err == nil {
		jsonAddIntegrationsRequestOneOf, _ := json.Marshal(dst.AddIntegrationsRequestOneOf)
		if string(jsonAddIntegrationsRequestOneOf) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf); err != nil {
				dst.AddIntegrationsRequestOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf1
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf1)
	if err == nil {
		jsonAddIntegrationsRequestOneOf1, _ := json.Marshal(dst.AddIntegrationsRequestOneOf1)
		if string(jsonAddIntegrationsRequestOneOf1) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf1 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf1); err != nil {
				dst.AddIntegrationsRequestOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf1 = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf2
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf2)
	if err == nil {
		jsonAddIntegrationsRequestOneOf2, _ := json.Marshal(dst.AddIntegrationsRequestOneOf2)
		if string(jsonAddIntegrationsRequestOneOf2) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf2 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf2); err != nil {
				dst.AddIntegrationsRequestOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf2 = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf3
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf3)
	if err == nil {
		jsonAddIntegrationsRequestOneOf3, _ := json.Marshal(dst.AddIntegrationsRequestOneOf3)
		if string(jsonAddIntegrationsRequestOneOf3) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf3 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf3); err != nil {
				dst.AddIntegrationsRequestOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf3 = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf4
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf4)
	if err == nil {
		jsonAddIntegrationsRequestOneOf4, _ := json.Marshal(dst.AddIntegrationsRequestOneOf4)
		if string(jsonAddIntegrationsRequestOneOf4) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf4 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf4); err != nil {
				dst.AddIntegrationsRequestOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf4 = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf5
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf5)
	if err == nil {
		jsonAddIntegrationsRequestOneOf5, _ := json.Marshal(dst.AddIntegrationsRequestOneOf5)
		if string(jsonAddIntegrationsRequestOneOf5) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf5 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf5); err != nil {
				dst.AddIntegrationsRequestOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf5 = nil
	}

	// try to unmarshal data into AddIntegrationsRequestOneOf6
	err = newStrictDecoder(data).Decode(&dst.AddIntegrationsRequestOneOf6)
	if err == nil {
		jsonAddIntegrationsRequestOneOf6, _ := json.Marshal(dst.AddIntegrationsRequestOneOf6)
		if string(jsonAddIntegrationsRequestOneOf6) == "{}" { // empty struct
			dst.AddIntegrationsRequestOneOf6 = nil
		} else {
			if err = validator.Validate(dst.AddIntegrationsRequestOneOf6); err != nil {
				dst.AddIntegrationsRequestOneOf6 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddIntegrationsRequestOneOf6 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddIntegrationsRequestOneOf = nil
		dst.AddIntegrationsRequestOneOf1 = nil
		dst.AddIntegrationsRequestOneOf2 = nil
		dst.AddIntegrationsRequestOneOf3 = nil
		dst.AddIntegrationsRequestOneOf4 = nil
		dst.AddIntegrationsRequestOneOf5 = nil
		dst.AddIntegrationsRequestOneOf6 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddIntegrationsRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddIntegrationsRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddIntegrationsRequest) MarshalJSON() ([]byte, error) {
	if src.AddIntegrationsRequestOneOf != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf)
	}

	if src.AddIntegrationsRequestOneOf1 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf1)
	}

	if src.AddIntegrationsRequestOneOf2 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf2)
	}

	if src.AddIntegrationsRequestOneOf3 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf3)
	}

	if src.AddIntegrationsRequestOneOf4 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf4)
	}

	if src.AddIntegrationsRequestOneOf5 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf5)
	}

	if src.AddIntegrationsRequestOneOf6 != nil {
		return json.Marshal(&src.AddIntegrationsRequestOneOf6)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddIntegrationsRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddIntegrationsRequestOneOf != nil {
		return obj.AddIntegrationsRequestOneOf
	}

	if obj.AddIntegrationsRequestOneOf1 != nil {
		return obj.AddIntegrationsRequestOneOf1
	}

	if obj.AddIntegrationsRequestOneOf2 != nil {
		return obj.AddIntegrationsRequestOneOf2
	}

	if obj.AddIntegrationsRequestOneOf3 != nil {
		return obj.AddIntegrationsRequestOneOf3
	}

	if obj.AddIntegrationsRequestOneOf4 != nil {
		return obj.AddIntegrationsRequestOneOf4
	}

	if obj.AddIntegrationsRequestOneOf5 != nil {
		return obj.AddIntegrationsRequestOneOf5
	}

	if obj.AddIntegrationsRequestOneOf6 != nil {
		return obj.AddIntegrationsRequestOneOf6
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AddIntegrationsRequest) GetActualInstanceValue() (interface{}) {
	if obj.AddIntegrationsRequestOneOf != nil {
		return *obj.AddIntegrationsRequestOneOf
	}

	if obj.AddIntegrationsRequestOneOf1 != nil {
		return *obj.AddIntegrationsRequestOneOf1
	}

	if obj.AddIntegrationsRequestOneOf2 != nil {
		return *obj.AddIntegrationsRequestOneOf2
	}

	if obj.AddIntegrationsRequestOneOf3 != nil {
		return *obj.AddIntegrationsRequestOneOf3
	}

	if obj.AddIntegrationsRequestOneOf4 != nil {
		return *obj.AddIntegrationsRequestOneOf4
	}

	if obj.AddIntegrationsRequestOneOf5 != nil {
		return *obj.AddIntegrationsRequestOneOf5
	}

	if obj.AddIntegrationsRequestOneOf6 != nil {
		return *obj.AddIntegrationsRequestOneOf6
	}

	// all schemas are nil
	return nil
}

type NullableAddIntegrationsRequest struct {
	value *AddIntegrationsRequest
	isSet bool
}

func (v NullableAddIntegrationsRequest) Get() *AddIntegrationsRequest {
	return v.value
}

func (v *NullableAddIntegrationsRequest) Set(val *AddIntegrationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIntegrationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIntegrationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIntegrationsRequest(val *AddIntegrationsRequest) *NullableAddIntegrationsRequest {
	return &NullableAddIntegrationsRequest{value: val, isSet: true}
}

func (v NullableAddIntegrationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIntegrationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


