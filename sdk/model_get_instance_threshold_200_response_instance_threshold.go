/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the GetInstanceThreshold200ResponseInstanceThreshold type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceThreshold200ResponseInstanceThreshold{}

// GetInstanceThreshold200ResponseInstanceThreshold struct for GetInstanceThreshold200ResponseInstanceThreshold
type GetInstanceThreshold200ResponseInstanceThreshold struct {
	Id *int64 `json:"id,omitempty"`
	AutoUp *bool `json:"autoUp,omitempty"`
	AutoDown *bool `json:"autoDown,omitempty"`
	MinCount *int64 `json:"minCount,omitempty"`
	MaxCount *int64 `json:"maxCount,omitempty"`
	ScaleIncrement *int64 `json:"scaleIncrement,omitempty"`
	CpuEnabled *bool `json:"cpuEnabled,omitempty"`
	MinCpu *int64 `json:"minCpu,omitempty"`
	MaxCpu *int64 `json:"maxCpu,omitempty"`
	MemoryEnabled *bool `json:"memoryEnabled,omitempty"`
	MinMemory *int64 `json:"minMemory,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	DiskEnabled *bool `json:"diskEnabled,omitempty"`
	MinDisk *int64 `json:"minDisk,omitempty"`
	MaxDisk *int64 `json:"maxDisk,omitempty"`
	MinNetwork *string `json:"minNetwork,omitempty"`
	NetworkEnabled *bool `json:"networkEnabled,omitempty"`
	IopsEnabled *bool `json:"iopsEnabled,omitempty"`
	MinIops *string `json:"minIops,omitempty"`
	MaxIops *string `json:"maxIops,omitempty"`
	Comment *string `json:"comment,omitempty"`
	ZoneId *int64 `json:"zoneId,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewGetInstanceThreshold200ResponseInstanceThreshold instantiates a new GetInstanceThreshold200ResponseInstanceThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceThreshold200ResponseInstanceThreshold() *GetInstanceThreshold200ResponseInstanceThreshold {
	this := GetInstanceThreshold200ResponseInstanceThreshold{}
	return &this
}

// NewGetInstanceThreshold200ResponseInstanceThresholdWithDefaults instantiates a new GetInstanceThreshold200ResponseInstanceThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceThreshold200ResponseInstanceThresholdWithDefaults() *GetInstanceThreshold200ResponseInstanceThreshold {
	this := GetInstanceThreshold200ResponseInstanceThreshold{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetId(v int64) {
	o.Id = &v
}

// GetAutoUp returns the AutoUp field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetAutoUp() bool {
	if o == nil || IsNil(o.AutoUp) {
		var ret bool
		return ret
	}
	return *o.AutoUp
}

// GetAutoUpOk returns a tuple with the AutoUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetAutoUpOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoUp) {
		return nil, false
	}
	return o.AutoUp, true
}

// IsSetAutoUp returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetAutoUp() bool {
	if o != nil && !IsNil(o.AutoUp) {
		return true
	}

	return false
}

// SetAutoUp gets a reference to the given bool and assigns it to the AutoUp field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetAutoUp(v bool) {
	o.AutoUp = &v
}

// GetAutoDown returns the AutoDown field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetAutoDown() bool {
	if o == nil || IsNil(o.AutoDown) {
		var ret bool
		return ret
	}
	return *o.AutoDown
}

// GetAutoDownOk returns a tuple with the AutoDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetAutoDownOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoDown) {
		return nil, false
	}
	return o.AutoDown, true
}

// IsSetAutoDown returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetAutoDown() bool {
	if o != nil && !IsNil(o.AutoDown) {
		return true
	}

	return false
}

// SetAutoDown gets a reference to the given bool and assigns it to the AutoDown field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetAutoDown(v bool) {
	o.AutoDown = &v
}

// GetMinCount returns the MinCount field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinCount() int64 {
	if o == nil || IsNil(o.MinCount) {
		var ret int64
		return ret
	}
	return *o.MinCount
}

// GetMinCountOk returns a tuple with the MinCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MinCount) {
		return nil, false
	}
	return o.MinCount, true
}

// IsSetMinCount returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinCount() bool {
	if o != nil && !IsNil(o.MinCount) {
		return true
	}

	return false
}

// SetMinCount gets a reference to the given int64 and assigns it to the MinCount field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinCount(v int64) {
	o.MinCount = &v
}

// GetMaxCount returns the MaxCount field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxCount() int64 {
	if o == nil || IsNil(o.MaxCount) {
		var ret int64
		return ret
	}
	return *o.MaxCount
}

// GetMaxCountOk returns a tuple with the MaxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxCount) {
		return nil, false
	}
	return o.MaxCount, true
}

// IsSetMaxCount returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMaxCount() bool {
	if o != nil && !IsNil(o.MaxCount) {
		return true
	}

	return false
}

// SetMaxCount gets a reference to the given int64 and assigns it to the MaxCount field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMaxCount(v int64) {
	o.MaxCount = &v
}

// GetScaleIncrement returns the ScaleIncrement field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetScaleIncrement() int64 {
	if o == nil || IsNil(o.ScaleIncrement) {
		var ret int64
		return ret
	}
	return *o.ScaleIncrement
}

// GetScaleIncrementOk returns a tuple with the ScaleIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetScaleIncrementOk() (*int64, bool) {
	if o == nil || IsNil(o.ScaleIncrement) {
		return nil, false
	}
	return o.ScaleIncrement, true
}

// IsSetScaleIncrement returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetScaleIncrement() bool {
	if o != nil && !IsNil(o.ScaleIncrement) {
		return true
	}

	return false
}

// SetScaleIncrement gets a reference to the given int64 and assigns it to the ScaleIncrement field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetScaleIncrement(v int64) {
	o.ScaleIncrement = &v
}

// GetCpuEnabled returns the CpuEnabled field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetCpuEnabled() bool {
	if o == nil || IsNil(o.CpuEnabled) {
		var ret bool
		return ret
	}
	return *o.CpuEnabled
}

// GetCpuEnabledOk returns a tuple with the CpuEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetCpuEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CpuEnabled) {
		return nil, false
	}
	return o.CpuEnabled, true
}

// IsSetCpuEnabled returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetCpuEnabled() bool {
	if o != nil && !IsNil(o.CpuEnabled) {
		return true
	}

	return false
}

// SetCpuEnabled gets a reference to the given bool and assigns it to the CpuEnabled field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetCpuEnabled(v bool) {
	o.CpuEnabled = &v
}

// GetMinCpu returns the MinCpu field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinCpu() int64 {
	if o == nil || IsNil(o.MinCpu) {
		var ret int64
		return ret
	}
	return *o.MinCpu
}

// GetMinCpuOk returns a tuple with the MinCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinCpuOk() (*int64, bool) {
	if o == nil || IsNil(o.MinCpu) {
		return nil, false
	}
	return o.MinCpu, true
}

// IsSetMinCpu returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinCpu() bool {
	if o != nil && !IsNil(o.MinCpu) {
		return true
	}

	return false
}

// SetMinCpu gets a reference to the given int64 and assigns it to the MinCpu field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinCpu(v int64) {
	o.MinCpu = &v
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxCpu() int64 {
	if o == nil || IsNil(o.MaxCpu) {
		var ret int64
		return ret
	}
	return *o.MaxCpu
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxCpuOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxCpu) {
		return nil, false
	}
	return o.MaxCpu, true
}

// IsSetMaxCpu returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMaxCpu() bool {
	if o != nil && !IsNil(o.MaxCpu) {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given int64 and assigns it to the MaxCpu field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMaxCpu(v int64) {
	o.MaxCpu = &v
}

// GetMemoryEnabled returns the MemoryEnabled field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMemoryEnabled() bool {
	if o == nil || IsNil(o.MemoryEnabled) {
		var ret bool
		return ret
	}
	return *o.MemoryEnabled
}

// GetMemoryEnabledOk returns a tuple with the MemoryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMemoryEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MemoryEnabled) {
		return nil, false
	}
	return o.MemoryEnabled, true
}

// IsSetMemoryEnabled returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMemoryEnabled() bool {
	if o != nil && !IsNil(o.MemoryEnabled) {
		return true
	}

	return false
}

// SetMemoryEnabled gets a reference to the given bool and assigns it to the MemoryEnabled field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMemoryEnabled(v bool) {
	o.MemoryEnabled = &v
}

// GetMinMemory returns the MinMemory field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinMemory() int64 {
	if o == nil || IsNil(o.MinMemory) {
		var ret int64
		return ret
	}
	return *o.MinMemory
}

// GetMinMemoryOk returns a tuple with the MinMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.MinMemory) {
		return nil, false
	}
	return o.MinMemory, true
}

// IsSetMinMemory returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinMemory() bool {
	if o != nil && !IsNil(o.MinMemory) {
		return true
	}

	return false
}

// SetMinMemory gets a reference to the given int64 and assigns it to the MinMemory field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinMemory(v int64) {
	o.MinMemory = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxMemory() int64 {
	if o == nil || IsNil(o.MaxMemory) {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxMemory) {
		return nil, false
	}
	return o.MaxMemory, true
}

// IsSetMaxMemory returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMaxMemory() bool {
	if o != nil && !IsNil(o.MaxMemory) {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetDiskEnabled returns the DiskEnabled field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetDiskEnabled() bool {
	if o == nil || IsNil(o.DiskEnabled) {
		var ret bool
		return ret
	}
	return *o.DiskEnabled
}

// GetDiskEnabledOk returns a tuple with the DiskEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetDiskEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DiskEnabled) {
		return nil, false
	}
	return o.DiskEnabled, true
}

// IsSetDiskEnabled returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetDiskEnabled() bool {
	if o != nil && !IsNil(o.DiskEnabled) {
		return true
	}

	return false
}

// SetDiskEnabled gets a reference to the given bool and assigns it to the DiskEnabled field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetDiskEnabled(v bool) {
	o.DiskEnabled = &v
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinDisk() int64 {
	if o == nil || IsNil(o.MinDisk) {
		var ret int64
		return ret
	}
	return *o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinDiskOk() (*int64, bool) {
	if o == nil || IsNil(o.MinDisk) {
		return nil, false
	}
	return o.MinDisk, true
}

// IsSetMinDisk returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinDisk() bool {
	if o != nil && !IsNil(o.MinDisk) {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given int64 and assigns it to the MinDisk field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinDisk(v int64) {
	o.MinDisk = &v
}

// GetMaxDisk returns the MaxDisk field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxDisk() int64 {
	if o == nil || IsNil(o.MaxDisk) {
		var ret int64
		return ret
	}
	return *o.MaxDisk
}

// GetMaxDiskOk returns a tuple with the MaxDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxDiskOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxDisk) {
		return nil, false
	}
	return o.MaxDisk, true
}

// IsSetMaxDisk returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMaxDisk() bool {
	if o != nil && !IsNil(o.MaxDisk) {
		return true
	}

	return false
}

// SetMaxDisk gets a reference to the given int64 and assigns it to the MaxDisk field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMaxDisk(v int64) {
	o.MaxDisk = &v
}

// GetMinNetwork returns the MinNetwork field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinNetwork() string {
	if o == nil || IsNil(o.MinNetwork) {
		var ret string
		return ret
	}
	return *o.MinNetwork
}

// GetMinNetworkOk returns a tuple with the MinNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.MinNetwork) {
		return nil, false
	}
	return o.MinNetwork, true
}

// IsSetMinNetwork returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinNetwork() bool {
	if o != nil && !IsNil(o.MinNetwork) {
		return true
	}

	return false
}

// SetMinNetwork gets a reference to the given string and assigns it to the MinNetwork field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinNetwork(v string) {
	o.MinNetwork = &v
}

// GetNetworkEnabled returns the NetworkEnabled field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetNetworkEnabled() bool {
	if o == nil || IsNil(o.NetworkEnabled) {
		var ret bool
		return ret
	}
	return *o.NetworkEnabled
}

// GetNetworkEnabledOk returns a tuple with the NetworkEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetNetworkEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkEnabled) {
		return nil, false
	}
	return o.NetworkEnabled, true
}

// IsSetNetworkEnabled returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetNetworkEnabled() bool {
	if o != nil && !IsNil(o.NetworkEnabled) {
		return true
	}

	return false
}

// SetNetworkEnabled gets a reference to the given bool and assigns it to the NetworkEnabled field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetNetworkEnabled(v bool) {
	o.NetworkEnabled = &v
}

// GetIopsEnabled returns the IopsEnabled field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetIopsEnabled() bool {
	if o == nil || IsNil(o.IopsEnabled) {
		var ret bool
		return ret
	}
	return *o.IopsEnabled
}

// GetIopsEnabledOk returns a tuple with the IopsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetIopsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IopsEnabled) {
		return nil, false
	}
	return o.IopsEnabled, true
}

// IsSetIopsEnabled returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetIopsEnabled() bool {
	if o != nil && !IsNil(o.IopsEnabled) {
		return true
	}

	return false
}

// SetIopsEnabled gets a reference to the given bool and assigns it to the IopsEnabled field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetIopsEnabled(v bool) {
	o.IopsEnabled = &v
}

// GetMinIops returns the MinIops field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinIops() string {
	if o == nil || IsNil(o.MinIops) {
		var ret string
		return ret
	}
	return *o.MinIops
}

// GetMinIopsOk returns a tuple with the MinIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMinIopsOk() (*string, bool) {
	if o == nil || IsNil(o.MinIops) {
		return nil, false
	}
	return o.MinIops, true
}

// IsSetMinIops returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMinIops() bool {
	if o != nil && !IsNil(o.MinIops) {
		return true
	}

	return false
}

// SetMinIops gets a reference to the given string and assigns it to the MinIops field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMinIops(v string) {
	o.MinIops = &v
}

// GetMaxIops returns the MaxIops field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxIops() string {
	if o == nil || IsNil(o.MaxIops) {
		var ret string
		return ret
	}
	return *o.MaxIops
}

// GetMaxIopsOk returns a tuple with the MaxIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetMaxIopsOk() (*string, bool) {
	if o == nil || IsNil(o.MaxIops) {
		return nil, false
	}
	return o.MaxIops, true
}

// IsSetMaxIops returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetMaxIops() bool {
	if o != nil && !IsNil(o.MaxIops) {
		return true
	}

	return false
}

// SetMaxIops gets a reference to the given string and assigns it to the MaxIops field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetMaxIops(v string) {
	o.MaxIops = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// IsSetComment returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetComment(v string) {
	o.Comment = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetZoneId() int64 {
	if o == nil || IsNil(o.ZoneId) {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// IsSetZoneId returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *GetInstanceThreshold200ResponseInstanceThreshold) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o GetInstanceThreshold200ResponseInstanceThreshold) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceThreshold200ResponseInstanceThreshold) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AutoUp) {
		toSerialize["autoUp"] = o.AutoUp
	}
	if !IsNil(o.AutoDown) {
		toSerialize["autoDown"] = o.AutoDown
	}
	if !IsNil(o.MinCount) {
		toSerialize["minCount"] = o.MinCount
	}
	if !IsNil(o.MaxCount) {
		toSerialize["maxCount"] = o.MaxCount
	}
	if !IsNil(o.ScaleIncrement) {
		toSerialize["scaleIncrement"] = o.ScaleIncrement
	}
	if !IsNil(o.CpuEnabled) {
		toSerialize["cpuEnabled"] = o.CpuEnabled
	}
	if !IsNil(o.MinCpu) {
		toSerialize["minCpu"] = o.MinCpu
	}
	if !IsNil(o.MaxCpu) {
		toSerialize["maxCpu"] = o.MaxCpu
	}
	if !IsNil(o.MemoryEnabled) {
		toSerialize["memoryEnabled"] = o.MemoryEnabled
	}
	if !IsNil(o.MinMemory) {
		toSerialize["minMemory"] = o.MinMemory
	}
	if !IsNil(o.MaxMemory) {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if !IsNil(o.DiskEnabled) {
		toSerialize["diskEnabled"] = o.DiskEnabled
	}
	if !IsNil(o.MinDisk) {
		toSerialize["minDisk"] = o.MinDisk
	}
	if !IsNil(o.MaxDisk) {
		toSerialize["maxDisk"] = o.MaxDisk
	}
	if !IsNil(o.MinNetwork) {
		toSerialize["minNetwork"] = o.MinNetwork
	}
	if !IsNil(o.NetworkEnabled) {
		toSerialize["networkEnabled"] = o.NetworkEnabled
	}
	if !IsNil(o.IopsEnabled) {
		toSerialize["iopsEnabled"] = o.IopsEnabled
	}
	if !IsNil(o.MinIops) {
		toSerialize["minIops"] = o.MinIops
	}
	if !IsNil(o.MaxIops) {
		toSerialize["maxIops"] = o.MaxIops
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableGetInstanceThreshold200ResponseInstanceThreshold struct {
	value *GetInstanceThreshold200ResponseInstanceThreshold
	isSet bool
}

func (v NullableGetInstanceThreshold200ResponseInstanceThreshold) Get() *GetInstanceThreshold200ResponseInstanceThreshold {
	return v.value
}

func (v *NullableGetInstanceThreshold200ResponseInstanceThreshold) Set(val *GetInstanceThreshold200ResponseInstanceThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceThreshold200ResponseInstanceThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceThreshold200ResponseInstanceThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceThreshold200ResponseInstanceThreshold(val *GetInstanceThreshold200ResponseInstanceThreshold) *NullableGetInstanceThreshold200ResponseInstanceThreshold {
	return &NullableGetInstanceThreshold200ResponseInstanceThreshold{value: val, isSet: true}
}

func (v NullableGetInstanceThreshold200ResponseInstanceThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceThreshold200ResponseInstanceThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


