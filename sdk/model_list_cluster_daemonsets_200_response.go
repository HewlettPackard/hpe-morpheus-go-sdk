/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterDaemonsets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterDaemonsets200Response{}

// ListClusterDaemonsets200Response struct for ListClusterDaemonsets200Response
type ListClusterDaemonsets200Response struct {
	Daemonsets []ListClusterReplicasets200ResponseAllOfReplicasetsInner `json:"daemonsets,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterDaemonsets200Response instantiates a new ListClusterDaemonsets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterDaemonsets200Response() *ListClusterDaemonsets200Response {
	this := ListClusterDaemonsets200Response{}
	return &this
}

// NewListClusterDaemonsets200ResponseWithDefaults instantiates a new ListClusterDaemonsets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterDaemonsets200ResponseWithDefaults() *ListClusterDaemonsets200Response {
	this := ListClusterDaemonsets200Response{}
	return &this
}

// GetDaemonsets returns the Daemonsets field value if set, zero value otherwise.
func (o *ListClusterDaemonsets200Response) GetDaemonsets() []ListClusterReplicasets200ResponseAllOfReplicasetsInner {
	if o == nil || IsNil(o.Daemonsets) {
		var ret []ListClusterReplicasets200ResponseAllOfReplicasetsInner
		return ret
	}
	return o.Daemonsets
}

// GetDaemonsetsOk returns a tuple with the Daemonsets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterDaemonsets200Response) GetDaemonsetsOk() ([]ListClusterReplicasets200ResponseAllOfReplicasetsInner, bool) {
	if o == nil || IsNil(o.Daemonsets) {
		return nil, false
	}
	return o.Daemonsets, true
}

// IsSetDaemonsets returns a boolean if a field has been set.
func (o *ListClusterDaemonsets200Response) IsSetDaemonsets() bool {
	if o != nil && !IsNil(o.Daemonsets) {
		return true
	}

	return false
}

// SetDaemonsets gets a reference to the given []ListClusterReplicasets200ResponseAllOfReplicasetsInner and assigns it to the Daemonsets field.
func (o *ListClusterDaemonsets200Response) SetDaemonsets(v []ListClusterReplicasets200ResponseAllOfReplicasetsInner) {
	o.Daemonsets = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterDaemonsets200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterDaemonsets200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterDaemonsets200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterDaemonsets200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterDaemonsets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterDaemonsets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daemonsets) {
		toSerialize["daemonsets"] = o.Daemonsets
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterDaemonsets200Response struct {
	value *ListClusterDaemonsets200Response
	isSet bool
}

func (v NullableListClusterDaemonsets200Response) Get() *ListClusterDaemonsets200Response {
	return v.value
}

func (v *NullableListClusterDaemonsets200Response) Set(val *ListClusterDaemonsets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterDaemonsets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterDaemonsets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterDaemonsets200Response(val *ListClusterDaemonsets200Response) *NullableListClusterDaemonsets200Response {
	return &NullableListClusterDaemonsets200Response{value: val, isSet: true}
}

func (v NullableListClusterDaemonsets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterDaemonsets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


