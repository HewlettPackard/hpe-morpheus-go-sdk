/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddCypherKey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCypherKey200Response{}

// AddCypherKey200Response struct for AddCypherKey200Response
type AddCypherKey200Response struct {
	Data *string `json:"data,omitempty"`
	Type *string `json:"type,omitempty"`
	LeaseDuration *int64 `json:"lease_duration,omitempty"`
	Cypher *ListCypherKeys200ResponseAllOfCyphersInner `json:"cypher,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddCypherKey200Response instantiates a new AddCypherKey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCypherKey200Response() *AddCypherKey200Response {
	this := AddCypherKey200Response{}
	return &this
}

// NewAddCypherKey200ResponseWithDefaults instantiates a new AddCypherKey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCypherKey200ResponseWithDefaults() *AddCypherKey200Response {
	this := AddCypherKey200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AddCypherKey200Response) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCypherKey200Response) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// IsSetData returns a boolean if a field has been set.
func (o *AddCypherKey200Response) IsSetData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *AddCypherKey200Response) SetData(v string) {
	o.Data = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddCypherKey200Response) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCypherKey200Response) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddCypherKey200Response) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddCypherKey200Response) SetType(v string) {
	o.Type = &v
}

// GetLeaseDuration returns the LeaseDuration field value if set, zero value otherwise.
func (o *AddCypherKey200Response) GetLeaseDuration() int64 {
	if o == nil || IsNil(o.LeaseDuration) {
		var ret int64
		return ret
	}
	return *o.LeaseDuration
}

// GetLeaseDurationOk returns a tuple with the LeaseDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCypherKey200Response) GetLeaseDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.LeaseDuration) {
		return nil, false
	}
	return o.LeaseDuration, true
}

// IsSetLeaseDuration returns a boolean if a field has been set.
func (o *AddCypherKey200Response) IsSetLeaseDuration() bool {
	if o != nil && !IsNil(o.LeaseDuration) {
		return true
	}

	return false
}

// SetLeaseDuration gets a reference to the given int64 and assigns it to the LeaseDuration field.
func (o *AddCypherKey200Response) SetLeaseDuration(v int64) {
	o.LeaseDuration = &v
}

// GetCypher returns the Cypher field value if set, zero value otherwise.
func (o *AddCypherKey200Response) GetCypher() ListCypherKeys200ResponseAllOfCyphersInner {
	if o == nil || IsNil(o.Cypher) {
		var ret ListCypherKeys200ResponseAllOfCyphersInner
		return ret
	}
	return *o.Cypher
}

// GetCypherOk returns a tuple with the Cypher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCypherKey200Response) GetCypherOk() (*ListCypherKeys200ResponseAllOfCyphersInner, bool) {
	if o == nil || IsNil(o.Cypher) {
		return nil, false
	}
	return o.Cypher, true
}

// IsSetCypher returns a boolean if a field has been set.
func (o *AddCypherKey200Response) IsSetCypher() bool {
	if o != nil && !IsNil(o.Cypher) {
		return true
	}

	return false
}

// SetCypher gets a reference to the given ListCypherKeys200ResponseAllOfCyphersInner and assigns it to the Cypher field.
func (o *AddCypherKey200Response) SetCypher(v ListCypherKeys200ResponseAllOfCyphersInner) {
	o.Cypher = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddCypherKey200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCypherKey200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddCypherKey200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddCypherKey200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddCypherKey200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCypherKey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.LeaseDuration) {
		toSerialize["lease_duration"] = o.LeaseDuration
	}
	if !IsNil(o.Cypher) {
		toSerialize["cypher"] = o.Cypher
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddCypherKey200Response struct {
	value *AddCypherKey200Response
	isSet bool
}

func (v NullableAddCypherKey200Response) Get() *AddCypherKey200Response {
	return v.value
}

func (v *NullableAddCypherKey200Response) Set(val *AddCypherKey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCypherKey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCypherKey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCypherKey200Response(val *AddCypherKey200Response) *NullableAddCypherKey200Response {
	return &NullableAddCypherKey200Response{value: val, isSet: true}
}

func (v NullableAddCypherKey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCypherKey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


