/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListImageBuilds200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListImageBuilds200Response{}

// ListImageBuilds200Response struct for ListImageBuilds200Response
type ListImageBuilds200Response struct {
	ImageBuilds []ListImageBuilds200ResponseAllOfImageBuildsInner `json:"imageBuilds,omitempty"`
	ImageBuildCount *int64 `json:"imageBuildCount,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListImageBuilds200Response instantiates a new ListImageBuilds200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListImageBuilds200Response() *ListImageBuilds200Response {
	this := ListImageBuilds200Response{}
	return &this
}

// NewListImageBuilds200ResponseWithDefaults instantiates a new ListImageBuilds200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListImageBuilds200ResponseWithDefaults() *ListImageBuilds200Response {
	this := ListImageBuilds200Response{}
	return &this
}

// GetImageBuilds returns the ImageBuilds field value if set, zero value otherwise.
func (o *ListImageBuilds200Response) GetImageBuilds() []ListImageBuilds200ResponseAllOfImageBuildsInner {
	if o == nil || IsNil(o.ImageBuilds) {
		var ret []ListImageBuilds200ResponseAllOfImageBuildsInner
		return ret
	}
	return o.ImageBuilds
}

// GetImageBuildsOk returns a tuple with the ImageBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListImageBuilds200Response) GetImageBuildsOk() ([]ListImageBuilds200ResponseAllOfImageBuildsInner, bool) {
	if o == nil || IsNil(o.ImageBuilds) {
		return nil, false
	}
	return o.ImageBuilds, true
}

// IsSetImageBuilds returns a boolean if a field has been set.
func (o *ListImageBuilds200Response) IsSetImageBuilds() bool {
	if o != nil && !IsNil(o.ImageBuilds) {
		return true
	}

	return false
}

// SetImageBuilds gets a reference to the given []ListImageBuilds200ResponseAllOfImageBuildsInner and assigns it to the ImageBuilds field.
func (o *ListImageBuilds200Response) SetImageBuilds(v []ListImageBuilds200ResponseAllOfImageBuildsInner) {
	o.ImageBuilds = v
}

// GetImageBuildCount returns the ImageBuildCount field value if set, zero value otherwise.
func (o *ListImageBuilds200Response) GetImageBuildCount() int64 {
	if o == nil || IsNil(o.ImageBuildCount) {
		var ret int64
		return ret
	}
	return *o.ImageBuildCount
}

// GetImageBuildCountOk returns a tuple with the ImageBuildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListImageBuilds200Response) GetImageBuildCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ImageBuildCount) {
		return nil, false
	}
	return o.ImageBuildCount, true
}

// IsSetImageBuildCount returns a boolean if a field has been set.
func (o *ListImageBuilds200Response) IsSetImageBuildCount() bool {
	if o != nil && !IsNil(o.ImageBuildCount) {
		return true
	}

	return false
}

// SetImageBuildCount gets a reference to the given int64 and assigns it to the ImageBuildCount field.
func (o *ListImageBuilds200Response) SetImageBuildCount(v int64) {
	o.ImageBuildCount = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListImageBuilds200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListImageBuilds200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListImageBuilds200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListImageBuilds200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListImageBuilds200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListImageBuilds200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageBuilds) {
		toSerialize["imageBuilds"] = o.ImageBuilds
	}
	if !IsNil(o.ImageBuildCount) {
		toSerialize["imageBuildCount"] = o.ImageBuildCount
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListImageBuilds200Response struct {
	value *ListImageBuilds200Response
	isSet bool
}

func (v NullableListImageBuilds200Response) Get() *ListImageBuilds200Response {
	return v.value
}

func (v *NullableListImageBuilds200Response) Set(val *ListImageBuilds200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListImageBuilds200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListImageBuilds200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListImageBuilds200Response(val *ListImageBuilds200Response) *NullableListImageBuilds200Response {
	return &NullableListImageBuilds200Response{value: val, isSet: true}
}

func (v NullableListImageBuilds200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListImageBuilds200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


