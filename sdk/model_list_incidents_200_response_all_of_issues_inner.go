/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListIncidents200ResponseAllOfIssuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIncidents200ResponseAllOfIssuesInner{}

// ListIncidents200ResponseAllOfIssuesInner struct for ListIncidents200ResponseAllOfIssuesInner
type ListIncidents200ResponseAllOfIssuesInner struct {
	Id *int64 `json:"id,omitempty"`
	AttachmentType *string `json:"attachmentType,omitempty"`
	App *string `json:"app,omitempty"`
	Available *bool `json:"available,omitempty"`
	Check *string `json:"check,omitempty"`
	CheckGroup *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"checkGroup,omitempty"`
	CheckStatus *string `json:"checkStatus,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	Health *int64 `json:"health,omitempty"`
	InUptime *bool `json:"inUptime,omitempty"`
	Incident *GetAlerts200ResponseAllOfChecksInnerAccount `json:"incident,omitempty"`
	LastCheckTime *time.Time `json:"lastCheckTime,omitempty"`
	LastError *string `json:"lastError,omitempty"`
	LastMessage *string `json:"lastMessage,omitempty"`
	Name *string `json:"name,omitempty"`
	Severity *string `json:"severity,omitempty"`
	SeverityId *int64 `json:"severityId,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewListIncidents200ResponseAllOfIssuesInner instantiates a new ListIncidents200ResponseAllOfIssuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIncidents200ResponseAllOfIssuesInner() *ListIncidents200ResponseAllOfIssuesInner {
	this := ListIncidents200ResponseAllOfIssuesInner{}
	return &this
}

// NewListIncidents200ResponseAllOfIssuesInnerWithDefaults instantiates a new ListIncidents200ResponseAllOfIssuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIncidents200ResponseAllOfIssuesInnerWithDefaults() *ListIncidents200ResponseAllOfIssuesInner {
	this := ListIncidents200ResponseAllOfIssuesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetId(v int64) {
	o.Id = &v
}

// GetAttachmentType returns the AttachmentType field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetAttachmentType() string {
	if o == nil || IsNil(o.AttachmentType) {
		var ret string
		return ret
	}
	return *o.AttachmentType
}

// GetAttachmentTypeOk returns a tuple with the AttachmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetAttachmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentType) {
		return nil, false
	}
	return o.AttachmentType, true
}

// IsSetAttachmentType returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetAttachmentType() bool {
	if o != nil && !IsNil(o.AttachmentType) {
		return true
	}

	return false
}

// SetAttachmentType gets a reference to the given string and assigns it to the AttachmentType field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetAttachmentType(v string) {
	o.AttachmentType = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetApp() string {
	if o == nil || IsNil(o.App) {
		var ret string
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetAppOk() (*string, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// IsSetApp returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given string and assigns it to the App field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetApp(v string) {
	o.App = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// IsSetAvailable returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetAvailable(v bool) {
	o.Available = &v
}

// GetCheck returns the Check field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheck() string {
	if o == nil || IsNil(o.Check) {
		var ret string
		return ret
	}
	return *o.Check
}

// GetCheckOk returns a tuple with the Check field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheckOk() (*string, bool) {
	if o == nil || IsNil(o.Check) {
		return nil, false
	}
	return o.Check, true
}

// IsSetCheck returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetCheck() bool {
	if o != nil && !IsNil(o.Check) {
		return true
	}

	return false
}

// SetCheck gets a reference to the given string and assigns it to the Check field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetCheck(v string) {
	o.Check = &v
}

// GetCheckGroup returns the CheckGroup field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheckGroup() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.CheckGroup) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.CheckGroup
}

// GetCheckGroupOk returns a tuple with the CheckGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheckGroupOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.CheckGroup) {
		return nil, false
	}
	return o.CheckGroup, true
}

// IsSetCheckGroup returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetCheckGroup() bool {
	if o != nil && !IsNil(o.CheckGroup) {
		return true
	}

	return false
}

// SetCheckGroup gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the CheckGroup field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetCheckGroup(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.CheckGroup = &v
}

// GetCheckStatus returns the CheckStatus field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheckStatus() string {
	if o == nil || IsNil(o.CheckStatus) {
		var ret string
		return ret
	}
	return *o.CheckStatus
}

// GetCheckStatusOk returns a tuple with the CheckStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetCheckStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CheckStatus) {
		return nil, false
	}
	return o.CheckStatus, true
}

// IsSetCheckStatus returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetCheckStatus() bool {
	if o != nil && !IsNil(o.CheckStatus) {
		return true
	}

	return false
}

// SetCheckStatus gets a reference to the given string and assigns it to the CheckStatus field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetCheckStatus(v string) {
	o.CheckStatus = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// IsSetEndDate returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetHealth() int64 {
	if o == nil || IsNil(o.Health) {
		var ret int64
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetHealthOk() (*int64, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// IsSetHealth returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given int64 and assigns it to the Health field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetHealth(v int64) {
	o.Health = &v
}

// GetInUptime returns the InUptime field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetInUptime() bool {
	if o == nil || IsNil(o.InUptime) {
		var ret bool
		return ret
	}
	return *o.InUptime
}

// GetInUptimeOk returns a tuple with the InUptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetInUptimeOk() (*bool, bool) {
	if o == nil || IsNil(o.InUptime) {
		return nil, false
	}
	return o.InUptime, true
}

// IsSetInUptime returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetInUptime() bool {
	if o != nil && !IsNil(o.InUptime) {
		return true
	}

	return false
}

// SetInUptime gets a reference to the given bool and assigns it to the InUptime field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetInUptime(v bool) {
	o.InUptime = &v
}

// GetIncident returns the Incident field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetIncident() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Incident) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.Incident
}

// GetIncidentOk returns a tuple with the Incident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetIncidentOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Incident) {
		return nil, false
	}
	return o.Incident, true
}

// IsSetIncident returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetIncident() bool {
	if o != nil && !IsNil(o.Incident) {
		return true
	}

	return false
}

// SetIncident gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Incident field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetIncident(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Incident = &v
}

// GetLastCheckTime returns the LastCheckTime field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastCheckTime() time.Time {
	if o == nil || IsNil(o.LastCheckTime) {
		var ret time.Time
		return ret
	}
	return *o.LastCheckTime
}

// GetLastCheckTimeOk returns a tuple with the LastCheckTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastCheckTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCheckTime) {
		return nil, false
	}
	return o.LastCheckTime, true
}

// IsSetLastCheckTime returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetLastCheckTime() bool {
	if o != nil && !IsNil(o.LastCheckTime) {
		return true
	}

	return false
}

// SetLastCheckTime gets a reference to the given time.Time and assigns it to the LastCheckTime field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetLastCheckTime(v time.Time) {
	o.LastCheckTime = &v
}

// GetLastError returns the LastError field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastError() string {
	if o == nil || IsNil(o.LastError) {
		var ret string
		return ret
	}
	return *o.LastError
}

// GetLastErrorOk returns a tuple with the LastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastErrorOk() (*string, bool) {
	if o == nil || IsNil(o.LastError) {
		return nil, false
	}
	return o.LastError, true
}

// IsSetLastError returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetLastError() bool {
	if o != nil && !IsNil(o.LastError) {
		return true
	}

	return false
}

// SetLastError gets a reference to the given string and assigns it to the LastError field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetLastError(v string) {
	o.LastError = &v
}

// GetLastMessage returns the LastMessage field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastMessage() string {
	if o == nil || IsNil(o.LastMessage) {
		var ret string
		return ret
	}
	return *o.LastMessage
}

// GetLastMessageOk returns a tuple with the LastMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetLastMessageOk() (*string, bool) {
	if o == nil || IsNil(o.LastMessage) {
		return nil, false
	}
	return o.LastMessage, true
}

// IsSetLastMessage returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetLastMessage() bool {
	if o != nil && !IsNil(o.LastMessage) {
		return true
	}

	return false
}

// SetLastMessage gets a reference to the given string and assigns it to the LastMessage field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetLastMessage(v string) {
	o.LastMessage = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetName(v string) {
	o.Name = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// IsSetSeverity returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetSeverity(v string) {
	o.Severity = &v
}

// GetSeverityId returns the SeverityId field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetSeverityId() int64 {
	if o == nil || IsNil(o.SeverityId) {
		var ret int64
		return ret
	}
	return *o.SeverityId
}

// GetSeverityIdOk returns a tuple with the SeverityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetSeverityIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SeverityId) {
		return nil, false
	}
	return o.SeverityId, true
}

// IsSetSeverityId returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetSeverityId() bool {
	if o != nil && !IsNil(o.SeverityId) {
		return true
	}

	return false
}

// SetSeverityId gets a reference to the given int64 and assigns it to the SeverityId field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetSeverityId(v int64) {
	o.SeverityId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// IsSetStartDate returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListIncidents200ResponseAllOfIssuesInner) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListIncidents200ResponseAllOfIssuesInner) SetStatus(v string) {
	o.Status = &v
}

func (o ListIncidents200ResponseAllOfIssuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIncidents200ResponseAllOfIssuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AttachmentType) {
		toSerialize["attachmentType"] = o.AttachmentType
	}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.Check) {
		toSerialize["check"] = o.Check
	}
	if !IsNil(o.CheckGroup) {
		toSerialize["checkGroup"] = o.CheckGroup
	}
	if !IsNil(o.CheckStatus) {
		toSerialize["checkStatus"] = o.CheckStatus
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.InUptime) {
		toSerialize["inUptime"] = o.InUptime
	}
	if !IsNil(o.Incident) {
		toSerialize["incident"] = o.Incident
	}
	if !IsNil(o.LastCheckTime) {
		toSerialize["lastCheckTime"] = o.LastCheckTime
	}
	if !IsNil(o.LastError) {
		toSerialize["lastError"] = o.LastError
	}
	if !IsNil(o.LastMessage) {
		toSerialize["lastMessage"] = o.LastMessage
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.SeverityId) {
		toSerialize["severityId"] = o.SeverityId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableListIncidents200ResponseAllOfIssuesInner struct {
	value *ListIncidents200ResponseAllOfIssuesInner
	isSet bool
}

func (v NullableListIncidents200ResponseAllOfIssuesInner) Get() *ListIncidents200ResponseAllOfIssuesInner {
	return v.value
}

func (v *NullableListIncidents200ResponseAllOfIssuesInner) Set(val *ListIncidents200ResponseAllOfIssuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListIncidents200ResponseAllOfIssuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListIncidents200ResponseAllOfIssuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIncidents200ResponseAllOfIssuesInner(val *ListIncidents200ResponseAllOfIssuesInner) *NullableListIncidents200ResponseAllOfIssuesInner {
	return &NullableListIncidents200ResponseAllOfIssuesInner{value: val, isSet: true}
}

func (v NullableListIncidents200ResponseAllOfIssuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIncidents200ResponseAllOfIssuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


