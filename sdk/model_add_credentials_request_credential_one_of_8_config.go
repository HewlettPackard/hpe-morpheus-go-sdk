/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddCredentialsRequestCredentialOneOf8Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCredentialsRequestCredentialOneOf8Config{}

// AddCredentialsRequestCredentialOneOf8Config struct for AddCredentialsRequestCredentialOneOf8Config
type AddCredentialsRequestCredentialOneOf8Config struct {
	// OAuth 2.0 grant type
	GrantType string `json:"grantType"`
	// Token endpoint
	AccessTokenUrl string `json:"accessTokenUrl"`
	// Client ID
	ClientId *string `json:"clientId,omitempty"`
	// Client Secret
	ClientSecret *string `json:"clientSecret,omitempty"`
	// Scope
	Scope *string `json:"scope,omitempty"`
	// Client Authentication Method
	ClientAuth string `json:"clientAuth"`
}

type _AddCredentialsRequestCredentialOneOf8Config AddCredentialsRequestCredentialOneOf8Config

// NewAddCredentialsRequestCredentialOneOf8Config instantiates a new AddCredentialsRequestCredentialOneOf8Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCredentialsRequestCredentialOneOf8Config(grantType string, accessTokenUrl string, clientAuth string) *AddCredentialsRequestCredentialOneOf8Config {
	this := AddCredentialsRequestCredentialOneOf8Config{}
	this.GrantType = grantType
	this.AccessTokenUrl = accessTokenUrl
	this.ClientAuth = clientAuth
	return &this
}

// NewAddCredentialsRequestCredentialOneOf8ConfigWithDefaults instantiates a new AddCredentialsRequestCredentialOneOf8Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCredentialsRequestCredentialOneOf8ConfigWithDefaults() *AddCredentialsRequestCredentialOneOf8Config {
	this := AddCredentialsRequestCredentialOneOf8Config{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *AddCredentialsRequestCredentialOneOf8Config) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *AddCredentialsRequestCredentialOneOf8Config) SetGrantType(v string) {
	o.GrantType = v
}

// GetAccessTokenUrl returns the AccessTokenUrl field value
func (o *AddCredentialsRequestCredentialOneOf8Config) GetAccessTokenUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessTokenUrl
}

// GetAccessTokenUrlOk returns a tuple with the AccessTokenUrl field value
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetAccessTokenUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessTokenUrl, true
}

// SetAccessTokenUrl sets field value
func (o *AddCredentialsRequestCredentialOneOf8Config) SetAccessTokenUrl(v string) {
	o.AccessTokenUrl = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// IsSetClientId returns a boolean if a field has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) IsSetClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AddCredentialsRequestCredentialOneOf8Config) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// IsSetClientSecret returns a boolean if a field has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) IsSetClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *AddCredentialsRequestCredentialOneOf8Config) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// IsSetScope returns a boolean if a field has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) IsSetScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *AddCredentialsRequestCredentialOneOf8Config) SetScope(v string) {
	o.Scope = &v
}

// GetClientAuth returns the ClientAuth field value
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientAuth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientAuth
}

// GetClientAuthOk returns a tuple with the ClientAuth field value
// and a boolean to check if the value has been set.
func (o *AddCredentialsRequestCredentialOneOf8Config) GetClientAuthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientAuth, true
}

// SetClientAuth sets field value
func (o *AddCredentialsRequestCredentialOneOf8Config) SetClientAuth(v string) {
	o.ClientAuth = v
}

func (o AddCredentialsRequestCredentialOneOf8Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCredentialsRequestCredentialOneOf8Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grantType"] = o.GrantType
	toSerialize["accessTokenUrl"] = o.AccessTokenUrl
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	toSerialize["clientAuth"] = o.ClientAuth
	return toSerialize, nil
}

func (o *AddCredentialsRequestCredentialOneOf8Config) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grantType",
		"accessTokenUrl",
		"clientAuth",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddCredentialsRequestCredentialOneOf8Config := _AddCredentialsRequestCredentialOneOf8Config{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddCredentialsRequestCredentialOneOf8Config)

	if err != nil {
		return err
	}

	*o = AddCredentialsRequestCredentialOneOf8Config(varAddCredentialsRequestCredentialOneOf8Config)

	return err
}

type NullableAddCredentialsRequestCredentialOneOf8Config struct {
	value *AddCredentialsRequestCredentialOneOf8Config
	isSet bool
}

func (v NullableAddCredentialsRequestCredentialOneOf8Config) Get() *AddCredentialsRequestCredentialOneOf8Config {
	return v.value
}

func (v *NullableAddCredentialsRequestCredentialOneOf8Config) Set(val *AddCredentialsRequestCredentialOneOf8Config) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCredentialsRequestCredentialOneOf8Config) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCredentialsRequestCredentialOneOf8Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCredentialsRequestCredentialOneOf8Config(val *AddCredentialsRequestCredentialOneOf8Config) *NullableAddCredentialsRequestCredentialOneOf8Config {
	return &NullableAddCredentialsRequestCredentialOneOf8Config{value: val, isSet: true}
}

func (v NullableAddCredentialsRequestCredentialOneOf8Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCredentialsRequestCredentialOneOf8Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


