/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ClusterPackageUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterPackageUpdate{}

// ClusterPackageUpdate struct for ClusterPackageUpdate
type ClusterPackageUpdate struct {
	// Cluster Package name
	Name *string `json:"name,omitempty"`
	// Cluster Package description
	Description *string `json:"description,omitempty"`
	// Cluster Package code
	Code *string `json:"code,omitempty"`
	// Version of the cluster package
	PackageVersion *string `json:"packageVersion,omitempty"`
	// Package Type
	PackageType *string `json:"packageType,omitempty"`
	// type
	Type *string `json:"type,omitempty"`
	// Can be used to enable / disable the cluster package.
	Enabled *bool `json:"enabled,omitempty"`
	// Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png.
	IconPath *string `json:"iconPath,omitempty"`
	// Array of resource spec templates
	SpecTemplates []GetAlerts200ResponseAllOfChecksInnerAccount `json:"specTemplates,omitempty"`
}

// NewClusterPackageUpdate instantiates a new ClusterPackageUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterPackageUpdate() *ClusterPackageUpdate {
	this := ClusterPackageUpdate{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewClusterPackageUpdateWithDefaults instantiates a new ClusterPackageUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterPackageUpdateWithDefaults() *ClusterPackageUpdate {
	this := ClusterPackageUpdate{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterPackageUpdate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterPackageUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ClusterPackageUpdate) SetCode(v string) {
	o.Code = &v
}

// GetPackageVersion returns the PackageVersion field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetPackageVersion() string {
	if o == nil || IsNil(o.PackageVersion) {
		var ret string
		return ret
	}
	return *o.PackageVersion
}

// GetPackageVersionOk returns a tuple with the PackageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetPackageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PackageVersion) {
		return nil, false
	}
	return o.PackageVersion, true
}

// IsSetPackageVersion returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetPackageVersion() bool {
	if o != nil && !IsNil(o.PackageVersion) {
		return true
	}

	return false
}

// SetPackageVersion gets a reference to the given string and assigns it to the PackageVersion field.
func (o *ClusterPackageUpdate) SetPackageVersion(v string) {
	o.PackageVersion = &v
}

// GetPackageType returns the PackageType field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetPackageType() string {
	if o == nil || IsNil(o.PackageType) {
		var ret string
		return ret
	}
	return *o.PackageType
}

// GetPackageTypeOk returns a tuple with the PackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetPackageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PackageType) {
		return nil, false
	}
	return o.PackageType, true
}

// IsSetPackageType returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetPackageType() bool {
	if o != nil && !IsNil(o.PackageType) {
		return true
	}

	return false
}

// SetPackageType gets a reference to the given string and assigns it to the PackageType field.
func (o *ClusterPackageUpdate) SetPackageType(v string) {
	o.PackageType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterPackageUpdate) SetType(v string) {
	o.Type = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClusterPackageUpdate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetIconPath() string {
	if o == nil || IsNil(o.IconPath) {
		var ret string
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetIconPathOk() (*string, bool) {
	if o == nil || IsNil(o.IconPath) {
		return nil, false
	}
	return o.IconPath, true
}

// IsSetIconPath returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetIconPath() bool {
	if o != nil && !IsNil(o.IconPath) {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given string and assigns it to the IconPath field.
func (o *ClusterPackageUpdate) SetIconPath(v string) {
	o.IconPath = &v
}

// GetSpecTemplates returns the SpecTemplates field value if set, zero value otherwise.
func (o *ClusterPackageUpdate) GetSpecTemplates() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.SpecTemplates) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.SpecTemplates
}

// GetSpecTemplatesOk returns a tuple with the SpecTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPackageUpdate) GetSpecTemplatesOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.SpecTemplates) {
		return nil, false
	}
	return o.SpecTemplates, true
}

// IsSetSpecTemplates returns a boolean if a field has been set.
func (o *ClusterPackageUpdate) IsSetSpecTemplates() bool {
	if o != nil && !IsNil(o.SpecTemplates) {
		return true
	}

	return false
}

// SetSpecTemplates gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the SpecTemplates field.
func (o *ClusterPackageUpdate) SetSpecTemplates(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.SpecTemplates = v
}

func (o ClusterPackageUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterPackageUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.PackageVersion) {
		toSerialize["packageVersion"] = o.PackageVersion
	}
	if !IsNil(o.PackageType) {
		toSerialize["packageType"] = o.PackageType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.IconPath) {
		toSerialize["iconPath"] = o.IconPath
	}
	if !IsNil(o.SpecTemplates) {
		toSerialize["specTemplates"] = o.SpecTemplates
	}
	return toSerialize, nil
}

type NullableClusterPackageUpdate struct {
	value *ClusterPackageUpdate
	isSet bool
}

func (v NullableClusterPackageUpdate) Get() *ClusterPackageUpdate {
	return v.value
}

func (v *NullableClusterPackageUpdate) Set(val *ClusterPackageUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterPackageUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterPackageUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterPackageUpdate(val *ClusterPackageUpdate) *NullableClusterPackageUpdate {
	return &NullableClusterPackageUpdate{value: val, isSet: true}
}

func (v NullableClusterPackageUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterPackageUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


