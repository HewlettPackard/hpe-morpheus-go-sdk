/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListCatalogTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCatalogTypes200Response{}

// ListCatalogTypes200Response struct for ListCatalogTypes200Response
type ListCatalogTypes200Response struct {
	CatalogItemTypes []ListCatalogTypes200ResponseAllOfCatalogItemTypesInner `json:"catalogItemTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListCatalogTypes200Response instantiates a new ListCatalogTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCatalogTypes200Response() *ListCatalogTypes200Response {
	this := ListCatalogTypes200Response{}
	return &this
}

// NewListCatalogTypes200ResponseWithDefaults instantiates a new ListCatalogTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCatalogTypes200ResponseWithDefaults() *ListCatalogTypes200Response {
	this := ListCatalogTypes200Response{}
	return &this
}

// GetCatalogItemTypes returns the CatalogItemTypes field value if set, zero value otherwise.
func (o *ListCatalogTypes200Response) GetCatalogItemTypes() []ListCatalogTypes200ResponseAllOfCatalogItemTypesInner {
	if o == nil || IsNil(o.CatalogItemTypes) {
		var ret []ListCatalogTypes200ResponseAllOfCatalogItemTypesInner
		return ret
	}
	return o.CatalogItemTypes
}

// GetCatalogItemTypesOk returns a tuple with the CatalogItemTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCatalogTypes200Response) GetCatalogItemTypesOk() ([]ListCatalogTypes200ResponseAllOfCatalogItemTypesInner, bool) {
	if o == nil || IsNil(o.CatalogItemTypes) {
		return nil, false
	}
	return o.CatalogItemTypes, true
}

// IsSetCatalogItemTypes returns a boolean if a field has been set.
func (o *ListCatalogTypes200Response) IsSetCatalogItemTypes() bool {
	if o != nil && !IsNil(o.CatalogItemTypes) {
		return true
	}

	return false
}

// SetCatalogItemTypes gets a reference to the given []ListCatalogTypes200ResponseAllOfCatalogItemTypesInner and assigns it to the CatalogItemTypes field.
func (o *ListCatalogTypes200Response) SetCatalogItemTypes(v []ListCatalogTypes200ResponseAllOfCatalogItemTypesInner) {
	o.CatalogItemTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListCatalogTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCatalogTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListCatalogTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListCatalogTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListCatalogTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCatalogTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogItemTypes) {
		toSerialize["catalogItemTypes"] = o.CatalogItemTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListCatalogTypes200Response struct {
	value *ListCatalogTypes200Response
	isSet bool
}

func (v NullableListCatalogTypes200Response) Get() *ListCatalogTypes200Response {
	return v.value
}

func (v *NullableListCatalogTypes200Response) Set(val *ListCatalogTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListCatalogTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListCatalogTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCatalogTypes200Response(val *ListCatalogTypes200Response) *NullableListCatalogTypes200Response {
	return &NullableListCatalogTypes200Response{value: val, isSet: true}
}

func (v NullableListCatalogTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCatalogTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


