/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateInstanceTypeRequestInstanceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstanceTypeRequestInstanceType{}

// UpdateInstanceTypeRequestInstanceType struct for UpdateInstanceTypeRequestInstanceType
type UpdateInstanceTypeRequestInstanceType struct {
	// Instance type name
	Name *string `json:"name,omitempty"`
	// Instance type description
	Description *string `json:"description,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Instance type code
	Code *string `json:"code,omitempty"`
	// Category
	Category *string `json:"category,omitempty"`
	// Visibility
	Visibility *string `json:"visibility,omitempty"`
	// Featured
	Featured *bool `json:"featured,omitempty"`
	// Enable Settings
	HasSettings *bool `json:"hasSettings,omitempty"`
	// Enable Scaling (Horizontal)
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	// Supports Deployments
	HasDeployment *bool `json:"hasDeployment,omitempty"`
	// Environment Prefix, can be used to make exported evars unique.
	EnvironmentPrefix *string `json:"environmentPrefix,omitempty"`
	// Array of instance type env variables.
	EnvironmentVariables []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner `json:"environmentVariables,omitempty"`
	// Array of price set objects
	PriceSets []AddInstanceTypeRequestInstanceTypePriceSetsInner `json:"priceSets,omitempty"`
	// Array of instance type option type IDs
	OptionTypes []int64 `json:"optionTypes,omitempty"`
}

// NewUpdateInstanceTypeRequestInstanceType instantiates a new UpdateInstanceTypeRequestInstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstanceTypeRequestInstanceType() *UpdateInstanceTypeRequestInstanceType {
	this := UpdateInstanceTypeRequestInstanceType{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewUpdateInstanceTypeRequestInstanceTypeWithDefaults instantiates a new UpdateInstanceTypeRequestInstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstanceTypeRequestInstanceTypeWithDefaults() *UpdateInstanceTypeRequestInstanceType {
	this := UpdateInstanceTypeRequestInstanceType{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInstanceTypeRequestInstanceType) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateInstanceTypeRequestInstanceType) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateInstanceTypeRequestInstanceType) SetLabels(v []string) {
	o.Labels = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *UpdateInstanceTypeRequestInstanceType) SetCode(v string) {
	o.Code = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *UpdateInstanceTypeRequestInstanceType) SetCategory(v string) {
	o.Category = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *UpdateInstanceTypeRequestInstanceType) SetVisibility(v string) {
	o.Visibility = &v
}

// GetFeatured returns the Featured field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetFeatured() bool {
	if o == nil || IsNil(o.Featured) {
		var ret bool
		return ret
	}
	return *o.Featured
}

// GetFeaturedOk returns a tuple with the Featured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetFeaturedOk() (*bool, bool) {
	if o == nil || IsNil(o.Featured) {
		return nil, false
	}
	return o.Featured, true
}

// IsSetFeatured returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetFeatured() bool {
	if o != nil && !IsNil(o.Featured) {
		return true
	}

	return false
}

// SetFeatured gets a reference to the given bool and assigns it to the Featured field.
func (o *UpdateInstanceTypeRequestInstanceType) SetFeatured(v bool) {
	o.Featured = &v
}

// GetHasSettings returns the HasSettings field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasSettings() bool {
	if o == nil || IsNil(o.HasSettings) {
		var ret bool
		return ret
	}
	return *o.HasSettings
}

// GetHasSettingsOk returns a tuple with the HasSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasSettingsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSettings) {
		return nil, false
	}
	return o.HasSettings, true
}

// IsSetHasSettings returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetHasSettings() bool {
	if o != nil && !IsNil(o.HasSettings) {
		return true
	}

	return false
}

// SetHasSettings gets a reference to the given bool and assigns it to the HasSettings field.
func (o *UpdateInstanceTypeRequestInstanceType) SetHasSettings(v bool) {
	o.HasSettings = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasAutoScale() bool {
	if o == nil || IsNil(o.HasAutoScale) {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAutoScale) {
		return nil, false
	}
	return o.HasAutoScale, true
}

// IsSetHasAutoScale returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetHasAutoScale() bool {
	if o != nil && !IsNil(o.HasAutoScale) {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *UpdateInstanceTypeRequestInstanceType) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetHasDeployment returns the HasDeployment field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasDeployment() bool {
	if o == nil || IsNil(o.HasDeployment) {
		var ret bool
		return ret
	}
	return *o.HasDeployment
}

// GetHasDeploymentOk returns a tuple with the HasDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetHasDeploymentOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDeployment) {
		return nil, false
	}
	return o.HasDeployment, true
}

// IsSetHasDeployment returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetHasDeployment() bool {
	if o != nil && !IsNil(o.HasDeployment) {
		return true
	}

	return false
}

// SetHasDeployment gets a reference to the given bool and assigns it to the HasDeployment field.
func (o *UpdateInstanceTypeRequestInstanceType) SetHasDeployment(v bool) {
	o.HasDeployment = &v
}

// GetEnvironmentPrefix returns the EnvironmentPrefix field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetEnvironmentPrefix() string {
	if o == nil || IsNil(o.EnvironmentPrefix) {
		var ret string
		return ret
	}
	return *o.EnvironmentPrefix
}

// GetEnvironmentPrefixOk returns a tuple with the EnvironmentPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetEnvironmentPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentPrefix) {
		return nil, false
	}
	return o.EnvironmentPrefix, true
}

// IsSetEnvironmentPrefix returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetEnvironmentPrefix() bool {
	if o != nil && !IsNil(o.EnvironmentPrefix) {
		return true
	}

	return false
}

// SetEnvironmentPrefix gets a reference to the given string and assigns it to the EnvironmentPrefix field.
func (o *UpdateInstanceTypeRequestInstanceType) SetEnvironmentPrefix(v string) {
	o.EnvironmentPrefix = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetEnvironmentVariables() []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetEnvironmentVariablesOk() ([]AddClusterLayoutsRequestLayoutEnvironmentVariablesInner, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// IsSetEnvironmentVariables returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner and assigns it to the EnvironmentVariables field.
func (o *UpdateInstanceTypeRequestInstanceType) SetEnvironmentVariables(v []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner) {
	o.EnvironmentVariables = v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetPriceSets() []AddInstanceTypeRequestInstanceTypePriceSetsInner {
	if o == nil || IsNil(o.PriceSets) {
		var ret []AddInstanceTypeRequestInstanceTypePriceSetsInner
		return ret
	}
	return o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetPriceSetsOk() ([]AddInstanceTypeRequestInstanceTypePriceSetsInner, bool) {
	if o == nil || IsNil(o.PriceSets) {
		return nil, false
	}
	return o.PriceSets, true
}

// IsSetPriceSets returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetPriceSets() bool {
	if o != nil && !IsNil(o.PriceSets) {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []AddInstanceTypeRequestInstanceTypePriceSetsInner and assigns it to the PriceSets field.
func (o *UpdateInstanceTypeRequestInstanceType) SetPriceSets(v []AddInstanceTypeRequestInstanceTypePriceSetsInner) {
	o.PriceSets = v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *UpdateInstanceTypeRequestInstanceType) GetOptionTypes() []int64 {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []int64
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceTypeRequestInstanceType) GetOptionTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *UpdateInstanceTypeRequestInstanceType) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []int64 and assigns it to the OptionTypes field.
func (o *UpdateInstanceTypeRequestInstanceType) SetOptionTypes(v []int64) {
	o.OptionTypes = v
}

func (o UpdateInstanceTypeRequestInstanceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInstanceTypeRequestInstanceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Featured) {
		toSerialize["featured"] = o.Featured
	}
	if !IsNil(o.HasSettings) {
		toSerialize["hasSettings"] = o.HasSettings
	}
	if !IsNil(o.HasAutoScale) {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if !IsNil(o.HasDeployment) {
		toSerialize["hasDeployment"] = o.HasDeployment
	}
	if !IsNil(o.EnvironmentPrefix) {
		toSerialize["environmentPrefix"] = o.EnvironmentPrefix
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if !IsNil(o.PriceSets) {
		toSerialize["priceSets"] = o.PriceSets
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	return toSerialize, nil
}

type NullableUpdateInstanceTypeRequestInstanceType struct {
	value *UpdateInstanceTypeRequestInstanceType
	isSet bool
}

func (v NullableUpdateInstanceTypeRequestInstanceType) Get() *UpdateInstanceTypeRequestInstanceType {
	return v.value
}

func (v *NullableUpdateInstanceTypeRequestInstanceType) Set(val *UpdateInstanceTypeRequestInstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstanceTypeRequestInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstanceTypeRequestInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstanceTypeRequestInstanceType(val *UpdateInstanceTypeRequestInstanceType) *NullableUpdateInstanceTypeRequestInstanceType {
	return &NullableUpdateInstanceTypeRequestInstanceType{value: val, isSet: true}
}

func (v NullableUpdateInstanceTypeRequestInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstanceTypeRequestInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


