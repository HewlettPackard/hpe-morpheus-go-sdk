/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateWikiAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWikiAppRequest{}

// UpdateWikiAppRequest struct for UpdateWikiAppRequest
type UpdateWikiAppRequest struct {
	Page *UpdateWikiAppRequestPage `json:"page,omitempty"`
}

// NewUpdateWikiAppRequest instantiates a new UpdateWikiAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWikiAppRequest() *UpdateWikiAppRequest {
	this := UpdateWikiAppRequest{}
	return &this
}

// NewUpdateWikiAppRequestWithDefaults instantiates a new UpdateWikiAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWikiAppRequestWithDefaults() *UpdateWikiAppRequest {
	this := UpdateWikiAppRequest{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *UpdateWikiAppRequest) GetPage() UpdateWikiAppRequestPage {
	if o == nil || IsNil(o.Page) {
		var ret UpdateWikiAppRequestPage
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWikiAppRequest) GetPageOk() (*UpdateWikiAppRequestPage, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// IsSetPage returns a boolean if a field has been set.
func (o *UpdateWikiAppRequest) IsSetPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given UpdateWikiAppRequestPage and assigns it to the Page field.
func (o *UpdateWikiAppRequest) SetPage(v UpdateWikiAppRequestPage) {
	o.Page = &v
}

func (o UpdateWikiAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWikiAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableUpdateWikiAppRequest struct {
	value *UpdateWikiAppRequest
	isSet bool
}

func (v NullableUpdateWikiAppRequest) Get() *UpdateWikiAppRequest {
	return v.value
}

func (v *NullableUpdateWikiAppRequest) Set(val *UpdateWikiAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWikiAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWikiAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWikiAppRequest(val *UpdateWikiAppRequest) *NullableUpdateWikiAppRequest {
	return &NullableUpdateWikiAppRequest{value: val, isSet: true}
}

func (v NullableUpdateWikiAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWikiAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


