/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ResizeInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResizeInstanceRequest{}

// ResizeInstanceRequest struct for ResizeInstanceRequest
type ResizeInstanceRequest struct {
	Instance *ResizeInstanceRequestInstance `json:"instance,omitempty"`
	ServicePlanOptions *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions `json:"servicePlanOptions,omitempty"`
	// Can be used to grow just the logical volume of the instance instead of choosing a plan
	Volumes []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner `json:"volumes,omitempty"`
	// Delete the original volumes after resizing. (Amazon only)
	DeleteOriginalVolumes *bool `json:"deleteOriginalVolumes,omitempty"`
	// Key for network configuration. Include id to update an existing interface. The existing interfaces and their id can be retrieved with the hosts API.
	NetworkInterfaces []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner `json:"networkInterfaces,omitempty"`
}

// NewResizeInstanceRequest instantiates a new ResizeInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResizeInstanceRequest() *ResizeInstanceRequest {
	this := ResizeInstanceRequest{}
	var deleteOriginalVolumes bool = false
	this.DeleteOriginalVolumes = &deleteOriginalVolumes
	return &this
}

// NewResizeInstanceRequestWithDefaults instantiates a new ResizeInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResizeInstanceRequestWithDefaults() *ResizeInstanceRequest {
	this := ResizeInstanceRequest{}
	var deleteOriginalVolumes bool = false
	this.DeleteOriginalVolumes = &deleteOriginalVolumes
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *ResizeInstanceRequest) GetInstance() ResizeInstanceRequestInstance {
	if o == nil || IsNil(o.Instance) {
		var ret ResizeInstanceRequestInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeInstanceRequest) GetInstanceOk() (*ResizeInstanceRequestInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *ResizeInstanceRequest) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given ResizeInstanceRequestInstance and assigns it to the Instance field.
func (o *ResizeInstanceRequest) SetInstance(v ResizeInstanceRequestInstance) {
	o.Instance = &v
}

// GetServicePlanOptions returns the ServicePlanOptions field value if set, zero value otherwise.
func (o *ResizeInstanceRequest) GetServicePlanOptions() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions {
	if o == nil || IsNil(o.ServicePlanOptions) {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions
		return ret
	}
	return *o.ServicePlanOptions
}

// GetServicePlanOptionsOk returns a tuple with the ServicePlanOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeInstanceRequest) GetServicePlanOptionsOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions, bool) {
	if o == nil || IsNil(o.ServicePlanOptions) {
		return nil, false
	}
	return o.ServicePlanOptions, true
}

// IsSetServicePlanOptions returns a boolean if a field has been set.
func (o *ResizeInstanceRequest) IsSetServicePlanOptions() bool {
	if o != nil && !IsNil(o.ServicePlanOptions) {
		return true
	}

	return false
}

// SetServicePlanOptions gets a reference to the given AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions and assigns it to the ServicePlanOptions field.
func (o *ResizeInstanceRequest) SetServicePlanOptions(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigServicePlanOptions) {
	o.ServicePlanOptions = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *ResizeInstanceRequest) GetVolumes() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner {
	if o == nil || IsNil(o.Volumes) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeInstanceRequest) GetVolumesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// IsSetVolumes returns a boolean if a field has been set.
func (o *ResizeInstanceRequest) IsSetVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner and assigns it to the Volumes field.
func (o *ResizeInstanceRequest) SetVolumes(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner) {
	o.Volumes = v
}

// GetDeleteOriginalVolumes returns the DeleteOriginalVolumes field value if set, zero value otherwise.
func (o *ResizeInstanceRequest) GetDeleteOriginalVolumes() bool {
	if o == nil || IsNil(o.DeleteOriginalVolumes) {
		var ret bool
		return ret
	}
	return *o.DeleteOriginalVolumes
}

// GetDeleteOriginalVolumesOk returns a tuple with the DeleteOriginalVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeInstanceRequest) GetDeleteOriginalVolumesOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOriginalVolumes) {
		return nil, false
	}
	return o.DeleteOriginalVolumes, true
}

// IsSetDeleteOriginalVolumes returns a boolean if a field has been set.
func (o *ResizeInstanceRequest) IsSetDeleteOriginalVolumes() bool {
	if o != nil && !IsNil(o.DeleteOriginalVolumes) {
		return true
	}

	return false
}

// SetDeleteOriginalVolumes gets a reference to the given bool and assigns it to the DeleteOriginalVolumes field.
func (o *ResizeInstanceRequest) SetDeleteOriginalVolumes(v bool) {
	o.DeleteOriginalVolumes = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *ResizeInstanceRequest) GetNetworkInterfaces() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeInstanceRequest) GetNetworkInterfacesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// IsSetNetworkInterfaces returns a boolean if a field has been set.
func (o *ResizeInstanceRequest) IsSetNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner and assigns it to the NetworkInterfaces field.
func (o *ResizeInstanceRequest) SetNetworkInterfaces(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner) {
	o.NetworkInterfaces = v
}

func (o ResizeInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResizeInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.ServicePlanOptions) {
		toSerialize["servicePlanOptions"] = o.ServicePlanOptions
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.DeleteOriginalVolumes) {
		toSerialize["deleteOriginalVolumes"] = o.DeleteOriginalVolumes
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	return toSerialize, nil
}

type NullableResizeInstanceRequest struct {
	value *ResizeInstanceRequest
	isSet bool
}

func (v NullableResizeInstanceRequest) Get() *ResizeInstanceRequest {
	return v.value
}

func (v *NullableResizeInstanceRequest) Set(val *ResizeInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResizeInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResizeInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResizeInstanceRequest(val *ResizeInstanceRequest) *NullableResizeInstanceRequest {
	return &NullableResizeInstanceRequest{value: val, isSet: true}
}

func (v NullableResizeInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResizeInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


