/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddCatalogCartItemRequestItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCatalogCartItemRequestItem{}

// AddCatalogCartItemRequestItem struct for AddCatalogCartItemRequestItem
type AddCatalogCartItemRequestItem struct {
	Type *AddCatalogCartItemRequestItemType `json:"type,omitempty"`
	// Quantity for this catalog item. Will be overridden to 1 if quantity not allowed by the item type. 
	Quantity *int64 `json:"quantity,omitempty"`
	// Config Object, required options depend on the catalog item type's associated option types. The values passed in here are injected into the instance config or app spec or workflow script(s) defined by the type. 
	Config map[string]interface{} `json:"config,omitempty"`
	// Context Type for running the workflow, determines if a target resource must be selected. `instance`, `server`, or `appliance`. This may only be passed if the type allows it, usually the type determines the context for the user. Only applies to type `workflow`. 
	Context *string `json:"context,omitempty"`
	// Resource (Instance or Server) ID for context when running the `workflow`. Only applies to type `workflow` and only required when context is `instance` or `server`. 
	Target *int64 `json:"target,omitempty"`
}

// NewAddCatalogCartItemRequestItem instantiates a new AddCatalogCartItemRequestItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCatalogCartItemRequestItem() *AddCatalogCartItemRequestItem {
	this := AddCatalogCartItemRequestItem{}
	return &this
}

// NewAddCatalogCartItemRequestItemWithDefaults instantiates a new AddCatalogCartItemRequestItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCatalogCartItemRequestItemWithDefaults() *AddCatalogCartItemRequestItem {
	this := AddCatalogCartItemRequestItem{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddCatalogCartItemRequestItem) GetType() AddCatalogCartItemRequestItemType {
	if o == nil || IsNil(o.Type) {
		var ret AddCatalogCartItemRequestItemType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogCartItemRequestItem) GetTypeOk() (*AddCatalogCartItemRequestItemType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddCatalogCartItemRequestItem) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AddCatalogCartItemRequestItemType and assigns it to the Type field.
func (o *AddCatalogCartItemRequestItem) SetType(v AddCatalogCartItemRequestItemType) {
	o.Type = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AddCatalogCartItemRequestItem) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogCartItemRequestItem) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// IsSetQuantity returns a boolean if a field has been set.
func (o *AddCatalogCartItemRequestItem) IsSetQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *AddCatalogCartItemRequestItem) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddCatalogCartItemRequestItem) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogCartItemRequestItem) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddCatalogCartItemRequestItem) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *AddCatalogCartItemRequestItem) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *AddCatalogCartItemRequestItem) GetContext() string {
	if o == nil || IsNil(o.Context) {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogCartItemRequestItem) GetContextOk() (*string, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// IsSetContext returns a boolean if a field has been set.
func (o *AddCatalogCartItemRequestItem) IsSetContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *AddCatalogCartItemRequestItem) SetContext(v string) {
	o.Context = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *AddCatalogCartItemRequestItem) GetTarget() int64 {
	if o == nil || IsNil(o.Target) {
		var ret int64
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogCartItemRequestItem) GetTargetOk() (*int64, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// IsSetTarget returns a boolean if a field has been set.
func (o *AddCatalogCartItemRequestItem) IsSetTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given int64 and assigns it to the Target field.
func (o *AddCatalogCartItemRequestItem) SetTarget(v int64) {
	o.Target = &v
}

func (o AddCatalogCartItemRequestItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCatalogCartItemRequestItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	return toSerialize, nil
}

type NullableAddCatalogCartItemRequestItem struct {
	value *AddCatalogCartItemRequestItem
	isSet bool
}

func (v NullableAddCatalogCartItemRequestItem) Get() *AddCatalogCartItemRequestItem {
	return v.value
}

func (v *NullableAddCatalogCartItemRequestItem) Set(val *AddCatalogCartItemRequestItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCatalogCartItemRequestItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCatalogCartItemRequestItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCatalogCartItemRequestItem(val *AddCatalogCartItemRequestItem) *NullableAddCatalogCartItemRequestItem {
	return &NullableAddCatalogCartItemRequestItem{value: val, isSet: true}
}

func (v NullableAddCatalogCartItemRequestItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCatalogCartItemRequestItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


