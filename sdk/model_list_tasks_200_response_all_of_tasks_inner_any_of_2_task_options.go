/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions{}

// ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions struct for ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions
type ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions struct {
	ChefDataKey *string `json:"chefDataKey,omitempty"`
	ChefDataKeyHash *string `json:"chefDataKeyHash,omitempty"`
	ChefRunList *string `json:"chefRunList,omitempty"`
	LocalScriptGitRef *string `json:"localScriptGitRef,omitempty"`
	ChefDataKeyPath *string `json:"chefDataKeyPath,omitempty"`
	LocalScriptGitId *string `json:"localScriptGitId,omitempty"`
	Port *string `json:"port,omitempty"`
	ChefEnv *string `json:"chefEnv,omitempty"`
	ChefNodeName *string `json:"chefNodeName,omitempty"`
	Host *string `json:"host,omitempty"`
	SshKey *string `json:"sshKey,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	PasswordHash *string `json:"passwordHash,omitempty"`
	ChefAttributes *string `json:"chefAttributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions

// NewListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions() *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions{}
	return &this
}

// NewListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptionsWithDefaults instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptionsWithDefaults() *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions{}
	return &this
}

// GetChefDataKey returns the ChefDataKey field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKey() string {
	if o == nil || IsNil(o.ChefDataKey) {
		var ret string
		return ret
	}
	return *o.ChefDataKey
}

// GetChefDataKeyOk returns a tuple with the ChefDataKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ChefDataKey) {
		return nil, false
	}
	return o.ChefDataKey, true
}

// IsSetChefDataKey returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefDataKey() bool {
	if o != nil && !IsNil(o.ChefDataKey) {
		return true
	}

	return false
}

// SetChefDataKey gets a reference to the given string and assigns it to the ChefDataKey field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefDataKey(v string) {
	o.ChefDataKey = &v
}

// GetChefDataKeyHash returns the ChefDataKeyHash field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKeyHash() string {
	if o == nil || IsNil(o.ChefDataKeyHash) {
		var ret string
		return ret
	}
	return *o.ChefDataKeyHash
}

// GetChefDataKeyHashOk returns a tuple with the ChefDataKeyHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKeyHashOk() (*string, bool) {
	if o == nil || IsNil(o.ChefDataKeyHash) {
		return nil, false
	}
	return o.ChefDataKeyHash, true
}

// IsSetChefDataKeyHash returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefDataKeyHash() bool {
	if o != nil && !IsNil(o.ChefDataKeyHash) {
		return true
	}

	return false
}

// SetChefDataKeyHash gets a reference to the given string and assigns it to the ChefDataKeyHash field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefDataKeyHash(v string) {
	o.ChefDataKeyHash = &v
}

// GetChefRunList returns the ChefRunList field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefRunList() string {
	if o == nil || IsNil(o.ChefRunList) {
		var ret string
		return ret
	}
	return *o.ChefRunList
}

// GetChefRunListOk returns a tuple with the ChefRunList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefRunListOk() (*string, bool) {
	if o == nil || IsNil(o.ChefRunList) {
		return nil, false
	}
	return o.ChefRunList, true
}

// IsSetChefRunList returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefRunList() bool {
	if o != nil && !IsNil(o.ChefRunList) {
		return true
	}

	return false
}

// SetChefRunList gets a reference to the given string and assigns it to the ChefRunList field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefRunList(v string) {
	o.ChefRunList = &v
}

// GetLocalScriptGitRef returns the LocalScriptGitRef field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetLocalScriptGitRef() string {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitRef
}

// GetLocalScriptGitRefOk returns a tuple with the LocalScriptGitRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetLocalScriptGitRefOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		return nil, false
	}
	return o.LocalScriptGitRef, true
}

// IsSetLocalScriptGitRef returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetLocalScriptGitRef() bool {
	if o != nil && !IsNil(o.LocalScriptGitRef) {
		return true
	}

	return false
}

// SetLocalScriptGitRef gets a reference to the given string and assigns it to the LocalScriptGitRef field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetLocalScriptGitRef(v string) {
	o.LocalScriptGitRef = &v
}

// GetChefDataKeyPath returns the ChefDataKeyPath field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKeyPath() string {
	if o == nil || IsNil(o.ChefDataKeyPath) {
		var ret string
		return ret
	}
	return *o.ChefDataKeyPath
}

// GetChefDataKeyPathOk returns a tuple with the ChefDataKeyPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefDataKeyPathOk() (*string, bool) {
	if o == nil || IsNil(o.ChefDataKeyPath) {
		return nil, false
	}
	return o.ChefDataKeyPath, true
}

// IsSetChefDataKeyPath returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefDataKeyPath() bool {
	if o != nil && !IsNil(o.ChefDataKeyPath) {
		return true
	}

	return false
}

// SetChefDataKeyPath gets a reference to the given string and assigns it to the ChefDataKeyPath field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefDataKeyPath(v string) {
	o.ChefDataKeyPath = &v
}

// GetLocalScriptGitId returns the LocalScriptGitId field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetLocalScriptGitId() string {
	if o == nil || IsNil(o.LocalScriptGitId) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitId
}

// GetLocalScriptGitIdOk returns a tuple with the LocalScriptGitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetLocalScriptGitIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitId) {
		return nil, false
	}
	return o.LocalScriptGitId, true
}

// IsSetLocalScriptGitId returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetLocalScriptGitId() bool {
	if o != nil && !IsNil(o.LocalScriptGitId) {
		return true
	}

	return false
}

// SetLocalScriptGitId gets a reference to the given string and assigns it to the LocalScriptGitId field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetLocalScriptGitId(v string) {
	o.LocalScriptGitId = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// IsSetPort returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetPort(v string) {
	o.Port = &v
}

// GetChefEnv returns the ChefEnv field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefEnv() string {
	if o == nil || IsNil(o.ChefEnv) {
		var ret string
		return ret
	}
	return *o.ChefEnv
}

// GetChefEnvOk returns a tuple with the ChefEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefEnvOk() (*string, bool) {
	if o == nil || IsNil(o.ChefEnv) {
		return nil, false
	}
	return o.ChefEnv, true
}

// IsSetChefEnv returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefEnv() bool {
	if o != nil && !IsNil(o.ChefEnv) {
		return true
	}

	return false
}

// SetChefEnv gets a reference to the given string and assigns it to the ChefEnv field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefEnv(v string) {
	o.ChefEnv = &v
}

// GetChefNodeName returns the ChefNodeName field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefNodeName() string {
	if o == nil || IsNil(o.ChefNodeName) {
		var ret string
		return ret
	}
	return *o.ChefNodeName
}

// GetChefNodeNameOk returns a tuple with the ChefNodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChefNodeName) {
		return nil, false
	}
	return o.ChefNodeName, true
}

// IsSetChefNodeName returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefNodeName() bool {
	if o != nil && !IsNil(o.ChefNodeName) {
		return true
	}

	return false
}

// SetChefNodeName gets a reference to the given string and assigns it to the ChefNodeName field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefNodeName(v string) {
	o.ChefNodeName = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// IsSetHost returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetHost(v string) {
	o.Host = &v
}

// GetSshKey returns the SshKey field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetSshKey() string {
	if o == nil || IsNil(o.SshKey) {
		var ret string
		return ret
	}
	return *o.SshKey
}

// GetSshKeyOk returns a tuple with the SshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetSshKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshKey) {
		return nil, false
	}
	return o.SshKey, true
}

// IsSetSshKey returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}

// SetSshKey gets a reference to the given string and assigns it to the SshKey field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetSshKey(v string) {
	o.SshKey = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// IsSetPassword returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordHash returns the PasswordHash field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPasswordHash() string {
	if o == nil || IsNil(o.PasswordHash) {
		var ret string
		return ret
	}
	return *o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHash) {
		return nil, false
	}
	return o.PasswordHash, true
}

// IsSetPasswordHash returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetPasswordHash() bool {
	if o != nil && !IsNil(o.PasswordHash) {
		return true
	}

	return false
}

// SetPasswordHash gets a reference to the given string and assigns it to the PasswordHash field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetPasswordHash(v string) {
	o.PasswordHash = &v
}

// GetChefAttributes returns the ChefAttributes field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefAttributes() string {
	if o == nil || IsNil(o.ChefAttributes) {
		var ret string
		return ret
	}
	return *o.ChefAttributes
}

// GetChefAttributesOk returns a tuple with the ChefAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) GetChefAttributesOk() (*string, bool) {
	if o == nil || IsNil(o.ChefAttributes) {
		return nil, false
	}
	return o.ChefAttributes, true
}

// IsSetChefAttributes returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSetChefAttributes() bool {
	if o != nil && !IsNil(o.ChefAttributes) {
		return true
	}

	return false
}

// SetChefAttributes gets a reference to the given string and assigns it to the ChefAttributes field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) SetChefAttributes(v string) {
	o.ChefAttributes = &v
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChefDataKey) {
		toSerialize["chefDataKey"] = o.ChefDataKey
	}
	if !IsNil(o.ChefDataKeyHash) {
		toSerialize["chefDataKeyHash"] = o.ChefDataKeyHash
	}
	if !IsNil(o.ChefRunList) {
		toSerialize["chefRunList"] = o.ChefRunList
	}
	if !IsNil(o.LocalScriptGitRef) {
		toSerialize["localScriptGitRef"] = o.LocalScriptGitRef
	}
	if !IsNil(o.ChefDataKeyPath) {
		toSerialize["chefDataKeyPath"] = o.ChefDataKeyPath
	}
	if !IsNil(o.LocalScriptGitId) {
		toSerialize["localScriptGitId"] = o.LocalScriptGitId
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ChefEnv) {
		toSerialize["chefEnv"] = o.ChefEnv
	}
	if !IsNil(o.ChefNodeName) {
		toSerialize["chefNodeName"] = o.ChefNodeName
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.SshKey) {
		toSerialize["sshKey"] = o.SshKey
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PasswordHash) {
		toSerialize["passwordHash"] = o.PasswordHash
	}
	if !IsNil(o.ChefAttributes) {
		toSerialize["chefAttributes"] = o.ChefAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) UnmarshalJSON(data []byte) (err error) {
	varListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions := _ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions{}

	err = json.Unmarshal(data, &varListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions)

	if err != nil {
		return err
	}

	*o = ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions(varListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "chefDataKey")
		delete(additionalProperties, "chefDataKeyHash")
		delete(additionalProperties, "chefRunList")
		delete(additionalProperties, "localScriptGitRef")
		delete(additionalProperties, "chefDataKeyPath")
		delete(additionalProperties, "localScriptGitId")
		delete(additionalProperties, "port")
		delete(additionalProperties, "chefEnv")
		delete(additionalProperties, "chefNodeName")
		delete(additionalProperties, "host")
		delete(additionalProperties, "sshKey")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "passwordHash")
		delete(additionalProperties, "chefAttributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions struct {
	value *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions
	isSet bool
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) Get() *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions {
	return v.value
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) Set(val *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions(val *ListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) *NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions {
	return &NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions{value: val, isSet: true}
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf2TaskOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


