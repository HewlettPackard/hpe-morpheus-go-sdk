/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetInstanceTypeProvisioning200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceTypeProvisioning200Response{}

// GetInstanceTypeProvisioning200Response struct for GetInstanceTypeProvisioning200Response
type GetInstanceTypeProvisioning200Response struct {
	InstanceType *GetInstanceTypeProvisioning200ResponseAllOfInstanceType `json:"instanceType,omitempty"`
}

// NewGetInstanceTypeProvisioning200Response instantiates a new GetInstanceTypeProvisioning200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceTypeProvisioning200Response() *GetInstanceTypeProvisioning200Response {
	this := GetInstanceTypeProvisioning200Response{}
	return &this
}

// NewGetInstanceTypeProvisioning200ResponseWithDefaults instantiates a new GetInstanceTypeProvisioning200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceTypeProvisioning200ResponseWithDefaults() *GetInstanceTypeProvisioning200Response {
	this := GetInstanceTypeProvisioning200Response{}
	return &this
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *GetInstanceTypeProvisioning200Response) GetInstanceType() GetInstanceTypeProvisioning200ResponseAllOfInstanceType {
	if o == nil || IsNil(o.InstanceType) {
		var ret GetInstanceTypeProvisioning200ResponseAllOfInstanceType
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypeProvisioning200Response) GetInstanceTypeOk() (*GetInstanceTypeProvisioning200ResponseAllOfInstanceType, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// IsSetInstanceType returns a boolean if a field has been set.
func (o *GetInstanceTypeProvisioning200Response) IsSetInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given GetInstanceTypeProvisioning200ResponseAllOfInstanceType and assigns it to the InstanceType field.
func (o *GetInstanceTypeProvisioning200Response) SetInstanceType(v GetInstanceTypeProvisioning200ResponseAllOfInstanceType) {
	o.InstanceType = &v
}

func (o GetInstanceTypeProvisioning200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceTypeProvisioning200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceType) {
		toSerialize["instanceType"] = o.InstanceType
	}
	return toSerialize, nil
}

type NullableGetInstanceTypeProvisioning200Response struct {
	value *GetInstanceTypeProvisioning200Response
	isSet bool
}

func (v NullableGetInstanceTypeProvisioning200Response) Get() *GetInstanceTypeProvisioning200Response {
	return v.value
}

func (v *NullableGetInstanceTypeProvisioning200Response) Set(val *GetInstanceTypeProvisioning200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceTypeProvisioning200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceTypeProvisioning200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceTypeProvisioning200Response(val *GetInstanceTypeProvisioning200Response) *NullableGetInstanceTypeProvisioning200Response {
	return &NullableGetInstanceTypeProvisioning200Response{value: val, isSet: true}
}

func (v NullableGetInstanceTypeProvisioning200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceTypeProvisioning200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


