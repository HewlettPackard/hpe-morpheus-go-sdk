/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetOsTypeImage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOsTypeImage200Response{}

// GetOsTypeImage200Response struct for GetOsTypeImage200Response
type GetOsTypeImage200Response struct {
	OsType *GetOsTypeImage200ResponseOsType `json:"osType,omitempty"`
}

// NewGetOsTypeImage200Response instantiates a new GetOsTypeImage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOsTypeImage200Response() *GetOsTypeImage200Response {
	this := GetOsTypeImage200Response{}
	return &this
}

// NewGetOsTypeImage200ResponseWithDefaults instantiates a new GetOsTypeImage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOsTypeImage200ResponseWithDefaults() *GetOsTypeImage200Response {
	this := GetOsTypeImage200Response{}
	return &this
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *GetOsTypeImage200Response) GetOsType() GetOsTypeImage200ResponseOsType {
	if o == nil || IsNil(o.OsType) {
		var ret GetOsTypeImage200ResponseOsType
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOsTypeImage200Response) GetOsTypeOk() (*GetOsTypeImage200ResponseOsType, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// IsSetOsType returns a boolean if a field has been set.
func (o *GetOsTypeImage200Response) IsSetOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given GetOsTypeImage200ResponseOsType and assigns it to the OsType field.
func (o *GetOsTypeImage200Response) SetOsType(v GetOsTypeImage200ResponseOsType) {
	o.OsType = &v
}

func (o GetOsTypeImage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOsTypeImage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	return toSerialize, nil
}

type NullableGetOsTypeImage200Response struct {
	value *GetOsTypeImage200Response
	isSet bool
}

func (v NullableGetOsTypeImage200Response) Get() *GetOsTypeImage200Response {
	return v.value
}

func (v *NullableGetOsTypeImage200Response) Set(val *GetOsTypeImage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOsTypeImage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOsTypeImage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOsTypeImage200Response(val *GetOsTypeImage200Response) *NullableGetOsTypeImage200Response {
	return &NullableGetOsTypeImage200Response{value: val, isSet: true}
}

func (v NullableGetOsTypeImage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOsTypeImage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


