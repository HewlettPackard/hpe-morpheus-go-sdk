/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)


// CreateNetworksRequestNetworkConfig Configuration object. Settings vary by type.
type CreateNetworksRequestNetworkConfig struct {
	CreateNetworksRequestNetworkConfigAnyOf *CreateNetworksRequestNetworkConfigAnyOf
	CreateNetworksRequestNetworkConfigAnyOf1 *CreateNetworksRequestNetworkConfigAnyOf1
	CreateNetworksRequestNetworkConfigAnyOf2 *CreateNetworksRequestNetworkConfigAnyOf2
	MapmapOfStringAny *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CreateNetworksRequestNetworkConfig) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CreateNetworksRequestNetworkConfigAnyOf
	err = json.Unmarshal(data, &dst.CreateNetworksRequestNetworkConfigAnyOf);
	if err == nil {
		jsonCreateNetworksRequestNetworkConfigAnyOf, _ := json.Marshal(dst.CreateNetworksRequestNetworkConfigAnyOf)
		if string(jsonCreateNetworksRequestNetworkConfigAnyOf) == "{}" { // empty struct
			dst.CreateNetworksRequestNetworkConfigAnyOf = nil
		} else {
			return nil // data stored in dst.CreateNetworksRequestNetworkConfigAnyOf, return on the first match
		}
	} else {
		dst.CreateNetworksRequestNetworkConfigAnyOf = nil
	}

	// try to unmarshal JSON data into CreateNetworksRequestNetworkConfigAnyOf1
	err = json.Unmarshal(data, &dst.CreateNetworksRequestNetworkConfigAnyOf1);
	if err == nil {
		jsonCreateNetworksRequestNetworkConfigAnyOf1, _ := json.Marshal(dst.CreateNetworksRequestNetworkConfigAnyOf1)
		if string(jsonCreateNetworksRequestNetworkConfigAnyOf1) == "{}" { // empty struct
			dst.CreateNetworksRequestNetworkConfigAnyOf1 = nil
		} else {
			return nil // data stored in dst.CreateNetworksRequestNetworkConfigAnyOf1, return on the first match
		}
	} else {
		dst.CreateNetworksRequestNetworkConfigAnyOf1 = nil
	}

	// try to unmarshal JSON data into CreateNetworksRequestNetworkConfigAnyOf2
	err = json.Unmarshal(data, &dst.CreateNetworksRequestNetworkConfigAnyOf2);
	if err == nil {
		jsonCreateNetworksRequestNetworkConfigAnyOf2, _ := json.Marshal(dst.CreateNetworksRequestNetworkConfigAnyOf2)
		if string(jsonCreateNetworksRequestNetworkConfigAnyOf2) == "{}" { // empty struct
			dst.CreateNetworksRequestNetworkConfigAnyOf2 = nil
		} else {
			return nil // data stored in dst.CreateNetworksRequestNetworkConfigAnyOf2, return on the first match
		}
	} else {
		dst.CreateNetworksRequestNetworkConfigAnyOf2 = nil
	}

	// try to unmarshal JSON data into MapmapOfStringAny
	err = json.Unmarshal(data, &dst.MapmapOfStringAny);
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			return nil // data stored in dst.MapmapOfStringAny, return on the first match
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CreateNetworksRequestNetworkConfig)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateNetworksRequestNetworkConfig) MarshalJSON() ([]byte, error) {
	if src.CreateNetworksRequestNetworkConfigAnyOf != nil {
		return json.Marshal(&src.CreateNetworksRequestNetworkConfigAnyOf)
	}

	if src.CreateNetworksRequestNetworkConfigAnyOf1 != nil {
		return json.Marshal(&src.CreateNetworksRequestNetworkConfigAnyOf1)
	}

	if src.CreateNetworksRequestNetworkConfigAnyOf2 != nil {
		return json.Marshal(&src.CreateNetworksRequestNetworkConfigAnyOf2)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCreateNetworksRequestNetworkConfig struct {
	value *CreateNetworksRequestNetworkConfig
	isSet bool
}

func (v NullableCreateNetworksRequestNetworkConfig) Get() *CreateNetworksRequestNetworkConfig {
	return v.value
}

func (v *NullableCreateNetworksRequestNetworkConfig) Set(val *CreateNetworksRequestNetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworksRequestNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworksRequestNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworksRequestNetworkConfig(val *CreateNetworksRequestNetworkConfig) *NullableCreateNetworksRequestNetworkConfig {
	return &NullableCreateNetworksRequestNetworkConfig{value: val, isSet: true}
}

func (v NullableCreateNetworksRequestNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworksRequestNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


