/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkTransportZoneCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkTransportZoneCreate{}

// NetworkTransportZoneCreate struct for NetworkTransportZoneCreate
type NetworkTransportZoneCreate struct {
	// Network transport zone name
	Name string `json:"name"`
	// Network transport zone description
	Description *string `json:"description,omitempty"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Array of tenant account ids that are allowed access
	Tenants []GetAlerts200ResponseAllOfChecksInnerAccount `json:"tenants,omitempty"`
}

type _NetworkTransportZoneCreate NetworkTransportZoneCreate

// NewNetworkTransportZoneCreate instantiates a new NetworkTransportZoneCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTransportZoneCreate(name string) *NetworkTransportZoneCreate {
	this := NetworkTransportZoneCreate{}
	this.Name = name
	return &this
}

// NewNetworkTransportZoneCreateWithDefaults instantiates a new NetworkTransportZoneCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTransportZoneCreateWithDefaults() *NetworkTransportZoneCreate {
	this := NetworkTransportZoneCreate{}
	return &this
}

// GetName returns the Name field value
func (o *NetworkTransportZoneCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkTransportZoneCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkTransportZoneCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkTransportZoneCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTransportZoneCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *NetworkTransportZoneCreate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkTransportZoneCreate) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *NetworkTransportZoneCreate) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTransportZoneCreate) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *NetworkTransportZoneCreate) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *NetworkTransportZoneCreate) SetVisibility(v string) {
	o.Visibility = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *NetworkTransportZoneCreate) GetTenants() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Tenants) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTransportZoneCreate) GetTenantsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *NetworkTransportZoneCreate) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Tenants field.
func (o *NetworkTransportZoneCreate) SetTenants(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Tenants = v
}

func (o NetworkTransportZoneCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkTransportZoneCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

func (o *NetworkTransportZoneCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkTransportZoneCreate := _NetworkTransportZoneCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkTransportZoneCreate)

	if err != nil {
		return err
	}

	*o = NetworkTransportZoneCreate(varNetworkTransportZoneCreate)

	return err
}

type NullableNetworkTransportZoneCreate struct {
	value *NetworkTransportZoneCreate
	isSet bool
}

func (v NullableNetworkTransportZoneCreate) Get() *NetworkTransportZoneCreate {
	return v.value
}

func (v *NullableNetworkTransportZoneCreate) Set(val *NetworkTransportZoneCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTransportZoneCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTransportZoneCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTransportZoneCreate(val *NetworkTransportZoneCreate) *NullableNetworkTransportZoneCreate {
	return &NullableNetworkTransportZoneCreate{value: val, isSet: true}
}

func (v NullableNetworkTransportZoneCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTransportZoneCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


