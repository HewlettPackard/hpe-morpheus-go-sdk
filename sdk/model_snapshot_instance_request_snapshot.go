/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SnapshotInstanceRequestSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotInstanceRequestSnapshot{}

// SnapshotInstanceRequestSnapshot struct for SnapshotInstanceRequestSnapshot
type SnapshotInstanceRequestSnapshot struct {
	// Optional name for the snapshot being created.
	Name *string `json:"name,omitempty"`
	// Optional description for the snapshot
	Description *string `json:"description,omitempty"`
}

// NewSnapshotInstanceRequestSnapshot instantiates a new SnapshotInstanceRequestSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotInstanceRequestSnapshot() *SnapshotInstanceRequestSnapshot {
	this := SnapshotInstanceRequestSnapshot{}
	var name string = "{serverName}.{timestamp}"
	this.Name = &name
	return &this
}

// NewSnapshotInstanceRequestSnapshotWithDefaults instantiates a new SnapshotInstanceRequestSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotInstanceRequestSnapshotWithDefaults() *SnapshotInstanceRequestSnapshot {
	this := SnapshotInstanceRequestSnapshot{}
	var name string = "{serverName}.{timestamp}"
	this.Name = &name
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SnapshotInstanceRequestSnapshot) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInstanceRequestSnapshot) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *SnapshotInstanceRequestSnapshot) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SnapshotInstanceRequestSnapshot) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SnapshotInstanceRequestSnapshot) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotInstanceRequestSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *SnapshotInstanceRequestSnapshot) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SnapshotInstanceRequestSnapshot) SetDescription(v string) {
	o.Description = &v
}

func (o SnapshotInstanceRequestSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotInstanceRequestSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableSnapshotInstanceRequestSnapshot struct {
	value *SnapshotInstanceRequestSnapshot
	isSet bool
}

func (v NullableSnapshotInstanceRequestSnapshot) Get() *SnapshotInstanceRequestSnapshot {
	return v.value
}

func (v *NullableSnapshotInstanceRequestSnapshot) Set(val *SnapshotInstanceRequestSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotInstanceRequestSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotInstanceRequestSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotInstanceRequestSnapshot(val *SnapshotInstanceRequestSnapshot) *NullableSnapshotInstanceRequestSnapshot {
	return &NullableSnapshotInstanceRequestSnapshot{value: val, isSet: true}
}

func (v NullableSnapshotInstanceRequestSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotInstanceRequestSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


