/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListRoles200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRoles200Response{}

// ListRoles200Response struct for ListRoles200Response
type ListRoles200Response struct {
	Roles []ListRoles200ResponseAllOfRolesInner `json:"roles,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListRoles200Response instantiates a new ListRoles200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRoles200Response() *ListRoles200Response {
	this := ListRoles200Response{}
	return &this
}

// NewListRoles200ResponseWithDefaults instantiates a new ListRoles200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRoles200ResponseWithDefaults() *ListRoles200Response {
	this := ListRoles200Response{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ListRoles200Response) GetRoles() []ListRoles200ResponseAllOfRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []ListRoles200ResponseAllOfRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRoles200Response) GetRolesOk() ([]ListRoles200ResponseAllOfRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// IsSetRoles returns a boolean if a field has been set.
func (o *ListRoles200Response) IsSetRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ListRoles200ResponseAllOfRolesInner and assigns it to the Roles field.
func (o *ListRoles200Response) SetRoles(v []ListRoles200ResponseAllOfRolesInner) {
	o.Roles = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListRoles200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRoles200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListRoles200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListRoles200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListRoles200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRoles200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListRoles200Response struct {
	value *ListRoles200Response
	isSet bool
}

func (v NullableListRoles200Response) Get() *ListRoles200Response {
	return v.value
}

func (v *NullableListRoles200Response) Set(val *ListRoles200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListRoles200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListRoles200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRoles200Response(val *ListRoles200Response) *NullableListRoles200Response {
	return &NullableListRoles200Response{value: val, isSet: true}
}

func (v NullableListRoles200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRoles200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


