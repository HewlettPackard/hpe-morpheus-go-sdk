/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddImageBuildRequestImageBuild type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddImageBuildRequestImageBuild{}

// AddImageBuildRequestImageBuild struct for AddImageBuildRequestImageBuild
type AddImageBuildRequestImageBuild struct {
	// A name for the image build
	Name *string `json:"name,omitempty"`
	// A description for the image build
	Description *string `json:"description,omitempty"`
	// The image builder type.
	Type *string `json:"type,omitempty"`
	Site *AddImageBuildRequestImageBuildSite `json:"site,omitempty"`
	Zone *AddImageBuildRequestImageBuildZone `json:"zone,omitempty"`
	// A map of config values. This is the instance config that is used for provisioning. See Provisioning Types.
	Config map[string]interface{} `json:"config,omitempty"`
	BootScript *AddImageBuildRequestImageBuildBootScript `json:"bootScript,omitempty"`
	PreseedScript *AddImageBuildRequestImageBuildPreseedScript `json:"preseedScript,omitempty"`
	// SSH Username
	SshUsername *string `json:"sshUsername,omitempty"`
	// SSH Password
	SshPassword *string `json:"sshPassword,omitempty"`
	// Storage Provider
	StorageProvider *string `json:"storageProvider,omitempty"`
	// Cloud Init
	IsCloudInit *string `json:"isCloudInit,omitempty"`
	// Build Output Name
	BuildOutputName *string `json:"buildOutputName,omitempty"`
	ConversionFormats NullableString `json:"conversionFormats,omitempty"`
	// Keep Results - Keep only the most recent builds. Older executions will be deleted along with their associated Virtual Images. The value 0 disables this functionality.
	KeepResults *int64 `json:"keepResults,omitempty"`
}

// NewAddImageBuildRequestImageBuild instantiates a new AddImageBuildRequestImageBuild object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddImageBuildRequestImageBuild() *AddImageBuildRequestImageBuild {
	this := AddImageBuildRequestImageBuild{}
	var keepResults int64 = 0
	this.KeepResults = &keepResults
	return &this
}

// NewAddImageBuildRequestImageBuildWithDefaults instantiates a new AddImageBuildRequestImageBuild object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddImageBuildRequestImageBuildWithDefaults() *AddImageBuildRequestImageBuild {
	this := AddImageBuildRequestImageBuild{}
	var keepResults int64 = 0
	this.KeepResults = &keepResults
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddImageBuildRequestImageBuild) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddImageBuildRequestImageBuild) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddImageBuildRequestImageBuild) SetType(v string) {
	o.Type = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetSite() AddImageBuildRequestImageBuildSite {
	if o == nil || IsNil(o.Site) {
		var ret AddImageBuildRequestImageBuildSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetSiteOk() (*AddImageBuildRequestImageBuildSite, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// IsSetSite returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given AddImageBuildRequestImageBuildSite and assigns it to the Site field.
func (o *AddImageBuildRequestImageBuild) SetSite(v AddImageBuildRequestImageBuildSite) {
	o.Site = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetZone() AddImageBuildRequestImageBuildZone {
	if o == nil || IsNil(o.Zone) {
		var ret AddImageBuildRequestImageBuildZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetZoneOk() (*AddImageBuildRequestImageBuildZone, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given AddImageBuildRequestImageBuildZone and assigns it to the Zone field.
func (o *AddImageBuildRequestImageBuild) SetZone(v AddImageBuildRequestImageBuildZone) {
	o.Zone = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *AddImageBuildRequestImageBuild) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetBootScript returns the BootScript field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetBootScript() AddImageBuildRequestImageBuildBootScript {
	if o == nil || IsNil(o.BootScript) {
		var ret AddImageBuildRequestImageBuildBootScript
		return ret
	}
	return *o.BootScript
}

// GetBootScriptOk returns a tuple with the BootScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetBootScriptOk() (*AddImageBuildRequestImageBuildBootScript, bool) {
	if o == nil || IsNil(o.BootScript) {
		return nil, false
	}
	return o.BootScript, true
}

// IsSetBootScript returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetBootScript() bool {
	if o != nil && !IsNil(o.BootScript) {
		return true
	}

	return false
}

// SetBootScript gets a reference to the given AddImageBuildRequestImageBuildBootScript and assigns it to the BootScript field.
func (o *AddImageBuildRequestImageBuild) SetBootScript(v AddImageBuildRequestImageBuildBootScript) {
	o.BootScript = &v
}

// GetPreseedScript returns the PreseedScript field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetPreseedScript() AddImageBuildRequestImageBuildPreseedScript {
	if o == nil || IsNil(o.PreseedScript) {
		var ret AddImageBuildRequestImageBuildPreseedScript
		return ret
	}
	return *o.PreseedScript
}

// GetPreseedScriptOk returns a tuple with the PreseedScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetPreseedScriptOk() (*AddImageBuildRequestImageBuildPreseedScript, bool) {
	if o == nil || IsNil(o.PreseedScript) {
		return nil, false
	}
	return o.PreseedScript, true
}

// IsSetPreseedScript returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetPreseedScript() bool {
	if o != nil && !IsNil(o.PreseedScript) {
		return true
	}

	return false
}

// SetPreseedScript gets a reference to the given AddImageBuildRequestImageBuildPreseedScript and assigns it to the PreseedScript field.
func (o *AddImageBuildRequestImageBuild) SetPreseedScript(v AddImageBuildRequestImageBuildPreseedScript) {
	o.PreseedScript = &v
}

// GetSshUsername returns the SshUsername field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetSshUsername() string {
	if o == nil || IsNil(o.SshUsername) {
		var ret string
		return ret
	}
	return *o.SshUsername
}

// GetSshUsernameOk returns a tuple with the SshUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetSshUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SshUsername) {
		return nil, false
	}
	return o.SshUsername, true
}

// IsSetSshUsername returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetSshUsername() bool {
	if o != nil && !IsNil(o.SshUsername) {
		return true
	}

	return false
}

// SetSshUsername gets a reference to the given string and assigns it to the SshUsername field.
func (o *AddImageBuildRequestImageBuild) SetSshUsername(v string) {
	o.SshUsername = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetSshPassword() string {
	if o == nil || IsNil(o.SshPassword) {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetSshPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SshPassword) {
		return nil, false
	}
	return o.SshPassword, true
}

// IsSetSshPassword returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetSshPassword() bool {
	if o != nil && !IsNil(o.SshPassword) {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *AddImageBuildRequestImageBuild) SetSshPassword(v string) {
	o.SshPassword = &v
}

// GetStorageProvider returns the StorageProvider field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetStorageProvider() string {
	if o == nil || IsNil(o.StorageProvider) {
		var ret string
		return ret
	}
	return *o.StorageProvider
}

// GetStorageProviderOk returns a tuple with the StorageProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetStorageProviderOk() (*string, bool) {
	if o == nil || IsNil(o.StorageProvider) {
		return nil, false
	}
	return o.StorageProvider, true
}

// IsSetStorageProvider returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetStorageProvider() bool {
	if o != nil && !IsNil(o.StorageProvider) {
		return true
	}

	return false
}

// SetStorageProvider gets a reference to the given string and assigns it to the StorageProvider field.
func (o *AddImageBuildRequestImageBuild) SetStorageProvider(v string) {
	o.StorageProvider = &v
}

// GetIsCloudInit returns the IsCloudInit field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetIsCloudInit() string {
	if o == nil || IsNil(o.IsCloudInit) {
		var ret string
		return ret
	}
	return *o.IsCloudInit
}

// GetIsCloudInitOk returns a tuple with the IsCloudInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetIsCloudInitOk() (*string, bool) {
	if o == nil || IsNil(o.IsCloudInit) {
		return nil, false
	}
	return o.IsCloudInit, true
}

// IsSetIsCloudInit returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetIsCloudInit() bool {
	if o != nil && !IsNil(o.IsCloudInit) {
		return true
	}

	return false
}

// SetIsCloudInit gets a reference to the given string and assigns it to the IsCloudInit field.
func (o *AddImageBuildRequestImageBuild) SetIsCloudInit(v string) {
	o.IsCloudInit = &v
}

// GetBuildOutputName returns the BuildOutputName field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetBuildOutputName() string {
	if o == nil || IsNil(o.BuildOutputName) {
		var ret string
		return ret
	}
	return *o.BuildOutputName
}

// GetBuildOutputNameOk returns a tuple with the BuildOutputName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetBuildOutputNameOk() (*string, bool) {
	if o == nil || IsNil(o.BuildOutputName) {
		return nil, false
	}
	return o.BuildOutputName, true
}

// IsSetBuildOutputName returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetBuildOutputName() bool {
	if o != nil && !IsNil(o.BuildOutputName) {
		return true
	}

	return false
}

// SetBuildOutputName gets a reference to the given string and assigns it to the BuildOutputName field.
func (o *AddImageBuildRequestImageBuild) SetBuildOutputName(v string) {
	o.BuildOutputName = &v
}

// GetConversionFormats returns the ConversionFormats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddImageBuildRequestImageBuild) GetConversionFormats() string {
	if o == nil || IsNil(o.ConversionFormats.Get()) {
		var ret string
		return ret
	}
	return *o.ConversionFormats.Get()
}

// GetConversionFormatsOk returns a tuple with the ConversionFormats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddImageBuildRequestImageBuild) GetConversionFormatsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConversionFormats.Get(), o.ConversionFormats.IsSet()
}

// IsSetConversionFormats returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetConversionFormats() bool {
	if o != nil && o.ConversionFormats.IsSet() {
		return true
	}

	return false
}

// SetConversionFormats gets a reference to the given NullableString and assigns it to the ConversionFormats field.
func (o *AddImageBuildRequestImageBuild) SetConversionFormats(v string) {
	o.ConversionFormats.Set(&v)
}
// SetConversionFormatsNil sets the value for ConversionFormats to be an explicit nil
func (o *AddImageBuildRequestImageBuild) SetConversionFormatsNil() {
	o.ConversionFormats.Set(nil)
}

// UnsetConversionFormats ensures that no value is present for ConversionFormats, not even an explicit nil
func (o *AddImageBuildRequestImageBuild) UnsetConversionFormats() {
	o.ConversionFormats.Unset()
}

// GetKeepResults returns the KeepResults field value if set, zero value otherwise.
func (o *AddImageBuildRequestImageBuild) GetKeepResults() int64 {
	if o == nil || IsNil(o.KeepResults) {
		var ret int64
		return ret
	}
	return *o.KeepResults
}

// GetKeepResultsOk returns a tuple with the KeepResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuildRequestImageBuild) GetKeepResultsOk() (*int64, bool) {
	if o == nil || IsNil(o.KeepResults) {
		return nil, false
	}
	return o.KeepResults, true
}

// IsSetKeepResults returns a boolean if a field has been set.
func (o *AddImageBuildRequestImageBuild) IsSetKeepResults() bool {
	if o != nil && !IsNil(o.KeepResults) {
		return true
	}

	return false
}

// SetKeepResults gets a reference to the given int64 and assigns it to the KeepResults field.
func (o *AddImageBuildRequestImageBuild) SetKeepResults(v int64) {
	o.KeepResults = &v
}

func (o AddImageBuildRequestImageBuild) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddImageBuildRequestImageBuild) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.BootScript) {
		toSerialize["bootScript"] = o.BootScript
	}
	if !IsNil(o.PreseedScript) {
		toSerialize["preseedScript"] = o.PreseedScript
	}
	if !IsNil(o.SshUsername) {
		toSerialize["sshUsername"] = o.SshUsername
	}
	if !IsNil(o.SshPassword) {
		toSerialize["sshPassword"] = o.SshPassword
	}
	if !IsNil(o.StorageProvider) {
		toSerialize["storageProvider"] = o.StorageProvider
	}
	if !IsNil(o.IsCloudInit) {
		toSerialize["isCloudInit"] = o.IsCloudInit
	}
	if !IsNil(o.BuildOutputName) {
		toSerialize["buildOutputName"] = o.BuildOutputName
	}
	if o.ConversionFormats.IsSet() {
		toSerialize["conversionFormats"] = o.ConversionFormats.Get()
	}
	if !IsNil(o.KeepResults) {
		toSerialize["keepResults"] = o.KeepResults
	}
	return toSerialize, nil
}

type NullableAddImageBuildRequestImageBuild struct {
	value *AddImageBuildRequestImageBuild
	isSet bool
}

func (v NullableAddImageBuildRequestImageBuild) Get() *AddImageBuildRequestImageBuild {
	return v.value
}

func (v *NullableAddImageBuildRequestImageBuild) Set(val *AddImageBuildRequestImageBuild) {
	v.value = val
	v.isSet = true
}

func (v NullableAddImageBuildRequestImageBuild) IsSet() bool {
	return v.isSet
}

func (v *NullableAddImageBuildRequestImageBuild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddImageBuildRequestImageBuild(val *AddImageBuildRequestImageBuild) *NullableAddImageBuildRequestImageBuild {
	return &NullableAddImageBuildRequestImageBuild{value: val, isSet: true}
}

func (v NullableAddImageBuildRequestImageBuild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddImageBuildRequestImageBuild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


