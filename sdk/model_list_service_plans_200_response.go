/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListServicePlans200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServicePlans200Response{}

// ListServicePlans200Response struct for ListServicePlans200Response
type ListServicePlans200Response struct {
	ServicePlans []ListServicePlans200ResponseAllOfServicePlansInner `json:"servicePlans,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListServicePlans200Response instantiates a new ListServicePlans200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServicePlans200Response() *ListServicePlans200Response {
	this := ListServicePlans200Response{}
	return &this
}

// NewListServicePlans200ResponseWithDefaults instantiates a new ListServicePlans200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServicePlans200ResponseWithDefaults() *ListServicePlans200Response {
	this := ListServicePlans200Response{}
	return &this
}

// GetServicePlans returns the ServicePlans field value if set, zero value otherwise.
func (o *ListServicePlans200Response) GetServicePlans() []ListServicePlans200ResponseAllOfServicePlansInner {
	if o == nil || IsNil(o.ServicePlans) {
		var ret []ListServicePlans200ResponseAllOfServicePlansInner
		return ret
	}
	return o.ServicePlans
}

// GetServicePlansOk returns a tuple with the ServicePlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServicePlans200Response) GetServicePlansOk() ([]ListServicePlans200ResponseAllOfServicePlansInner, bool) {
	if o == nil || IsNil(o.ServicePlans) {
		return nil, false
	}
	return o.ServicePlans, true
}

// IsSetServicePlans returns a boolean if a field has been set.
func (o *ListServicePlans200Response) IsSetServicePlans() bool {
	if o != nil && !IsNil(o.ServicePlans) {
		return true
	}

	return false
}

// SetServicePlans gets a reference to the given []ListServicePlans200ResponseAllOfServicePlansInner and assigns it to the ServicePlans field.
func (o *ListServicePlans200Response) SetServicePlans(v []ListServicePlans200ResponseAllOfServicePlansInner) {
	o.ServicePlans = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListServicePlans200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServicePlans200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListServicePlans200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListServicePlans200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListServicePlans200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServicePlans200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServicePlans) {
		toSerialize["servicePlans"] = o.ServicePlans
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListServicePlans200Response struct {
	value *ListServicePlans200Response
	isSet bool
}

func (v NullableListServicePlans200Response) Get() *ListServicePlans200Response {
	return v.value
}

func (v *NullableListServicePlans200Response) Set(val *ListServicePlans200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListServicePlans200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListServicePlans200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServicePlans200Response(val *ListServicePlans200Response) *NullableListServicePlans200Response {
	return &NullableListServicePlans200Response{value: val, isSet: true}
}

func (v NullableListServicePlans200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServicePlans200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


