/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateCloudFoldersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCloudFoldersRequest{}

// UpdateCloudFoldersRequest struct for UpdateCloudFoldersRequest
type UpdateCloudFoldersRequest struct {
	Folder               UpdateCloudFoldersRequestFolder `json:"folder"`
	AdditionalProperties map[string]interface{}          `json:",remain"`
}

type _UpdateCloudFoldersRequest UpdateCloudFoldersRequest

// NewUpdateCloudFoldersRequest instantiates a new UpdateCloudFoldersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCloudFoldersRequest(folder UpdateCloudFoldersRequestFolder) *UpdateCloudFoldersRequest {
	this := UpdateCloudFoldersRequest{}
	this.Folder = folder
	return &this
}

// NewUpdateCloudFoldersRequestWithDefaults instantiates a new UpdateCloudFoldersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCloudFoldersRequestWithDefaults() *UpdateCloudFoldersRequest {
	this := UpdateCloudFoldersRequest{}
	return &this
}

// GetFolder returns the Folder field value
func (o *UpdateCloudFoldersRequest) GetFolder() UpdateCloudFoldersRequestFolder {
	if o == nil {
		var ret UpdateCloudFoldersRequestFolder
		return ret
	}

	return o.Folder
}

// GetFolderOk returns a tuple with the Folder field value
// and a boolean to check if the value has been set.
func (o *UpdateCloudFoldersRequest) GetFolderOk() (*UpdateCloudFoldersRequestFolder, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Folder, true
}

// SetFolder sets field value
func (o *UpdateCloudFoldersRequest) SetFolder(v UpdateCloudFoldersRequestFolder) {
	o.Folder = v
}

func (o UpdateCloudFoldersRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCloudFoldersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["folder"] = o.Folder

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateCloudFoldersRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
