/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListCypherKeys200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCypherKeys200Response{}

// ListCypherKeys200Response struct for ListCypherKeys200Response
type ListCypherKeys200Response struct {
	Data *ListCypherKeys200ResponseAllOfData `json:"data,omitempty"`
	Cyphers []ListCypherKeys200ResponseAllOfCyphersInner `json:"cyphers,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewListCypherKeys200Response instantiates a new ListCypherKeys200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCypherKeys200Response() *ListCypherKeys200Response {
	this := ListCypherKeys200Response{}
	return &this
}

// NewListCypherKeys200ResponseWithDefaults instantiates a new ListCypherKeys200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCypherKeys200ResponseWithDefaults() *ListCypherKeys200Response {
	this := ListCypherKeys200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListCypherKeys200Response) GetData() ListCypherKeys200ResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret ListCypherKeys200ResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCypherKeys200Response) GetDataOk() (*ListCypherKeys200ResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// IsSetData returns a boolean if a field has been set.
func (o *ListCypherKeys200Response) IsSetData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ListCypherKeys200ResponseAllOfData and assigns it to the Data field.
func (o *ListCypherKeys200Response) SetData(v ListCypherKeys200ResponseAllOfData) {
	o.Data = &v
}

// GetCyphers returns the Cyphers field value if set, zero value otherwise.
func (o *ListCypherKeys200Response) GetCyphers() []ListCypherKeys200ResponseAllOfCyphersInner {
	if o == nil || IsNil(o.Cyphers) {
		var ret []ListCypherKeys200ResponseAllOfCyphersInner
		return ret
	}
	return o.Cyphers
}

// GetCyphersOk returns a tuple with the Cyphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCypherKeys200Response) GetCyphersOk() ([]ListCypherKeys200ResponseAllOfCyphersInner, bool) {
	if o == nil || IsNil(o.Cyphers) {
		return nil, false
	}
	return o.Cyphers, true
}

// IsSetCyphers returns a boolean if a field has been set.
func (o *ListCypherKeys200Response) IsSetCyphers() bool {
	if o != nil && !IsNil(o.Cyphers) {
		return true
	}

	return false
}

// SetCyphers gets a reference to the given []ListCypherKeys200ResponseAllOfCyphersInner and assigns it to the Cyphers field.
func (o *ListCypherKeys200Response) SetCyphers(v []ListCypherKeys200ResponseAllOfCyphersInner) {
	o.Cyphers = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListCypherKeys200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCypherKeys200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListCypherKeys200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListCypherKeys200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListCypherKeys200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCypherKeys200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *ListCypherKeys200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListCypherKeys200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o ListCypherKeys200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCypherKeys200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Cyphers) {
		toSerialize["cyphers"] = o.Cyphers
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableListCypherKeys200Response struct {
	value *ListCypherKeys200Response
	isSet bool
}

func (v NullableListCypherKeys200Response) Get() *ListCypherKeys200Response {
	return v.value
}

func (v *NullableListCypherKeys200Response) Set(val *ListCypherKeys200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListCypherKeys200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListCypherKeys200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCypherKeys200Response(val *ListCypherKeys200Response) *NullableListCypherKeys200Response {
	return &NullableListCypherKeys200Response{value: val, isSet: true}
}

func (v NullableListCypherKeys200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCypherKeys200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


