/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AddPolicies200ResponseAllOfPolicyConfigOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPolicies200ResponseAllOfPolicyConfigOneOf1{}

// AddPolicies200ResponseAllOfPolicyConfigOneOf1 - Message of the Day 
type AddPolicies200ResponseAllOfPolicyConfigOneOf1 struct {
	MotdTitle *string `json:"motd.title,omitempty"`
	Motd AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd `json:"motd"`
	MotdMessage *string `json:"motd.message,omitempty"`
	MotdType *string `json:"motd.type,omitempty"`
	MotdFullPage *string `json:"motd._fullPage,omitempty"`
	MotdDate *time.Time `json:"motd.date,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AddPolicies200ResponseAllOfPolicyConfigOneOf1 AddPolicies200ResponseAllOfPolicyConfigOneOf1

// NewAddPolicies200ResponseAllOfPolicyConfigOneOf1 instantiates a new AddPolicies200ResponseAllOfPolicyConfigOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPolicies200ResponseAllOfPolicyConfigOneOf1(motd AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd) *AddPolicies200ResponseAllOfPolicyConfigOneOf1 {
	this := AddPolicies200ResponseAllOfPolicyConfigOneOf1{}
	this.Motd = motd
	return &this
}

// NewAddPolicies200ResponseAllOfPolicyConfigOneOf1WithDefaults instantiates a new AddPolicies200ResponseAllOfPolicyConfigOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPolicies200ResponseAllOfPolicyConfigOneOf1WithDefaults() *AddPolicies200ResponseAllOfPolicyConfigOneOf1 {
	this := AddPolicies200ResponseAllOfPolicyConfigOneOf1{}
	return &this
}

// GetMotdTitle returns the MotdTitle field value if set, zero value otherwise.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdTitle() string {
	if o == nil || IsNil(o.MotdTitle) {
		var ret string
		return ret
	}
	return *o.MotdTitle
}

// GetMotdTitleOk returns a tuple with the MotdTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MotdTitle) {
		return nil, false
	}
	return o.MotdTitle, true
}

// IsSetMotdTitle returns a boolean if a field has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSetMotdTitle() bool {
	if o != nil && !IsNil(o.MotdTitle) {
		return true
	}

	return false
}

// SetMotdTitle gets a reference to the given string and assigns it to the MotdTitle field.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotdTitle(v string) {
	o.MotdTitle = &v
}

// GetMotd returns the Motd field value
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotd() AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd {
	if o == nil {
		var ret AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd
		return ret
	}

	return o.Motd
}

// GetMotdOk returns a tuple with the Motd field value
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdOk() (*AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Motd, true
}

// SetMotd sets field value
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotd(v AddPolicies200ResponseAllOfPolicyConfigOneOf1Motd) {
	o.Motd = v
}

// GetMotdMessage returns the MotdMessage field value if set, zero value otherwise.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdMessage() string {
	if o == nil || IsNil(o.MotdMessage) {
		var ret string
		return ret
	}
	return *o.MotdMessage
}

// GetMotdMessageOk returns a tuple with the MotdMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdMessageOk() (*string, bool) {
	if o == nil || IsNil(o.MotdMessage) {
		return nil, false
	}
	return o.MotdMessage, true
}

// IsSetMotdMessage returns a boolean if a field has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSetMotdMessage() bool {
	if o != nil && !IsNil(o.MotdMessage) {
		return true
	}

	return false
}

// SetMotdMessage gets a reference to the given string and assigns it to the MotdMessage field.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotdMessage(v string) {
	o.MotdMessage = &v
}

// GetMotdType returns the MotdType field value if set, zero value otherwise.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdType() string {
	if o == nil || IsNil(o.MotdType) {
		var ret string
		return ret
	}
	return *o.MotdType
}

// GetMotdTypeOk returns a tuple with the MotdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MotdType) {
		return nil, false
	}
	return o.MotdType, true
}

// IsSetMotdType returns a boolean if a field has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSetMotdType() bool {
	if o != nil && !IsNil(o.MotdType) {
		return true
	}

	return false
}

// SetMotdType gets a reference to the given string and assigns it to the MotdType field.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotdType(v string) {
	o.MotdType = &v
}

// GetMotdFullPage returns the MotdFullPage field value if set, zero value otherwise.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdFullPage() string {
	if o == nil || IsNil(o.MotdFullPage) {
		var ret string
		return ret
	}
	return *o.MotdFullPage
}

// GetMotdFullPageOk returns a tuple with the MotdFullPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdFullPageOk() (*string, bool) {
	if o == nil || IsNil(o.MotdFullPage) {
		return nil, false
	}
	return o.MotdFullPage, true
}

// IsSetMotdFullPage returns a boolean if a field has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSetMotdFullPage() bool {
	if o != nil && !IsNil(o.MotdFullPage) {
		return true
	}

	return false
}

// SetMotdFullPage gets a reference to the given string and assigns it to the MotdFullPage field.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotdFullPage(v string) {
	o.MotdFullPage = &v
}

// GetMotdDate returns the MotdDate field value if set, zero value otherwise.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdDate() time.Time {
	if o == nil || IsNil(o.MotdDate) {
		var ret time.Time
		return ret
	}
	return *o.MotdDate
}

// GetMotdDateOk returns a tuple with the MotdDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) GetMotdDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MotdDate) {
		return nil, false
	}
	return o.MotdDate, true
}

// IsSetMotdDate returns a boolean if a field has been set.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSetMotdDate() bool {
	if o != nil && !IsNil(o.MotdDate) {
		return true
	}

	return false
}

// SetMotdDate gets a reference to the given time.Time and assigns it to the MotdDate field.
func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) SetMotdDate(v time.Time) {
	o.MotdDate = &v
}

func (o AddPolicies200ResponseAllOfPolicyConfigOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPolicies200ResponseAllOfPolicyConfigOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MotdTitle) {
		toSerialize["motd.title"] = o.MotdTitle
	}
	toSerialize["motd"] = o.Motd
	if !IsNil(o.MotdMessage) {
		toSerialize["motd.message"] = o.MotdMessage
	}
	if !IsNil(o.MotdType) {
		toSerialize["motd.type"] = o.MotdType
	}
	if !IsNil(o.MotdFullPage) {
		toSerialize["motd._fullPage"] = o.MotdFullPage
	}
	if !IsNil(o.MotdDate) {
		toSerialize["motd.date"] = o.MotdDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddPolicies200ResponseAllOfPolicyConfigOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"motd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddPolicies200ResponseAllOfPolicyConfigOneOf1 := _AddPolicies200ResponseAllOfPolicyConfigOneOf1{}

	err = json.Unmarshal(data, &varAddPolicies200ResponseAllOfPolicyConfigOneOf1)

	if err != nil {
		return err
	}

	*o = AddPolicies200ResponseAllOfPolicyConfigOneOf1(varAddPolicies200ResponseAllOfPolicyConfigOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "motd.title")
		delete(additionalProperties, "motd")
		delete(additionalProperties, "motd.message")
		delete(additionalProperties, "motd.type")
		delete(additionalProperties, "motd._fullPage")
		delete(additionalProperties, "motd.date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1 struct {
	value *AddPolicies200ResponseAllOfPolicyConfigOneOf1
	isSet bool
}

func (v NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) Get() *AddPolicies200ResponseAllOfPolicyConfigOneOf1 {
	return v.value
}

func (v *NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) Set(val *AddPolicies200ResponseAllOfPolicyConfigOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPolicies200ResponseAllOfPolicyConfigOneOf1(val *AddPolicies200ResponseAllOfPolicyConfigOneOf1) *NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1 {
	return &NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1{value: val, isSet: true}
}

func (v NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPolicies200ResponseAllOfPolicyConfigOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


