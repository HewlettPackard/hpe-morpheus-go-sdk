/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AcknowledgeHealthAlarmRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcknowledgeHealthAlarmRequest{}

// AcknowledgeHealthAlarmRequest struct for AcknowledgeHealthAlarmRequest
type AcknowledgeHealthAlarmRequest struct {
	Alarm AcknowledgeHealthAlarmRequestAlarm `json:"alarm"`
}

type _AcknowledgeHealthAlarmRequest AcknowledgeHealthAlarmRequest

// NewAcknowledgeHealthAlarmRequest instantiates a new AcknowledgeHealthAlarmRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcknowledgeHealthAlarmRequest(alarm AcknowledgeHealthAlarmRequestAlarm) *AcknowledgeHealthAlarmRequest {
	this := AcknowledgeHealthAlarmRequest{}
	this.Alarm = alarm
	return &this
}

// NewAcknowledgeHealthAlarmRequestWithDefaults instantiates a new AcknowledgeHealthAlarmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcknowledgeHealthAlarmRequestWithDefaults() *AcknowledgeHealthAlarmRequest {
	this := AcknowledgeHealthAlarmRequest{}
	return &this
}

// GetAlarm returns the Alarm field value
func (o *AcknowledgeHealthAlarmRequest) GetAlarm() AcknowledgeHealthAlarmRequestAlarm {
	if o == nil {
		var ret AcknowledgeHealthAlarmRequestAlarm
		return ret
	}

	return o.Alarm
}

// GetAlarmOk returns a tuple with the Alarm field value
// and a boolean to check if the value has been set.
func (o *AcknowledgeHealthAlarmRequest) GetAlarmOk() (*AcknowledgeHealthAlarmRequestAlarm, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alarm, true
}

// SetAlarm sets field value
func (o *AcknowledgeHealthAlarmRequest) SetAlarm(v AcknowledgeHealthAlarmRequestAlarm) {
	o.Alarm = v
}

func (o AcknowledgeHealthAlarmRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcknowledgeHealthAlarmRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alarm"] = o.Alarm
	return toSerialize, nil
}

func (o *AcknowledgeHealthAlarmRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alarm",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAcknowledgeHealthAlarmRequest := _AcknowledgeHealthAlarmRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAcknowledgeHealthAlarmRequest)

	if err != nil {
		return err
	}

	*o = AcknowledgeHealthAlarmRequest(varAcknowledgeHealthAlarmRequest)

	return err
}

type NullableAcknowledgeHealthAlarmRequest struct {
	value *AcknowledgeHealthAlarmRequest
	isSet bool
}

func (v NullableAcknowledgeHealthAlarmRequest) Get() *AcknowledgeHealthAlarmRequest {
	return v.value
}

func (v *NullableAcknowledgeHealthAlarmRequest) Set(val *AcknowledgeHealthAlarmRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAcknowledgeHealthAlarmRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAcknowledgeHealthAlarmRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcknowledgeHealthAlarmRequest(val *AcknowledgeHealthAlarmRequest) *NullableAcknowledgeHealthAlarmRequest {
	return &NullableAcknowledgeHealthAlarmRequest{value: val, isSet: true}
}

func (v NullableAcknowledgeHealthAlarmRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcknowledgeHealthAlarmRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


