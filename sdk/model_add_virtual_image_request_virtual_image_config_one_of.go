/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddVirtualImageRequestVirtualImageConfigOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVirtualImageRequestVirtualImageConfigOneOf{}

// AddVirtualImageRequestVirtualImageConfigOneOf Azure Reference Virtual Image Parameters
type AddVirtualImageRequestVirtualImageConfigOneOf struct {
	// The name of the publisher in the Azure Marketplace
	Publisher string `json:"publisher"`
	// The name of the offer in the Azure Marketplace
	Offer string `json:"offer"`
	// The name of the sku in the Azure Marketplace
	Sku string `json:"sku"`
	// The name of the version in the Azure Marketplace
	Version string `json:"version"`
}

type _AddVirtualImageRequestVirtualImageConfigOneOf AddVirtualImageRequestVirtualImageConfigOneOf

// NewAddVirtualImageRequestVirtualImageConfigOneOf instantiates a new AddVirtualImageRequestVirtualImageConfigOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVirtualImageRequestVirtualImageConfigOneOf(publisher string, offer string, sku string, version string) *AddVirtualImageRequestVirtualImageConfigOneOf {
	this := AddVirtualImageRequestVirtualImageConfigOneOf{}
	this.Publisher = publisher
	this.Offer = offer
	this.Sku = sku
	this.Version = version
	return &this
}

// NewAddVirtualImageRequestVirtualImageConfigOneOfWithDefaults instantiates a new AddVirtualImageRequestVirtualImageConfigOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVirtualImageRequestVirtualImageConfigOneOfWithDefaults() *AddVirtualImageRequestVirtualImageConfigOneOf {
	this := AddVirtualImageRequestVirtualImageConfigOneOf{}
	return &this
}

// GetPublisher returns the Publisher field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetPublisher() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value
// and a boolean to check if the value has been set.
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetPublisherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Publisher, true
}

// SetPublisher sets field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) SetPublisher(v string) {
	o.Publisher = v
}

// GetOffer returns the Offer field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetOffer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Offer
}

// GetOfferOk returns a tuple with the Offer field value
// and a boolean to check if the value has been set.
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetOfferOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offer, true
}

// SetOffer sets field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) SetOffer(v string) {
	o.Offer = v
}

// GetSku returns the Sku field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) SetSku(v string) {
	o.Sku = v
}

// GetVersion returns the Version field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AddVirtualImageRequestVirtualImageConfigOneOf) SetVersion(v string) {
	o.Version = v
}

func (o AddVirtualImageRequestVirtualImageConfigOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVirtualImageRequestVirtualImageConfigOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publisher"] = o.Publisher
	toSerialize["offer"] = o.Offer
	toSerialize["sku"] = o.Sku
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *AddVirtualImageRequestVirtualImageConfigOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publisher",
		"offer",
		"sku",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddVirtualImageRequestVirtualImageConfigOneOf := _AddVirtualImageRequestVirtualImageConfigOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddVirtualImageRequestVirtualImageConfigOneOf)

	if err != nil {
		return err
	}

	*o = AddVirtualImageRequestVirtualImageConfigOneOf(varAddVirtualImageRequestVirtualImageConfigOneOf)

	return err
}

type NullableAddVirtualImageRequestVirtualImageConfigOneOf struct {
	value *AddVirtualImageRequestVirtualImageConfigOneOf
	isSet bool
}

func (v NullableAddVirtualImageRequestVirtualImageConfigOneOf) Get() *AddVirtualImageRequestVirtualImageConfigOneOf {
	return v.value
}

func (v *NullableAddVirtualImageRequestVirtualImageConfigOneOf) Set(val *AddVirtualImageRequestVirtualImageConfigOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVirtualImageRequestVirtualImageConfigOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVirtualImageRequestVirtualImageConfigOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVirtualImageRequestVirtualImageConfigOneOf(val *AddVirtualImageRequestVirtualImageConfigOneOf) *NullableAddVirtualImageRequestVirtualImageConfigOneOf {
	return &NullableAddVirtualImageRequestVirtualImageConfigOneOf{value: val, isSet: true}
}

func (v NullableAddVirtualImageRequestVirtualImageConfigOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVirtualImageRequestVirtualImageConfigOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


