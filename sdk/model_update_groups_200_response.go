/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGroups200Response{}

// UpdateGroups200Response struct for UpdateGroups200Response
type UpdateGroups200Response struct {
	Group *UpdateGroups200ResponseGroup `json:"group,omitempty"`
}

// NewUpdateGroups200Response instantiates a new UpdateGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGroups200Response() *UpdateGroups200Response {
	this := UpdateGroups200Response{}
	return &this
}

// NewUpdateGroups200ResponseWithDefaults instantiates a new UpdateGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGroups200ResponseWithDefaults() *UpdateGroups200Response {
	this := UpdateGroups200Response{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *UpdateGroups200Response) GetGroup() UpdateGroups200ResponseGroup {
	if o == nil || IsNil(o.Group) {
		var ret UpdateGroups200ResponseGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroups200Response) GetGroupOk() (*UpdateGroups200ResponseGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// IsSetGroup returns a boolean if a field has been set.
func (o *UpdateGroups200Response) IsSetGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given UpdateGroups200ResponseGroup and assigns it to the Group field.
func (o *UpdateGroups200Response) SetGroup(v UpdateGroups200ResponseGroup) {
	o.Group = &v
}

func (o UpdateGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullableUpdateGroups200Response struct {
	value *UpdateGroups200Response
	isSet bool
}

func (v NullableUpdateGroups200Response) Get() *UpdateGroups200Response {
	return v.value
}

func (v *NullableUpdateGroups200Response) Set(val *UpdateGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGroups200Response(val *UpdateGroups200Response) *NullableUpdateGroups200Response {
	return &NullableUpdateGroups200Response{value: val, isSet: true}
}

func (v NullableUpdateGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


