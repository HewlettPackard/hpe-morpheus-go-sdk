/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddKeyPairsRequestKeyPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddKeyPairsRequestKeyPair{}

// AddKeyPairsRequestKeyPair struct for AddKeyPairsRequestKeyPair
type AddKeyPairsRequestKeyPair struct {
	Name                 string                 `json:"name"`
	PublicKey            string                 `json:"publicKey"`
	PrivateKey           *string                `json:"privateKey,omitempty"`
	Passphrase           *string                `json:"passphrase,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _AddKeyPairsRequestKeyPair AddKeyPairsRequestKeyPair

// NewAddKeyPairsRequestKeyPair instantiates a new AddKeyPairsRequestKeyPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddKeyPairsRequestKeyPair(name string, publicKey string) *AddKeyPairsRequestKeyPair {
	this := AddKeyPairsRequestKeyPair{}
	this.Name = name
	this.PublicKey = publicKey
	return &this
}

// NewAddKeyPairsRequestKeyPairWithDefaults instantiates a new AddKeyPairsRequestKeyPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddKeyPairsRequestKeyPairWithDefaults() *AddKeyPairsRequestKeyPair {
	this := AddKeyPairsRequestKeyPair{}
	return &this
}

// GetName returns the Name field value
func (o *AddKeyPairsRequestKeyPair) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddKeyPairsRequestKeyPair) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddKeyPairsRequestKeyPair) SetName(v string) {
	o.Name = v
}

// GetPublicKey returns the PublicKey field value
func (o *AddKeyPairsRequestKeyPair) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *AddKeyPairsRequestKeyPair) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *AddKeyPairsRequestKeyPair) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *AddKeyPairsRequestKeyPair) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddKeyPairsRequestKeyPair) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// IsSetPrivateKey returns a boolean if a field has been set.
func (o *AddKeyPairsRequestKeyPair) IsSetPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *AddKeyPairsRequestKeyPair) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *AddKeyPairsRequestKeyPair) GetPassphrase() string {
	if o == nil || IsNil(o.Passphrase) {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddKeyPairsRequestKeyPair) GetPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.Passphrase) {
		return nil, false
	}
	return o.Passphrase, true
}

// IsSetPassphrase returns a boolean if a field has been set.
func (o *AddKeyPairsRequestKeyPair) IsSetPassphrase() bool {
	if o != nil && !IsNil(o.Passphrase) {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *AddKeyPairsRequestKeyPair) SetPassphrase(v string) {
	o.Passphrase = &v
}

func (o AddKeyPairsRequestKeyPair) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddKeyPairsRequestKeyPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["publicKey"] = o.PublicKey
	if !IsNil(o.PrivateKey) {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if !IsNil(o.Passphrase) {
		toSerialize["passphrase"] = o.Passphrase
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddKeyPairsRequestKeyPair) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
