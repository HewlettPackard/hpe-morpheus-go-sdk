/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ClusterResourceNamePolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterResourceNamePolicyTypeConfiguration{}

// ClusterResourceNamePolicyTypeConfiguration Configuration settings for the following policy types: - Cluster Resource Name 
type ClusterResourceNamePolicyTypeConfiguration struct {
	ServerNamingType *string `json:"serverNamingType,omitempty"`
	ServerNamingPattern *string `json:"serverNamingPattern,omitempty"`
	ServerNamingConflict *bool `json:"serverNamingConflict,omitempty"`
}

// NewClusterResourceNamePolicyTypeConfiguration instantiates a new ClusterResourceNamePolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterResourceNamePolicyTypeConfiguration() *ClusterResourceNamePolicyTypeConfiguration {
	this := ClusterResourceNamePolicyTypeConfiguration{}
	return &this
}

// NewClusterResourceNamePolicyTypeConfigurationWithDefaults instantiates a new ClusterResourceNamePolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterResourceNamePolicyTypeConfigurationWithDefaults() *ClusterResourceNamePolicyTypeConfiguration {
	this := ClusterResourceNamePolicyTypeConfiguration{}
	return &this
}

// GetServerNamingType returns the ServerNamingType field value if set, zero value otherwise.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingType() string {
	if o == nil || IsNil(o.ServerNamingType) {
		var ret string
		return ret
	}
	return *o.ServerNamingType
}

// GetServerNamingTypeOk returns a tuple with the ServerNamingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServerNamingType) {
		return nil, false
	}
	return o.ServerNamingType, true
}

// IsSetServerNamingType returns a boolean if a field has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) IsSetServerNamingType() bool {
	if o != nil && !IsNil(o.ServerNamingType) {
		return true
	}

	return false
}

// SetServerNamingType gets a reference to the given string and assigns it to the ServerNamingType field.
func (o *ClusterResourceNamePolicyTypeConfiguration) SetServerNamingType(v string) {
	o.ServerNamingType = &v
}

// GetServerNamingPattern returns the ServerNamingPattern field value if set, zero value otherwise.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingPattern() string {
	if o == nil || IsNil(o.ServerNamingPattern) {
		var ret string
		return ret
	}
	return *o.ServerNamingPattern
}

// GetServerNamingPatternOk returns a tuple with the ServerNamingPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingPatternOk() (*string, bool) {
	if o == nil || IsNil(o.ServerNamingPattern) {
		return nil, false
	}
	return o.ServerNamingPattern, true
}

// IsSetServerNamingPattern returns a boolean if a field has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) IsSetServerNamingPattern() bool {
	if o != nil && !IsNil(o.ServerNamingPattern) {
		return true
	}

	return false
}

// SetServerNamingPattern gets a reference to the given string and assigns it to the ServerNamingPattern field.
func (o *ClusterResourceNamePolicyTypeConfiguration) SetServerNamingPattern(v string) {
	o.ServerNamingPattern = &v
}

// GetServerNamingConflict returns the ServerNamingConflict field value if set, zero value otherwise.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingConflict() bool {
	if o == nil || IsNil(o.ServerNamingConflict) {
		var ret bool
		return ret
	}
	return *o.ServerNamingConflict
}

// GetServerNamingConflictOk returns a tuple with the ServerNamingConflict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) GetServerNamingConflictOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerNamingConflict) {
		return nil, false
	}
	return o.ServerNamingConflict, true
}

// IsSetServerNamingConflict returns a boolean if a field has been set.
func (o *ClusterResourceNamePolicyTypeConfiguration) IsSetServerNamingConflict() bool {
	if o != nil && !IsNil(o.ServerNamingConflict) {
		return true
	}

	return false
}

// SetServerNamingConflict gets a reference to the given bool and assigns it to the ServerNamingConflict field.
func (o *ClusterResourceNamePolicyTypeConfiguration) SetServerNamingConflict(v bool) {
	o.ServerNamingConflict = &v
}

func (o ClusterResourceNamePolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterResourceNamePolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerNamingType) {
		toSerialize["serverNamingType"] = o.ServerNamingType
	}
	if !IsNil(o.ServerNamingPattern) {
		toSerialize["serverNamingPattern"] = o.ServerNamingPattern
	}
	if !IsNil(o.ServerNamingConflict) {
		toSerialize["serverNamingConflict"] = o.ServerNamingConflict
	}
	return toSerialize, nil
}

type NullableClusterResourceNamePolicyTypeConfiguration struct {
	value *ClusterResourceNamePolicyTypeConfiguration
	isSet bool
}

func (v NullableClusterResourceNamePolicyTypeConfiguration) Get() *ClusterResourceNamePolicyTypeConfiguration {
	return v.value
}

func (v *NullableClusterResourceNamePolicyTypeConfiguration) Set(val *ClusterResourceNamePolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterResourceNamePolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterResourceNamePolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterResourceNamePolicyTypeConfiguration(val *ClusterResourceNamePolicyTypeConfiguration) *NullableClusterResourceNamePolicyTypeConfiguration {
	return &NullableClusterResourceNamePolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableClusterResourceNamePolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterResourceNamePolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


