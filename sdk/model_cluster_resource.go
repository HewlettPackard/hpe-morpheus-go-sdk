/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ClusterResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterResource{}

// ClusterResource struct for ClusterResource
type ClusterResource struct {
	Id *int64 `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Spec map[string]interface{} `json:"spec,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	RawSec map[string]interface{} `json:"rawSec,omitempty"`
}

// NewClusterResource instantiates a new ClusterResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterResource() *ClusterResource {
	this := ClusterResource{}
	return &this
}

// NewClusterResourceWithDefaults instantiates a new ClusterResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterResourceWithDefaults() *ClusterResource {
	this := ClusterResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterResource) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ClusterResource) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterResource) SetId(v int64) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ClusterResource) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// IsSetTitle returns a boolean if a field has been set.
func (o *ClusterResource) IsSetTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ClusterResource) SetTitle(v string) {
	o.Title = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterResource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ClusterResource) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterResource) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterResource) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ClusterResource) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterResource) SetStatus(v string) {
	o.Status = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ClusterResource) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// IsSetMetadata returns a boolean if a field has been set.
func (o *ClusterResource) IsSetMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ClusterResource) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ClusterResource) GetSpec() map[string]interface{} {
	if o == nil || IsNil(o.Spec) {
		var ret map[string]interface{}
		return ret
	}
	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetSpecOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Spec) {
		return map[string]interface{}{}, false
	}
	return o.Spec, true
}

// IsSetSpec returns a boolean if a field has been set.
func (o *ClusterResource) IsSetSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given map[string]interface{} and assigns it to the Spec field.
func (o *ClusterResource) SetSpec(v map[string]interface{}) {
	o.Spec = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ClusterResource) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *ClusterResource) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ClusterResource) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetRawSec returns the RawSec field value if set, zero value otherwise.
func (o *ClusterResource) GetRawSec() map[string]interface{} {
	if o == nil || IsNil(o.RawSec) {
		var ret map[string]interface{}
		return ret
	}
	return o.RawSec
}

// GetRawSecOk returns a tuple with the RawSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResource) GetRawSecOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RawSec) {
		return map[string]interface{}{}, false
	}
	return o.RawSec, true
}

// IsSetRawSec returns a boolean if a field has been set.
func (o *ClusterResource) IsSetRawSec() bool {
	if o != nil && !IsNil(o.RawSec) {
		return true
	}

	return false
}

// SetRawSec gets a reference to the given map[string]interface{} and assigns it to the RawSec field.
func (o *ClusterResource) SetRawSec(v map[string]interface{}) {
	o.RawSec = v
}

func (o ClusterResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.RawSec) {
		toSerialize["rawSec"] = o.RawSec
	}
	return toSerialize, nil
}

type NullableClusterResource struct {
	value *ClusterResource
	isSet bool
}

func (v NullableClusterResource) Get() *ClusterResource {
	return v.value
}

func (v *NullableClusterResource) Set(val *ClusterResource) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterResource) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterResource(val *ClusterResource) *NullableClusterResource {
	return &NullableClusterResource{value: val, isSet: true}
}

func (v NullableClusterResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


