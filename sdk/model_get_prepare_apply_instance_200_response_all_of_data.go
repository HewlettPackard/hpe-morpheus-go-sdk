/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetPrepareApplyInstance200ResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPrepareApplyInstance200ResponseAllOfData{}

// GetPrepareApplyInstance200ResponseAllOfData struct for GetPrepareApplyInstance200ResponseAllOfData
type GetPrepareApplyInstance200ResponseAllOfData struct {
	TemplateParameter map[string]interface{} `json:"templateParameter,omitempty"`
}

// NewGetPrepareApplyInstance200ResponseAllOfData instantiates a new GetPrepareApplyInstance200ResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPrepareApplyInstance200ResponseAllOfData() *GetPrepareApplyInstance200ResponseAllOfData {
	this := GetPrepareApplyInstance200ResponseAllOfData{}
	return &this
}

// NewGetPrepareApplyInstance200ResponseAllOfDataWithDefaults instantiates a new GetPrepareApplyInstance200ResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPrepareApplyInstance200ResponseAllOfDataWithDefaults() *GetPrepareApplyInstance200ResponseAllOfData {
	this := GetPrepareApplyInstance200ResponseAllOfData{}
	return &this
}

// GetTemplateParameter returns the TemplateParameter field value if set, zero value otherwise.
func (o *GetPrepareApplyInstance200ResponseAllOfData) GetTemplateParameter() map[string]interface{} {
	if o == nil || IsNil(o.TemplateParameter) {
		var ret map[string]interface{}
		return ret
	}
	return o.TemplateParameter
}

// GetTemplateParameterOk returns a tuple with the TemplateParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrepareApplyInstance200ResponseAllOfData) GetTemplateParameterOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TemplateParameter) {
		return map[string]interface{}{}, false
	}
	return o.TemplateParameter, true
}

// IsSetTemplateParameter returns a boolean if a field has been set.
func (o *GetPrepareApplyInstance200ResponseAllOfData) IsSetTemplateParameter() bool {
	if o != nil && !IsNil(o.TemplateParameter) {
		return true
	}

	return false
}

// SetTemplateParameter gets a reference to the given map[string]interface{} and assigns it to the TemplateParameter field.
func (o *GetPrepareApplyInstance200ResponseAllOfData) SetTemplateParameter(v map[string]interface{}) {
	o.TemplateParameter = v
}

func (o GetPrepareApplyInstance200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPrepareApplyInstance200ResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TemplateParameter) {
		toSerialize["templateParameter"] = o.TemplateParameter
	}
	return toSerialize, nil
}

type NullableGetPrepareApplyInstance200ResponseAllOfData struct {
	value *GetPrepareApplyInstance200ResponseAllOfData
	isSet bool
}

func (v NullableGetPrepareApplyInstance200ResponseAllOfData) Get() *GetPrepareApplyInstance200ResponseAllOfData {
	return v.value
}

func (v *NullableGetPrepareApplyInstance200ResponseAllOfData) Set(val *GetPrepareApplyInstance200ResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPrepareApplyInstance200ResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPrepareApplyInstance200ResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPrepareApplyInstance200ResponseAllOfData(val *GetPrepareApplyInstance200ResponseAllOfData) *NullableGetPrepareApplyInstance200ResponseAllOfData {
	return &NullableGetPrepareApplyInstance200ResponseAllOfData{value: val, isSet: true}
}

func (v NullableGetPrepareApplyInstance200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPrepareApplyInstance200ResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


