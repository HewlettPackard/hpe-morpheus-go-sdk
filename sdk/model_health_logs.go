/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the HealthLogs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthLogs{}

// HealthLogs struct for HealthLogs
type HealthLogs struct {
	TypeCode *string `json:"typeCode,omitempty"`
	Ts *time.Time `json:"ts,omitempty"`
	Level *string `json:"level,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	Message *string `json:"message,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Title *string `json:"title,omitempty"`
	LogSignature *string `json:"logSignature,omitempty"`
	ObjectId *string `json:"objectId,omitempty"`
	Seq *int64 `json:"seq,omitempty"`
	Id *string `json:"_id,omitempty"`
	SignatureVerified *bool `json:"signatureVerified,omitempty"`
}

// NewHealthLogs instantiates a new HealthLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthLogs() *HealthLogs {
	this := HealthLogs{}
	return &this
}

// NewHealthLogsWithDefaults instantiates a new HealthLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthLogsWithDefaults() *HealthLogs {
	this := HealthLogs{}
	return &this
}

// GetTypeCode returns the TypeCode field value if set, zero value otherwise.
func (o *HealthLogs) GetTypeCode() string {
	if o == nil || IsNil(o.TypeCode) {
		var ret string
		return ret
	}
	return *o.TypeCode
}

// GetTypeCodeOk returns a tuple with the TypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TypeCode) {
		return nil, false
	}
	return o.TypeCode, true
}

// IsSetTypeCode returns a boolean if a field has been set.
func (o *HealthLogs) IsSetTypeCode() bool {
	if o != nil && !IsNil(o.TypeCode) {
		return true
	}

	return false
}

// SetTypeCode gets a reference to the given string and assigns it to the TypeCode field.
func (o *HealthLogs) SetTypeCode(v string) {
	o.TypeCode = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *HealthLogs) GetTs() time.Time {
	if o == nil || IsNil(o.Ts) {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetTsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// IsSetTs returns a boolean if a field has been set.
func (o *HealthLogs) IsSetTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *HealthLogs) SetTs(v time.Time) {
	o.Ts = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *HealthLogs) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// IsSetLevel returns a boolean if a field has been set.
func (o *HealthLogs) IsSetLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *HealthLogs) SetLevel(v string) {
	o.Level = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *HealthLogs) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// IsSetSourceType returns a boolean if a field has been set.
func (o *HealthLogs) IsSetSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *HealthLogs) SetSourceType(v string) {
	o.SourceType = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HealthLogs) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// IsSetMessage returns a boolean if a field has been set.
func (o *HealthLogs) IsSetMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HealthLogs) SetMessage(v string) {
	o.Message = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *HealthLogs) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// IsSetHostname returns a boolean if a field has been set.
func (o *HealthLogs) IsSetHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *HealthLogs) SetHostname(v string) {
	o.Hostname = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *HealthLogs) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// IsSetTitle returns a boolean if a field has been set.
func (o *HealthLogs) IsSetTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *HealthLogs) SetTitle(v string) {
	o.Title = &v
}

// GetLogSignature returns the LogSignature field value if set, zero value otherwise.
func (o *HealthLogs) GetLogSignature() string {
	if o == nil || IsNil(o.LogSignature) {
		var ret string
		return ret
	}
	return *o.LogSignature
}

// GetLogSignatureOk returns a tuple with the LogSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetLogSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.LogSignature) {
		return nil, false
	}
	return o.LogSignature, true
}

// IsSetLogSignature returns a boolean if a field has been set.
func (o *HealthLogs) IsSetLogSignature() bool {
	if o != nil && !IsNil(o.LogSignature) {
		return true
	}

	return false
}

// SetLogSignature gets a reference to the given string and assigns it to the LogSignature field.
func (o *HealthLogs) SetLogSignature(v string) {
	o.LogSignature = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *HealthLogs) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// IsSetObjectId returns a boolean if a field has been set.
func (o *HealthLogs) IsSetObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *HealthLogs) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetSeq returns the Seq field value if set, zero value otherwise.
func (o *HealthLogs) GetSeq() int64 {
	if o == nil || IsNil(o.Seq) {
		var ret int64
		return ret
	}
	return *o.Seq
}

// GetSeqOk returns a tuple with the Seq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetSeqOk() (*int64, bool) {
	if o == nil || IsNil(o.Seq) {
		return nil, false
	}
	return o.Seq, true
}

// IsSetSeq returns a boolean if a field has been set.
func (o *HealthLogs) IsSetSeq() bool {
	if o != nil && !IsNil(o.Seq) {
		return true
	}

	return false
}

// SetSeq gets a reference to the given int64 and assigns it to the Seq field.
func (o *HealthLogs) SetSeq(v int64) {
	o.Seq = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HealthLogs) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *HealthLogs) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HealthLogs) SetId(v string) {
	o.Id = &v
}

// GetSignatureVerified returns the SignatureVerified field value if set, zero value otherwise.
func (o *HealthLogs) GetSignatureVerified() bool {
	if o == nil || IsNil(o.SignatureVerified) {
		var ret bool
		return ret
	}
	return *o.SignatureVerified
}

// GetSignatureVerifiedOk returns a tuple with the SignatureVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthLogs) GetSignatureVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.SignatureVerified) {
		return nil, false
	}
	return o.SignatureVerified, true
}

// IsSetSignatureVerified returns a boolean if a field has been set.
func (o *HealthLogs) IsSetSignatureVerified() bool {
	if o != nil && !IsNil(o.SignatureVerified) {
		return true
	}

	return false
}

// SetSignatureVerified gets a reference to the given bool and assigns it to the SignatureVerified field.
func (o *HealthLogs) SetSignatureVerified(v bool) {
	o.SignatureVerified = &v
}

func (o HealthLogs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthLogs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TypeCode) {
		toSerialize["typeCode"] = o.TypeCode
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.SourceType) {
		toSerialize["sourceType"] = o.SourceType
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.LogSignature) {
		toSerialize["logSignature"] = o.LogSignature
	}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.Seq) {
		toSerialize["seq"] = o.Seq
	}
	if !IsNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !IsNil(o.SignatureVerified) {
		toSerialize["signatureVerified"] = o.SignatureVerified
	}
	return toSerialize, nil
}

type NullableHealthLogs struct {
	value *HealthLogs
	isSet bool
}

func (v NullableHealthLogs) Get() *HealthLogs {
	return v.value
}

func (v *NullableHealthLogs) Set(val *HealthLogs) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthLogs) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthLogs(val *HealthLogs) *NullableHealthLogs {
	return &NullableHealthLogs{value: val, isSet: true}
}

func (v NullableHealthLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


