/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateOptionListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOptionListRequest{}

// UpdateOptionListRequest struct for UpdateOptionListRequest
type UpdateOptionListRequest struct {
	OptionTypeList *UpdateOptionListRequestOptionTypeList `json:"optionTypeList,omitempty"`
}

// NewUpdateOptionListRequest instantiates a new UpdateOptionListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOptionListRequest() *UpdateOptionListRequest {
	this := UpdateOptionListRequest{}
	return &this
}

// NewUpdateOptionListRequestWithDefaults instantiates a new UpdateOptionListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOptionListRequestWithDefaults() *UpdateOptionListRequest {
	this := UpdateOptionListRequest{}
	return &this
}

// GetOptionTypeList returns the OptionTypeList field value if set, zero value otherwise.
func (o *UpdateOptionListRequest) GetOptionTypeList() UpdateOptionListRequestOptionTypeList {
	if o == nil || IsNil(o.OptionTypeList) {
		var ret UpdateOptionListRequestOptionTypeList
		return ret
	}
	return *o.OptionTypeList
}

// GetOptionTypeListOk returns a tuple with the OptionTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequest) GetOptionTypeListOk() (*UpdateOptionListRequestOptionTypeList, bool) {
	if o == nil || IsNil(o.OptionTypeList) {
		return nil, false
	}
	return o.OptionTypeList, true
}

// IsSetOptionTypeList returns a boolean if a field has been set.
func (o *UpdateOptionListRequest) IsSetOptionTypeList() bool {
	if o != nil && !IsNil(o.OptionTypeList) {
		return true
	}

	return false
}

// SetOptionTypeList gets a reference to the given UpdateOptionListRequestOptionTypeList and assigns it to the OptionTypeList field.
func (o *UpdateOptionListRequest) SetOptionTypeList(v UpdateOptionListRequestOptionTypeList) {
	o.OptionTypeList = &v
}

func (o UpdateOptionListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOptionListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OptionTypeList) {
		toSerialize["optionTypeList"] = o.OptionTypeList
	}
	return toSerialize, nil
}

type NullableUpdateOptionListRequest struct {
	value *UpdateOptionListRequest
	isSet bool
}

func (v NullableUpdateOptionListRequest) Get() *UpdateOptionListRequest {
	return v.value
}

func (v *NullableUpdateOptionListRequest) Set(val *UpdateOptionListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOptionListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOptionListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOptionListRequest(val *UpdateOptionListRequest) *NullableUpdateOptionListRequest {
	return &NullableUpdateOptionListRequest{value: val, isSet: true}
}

func (v NullableUpdateOptionListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOptionListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


