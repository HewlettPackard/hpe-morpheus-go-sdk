/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the OptionTypeFormCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionTypeFormCreate{}

// OptionTypeFormCreate struct for OptionTypeFormCreate
type OptionTypeFormCreate struct {
	// Form name
	Name *string `json:"name,omitempty"`
	// Unique form code
	Code *string `json:"code,omitempty"`
	// A short description of the form
	Description *string `json:"description,omitempty"`
	Labels []string `json:"labels,omitempty"`
	// Inputs
	Options []ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner `json:"options,omitempty"`
	// Field Groups
	FieldGroups []ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner `json:"fieldGroups,omitempty"`
}

// NewOptionTypeFormCreate instantiates a new OptionTypeFormCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionTypeFormCreate() *OptionTypeFormCreate {
	this := OptionTypeFormCreate{}
	return &this
}

// NewOptionTypeFormCreateWithDefaults instantiates a new OptionTypeFormCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionTypeFormCreateWithDefaults() *OptionTypeFormCreate {
	this := OptionTypeFormCreate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OptionTypeFormCreate) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OptionTypeFormCreate) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OptionTypeFormCreate) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *OptionTypeFormCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetOptions() []ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetOptionsOk() ([]ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// IsSetOptions returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner and assigns it to the Options field.
func (o *OptionTypeFormCreate) SetOptions(v []ListOptionForms200ResponseAllOfOptionTypesInnerOptionsInner) {
	o.Options = v
}

// GetFieldGroups returns the FieldGroups field value if set, zero value otherwise.
func (o *OptionTypeFormCreate) GetFieldGroups() []ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner {
	if o == nil || IsNil(o.FieldGroups) {
		var ret []ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner
		return ret
	}
	return o.FieldGroups
}

// GetFieldGroupsOk returns a tuple with the FieldGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeFormCreate) GetFieldGroupsOk() ([]ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner, bool) {
	if o == nil || IsNil(o.FieldGroups) {
		return nil, false
	}
	return o.FieldGroups, true
}

// IsSetFieldGroups returns a boolean if a field has been set.
func (o *OptionTypeFormCreate) IsSetFieldGroups() bool {
	if o != nil && !IsNil(o.FieldGroups) {
		return true
	}

	return false
}

// SetFieldGroups gets a reference to the given []ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner and assigns it to the FieldGroups field.
func (o *OptionTypeFormCreate) SetFieldGroups(v []ListOptionForms200ResponseAllOfOptionTypesInnerFieldGroupsInner) {
	o.FieldGroups = v
}

func (o OptionTypeFormCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionTypeFormCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.FieldGroups) {
		toSerialize["fieldGroups"] = o.FieldGroups
	}
	return toSerialize, nil
}

type NullableOptionTypeFormCreate struct {
	value *OptionTypeFormCreate
	isSet bool
}

func (v NullableOptionTypeFormCreate) Get() *OptionTypeFormCreate {
	return v.value
}

func (v *NullableOptionTypeFormCreate) Set(val *OptionTypeFormCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionTypeFormCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionTypeFormCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionTypeFormCreate(val *OptionTypeFormCreate) *NullableOptionTypeFormCreate {
	return &NullableOptionTypeFormCreate{value: val, isSet: true}
}

func (v NullableOptionTypeFormCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionTypeFormCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


