/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIntegrationObjects200ResponseObjectsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntegrationObjects200ResponseObjectsInner{}

// ListIntegrationObjects200ResponseObjectsInner struct for ListIntegrationObjects200ResponseObjectsInner
type ListIntegrationObjects200ResponseObjectsInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	Layout *ListIntegrationObjects200ResponseObjectsInnerLayout `json:"layout,omitempty"`
}

// NewListIntegrationObjects200ResponseObjectsInner instantiates a new ListIntegrationObjects200ResponseObjectsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntegrationObjects200ResponseObjectsInner() *ListIntegrationObjects200ResponseObjectsInner {
	this := ListIntegrationObjects200ResponseObjectsInner{}
	return &this
}

// NewListIntegrationObjects200ResponseObjectsInnerWithDefaults instantiates a new ListIntegrationObjects200ResponseObjectsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntegrationObjects200ResponseObjectsInnerWithDefaults() *ListIntegrationObjects200ResponseObjectsInner {
	this := ListIntegrationObjects200ResponseObjectsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetType(v string) {
	o.Type = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetRefId(v int64) {
	o.RefId = &v
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetLayout() ListIntegrationObjects200ResponseObjectsInnerLayout {
	if o == nil || IsNil(o.Layout) {
		var ret ListIntegrationObjects200ResponseObjectsInnerLayout
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) GetLayoutOk() (*ListIntegrationObjects200ResponseObjectsInnerLayout, bool) {
	if o == nil || IsNil(o.Layout) {
		return nil, false
	}
	return o.Layout, true
}

// IsSetLayout returns a boolean if a field has been set.
func (o *ListIntegrationObjects200ResponseObjectsInner) IsSetLayout() bool {
	if o != nil && !IsNil(o.Layout) {
		return true
	}

	return false
}

// SetLayout gets a reference to the given ListIntegrationObjects200ResponseObjectsInnerLayout and assigns it to the Layout field.
func (o *ListIntegrationObjects200ResponseObjectsInner) SetLayout(v ListIntegrationObjects200ResponseObjectsInnerLayout) {
	o.Layout = &v
}

func (o ListIntegrationObjects200ResponseObjectsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIntegrationObjects200ResponseObjectsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.Layout) {
		toSerialize["layout"] = o.Layout
	}
	return toSerialize, nil
}

type NullableListIntegrationObjects200ResponseObjectsInner struct {
	value *ListIntegrationObjects200ResponseObjectsInner
	isSet bool
}

func (v NullableListIntegrationObjects200ResponseObjectsInner) Get() *ListIntegrationObjects200ResponseObjectsInner {
	return v.value
}

func (v *NullableListIntegrationObjects200ResponseObjectsInner) Set(val *ListIntegrationObjects200ResponseObjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntegrationObjects200ResponseObjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntegrationObjects200ResponseObjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntegrationObjects200ResponseObjectsInner(val *ListIntegrationObjects200ResponseObjectsInner) *NullableListIntegrationObjects200ResponseObjectsInner {
	return &NullableListIntegrationObjects200ResponseObjectsInner{value: val, isSet: true}
}

func (v NullableListIntegrationObjects200ResponseObjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntegrationObjects200ResponseObjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


