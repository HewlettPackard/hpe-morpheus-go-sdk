/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddVDIPoolsRequestVdiPoolOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVDIPoolsRequestVdiPoolOneOf1{}

// AddVDIPoolsRequestVdiPoolOneOf1 struct for AddVDIPoolsRequestVdiPoolOneOf1
type AddVDIPoolsRequestVdiPoolOneOf1 struct {
	// Virtual Desktop name
	Name string `json:"name"`
	// Virtual Desktop description
	Description *string `json:"description,omitempty"`
	// Owner (User) ID
	Owner *int64 `json:"owner,omitempty"`
	// Min Idle - Sets the minimum number of idle instances on standby in the pool. The pool will always try to maintain this number of available instances on standby. 
	MinIdle *float32 `json:"minIdle,omitempty"`
	// The initial size of the pool to be allocated on creation
	InitialPoolSize *float32 `json:"initialPoolSize,omitempty"`
	// Sets the maximum number of idle instances on standby in the pool. If the number of idle instances supersedes this, the pool will start removing instances 
	MaxIdle *float32 `json:"maxIdle,omitempty"`
	// Max limit on number of allocations and instances within the pool. 
	MaxPoolSize float32 `json:"maxPoolSize"`
	// Time (in minutes) after a user disconnects before an allocation is recycled or shutdown depending on persistence. 
	AllocationTimeoutMinutes *float32 `json:"allocationTimeoutMinutes,omitempty"`
	// Persistent Desktop Pool
	PersistentUser *bool `json:"persistentUser,omitempty"`
	// Recyclable VDI Pools only work with cloud types that support snapshot management (i.e. Vmware, Nutanix, VCD)
	Recyclable *bool `json:"recyclable,omitempty"`
	// Allow copy from desktop
	AllowCopy *bool `json:"allowCopy,omitempty"`
	// Allow local printers from Desktop
	AllowPrinter *bool `json:"allowPrinter,omitempty"`
	// Allow File Share
	AllowFileshare *bool `json:"allowFileshare,omitempty"`
	// Allow hypervisor console
	AllowHypervisorConsole *bool `json:"allowHypervisorConsole,omitempty"`
	// Auto create local user upon reservation
	AutoCreateLocalUserOnReservation *bool `json:"autoCreateLocalUserOnReservation,omitempty"`
	// Can be used to enable or disable the VDI pool
	Enabled *bool `json:"enabled,omitempty"`
	// The relative location of an icon image
	IconPath *string `json:"iconPath,omitempty"`
	// Array of VDI App IDs
	Apps []int64 `json:"apps,omitempty"`
	// VDI Gateway ID
	Gateway *int64 `json:"gateway,omitempty"`
	// Instance Config JSON. Passing as a string will preserve property order.  See `config` object for required values.
	InstanceConfig *string `json:"instanceConfig,omitempty"`
	Config AddVDIPoolsRequestVdiPoolOneOfConfig `json:"config"`
	// Guest Console Jump Host
	GuestConsoleJumpHost *string `json:"guestConsoleJumpHost,omitempty"`
	// Guest Console Jump Port
	GuestConsoleJumpPort *int64 `json:"guestConsoleJumpPort,omitempty"`
	// Guest Console Jump Username
	GuestConsoleJumpUsername *string `json:"guestConsoleJumpUsername,omitempty"`
	// Guest Console Jump Password
	GuestConsoleJumpPassword *string `json:"guestConsoleJumpPassword,omitempty"`
	// Guest Console Jump Key Pair. see `Key Pair`
	GuestConsoleJumpKeypair *int64 `json:"guestConsoleJumpKeypair,omitempty"`
}

type _AddVDIPoolsRequestVdiPoolOneOf1 AddVDIPoolsRequestVdiPoolOneOf1

// NewAddVDIPoolsRequestVdiPoolOneOf1 instantiates a new AddVDIPoolsRequestVdiPoolOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVDIPoolsRequestVdiPoolOneOf1(name string, maxPoolSize float32, config AddVDIPoolsRequestVdiPoolOneOfConfig) *AddVDIPoolsRequestVdiPoolOneOf1 {
	this := AddVDIPoolsRequestVdiPoolOneOf1{}
	this.Name = name
	this.MaxPoolSize = maxPoolSize
	var persistentUser bool = false
	this.PersistentUser = &persistentUser
	var recyclable bool = false
	this.Recyclable = &recyclable
	var allowCopy bool = false
	this.AllowCopy = &allowCopy
	var allowPrinter bool = false
	this.AllowPrinter = &allowPrinter
	var allowFileshare bool = false
	this.AllowFileshare = &allowFileshare
	var allowHypervisorConsole bool = false
	this.AllowHypervisorConsole = &allowHypervisorConsole
	var autoCreateLocalUserOnReservation bool = false
	this.AutoCreateLocalUserOnReservation = &autoCreateLocalUserOnReservation
	var enabled bool = true
	this.Enabled = &enabled
	this.Config = config
	return &this
}

// NewAddVDIPoolsRequestVdiPoolOneOf1WithDefaults instantiates a new AddVDIPoolsRequestVdiPoolOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVDIPoolsRequestVdiPoolOneOf1WithDefaults() *AddVDIPoolsRequestVdiPoolOneOf1 {
	this := AddVDIPoolsRequestVdiPoolOneOf1{}
	var persistentUser bool = false
	this.PersistentUser = &persistentUser
	var recyclable bool = false
	this.Recyclable = &recyclable
	var allowCopy bool = false
	this.AllowCopy = &allowCopy
	var allowPrinter bool = false
	this.AllowPrinter = &allowPrinter
	var allowFileshare bool = false
	this.AllowFileshare = &allowFileshare
	var allowHypervisorConsole bool = false
	this.AllowHypervisorConsole = &allowHypervisorConsole
	var autoCreateLocalUserOnReservation bool = false
	this.AutoCreateLocalUserOnReservation = &autoCreateLocalUserOnReservation
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetDescription(v string) {
	o.Description = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetOwner() int64 {
	if o == nil || IsNil(o.Owner) {
		var ret int64
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetOwnerOk() (*int64, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given int64 and assigns it to the Owner field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetOwner(v int64) {
	o.Owner = &v
}

// GetMinIdle returns the MinIdle field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMinIdle() float32 {
	if o == nil || IsNil(o.MinIdle) {
		var ret float32
		return ret
	}
	return *o.MinIdle
}

// GetMinIdleOk returns a tuple with the MinIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMinIdleOk() (*float32, bool) {
	if o == nil || IsNil(o.MinIdle) {
		return nil, false
	}
	return o.MinIdle, true
}

// IsSetMinIdle returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetMinIdle() bool {
	if o != nil && !IsNil(o.MinIdle) {
		return true
	}

	return false
}

// SetMinIdle gets a reference to the given float32 and assigns it to the MinIdle field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetMinIdle(v float32) {
	o.MinIdle = &v
}

// GetInitialPoolSize returns the InitialPoolSize field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetInitialPoolSize() float32 {
	if o == nil || IsNil(o.InitialPoolSize) {
		var ret float32
		return ret
	}
	return *o.InitialPoolSize
}

// GetInitialPoolSizeOk returns a tuple with the InitialPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetInitialPoolSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.InitialPoolSize) {
		return nil, false
	}
	return o.InitialPoolSize, true
}

// IsSetInitialPoolSize returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetInitialPoolSize() bool {
	if o != nil && !IsNil(o.InitialPoolSize) {
		return true
	}

	return false
}

// SetInitialPoolSize gets a reference to the given float32 and assigns it to the InitialPoolSize field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetInitialPoolSize(v float32) {
	o.InitialPoolSize = &v
}

// GetMaxIdle returns the MaxIdle field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMaxIdle() float32 {
	if o == nil || IsNil(o.MaxIdle) {
		var ret float32
		return ret
	}
	return *o.MaxIdle
}

// GetMaxIdleOk returns a tuple with the MaxIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMaxIdleOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxIdle) {
		return nil, false
	}
	return o.MaxIdle, true
}

// IsSetMaxIdle returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetMaxIdle() bool {
	if o != nil && !IsNil(o.MaxIdle) {
		return true
	}

	return false
}

// SetMaxIdle gets a reference to the given float32 and assigns it to the MaxIdle field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetMaxIdle(v float32) {
	o.MaxIdle = &v
}

// GetMaxPoolSize returns the MaxPoolSize field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMaxPoolSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MaxPoolSize
}

// GetMaxPoolSizeOk returns a tuple with the MaxPoolSize field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetMaxPoolSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxPoolSize, true
}

// SetMaxPoolSize sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetMaxPoolSize(v float32) {
	o.MaxPoolSize = v
}

// GetAllocationTimeoutMinutes returns the AllocationTimeoutMinutes field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllocationTimeoutMinutes() float32 {
	if o == nil || IsNil(o.AllocationTimeoutMinutes) {
		var ret float32
		return ret
	}
	return *o.AllocationTimeoutMinutes
}

// GetAllocationTimeoutMinutesOk returns a tuple with the AllocationTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllocationTimeoutMinutesOk() (*float32, bool) {
	if o == nil || IsNil(o.AllocationTimeoutMinutes) {
		return nil, false
	}
	return o.AllocationTimeoutMinutes, true
}

// IsSetAllocationTimeoutMinutes returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAllocationTimeoutMinutes() bool {
	if o != nil && !IsNil(o.AllocationTimeoutMinutes) {
		return true
	}

	return false
}

// SetAllocationTimeoutMinutes gets a reference to the given float32 and assigns it to the AllocationTimeoutMinutes field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAllocationTimeoutMinutes(v float32) {
	o.AllocationTimeoutMinutes = &v
}

// GetPersistentUser returns the PersistentUser field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetPersistentUser() bool {
	if o == nil || IsNil(o.PersistentUser) {
		var ret bool
		return ret
	}
	return *o.PersistentUser
}

// GetPersistentUserOk returns a tuple with the PersistentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetPersistentUserOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentUser) {
		return nil, false
	}
	return o.PersistentUser, true
}

// IsSetPersistentUser returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetPersistentUser() bool {
	if o != nil && !IsNil(o.PersistentUser) {
		return true
	}

	return false
}

// SetPersistentUser gets a reference to the given bool and assigns it to the PersistentUser field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetPersistentUser(v bool) {
	o.PersistentUser = &v
}

// GetRecyclable returns the Recyclable field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetRecyclable() bool {
	if o == nil || IsNil(o.Recyclable) {
		var ret bool
		return ret
	}
	return *o.Recyclable
}

// GetRecyclableOk returns a tuple with the Recyclable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetRecyclableOk() (*bool, bool) {
	if o == nil || IsNil(o.Recyclable) {
		return nil, false
	}
	return o.Recyclable, true
}

// IsSetRecyclable returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetRecyclable() bool {
	if o != nil && !IsNil(o.Recyclable) {
		return true
	}

	return false
}

// SetRecyclable gets a reference to the given bool and assigns it to the Recyclable field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetRecyclable(v bool) {
	o.Recyclable = &v
}

// GetAllowCopy returns the AllowCopy field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowCopy() bool {
	if o == nil || IsNil(o.AllowCopy) {
		var ret bool
		return ret
	}
	return *o.AllowCopy
}

// GetAllowCopyOk returns a tuple with the AllowCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCopy) {
		return nil, false
	}
	return o.AllowCopy, true
}

// IsSetAllowCopy returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAllowCopy() bool {
	if o != nil && !IsNil(o.AllowCopy) {
		return true
	}

	return false
}

// SetAllowCopy gets a reference to the given bool and assigns it to the AllowCopy field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAllowCopy(v bool) {
	o.AllowCopy = &v
}

// GetAllowPrinter returns the AllowPrinter field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowPrinter() bool {
	if o == nil || IsNil(o.AllowPrinter) {
		var ret bool
		return ret
	}
	return *o.AllowPrinter
}

// GetAllowPrinterOk returns a tuple with the AllowPrinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowPrinterOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPrinter) {
		return nil, false
	}
	return o.AllowPrinter, true
}

// IsSetAllowPrinter returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAllowPrinter() bool {
	if o != nil && !IsNil(o.AllowPrinter) {
		return true
	}

	return false
}

// SetAllowPrinter gets a reference to the given bool and assigns it to the AllowPrinter field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAllowPrinter(v bool) {
	o.AllowPrinter = &v
}

// GetAllowFileshare returns the AllowFileshare field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowFileshare() bool {
	if o == nil || IsNil(o.AllowFileshare) {
		var ret bool
		return ret
	}
	return *o.AllowFileshare
}

// GetAllowFileshareOk returns a tuple with the AllowFileshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowFileshareOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFileshare) {
		return nil, false
	}
	return o.AllowFileshare, true
}

// IsSetAllowFileshare returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAllowFileshare() bool {
	if o != nil && !IsNil(o.AllowFileshare) {
		return true
	}

	return false
}

// SetAllowFileshare gets a reference to the given bool and assigns it to the AllowFileshare field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAllowFileshare(v bool) {
	o.AllowFileshare = &v
}

// GetAllowHypervisorConsole returns the AllowHypervisorConsole field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowHypervisorConsole() bool {
	if o == nil || IsNil(o.AllowHypervisorConsole) {
		var ret bool
		return ret
	}
	return *o.AllowHypervisorConsole
}

// GetAllowHypervisorConsoleOk returns a tuple with the AllowHypervisorConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAllowHypervisorConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowHypervisorConsole) {
		return nil, false
	}
	return o.AllowHypervisorConsole, true
}

// IsSetAllowHypervisorConsole returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAllowHypervisorConsole() bool {
	if o != nil && !IsNil(o.AllowHypervisorConsole) {
		return true
	}

	return false
}

// SetAllowHypervisorConsole gets a reference to the given bool and assigns it to the AllowHypervisorConsole field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAllowHypervisorConsole(v bool) {
	o.AllowHypervisorConsole = &v
}

// GetAutoCreateLocalUserOnReservation returns the AutoCreateLocalUserOnReservation field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAutoCreateLocalUserOnReservation() bool {
	if o == nil || IsNil(o.AutoCreateLocalUserOnReservation) {
		var ret bool
		return ret
	}
	return *o.AutoCreateLocalUserOnReservation
}

// GetAutoCreateLocalUserOnReservationOk returns a tuple with the AutoCreateLocalUserOnReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAutoCreateLocalUserOnReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreateLocalUserOnReservation) {
		return nil, false
	}
	return o.AutoCreateLocalUserOnReservation, true
}

// IsSetAutoCreateLocalUserOnReservation returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetAutoCreateLocalUserOnReservation() bool {
	if o != nil && !IsNil(o.AutoCreateLocalUserOnReservation) {
		return true
	}

	return false
}

// SetAutoCreateLocalUserOnReservation gets a reference to the given bool and assigns it to the AutoCreateLocalUserOnReservation field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetAutoCreateLocalUserOnReservation(v bool) {
	o.AutoCreateLocalUserOnReservation = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetIconPath() string {
	if o == nil || IsNil(o.IconPath) {
		var ret string
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetIconPathOk() (*string, bool) {
	if o == nil || IsNil(o.IconPath) {
		return nil, false
	}
	return o.IconPath, true
}

// IsSetIconPath returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetIconPath() bool {
	if o != nil && !IsNil(o.IconPath) {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given string and assigns it to the IconPath field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetIconPath(v string) {
	o.IconPath = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetApps() []int64 {
	if o == nil || IsNil(o.Apps) {
		var ret []int64
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetAppsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// IsSetApps returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []int64 and assigns it to the Apps field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetApps(v []int64) {
	o.Apps = v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGateway() int64 {
	if o == nil || IsNil(o.Gateway) {
		var ret int64
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGatewayOk() (*int64, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// IsSetGateway returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given int64 and assigns it to the Gateway field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGateway(v int64) {
	o.Gateway = &v
}

// GetInstanceConfig returns the InstanceConfig field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetInstanceConfig() string {
	if o == nil || IsNil(o.InstanceConfig) {
		var ret string
		return ret
	}
	return *o.InstanceConfig
}

// GetInstanceConfigOk returns a tuple with the InstanceConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetInstanceConfigOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceConfig) {
		return nil, false
	}
	return o.InstanceConfig, true
}

// IsSetInstanceConfig returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetInstanceConfig() bool {
	if o != nil && !IsNil(o.InstanceConfig) {
		return true
	}

	return false
}

// SetInstanceConfig gets a reference to the given string and assigns it to the InstanceConfig field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetInstanceConfig(v string) {
	o.InstanceConfig = &v
}

// GetConfig returns the Config field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetConfig() AddVDIPoolsRequestVdiPoolOneOfConfig {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetConfigOk() (*AddVDIPoolsRequestVdiPoolOneOfConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetConfig(v AddVDIPoolsRequestVdiPoolOneOfConfig) {
	o.Config = v
}

// GetGuestConsoleJumpHost returns the GuestConsoleJumpHost field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpHost() string {
	if o == nil || IsNil(o.GuestConsoleJumpHost) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpHost
}

// GetGuestConsoleJumpHostOk returns a tuple with the GuestConsoleJumpHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpHostOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpHost) {
		return nil, false
	}
	return o.GuestConsoleJumpHost, true
}

// IsSetGuestConsoleJumpHost returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGuestConsoleJumpHost() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpHost) {
		return true
	}

	return false
}

// SetGuestConsoleJumpHost gets a reference to the given string and assigns it to the GuestConsoleJumpHost field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGuestConsoleJumpHost(v string) {
	o.GuestConsoleJumpHost = &v
}

// GetGuestConsoleJumpPort returns the GuestConsoleJumpPort field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpPort() int64 {
	if o == nil || IsNil(o.GuestConsoleJumpPort) {
		var ret int64
		return ret
	}
	return *o.GuestConsoleJumpPort
}

// GetGuestConsoleJumpPortOk returns a tuple with the GuestConsoleJumpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpPortOk() (*int64, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpPort) {
		return nil, false
	}
	return o.GuestConsoleJumpPort, true
}

// IsSetGuestConsoleJumpPort returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGuestConsoleJumpPort() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpPort) {
		return true
	}

	return false
}

// SetGuestConsoleJumpPort gets a reference to the given int64 and assigns it to the GuestConsoleJumpPort field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGuestConsoleJumpPort(v int64) {
	o.GuestConsoleJumpPort = &v
}

// GetGuestConsoleJumpUsername returns the GuestConsoleJumpUsername field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpUsername() string {
	if o == nil || IsNil(o.GuestConsoleJumpUsername) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpUsername
}

// GetGuestConsoleJumpUsernameOk returns a tuple with the GuestConsoleJumpUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpUsername) {
		return nil, false
	}
	return o.GuestConsoleJumpUsername, true
}

// IsSetGuestConsoleJumpUsername returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGuestConsoleJumpUsername() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpUsername) {
		return true
	}

	return false
}

// SetGuestConsoleJumpUsername gets a reference to the given string and assigns it to the GuestConsoleJumpUsername field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGuestConsoleJumpUsername(v string) {
	o.GuestConsoleJumpUsername = &v
}

// GetGuestConsoleJumpPassword returns the GuestConsoleJumpPassword field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpPassword() string {
	if o == nil || IsNil(o.GuestConsoleJumpPassword) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpPassword
}

// GetGuestConsoleJumpPasswordOk returns a tuple with the GuestConsoleJumpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpPassword) {
		return nil, false
	}
	return o.GuestConsoleJumpPassword, true
}

// IsSetGuestConsoleJumpPassword returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGuestConsoleJumpPassword() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpPassword) {
		return true
	}

	return false
}

// SetGuestConsoleJumpPassword gets a reference to the given string and assigns it to the GuestConsoleJumpPassword field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGuestConsoleJumpPassword(v string) {
	o.GuestConsoleJumpPassword = &v
}

// GetGuestConsoleJumpKeypair returns the GuestConsoleJumpKeypair field value if set, zero value otherwise.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpKeypair() int64 {
	if o == nil || IsNil(o.GuestConsoleJumpKeypair) {
		var ret int64
		return ret
	}
	return *o.GuestConsoleJumpKeypair
}

// GetGuestConsoleJumpKeypairOk returns a tuple with the GuestConsoleJumpKeypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) GetGuestConsoleJumpKeypairOk() (*int64, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpKeypair) {
		return nil, false
	}
	return o.GuestConsoleJumpKeypair, true
}

// IsSetGuestConsoleJumpKeypair returns a boolean if a field has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) IsSetGuestConsoleJumpKeypair() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpKeypair) {
		return true
	}

	return false
}

// SetGuestConsoleJumpKeypair gets a reference to the given int64 and assigns it to the GuestConsoleJumpKeypair field.
func (o *AddVDIPoolsRequestVdiPoolOneOf1) SetGuestConsoleJumpKeypair(v int64) {
	o.GuestConsoleJumpKeypair = &v
}

func (o AddVDIPoolsRequestVdiPoolOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVDIPoolsRequestVdiPoolOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.MinIdle) {
		toSerialize["minIdle"] = o.MinIdle
	}
	if !IsNil(o.InitialPoolSize) {
		toSerialize["initialPoolSize"] = o.InitialPoolSize
	}
	if !IsNil(o.MaxIdle) {
		toSerialize["maxIdle"] = o.MaxIdle
	}
	toSerialize["maxPoolSize"] = o.MaxPoolSize
	if !IsNil(o.AllocationTimeoutMinutes) {
		toSerialize["allocationTimeoutMinutes"] = o.AllocationTimeoutMinutes
	}
	if !IsNil(o.PersistentUser) {
		toSerialize["persistentUser"] = o.PersistentUser
	}
	if !IsNil(o.Recyclable) {
		toSerialize["recyclable"] = o.Recyclable
	}
	if !IsNil(o.AllowCopy) {
		toSerialize["allowCopy"] = o.AllowCopy
	}
	if !IsNil(o.AllowPrinter) {
		toSerialize["allowPrinter"] = o.AllowPrinter
	}
	if !IsNil(o.AllowFileshare) {
		toSerialize["allowFileshare"] = o.AllowFileshare
	}
	if !IsNil(o.AllowHypervisorConsole) {
		toSerialize["allowHypervisorConsole"] = o.AllowHypervisorConsole
	}
	if !IsNil(o.AutoCreateLocalUserOnReservation) {
		toSerialize["autoCreateLocalUserOnReservation"] = o.AutoCreateLocalUserOnReservation
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.IconPath) {
		toSerialize["iconPath"] = o.IconPath
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.InstanceConfig) {
		toSerialize["instanceConfig"] = o.InstanceConfig
	}
	toSerialize["config"] = o.Config
	if !IsNil(o.GuestConsoleJumpHost) {
		toSerialize["guestConsoleJumpHost"] = o.GuestConsoleJumpHost
	}
	if !IsNil(o.GuestConsoleJumpPort) {
		toSerialize["guestConsoleJumpPort"] = o.GuestConsoleJumpPort
	}
	if !IsNil(o.GuestConsoleJumpUsername) {
		toSerialize["guestConsoleJumpUsername"] = o.GuestConsoleJumpUsername
	}
	if !IsNil(o.GuestConsoleJumpPassword) {
		toSerialize["guestConsoleJumpPassword"] = o.GuestConsoleJumpPassword
	}
	if !IsNil(o.GuestConsoleJumpKeypair) {
		toSerialize["guestConsoleJumpKeypair"] = o.GuestConsoleJumpKeypair
	}
	return toSerialize, nil
}

func (o *AddVDIPoolsRequestVdiPoolOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"maxPoolSize",
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddVDIPoolsRequestVdiPoolOneOf1 := _AddVDIPoolsRequestVdiPoolOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddVDIPoolsRequestVdiPoolOneOf1)

	if err != nil {
		return err
	}

	*o = AddVDIPoolsRequestVdiPoolOneOf1(varAddVDIPoolsRequestVdiPoolOneOf1)

	return err
}

type NullableAddVDIPoolsRequestVdiPoolOneOf1 struct {
	value *AddVDIPoolsRequestVdiPoolOneOf1
	isSet bool
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOf1) Get() *AddVDIPoolsRequestVdiPoolOneOf1 {
	return v.value
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOf1) Set(val *AddVDIPoolsRequestVdiPoolOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVDIPoolsRequestVdiPoolOneOf1(val *AddVDIPoolsRequestVdiPoolOneOf1) *NullableAddVDIPoolsRequestVdiPoolOneOf1 {
	return &NullableAddVDIPoolsRequestVdiPoolOneOf1{value: val, isSet: true}
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


