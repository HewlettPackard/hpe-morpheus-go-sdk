/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddCloudResourcePoolRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCloudResourcePoolRequest{}

// AddCloudResourcePoolRequest struct for AddCloudResourcePoolRequest
type AddCloudResourcePoolRequest struct {
	ResourcePool AddCloudResourcePoolRequestResourcePool `json:"resourcePool"`
}

type _AddCloudResourcePoolRequest AddCloudResourcePoolRequest

// NewAddCloudResourcePoolRequest instantiates a new AddCloudResourcePoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCloudResourcePoolRequest(resourcePool AddCloudResourcePoolRequestResourcePool) *AddCloudResourcePoolRequest {
	this := AddCloudResourcePoolRequest{}
	this.ResourcePool = resourcePool
	return &this
}

// NewAddCloudResourcePoolRequestWithDefaults instantiates a new AddCloudResourcePoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCloudResourcePoolRequestWithDefaults() *AddCloudResourcePoolRequest {
	this := AddCloudResourcePoolRequest{}
	return &this
}

// GetResourcePool returns the ResourcePool field value
func (o *AddCloudResourcePoolRequest) GetResourcePool() AddCloudResourcePoolRequestResourcePool {
	if o == nil {
		var ret AddCloudResourcePoolRequestResourcePool
		return ret
	}

	return o.ResourcePool
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value
// and a boolean to check if the value has been set.
func (o *AddCloudResourcePoolRequest) GetResourcePoolOk() (*AddCloudResourcePoolRequestResourcePool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourcePool, true
}

// SetResourcePool sets field value
func (o *AddCloudResourcePoolRequest) SetResourcePool(v AddCloudResourcePoolRequestResourcePool) {
	o.ResourcePool = v
}

func (o AddCloudResourcePoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCloudResourcePoolRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourcePool"] = o.ResourcePool
	return toSerialize, nil
}

func (o *AddCloudResourcePoolRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourcePool",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddCloudResourcePoolRequest := _AddCloudResourcePoolRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddCloudResourcePoolRequest)

	if err != nil {
		return err
	}

	*o = AddCloudResourcePoolRequest(varAddCloudResourcePoolRequest)

	return err
}

type NullableAddCloudResourcePoolRequest struct {
	value *AddCloudResourcePoolRequest
	isSet bool
}

func (v NullableAddCloudResourcePoolRequest) Get() *AddCloudResourcePoolRequest {
	return v.value
}

func (v *NullableAddCloudResourcePoolRequest) Set(val *AddCloudResourcePoolRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCloudResourcePoolRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCloudResourcePoolRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCloudResourcePoolRequest(val *AddCloudResourcePoolRequest) *NullableAddCloudResourcePoolRequest {
	return &NullableAddCloudResourcePoolRequest{value: val, isSet: true}
}

func (v NullableAddCloudResourcePoolRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCloudResourcePoolRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


