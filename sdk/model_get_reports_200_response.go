/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetReports200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReports200Response{}

// GetReports200Response struct for GetReports200Response
type GetReports200Response struct {
	ReportResult *ListReports200ResponseAllOfReportResultsInner `json:"reportResult,omitempty"`
}

// NewGetReports200Response instantiates a new GetReports200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReports200Response() *GetReports200Response {
	this := GetReports200Response{}
	return &this
}

// NewGetReports200ResponseWithDefaults instantiates a new GetReports200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReports200ResponseWithDefaults() *GetReports200Response {
	this := GetReports200Response{}
	return &this
}

// GetReportResult returns the ReportResult field value if set, zero value otherwise.
func (o *GetReports200Response) GetReportResult() ListReports200ResponseAllOfReportResultsInner {
	if o == nil || IsNil(o.ReportResult) {
		var ret ListReports200ResponseAllOfReportResultsInner
		return ret
	}
	return *o.ReportResult
}

// GetReportResultOk returns a tuple with the ReportResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReports200Response) GetReportResultOk() (*ListReports200ResponseAllOfReportResultsInner, bool) {
	if o == nil || IsNil(o.ReportResult) {
		return nil, false
	}
	return o.ReportResult, true
}

// IsSetReportResult returns a boolean if a field has been set.
func (o *GetReports200Response) IsSetReportResult() bool {
	if o != nil && !IsNil(o.ReportResult) {
		return true
	}

	return false
}

// SetReportResult gets a reference to the given ListReports200ResponseAllOfReportResultsInner and assigns it to the ReportResult field.
func (o *GetReports200Response) SetReportResult(v ListReports200ResponseAllOfReportResultsInner) {
	o.ReportResult = &v
}

func (o GetReports200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReports200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportResult) {
		toSerialize["reportResult"] = o.ReportResult
	}
	return toSerialize, nil
}

type NullableGetReports200Response struct {
	value *GetReports200Response
	isSet bool
}

func (v NullableGetReports200Response) Get() *GetReports200Response {
	return v.value
}

func (v *NullableGetReports200Response) Set(val *GetReports200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReports200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReports200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReports200Response(val *GetReports200Response) *NullableGetReports200Response {
	return &NullableGetReports200Response{value: val, isSet: true}
}

func (v NullableGetReports200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReports200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


