/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the RefreshCloudsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshCloudsRequest{}

// RefreshCloudsRequest struct for RefreshCloudsRequest
type RefreshCloudsRequest struct {
	// Refresh Mode. Run the `daily` or `costing` job instead of the default `hourly` refresh job.
	Mode *string `json:"mode,omitempty"`
	// Rebuild. Pass `true` to purge existing invoices for the period before refreshing. Only applies to mode `costing`.
	Rebuild *string `json:"rebuild,omitempty"`
	// Period. Invoice billing period to refresh in the format `YYYYMM`. The default period is the current month. Only applies to mode `costing`.
	Period *string `json:"period,omitempty"`
}

// NewRefreshCloudsRequest instantiates a new RefreshCloudsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshCloudsRequest() *RefreshCloudsRequest {
	this := RefreshCloudsRequest{}
	return &this
}

// NewRefreshCloudsRequestWithDefaults instantiates a new RefreshCloudsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshCloudsRequestWithDefaults() *RefreshCloudsRequest {
	this := RefreshCloudsRequest{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *RefreshCloudsRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshCloudsRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// IsSetMode returns a boolean if a field has been set.
func (o *RefreshCloudsRequest) IsSetMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *RefreshCloudsRequest) SetMode(v string) {
	o.Mode = &v
}

// GetRebuild returns the Rebuild field value if set, zero value otherwise.
func (o *RefreshCloudsRequest) GetRebuild() string {
	if o == nil || IsNil(o.Rebuild) {
		var ret string
		return ret
	}
	return *o.Rebuild
}

// GetRebuildOk returns a tuple with the Rebuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshCloudsRequest) GetRebuildOk() (*string, bool) {
	if o == nil || IsNil(o.Rebuild) {
		return nil, false
	}
	return o.Rebuild, true
}

// IsSetRebuild returns a boolean if a field has been set.
func (o *RefreshCloudsRequest) IsSetRebuild() bool {
	if o != nil && !IsNil(o.Rebuild) {
		return true
	}

	return false
}

// SetRebuild gets a reference to the given string and assigns it to the Rebuild field.
func (o *RefreshCloudsRequest) SetRebuild(v string) {
	o.Rebuild = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *RefreshCloudsRequest) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshCloudsRequest) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// IsSetPeriod returns a boolean if a field has been set.
func (o *RefreshCloudsRequest) IsSetPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *RefreshCloudsRequest) SetPeriod(v string) {
	o.Period = &v
}

func (o RefreshCloudsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshCloudsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Rebuild) {
		toSerialize["rebuild"] = o.Rebuild
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	return toSerialize, nil
}

type NullableRefreshCloudsRequest struct {
	value *RefreshCloudsRequest
	isSet bool
}

func (v NullableRefreshCloudsRequest) Get() *RefreshCloudsRequest {
	return v.value
}

func (v *NullableRefreshCloudsRequest) Set(val *RefreshCloudsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshCloudsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshCloudsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshCloudsRequest(val *RefreshCloudsRequest) *NullableRefreshCloudsRequest {
	return &NullableRefreshCloudsRequest{value: val, isSet: true}
}

func (v NullableRefreshCloudsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshCloudsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


