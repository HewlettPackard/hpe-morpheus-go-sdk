/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListVdi200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVdi200Response{}

// ListVdi200Response struct for ListVdi200Response
type ListVdi200Response struct {
	Desktops []ListVdi200ResponseAllOfDesktopsInner `json:"desktops,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListVdi200Response instantiates a new ListVdi200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVdi200Response() *ListVdi200Response {
	this := ListVdi200Response{}
	return &this
}

// NewListVdi200ResponseWithDefaults instantiates a new ListVdi200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVdi200ResponseWithDefaults() *ListVdi200Response {
	this := ListVdi200Response{}
	return &this
}

// GetDesktops returns the Desktops field value if set, zero value otherwise.
func (o *ListVdi200Response) GetDesktops() []ListVdi200ResponseAllOfDesktopsInner {
	if o == nil || IsNil(o.Desktops) {
		var ret []ListVdi200ResponseAllOfDesktopsInner
		return ret
	}
	return o.Desktops
}

// GetDesktopsOk returns a tuple with the Desktops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200Response) GetDesktopsOk() ([]ListVdi200ResponseAllOfDesktopsInner, bool) {
	if o == nil || IsNil(o.Desktops) {
		return nil, false
	}
	return o.Desktops, true
}

// IsSetDesktops returns a boolean if a field has been set.
func (o *ListVdi200Response) IsSetDesktops() bool {
	if o != nil && !IsNil(o.Desktops) {
		return true
	}

	return false
}

// SetDesktops gets a reference to the given []ListVdi200ResponseAllOfDesktopsInner and assigns it to the Desktops field.
func (o *ListVdi200Response) SetDesktops(v []ListVdi200ResponseAllOfDesktopsInner) {
	o.Desktops = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListVdi200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListVdi200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListVdi200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListVdi200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVdi200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Desktops) {
		toSerialize["desktops"] = o.Desktops
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListVdi200Response struct {
	value *ListVdi200Response
	isSet bool
}

func (v NullableListVdi200Response) Get() *ListVdi200Response {
	return v.value
}

func (v *NullableListVdi200Response) Set(val *ListVdi200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListVdi200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListVdi200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVdi200Response(val *ListVdi200Response) *NullableListVdi200Response {
	return &NullableListVdi200Response{value: val, isSet: true}
}

func (v NullableListVdi200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVdi200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


