/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetPowerSchedules200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPowerSchedules200Response{}

// GetPowerSchedules200Response struct for GetPowerSchedules200Response
type GetPowerSchedules200Response struct {
	Instances []GetPowerSchedules200ResponseAllOfInstancesInner `json:"instances,omitempty"`
	Servers []GetPowerSchedules200ResponseAllOfInstancesInner `json:"servers,omitempty"`
	Schedule *ListPowerSchedules200ResponseAllOfSchedulesInner `json:"schedule,omitempty"`
}

// NewGetPowerSchedules200Response instantiates a new GetPowerSchedules200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPowerSchedules200Response() *GetPowerSchedules200Response {
	this := GetPowerSchedules200Response{}
	return &this
}

// NewGetPowerSchedules200ResponseWithDefaults instantiates a new GetPowerSchedules200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPowerSchedules200ResponseWithDefaults() *GetPowerSchedules200Response {
	this := GetPowerSchedules200Response{}
	return &this
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *GetPowerSchedules200Response) GetInstances() []GetPowerSchedules200ResponseAllOfInstancesInner {
	if o == nil || IsNil(o.Instances) {
		var ret []GetPowerSchedules200ResponseAllOfInstancesInner
		return ret
	}
	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPowerSchedules200Response) GetInstancesOk() ([]GetPowerSchedules200ResponseAllOfInstancesInner, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// IsSetInstances returns a boolean if a field has been set.
func (o *GetPowerSchedules200Response) IsSetInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []GetPowerSchedules200ResponseAllOfInstancesInner and assigns it to the Instances field.
func (o *GetPowerSchedules200Response) SetInstances(v []GetPowerSchedules200ResponseAllOfInstancesInner) {
	o.Instances = v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *GetPowerSchedules200Response) GetServers() []GetPowerSchedules200ResponseAllOfInstancesInner {
	if o == nil || IsNil(o.Servers) {
		var ret []GetPowerSchedules200ResponseAllOfInstancesInner
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPowerSchedules200Response) GetServersOk() ([]GetPowerSchedules200ResponseAllOfInstancesInner, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// IsSetServers returns a boolean if a field has been set.
func (o *GetPowerSchedules200Response) IsSetServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []GetPowerSchedules200ResponseAllOfInstancesInner and assigns it to the Servers field.
func (o *GetPowerSchedules200Response) SetServers(v []GetPowerSchedules200ResponseAllOfInstancesInner) {
	o.Servers = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *GetPowerSchedules200Response) GetSchedule() ListPowerSchedules200ResponseAllOfSchedulesInner {
	if o == nil || IsNil(o.Schedule) {
		var ret ListPowerSchedules200ResponseAllOfSchedulesInner
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPowerSchedules200Response) GetScheduleOk() (*ListPowerSchedules200ResponseAllOfSchedulesInner, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// IsSetSchedule returns a boolean if a field has been set.
func (o *GetPowerSchedules200Response) IsSetSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given ListPowerSchedules200ResponseAllOfSchedulesInner and assigns it to the Schedule field.
func (o *GetPowerSchedules200Response) SetSchedule(v ListPowerSchedules200ResponseAllOfSchedulesInner) {
	o.Schedule = &v
}

func (o GetPowerSchedules200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPowerSchedules200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	return toSerialize, nil
}

type NullableGetPowerSchedules200Response struct {
	value *GetPowerSchedules200Response
	isSet bool
}

func (v NullableGetPowerSchedules200Response) Get() *GetPowerSchedules200Response {
	return v.value
}

func (v *NullableGetPowerSchedules200Response) Set(val *GetPowerSchedules200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPowerSchedules200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPowerSchedules200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPowerSchedules200Response(val *GetPowerSchedules200Response) *NullableGetPowerSchedules200Response {
	return &NullableGetPowerSchedules200Response{value: val, isSet: true}
}

func (v NullableGetPowerSchedules200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPowerSchedules200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


