/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListVdi200ResponseAllOfDesktopsInnerAllocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVdi200ResponseAllOfDesktopsInnerAllocation{}

// ListVdi200ResponseAllOfDesktopsInnerAllocation struct for ListVdi200ResponseAllOfDesktopsInnerAllocation
type ListVdi200ResponseAllOfDesktopsInnerAllocation struct {
	Id *int64 `json:"id,omitempty"`
	PoolId *int64 `json:"poolId,omitempty"`
	Pool *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"pool,omitempty"`
	Instance *ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance `json:"instance,omitempty"`
	User *ListVDIPools200ResponseAllOfVdiPoolsInnerOwner `json:"user,omitempty"`
	LocalUserCreated *bool `json:"localUserCreated,omitempty"`
	Persistent *bool `json:"persistent,omitempty"`
	Recyclable *bool `json:"recyclable,omitempty"`
	Status *string `json:"status,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LastReserved *time.Time `json:"lastReserved,omitempty"`
	ReleaseDate *time.Time `json:"releaseDate,omitempty"`
}

// NewListVdi200ResponseAllOfDesktopsInnerAllocation instantiates a new ListVdi200ResponseAllOfDesktopsInnerAllocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVdi200ResponseAllOfDesktopsInnerAllocation() *ListVdi200ResponseAllOfDesktopsInnerAllocation {
	this := ListVdi200ResponseAllOfDesktopsInnerAllocation{}
	return &this
}

// NewListVdi200ResponseAllOfDesktopsInnerAllocationWithDefaults instantiates a new ListVdi200ResponseAllOfDesktopsInnerAllocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVdi200ResponseAllOfDesktopsInnerAllocationWithDefaults() *ListVdi200ResponseAllOfDesktopsInnerAllocation {
	this := ListVdi200ResponseAllOfDesktopsInnerAllocation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetId(v int64) {
	o.Id = &v
}

// GetPoolId returns the PoolId field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPoolId() int64 {
	if o == nil || IsNil(o.PoolId) {
		var ret int64
		return ret
	}
	return *o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPoolIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PoolId) {
		return nil, false
	}
	return o.PoolId, true
}

// IsSetPoolId returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetPoolId() bool {
	if o != nil && !IsNil(o.PoolId) {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given int64 and assigns it to the PoolId field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetPoolId(v int64) {
	o.PoolId = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPool() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Pool) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPoolOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// IsSetPool returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Pool field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetPool(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Pool = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetInstance() ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance {
	if o == nil || IsNil(o.Instance) {
		var ret ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetInstanceOk() (*ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance and assigns it to the Instance field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetInstance(v ListVDIAllocations200ResponseAllOfVdiAllocationsInnerInstance) {
	o.Instance = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetUser() ListVDIPools200ResponseAllOfVdiPoolsInnerOwner {
	if o == nil || IsNil(o.User) {
		var ret ListVDIPools200ResponseAllOfVdiPoolsInnerOwner
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetUserOk() (*ListVDIPools200ResponseAllOfVdiPoolsInnerOwner, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given ListVDIPools200ResponseAllOfVdiPoolsInnerOwner and assigns it to the User field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetUser(v ListVDIPools200ResponseAllOfVdiPoolsInnerOwner) {
	o.User = &v
}

// GetLocalUserCreated returns the LocalUserCreated field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLocalUserCreated() bool {
	if o == nil || IsNil(o.LocalUserCreated) {
		var ret bool
		return ret
	}
	return *o.LocalUserCreated
}

// GetLocalUserCreatedOk returns a tuple with the LocalUserCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLocalUserCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalUserCreated) {
		return nil, false
	}
	return o.LocalUserCreated, true
}

// IsSetLocalUserCreated returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetLocalUserCreated() bool {
	if o != nil && !IsNil(o.LocalUserCreated) {
		return true
	}

	return false
}

// SetLocalUserCreated gets a reference to the given bool and assigns it to the LocalUserCreated field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetLocalUserCreated(v bool) {
	o.LocalUserCreated = &v
}

// GetPersistent returns the Persistent field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPersistent() bool {
	if o == nil || IsNil(o.Persistent) {
		var ret bool
		return ret
	}
	return *o.Persistent
}

// GetPersistentOk returns a tuple with the Persistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetPersistentOk() (*bool, bool) {
	if o == nil || IsNil(o.Persistent) {
		return nil, false
	}
	return o.Persistent, true
}

// IsSetPersistent returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetPersistent() bool {
	if o != nil && !IsNil(o.Persistent) {
		return true
	}

	return false
}

// SetPersistent gets a reference to the given bool and assigns it to the Persistent field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetPersistent(v bool) {
	o.Persistent = &v
}

// GetRecyclable returns the Recyclable field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetRecyclable() bool {
	if o == nil || IsNil(o.Recyclable) {
		var ret bool
		return ret
	}
	return *o.Recyclable
}

// GetRecyclableOk returns a tuple with the Recyclable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetRecyclableOk() (*bool, bool) {
	if o == nil || IsNil(o.Recyclable) {
		return nil, false
	}
	return o.Recyclable, true
}

// IsSetRecyclable returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetRecyclable() bool {
	if o != nil && !IsNil(o.Recyclable) {
		return true
	}

	return false
}

// SetRecyclable gets a reference to the given bool and assigns it to the Recyclable field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetRecyclable(v bool) {
	o.Recyclable = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetStatus(v string) {
	o.Status = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastReserved returns the LastReserved field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLastReserved() time.Time {
	if o == nil || IsNil(o.LastReserved) {
		var ret time.Time
		return ret
	}
	return *o.LastReserved
}

// GetLastReservedOk returns a tuple with the LastReserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetLastReservedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastReserved) {
		return nil, false
	}
	return o.LastReserved, true
}

// IsSetLastReserved returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetLastReserved() bool {
	if o != nil && !IsNil(o.LastReserved) {
		return true
	}

	return false
}

// SetLastReserved gets a reference to the given time.Time and assigns it to the LastReserved field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetLastReserved(v time.Time) {
	o.LastReserved = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetReleaseDate() time.Time {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret time.Time
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) GetReleaseDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// IsSetReleaseDate returns a boolean if a field has been set.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) IsSetReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given time.Time and assigns it to the ReleaseDate field.
func (o *ListVdi200ResponseAllOfDesktopsInnerAllocation) SetReleaseDate(v time.Time) {
	o.ReleaseDate = &v
}

func (o ListVdi200ResponseAllOfDesktopsInnerAllocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVdi200ResponseAllOfDesktopsInnerAllocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PoolId) {
		toSerialize["poolId"] = o.PoolId
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.LocalUserCreated) {
		toSerialize["localUserCreated"] = o.LocalUserCreated
	}
	if !IsNil(o.Persistent) {
		toSerialize["persistent"] = o.Persistent
	}
	if !IsNil(o.Recyclable) {
		toSerialize["recyclable"] = o.Recyclable
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastReserved) {
		toSerialize["lastReserved"] = o.LastReserved
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["releaseDate"] = o.ReleaseDate
	}
	return toSerialize, nil
}

type NullableListVdi200ResponseAllOfDesktopsInnerAllocation struct {
	value *ListVdi200ResponseAllOfDesktopsInnerAllocation
	isSet bool
}

func (v NullableListVdi200ResponseAllOfDesktopsInnerAllocation) Get() *ListVdi200ResponseAllOfDesktopsInnerAllocation {
	return v.value
}

func (v *NullableListVdi200ResponseAllOfDesktopsInnerAllocation) Set(val *ListVdi200ResponseAllOfDesktopsInnerAllocation) {
	v.value = val
	v.isSet = true
}

func (v NullableListVdi200ResponseAllOfDesktopsInnerAllocation) IsSet() bool {
	return v.isSet
}

func (v *NullableListVdi200ResponseAllOfDesktopsInnerAllocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVdi200ResponseAllOfDesktopsInnerAllocation(val *ListVdi200ResponseAllOfDesktopsInnerAllocation) *NullableListVdi200ResponseAllOfDesktopsInnerAllocation {
	return &NullableListVdi200ResponseAllOfDesktopsInnerAllocation{value: val, isSet: true}
}

func (v NullableListVdi200ResponseAllOfDesktopsInnerAllocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVdi200ResponseAllOfDesktopsInnerAllocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


