/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetInstanceStats200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceStats200Response{}

// GetInstanceStats200Response Contains aggregated statistics for all the scoped instances.
type GetInstanceStats200Response struct {
	InstanceStats *GetInstanceStats200ResponseInstanceStats `json:"instanceStats,omitempty"`
	// Array of Cloud IDs that are included in the stats. By default all the clouds the user has access to are returned.
	ZoneIds []int64 `json:"zoneIds,omitempty"`
}

// NewGetInstanceStats200Response instantiates a new GetInstanceStats200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceStats200Response() *GetInstanceStats200Response {
	this := GetInstanceStats200Response{}
	return &this
}

// NewGetInstanceStats200ResponseWithDefaults instantiates a new GetInstanceStats200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceStats200ResponseWithDefaults() *GetInstanceStats200Response {
	this := GetInstanceStats200Response{}
	return &this
}

// GetInstanceStats returns the InstanceStats field value if set, zero value otherwise.
func (o *GetInstanceStats200Response) GetInstanceStats() GetInstanceStats200ResponseInstanceStats {
	if o == nil || IsNil(o.InstanceStats) {
		var ret GetInstanceStats200ResponseInstanceStats
		return ret
	}
	return *o.InstanceStats
}

// GetInstanceStatsOk returns a tuple with the InstanceStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200Response) GetInstanceStatsOk() (*GetInstanceStats200ResponseInstanceStats, bool) {
	if o == nil || IsNil(o.InstanceStats) {
		return nil, false
	}
	return o.InstanceStats, true
}

// IsSetInstanceStats returns a boolean if a field has been set.
func (o *GetInstanceStats200Response) IsSetInstanceStats() bool {
	if o != nil && !IsNil(o.InstanceStats) {
		return true
	}

	return false
}

// SetInstanceStats gets a reference to the given GetInstanceStats200ResponseInstanceStats and assigns it to the InstanceStats field.
func (o *GetInstanceStats200Response) SetInstanceStats(v GetInstanceStats200ResponseInstanceStats) {
	o.InstanceStats = &v
}

// GetZoneIds returns the ZoneIds field value if set, zero value otherwise.
func (o *GetInstanceStats200Response) GetZoneIds() []int64 {
	if o == nil || IsNil(o.ZoneIds) {
		var ret []int64
		return ret
	}
	return o.ZoneIds
}

// GetZoneIdsOk returns a tuple with the ZoneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200Response) GetZoneIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ZoneIds) {
		return nil, false
	}
	return o.ZoneIds, true
}

// IsSetZoneIds returns a boolean if a field has been set.
func (o *GetInstanceStats200Response) IsSetZoneIds() bool {
	if o != nil && !IsNil(o.ZoneIds) {
		return true
	}

	return false
}

// SetZoneIds gets a reference to the given []int64 and assigns it to the ZoneIds field.
func (o *GetInstanceStats200Response) SetZoneIds(v []int64) {
	o.ZoneIds = v
}

func (o GetInstanceStats200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceStats200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceStats) {
		toSerialize["instanceStats"] = o.InstanceStats
	}
	if !IsNil(o.ZoneIds) {
		toSerialize["zoneIds"] = o.ZoneIds
	}
	return toSerialize, nil
}

type NullableGetInstanceStats200Response struct {
	value *GetInstanceStats200Response
	isSet bool
}

func (v NullableGetInstanceStats200Response) Get() *GetInstanceStats200Response {
	return v.value
}

func (v *NullableGetInstanceStats200Response) Set(val *GetInstanceStats200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceStats200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceStats200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceStats200Response(val *GetInstanceStats200Response) *NullableGetInstanceStats200Response {
	return &NullableGetInstanceStats200Response{value: val, isSet: true}
}

func (v NullableGetInstanceStats200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceStats200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


