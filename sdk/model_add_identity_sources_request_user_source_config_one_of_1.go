/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIdentitySourcesRequestUserSourceConfigOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIdentitySourcesRequestUserSourceConfigOneOf1{}

// AddIdentitySourcesRequestUserSourceConfigOneOf1 JumpCloud Configuration
type AddIdentitySourcesRequestUserSourceConfigOneOf1 struct {
	// Organization ID
	OrganizationId *bool `json:"organizationId,omitempty"`
	// Binding Username
	BindingUsername *string `json:"bindingUsername,omitempty"`
	// Binding Password
	BindingPassword *string `json:"bindingPassword,omitempty"`
	// Required group name
	RequiredRole *string `json:"requiredRole,omitempty"`
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf1 instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIdentitySourcesRequestUserSourceConfigOneOf1() *AddIdentitySourcesRequestUserSourceConfigOneOf1 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf1{}
	var organizationId bool = false
	this.OrganizationId = &organizationId
	return &this
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf1WithDefaults instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIdentitySourcesRequestUserSourceConfigOneOf1WithDefaults() *AddIdentitySourcesRequestUserSourceConfigOneOf1 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf1{}
	var organizationId bool = false
	this.OrganizationId = &organizationId
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetOrganizationId() bool {
	if o == nil || IsNil(o.OrganizationId) {
		var ret bool
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetOrganizationIdOk() (*bool, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// IsSetOrganizationId returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) IsSetOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given bool and assigns it to the OrganizationId field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) SetOrganizationId(v bool) {
	o.OrganizationId = &v
}

// GetBindingUsername returns the BindingUsername field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetBindingUsername() string {
	if o == nil || IsNil(o.BindingUsername) {
		var ret string
		return ret
	}
	return *o.BindingUsername
}

// GetBindingUsernameOk returns a tuple with the BindingUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetBindingUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.BindingUsername) {
		return nil, false
	}
	return o.BindingUsername, true
}

// IsSetBindingUsername returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) IsSetBindingUsername() bool {
	if o != nil && !IsNil(o.BindingUsername) {
		return true
	}

	return false
}

// SetBindingUsername gets a reference to the given string and assigns it to the BindingUsername field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) SetBindingUsername(v string) {
	o.BindingUsername = &v
}

// GetBindingPassword returns the BindingPassword field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetBindingPassword() string {
	if o == nil || IsNil(o.BindingPassword) {
		var ret string
		return ret
	}
	return *o.BindingPassword
}

// GetBindingPasswordOk returns a tuple with the BindingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetBindingPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPassword) {
		return nil, false
	}
	return o.BindingPassword, true
}

// IsSetBindingPassword returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) IsSetBindingPassword() bool {
	if o != nil && !IsNil(o.BindingPassword) {
		return true
	}

	return false
}

// SetBindingPassword gets a reference to the given string and assigns it to the BindingPassword field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) SetBindingPassword(v string) {
	o.BindingPassword = &v
}

// GetRequiredRole returns the RequiredRole field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetRequiredRole() string {
	if o == nil || IsNil(o.RequiredRole) {
		var ret string
		return ret
	}
	return *o.RequiredRole
}

// GetRequiredRoleOk returns a tuple with the RequiredRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) GetRequiredRoleOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredRole) {
		return nil, false
	}
	return o.RequiredRole, true
}

// IsSetRequiredRole returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) IsSetRequiredRole() bool {
	if o != nil && !IsNil(o.RequiredRole) {
		return true
	}

	return false
}

// SetRequiredRole gets a reference to the given string and assigns it to the RequiredRole field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf1) SetRequiredRole(v string) {
	o.RequiredRole = &v
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.BindingUsername) {
		toSerialize["bindingUsername"] = o.BindingUsername
	}
	if !IsNil(o.BindingPassword) {
		toSerialize["bindingPassword"] = o.BindingPassword
	}
	if !IsNil(o.RequiredRole) {
		toSerialize["requiredRole"] = o.RequiredRole
	}
	return toSerialize, nil
}

type NullableAddIdentitySourcesRequestUserSourceConfigOneOf1 struct {
	value *AddIdentitySourcesRequestUserSourceConfigOneOf1
	isSet bool
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) Get() *AddIdentitySourcesRequestUserSourceConfigOneOf1 {
	return v.value
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) Set(val *AddIdentitySourcesRequestUserSourceConfigOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentitySourcesRequestUserSourceConfigOneOf1(val *AddIdentitySourcesRequestUserSourceConfigOneOf1) *NullableAddIdentitySourcesRequestUserSourceConfigOneOf1 {
	return &NullableAddIdentitySourcesRequestUserSourceConfigOneOf1{value: val, isSet: true}
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


