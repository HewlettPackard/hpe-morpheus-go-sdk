/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions{}

// ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions struct for ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions
type ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions struct {
	LocalScriptGitRef *string `json:"localScriptGitRef,omitempty"`
	Password *string `json:"password,omitempty"`
	PasswordHash *string `json:"passwordHash,omitempty"`
	Host *string `json:"host,omitempty"`
	LocalScriptGitId *string `json:"localScriptGitId,omitempty"`
	SshKey *string `json:"sshKey,omitempty"`
	Port *string `json:"port,omitempty"`
	Username *string `json:"username,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions

// NewListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions() *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions{}
	return &this
}

// NewListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptionsWithDefaults instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptionsWithDefaults() *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions{}
	return &this
}

// GetLocalScriptGitRef returns the LocalScriptGitRef field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetLocalScriptGitRef() string {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitRef
}

// GetLocalScriptGitRefOk returns a tuple with the LocalScriptGitRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetLocalScriptGitRefOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitRef) {
		return nil, false
	}
	return o.LocalScriptGitRef, true
}

// IsSetLocalScriptGitRef returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetLocalScriptGitRef() bool {
	if o != nil && !IsNil(o.LocalScriptGitRef) {
		return true
	}

	return false
}

// SetLocalScriptGitRef gets a reference to the given string and assigns it to the LocalScriptGitRef field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetLocalScriptGitRef(v string) {
	o.LocalScriptGitRef = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// IsSetPassword returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordHash returns the PasswordHash field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPasswordHash() string {
	if o == nil || IsNil(o.PasswordHash) {
		var ret string
		return ret
	}
	return *o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHash) {
		return nil, false
	}
	return o.PasswordHash, true
}

// IsSetPasswordHash returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetPasswordHash() bool {
	if o != nil && !IsNil(o.PasswordHash) {
		return true
	}

	return false
}

// SetPasswordHash gets a reference to the given string and assigns it to the PasswordHash field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetPasswordHash(v string) {
	o.PasswordHash = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// IsSetHost returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetHost(v string) {
	o.Host = &v
}

// GetLocalScriptGitId returns the LocalScriptGitId field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetLocalScriptGitId() string {
	if o == nil || IsNil(o.LocalScriptGitId) {
		var ret string
		return ret
	}
	return *o.LocalScriptGitId
}

// GetLocalScriptGitIdOk returns a tuple with the LocalScriptGitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetLocalScriptGitIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalScriptGitId) {
		return nil, false
	}
	return o.LocalScriptGitId, true
}

// IsSetLocalScriptGitId returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetLocalScriptGitId() bool {
	if o != nil && !IsNil(o.LocalScriptGitId) {
		return true
	}

	return false
}

// SetLocalScriptGitId gets a reference to the given string and assigns it to the LocalScriptGitId field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetLocalScriptGitId(v string) {
	o.LocalScriptGitId = &v
}

// GetSshKey returns the SshKey field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetSshKey() string {
	if o == nil || IsNil(o.SshKey) {
		var ret string
		return ret
	}
	return *o.SshKey
}

// GetSshKeyOk returns a tuple with the SshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetSshKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshKey) {
		return nil, false
	}
	return o.SshKey, true
}

// IsSetSshKey returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}

// SetSshKey gets a reference to the given string and assigns it to the SshKey field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetSshKey(v string) {
	o.SshKey = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// IsSetPort returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetPort(v string) {
	o.Port = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) SetUsername(v string) {
	o.Username = &v
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocalScriptGitRef) {
		toSerialize["localScriptGitRef"] = o.LocalScriptGitRef
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PasswordHash) {
		toSerialize["passwordHash"] = o.PasswordHash
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.LocalScriptGitId) {
		toSerialize["localScriptGitId"] = o.LocalScriptGitId
	}
	if !IsNil(o.SshKey) {
		toSerialize["sshKey"] = o.SshKey
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) UnmarshalJSON(data []byte) (err error) {
	varListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions := _ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions{}

	err = json.Unmarshal(data, &varListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions)

	if err != nil {
		return err
	}

	*o = ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions(varListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "localScriptGitRef")
		delete(additionalProperties, "password")
		delete(additionalProperties, "passwordHash")
		delete(additionalProperties, "host")
		delete(additionalProperties, "localScriptGitId")
		delete(additionalProperties, "sshKey")
		delete(additionalProperties, "port")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions struct {
	value *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions
	isSet bool
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) Get() *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions {
	return v.value
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) Set(val *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions(val *ListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) *NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions {
	return &NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions{value: val, isSet: true}
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf4TaskOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


