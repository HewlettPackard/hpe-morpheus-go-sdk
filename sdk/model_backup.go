/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the Backup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Backup{}

// Backup struct for Backup
type Backup struct {
	// Backup ID
	Id *int64 `json:"id,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Source Type (instance, server, storage)
	LocationType *string `json:"locationType,omitempty"`
	Instance *ListBackups200ResponseAllOfBackupsInnerInstance `json:"instance,omitempty"`
	ContainerId *int64 `json:"containerId,omitempty"`
	Job *ListBackups200ResponseAllOfBackupsInnerJob `json:"job,omitempty"`
	Schedule *ListBackups200ResponseAllOfBackupsInnerSchedule `json:"schedule,omitempty"`
	RetentionCount *int64 `json:"retentionCount,omitempty"`
	BackupType *ListBackups200ResponseAllOfBackupsInnerBackupType `json:"backupType,omitempty"`
	StorageProvider *ListBackups200ResponseAllOfBackupsInnerStorageProvider `json:"storageProvider,omitempty"`
	BackupProvider *ListBackups200ResponseAllOfBackupsInnerBackupProvider `json:"backupProvider,omitempty"`
	BackupRespository *ListBackups200ResponseAllOfBackupsInnerBackupRespository `json:"backupRespository,omitempty"`
	// Cron Expression
	CronExpression *string `json:"cronExpression,omitempty"`
	// Next Fire
	NextFire *time.Time `json:"nextFire,omitempty"`
	// Last Status
	LastStatus *string `json:"lastStatus,omitempty"`
	LastResult *ListBackups200ResponseAllOfBackupsInnerLastResult `json:"lastResult,omitempty"`
	Stats *ListBackups200ResponseAllOfBackupsInnerStats `json:"stats,omitempty"`
	// Enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Date Created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Last Updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewBackup instantiates a new Backup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackup() *Backup {
	this := Backup{}
	return &this
}

// NewBackupWithDefaults instantiates a new Backup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupWithDefaults() *Backup {
	this := Backup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Backup) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *Backup) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Backup) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Backup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *Backup) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Backup) SetName(v string) {
	o.Name = &v
}

// GetLocationType returns the LocationType field value if set, zero value otherwise.
func (o *Backup) GetLocationType() string {
	if o == nil || IsNil(o.LocationType) {
		var ret string
		return ret
	}
	return *o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetLocationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationType) {
		return nil, false
	}
	return o.LocationType, true
}

// IsSetLocationType returns a boolean if a field has been set.
func (o *Backup) IsSetLocationType() bool {
	if o != nil && !IsNil(o.LocationType) {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given string and assigns it to the LocationType field.
func (o *Backup) SetLocationType(v string) {
	o.LocationType = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *Backup) GetInstance() ListBackups200ResponseAllOfBackupsInnerInstance {
	if o == nil || IsNil(o.Instance) {
		var ret ListBackups200ResponseAllOfBackupsInnerInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetInstanceOk() (*ListBackups200ResponseAllOfBackupsInnerInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *Backup) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given ListBackups200ResponseAllOfBackupsInnerInstance and assigns it to the Instance field.
func (o *Backup) SetInstance(v ListBackups200ResponseAllOfBackupsInnerInstance) {
	o.Instance = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *Backup) GetContainerId() int64 {
	if o == nil || IsNil(o.ContainerId) {
		var ret int64
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetContainerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ContainerId) {
		return nil, false
	}
	return o.ContainerId, true
}

// IsSetContainerId returns a boolean if a field has been set.
func (o *Backup) IsSetContainerId() bool {
	if o != nil && !IsNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given int64 and assigns it to the ContainerId field.
func (o *Backup) SetContainerId(v int64) {
	o.ContainerId = &v
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *Backup) GetJob() ListBackups200ResponseAllOfBackupsInnerJob {
	if o == nil || IsNil(o.Job) {
		var ret ListBackups200ResponseAllOfBackupsInnerJob
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetJobOk() (*ListBackups200ResponseAllOfBackupsInnerJob, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// IsSetJob returns a boolean if a field has been set.
func (o *Backup) IsSetJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given ListBackups200ResponseAllOfBackupsInnerJob and assigns it to the Job field.
func (o *Backup) SetJob(v ListBackups200ResponseAllOfBackupsInnerJob) {
	o.Job = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *Backup) GetSchedule() ListBackups200ResponseAllOfBackupsInnerSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret ListBackups200ResponseAllOfBackupsInnerSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetScheduleOk() (*ListBackups200ResponseAllOfBackupsInnerSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// IsSetSchedule returns a boolean if a field has been set.
func (o *Backup) IsSetSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given ListBackups200ResponseAllOfBackupsInnerSchedule and assigns it to the Schedule field.
func (o *Backup) SetSchedule(v ListBackups200ResponseAllOfBackupsInnerSchedule) {
	o.Schedule = &v
}

// GetRetentionCount returns the RetentionCount field value if set, zero value otherwise.
func (o *Backup) GetRetentionCount() int64 {
	if o == nil || IsNil(o.RetentionCount) {
		var ret int64
		return ret
	}
	return *o.RetentionCount
}

// GetRetentionCountOk returns a tuple with the RetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetRetentionCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RetentionCount) {
		return nil, false
	}
	return o.RetentionCount, true
}

// IsSetRetentionCount returns a boolean if a field has been set.
func (o *Backup) IsSetRetentionCount() bool {
	if o != nil && !IsNil(o.RetentionCount) {
		return true
	}

	return false
}

// SetRetentionCount gets a reference to the given int64 and assigns it to the RetentionCount field.
func (o *Backup) SetRetentionCount(v int64) {
	o.RetentionCount = &v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise.
func (o *Backup) GetBackupType() ListBackups200ResponseAllOfBackupsInnerBackupType {
	if o == nil || IsNil(o.BackupType) {
		var ret ListBackups200ResponseAllOfBackupsInnerBackupType
		return ret
	}
	return *o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetBackupTypeOk() (*ListBackups200ResponseAllOfBackupsInnerBackupType, bool) {
	if o == nil || IsNil(o.BackupType) {
		return nil, false
	}
	return o.BackupType, true
}

// IsSetBackupType returns a boolean if a field has been set.
func (o *Backup) IsSetBackupType() bool {
	if o != nil && !IsNil(o.BackupType) {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given ListBackups200ResponseAllOfBackupsInnerBackupType and assigns it to the BackupType field.
func (o *Backup) SetBackupType(v ListBackups200ResponseAllOfBackupsInnerBackupType) {
	o.BackupType = &v
}

// GetStorageProvider returns the StorageProvider field value if set, zero value otherwise.
func (o *Backup) GetStorageProvider() ListBackups200ResponseAllOfBackupsInnerStorageProvider {
	if o == nil || IsNil(o.StorageProvider) {
		var ret ListBackups200ResponseAllOfBackupsInnerStorageProvider
		return ret
	}
	return *o.StorageProvider
}

// GetStorageProviderOk returns a tuple with the StorageProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetStorageProviderOk() (*ListBackups200ResponseAllOfBackupsInnerStorageProvider, bool) {
	if o == nil || IsNil(o.StorageProvider) {
		return nil, false
	}
	return o.StorageProvider, true
}

// IsSetStorageProvider returns a boolean if a field has been set.
func (o *Backup) IsSetStorageProvider() bool {
	if o != nil && !IsNil(o.StorageProvider) {
		return true
	}

	return false
}

// SetStorageProvider gets a reference to the given ListBackups200ResponseAllOfBackupsInnerStorageProvider and assigns it to the StorageProvider field.
func (o *Backup) SetStorageProvider(v ListBackups200ResponseAllOfBackupsInnerStorageProvider) {
	o.StorageProvider = &v
}

// GetBackupProvider returns the BackupProvider field value if set, zero value otherwise.
func (o *Backup) GetBackupProvider() ListBackups200ResponseAllOfBackupsInnerBackupProvider {
	if o == nil || IsNil(o.BackupProvider) {
		var ret ListBackups200ResponseAllOfBackupsInnerBackupProvider
		return ret
	}
	return *o.BackupProvider
}

// GetBackupProviderOk returns a tuple with the BackupProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetBackupProviderOk() (*ListBackups200ResponseAllOfBackupsInnerBackupProvider, bool) {
	if o == nil || IsNil(o.BackupProvider) {
		return nil, false
	}
	return o.BackupProvider, true
}

// IsSetBackupProvider returns a boolean if a field has been set.
func (o *Backup) IsSetBackupProvider() bool {
	if o != nil && !IsNil(o.BackupProvider) {
		return true
	}

	return false
}

// SetBackupProvider gets a reference to the given ListBackups200ResponseAllOfBackupsInnerBackupProvider and assigns it to the BackupProvider field.
func (o *Backup) SetBackupProvider(v ListBackups200ResponseAllOfBackupsInnerBackupProvider) {
	o.BackupProvider = &v
}

// GetBackupRespository returns the BackupRespository field value if set, zero value otherwise.
func (o *Backup) GetBackupRespository() ListBackups200ResponseAllOfBackupsInnerBackupRespository {
	if o == nil || IsNil(o.BackupRespository) {
		var ret ListBackups200ResponseAllOfBackupsInnerBackupRespository
		return ret
	}
	return *o.BackupRespository
}

// GetBackupRespositoryOk returns a tuple with the BackupRespository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetBackupRespositoryOk() (*ListBackups200ResponseAllOfBackupsInnerBackupRespository, bool) {
	if o == nil || IsNil(o.BackupRespository) {
		return nil, false
	}
	return o.BackupRespository, true
}

// IsSetBackupRespository returns a boolean if a field has been set.
func (o *Backup) IsSetBackupRespository() bool {
	if o != nil && !IsNil(o.BackupRespository) {
		return true
	}

	return false
}

// SetBackupRespository gets a reference to the given ListBackups200ResponseAllOfBackupsInnerBackupRespository and assigns it to the BackupRespository field.
func (o *Backup) SetBackupRespository(v ListBackups200ResponseAllOfBackupsInnerBackupRespository) {
	o.BackupRespository = &v
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *Backup) GetCronExpression() string {
	if o == nil || IsNil(o.CronExpression) {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetCronExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpression) {
		return nil, false
	}
	return o.CronExpression, true
}

// IsSetCronExpression returns a boolean if a field has been set.
func (o *Backup) IsSetCronExpression() bool {
	if o != nil && !IsNil(o.CronExpression) {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *Backup) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetNextFire returns the NextFire field value if set, zero value otherwise.
func (o *Backup) GetNextFire() time.Time {
	if o == nil || IsNil(o.NextFire) {
		var ret time.Time
		return ret
	}
	return *o.NextFire
}

// GetNextFireOk returns a tuple with the NextFire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetNextFireOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextFire) {
		return nil, false
	}
	return o.NextFire, true
}

// IsSetNextFire returns a boolean if a field has been set.
func (o *Backup) IsSetNextFire() bool {
	if o != nil && !IsNil(o.NextFire) {
		return true
	}

	return false
}

// SetNextFire gets a reference to the given time.Time and assigns it to the NextFire field.
func (o *Backup) SetNextFire(v time.Time) {
	o.NextFire = &v
}

// GetLastStatus returns the LastStatus field value if set, zero value otherwise.
func (o *Backup) GetLastStatus() string {
	if o == nil || IsNil(o.LastStatus) {
		var ret string
		return ret
	}
	return *o.LastStatus
}

// GetLastStatusOk returns a tuple with the LastStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetLastStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LastStatus) {
		return nil, false
	}
	return o.LastStatus, true
}

// IsSetLastStatus returns a boolean if a field has been set.
func (o *Backup) IsSetLastStatus() bool {
	if o != nil && !IsNil(o.LastStatus) {
		return true
	}

	return false
}

// SetLastStatus gets a reference to the given string and assigns it to the LastStatus field.
func (o *Backup) SetLastStatus(v string) {
	o.LastStatus = &v
}

// GetLastResult returns the LastResult field value if set, zero value otherwise.
func (o *Backup) GetLastResult() ListBackups200ResponseAllOfBackupsInnerLastResult {
	if o == nil || IsNil(o.LastResult) {
		var ret ListBackups200ResponseAllOfBackupsInnerLastResult
		return ret
	}
	return *o.LastResult
}

// GetLastResultOk returns a tuple with the LastResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetLastResultOk() (*ListBackups200ResponseAllOfBackupsInnerLastResult, bool) {
	if o == nil || IsNil(o.LastResult) {
		return nil, false
	}
	return o.LastResult, true
}

// IsSetLastResult returns a boolean if a field has been set.
func (o *Backup) IsSetLastResult() bool {
	if o != nil && !IsNil(o.LastResult) {
		return true
	}

	return false
}

// SetLastResult gets a reference to the given ListBackups200ResponseAllOfBackupsInnerLastResult and assigns it to the LastResult field.
func (o *Backup) SetLastResult(v ListBackups200ResponseAllOfBackupsInnerLastResult) {
	o.LastResult = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *Backup) GetStats() ListBackups200ResponseAllOfBackupsInnerStats {
	if o == nil || IsNil(o.Stats) {
		var ret ListBackups200ResponseAllOfBackupsInnerStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetStatsOk() (*ListBackups200ResponseAllOfBackupsInnerStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// IsSetStats returns a boolean if a field has been set.
func (o *Backup) IsSetStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given ListBackups200ResponseAllOfBackupsInnerStats and assigns it to the Stats field.
func (o *Backup) SetStats(v ListBackups200ResponseAllOfBackupsInnerStats) {
	o.Stats = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Backup) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *Backup) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Backup) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Backup) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *Backup) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Backup) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Backup) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backup) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *Backup) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Backup) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o Backup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Backup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LocationType) {
		toSerialize["locationType"] = o.LocationType
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.ContainerId) {
		toSerialize["containerId"] = o.ContainerId
	}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.RetentionCount) {
		toSerialize["retentionCount"] = o.RetentionCount
	}
	if !IsNil(o.BackupType) {
		toSerialize["backupType"] = o.BackupType
	}
	if !IsNil(o.StorageProvider) {
		toSerialize["storageProvider"] = o.StorageProvider
	}
	if !IsNil(o.BackupProvider) {
		toSerialize["backupProvider"] = o.BackupProvider
	}
	if !IsNil(o.BackupRespository) {
		toSerialize["backupRespository"] = o.BackupRespository
	}
	if !IsNil(o.CronExpression) {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if !IsNil(o.NextFire) {
		toSerialize["nextFire"] = o.NextFire
	}
	if !IsNil(o.LastStatus) {
		toSerialize["lastStatus"] = o.LastStatus
	}
	if !IsNil(o.LastResult) {
		toSerialize["lastResult"] = o.LastResult
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableBackup struct {
	value *Backup
	isSet bool
}

func (v NullableBackup) Get() *Backup {
	return v.value
}

func (v *NullableBackup) Set(val *Backup) {
	v.value = val
	v.isSet = true
}

func (v NullableBackup) IsSet() bool {
	return v.isSet
}

func (v *NullableBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackup(val *Backup) *NullableBackup {
	return &NullableBackup{value: val, isSet: true}
}

func (v NullableBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


