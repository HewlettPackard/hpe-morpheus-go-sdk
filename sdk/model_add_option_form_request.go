/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddOptionFormRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOptionFormRequest{}

// AddOptionFormRequest struct for AddOptionFormRequest
type AddOptionFormRequest struct {
	OptionTypeForm *AddOptionFormRequestOptionTypeForm `json:"optionTypeForm,omitempty"`
}

// NewAddOptionFormRequest instantiates a new AddOptionFormRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOptionFormRequest() *AddOptionFormRequest {
	this := AddOptionFormRequest{}
	return &this
}

// NewAddOptionFormRequestWithDefaults instantiates a new AddOptionFormRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOptionFormRequestWithDefaults() *AddOptionFormRequest {
	this := AddOptionFormRequest{}
	return &this
}

// GetOptionTypeForm returns the OptionTypeForm field value if set, zero value otherwise.
func (o *AddOptionFormRequest) GetOptionTypeForm() AddOptionFormRequestOptionTypeForm {
	if o == nil || IsNil(o.OptionTypeForm) {
		var ret AddOptionFormRequestOptionTypeForm
		return ret
	}
	return *o.OptionTypeForm
}

// GetOptionTypeFormOk returns a tuple with the OptionTypeForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOptionFormRequest) GetOptionTypeFormOk() (*AddOptionFormRequestOptionTypeForm, bool) {
	if o == nil || IsNil(o.OptionTypeForm) {
		return nil, false
	}
	return o.OptionTypeForm, true
}

// IsSetOptionTypeForm returns a boolean if a field has been set.
func (o *AddOptionFormRequest) IsSetOptionTypeForm() bool {
	if o != nil && !IsNil(o.OptionTypeForm) {
		return true
	}

	return false
}

// SetOptionTypeForm gets a reference to the given AddOptionFormRequestOptionTypeForm and assigns it to the OptionTypeForm field.
func (o *AddOptionFormRequest) SetOptionTypeForm(v AddOptionFormRequestOptionTypeForm) {
	o.OptionTypeForm = &v
}

func (o AddOptionFormRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOptionFormRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OptionTypeForm) {
		toSerialize["optionTypeForm"] = o.OptionTypeForm
	}
	return toSerialize, nil
}

type NullableAddOptionFormRequest struct {
	value *AddOptionFormRequest
	isSet bool
}

func (v NullableAddOptionFormRequest) Get() *AddOptionFormRequest {
	return v.value
}

func (v *NullableAddOptionFormRequest) Set(val *AddOptionFormRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOptionFormRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOptionFormRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOptionFormRequest(val *AddOptionFormRequest) *NullableAddOptionFormRequest {
	return &NullableAddOptionFormRequest{value: val, isSet: true}
}

func (v NullableAddOptionFormRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOptionFormRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


