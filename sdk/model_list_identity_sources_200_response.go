/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIdentitySources200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIdentitySources200Response{}

// ListIdentitySources200Response struct for ListIdentitySources200Response
type ListIdentitySources200Response struct {
	UserSources []ListIdentitySources200ResponseAllOfUserSourcesInner `json:"userSources,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListIdentitySources200Response instantiates a new ListIdentitySources200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIdentitySources200Response() *ListIdentitySources200Response {
	this := ListIdentitySources200Response{}
	return &this
}

// NewListIdentitySources200ResponseWithDefaults instantiates a new ListIdentitySources200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIdentitySources200ResponseWithDefaults() *ListIdentitySources200Response {
	this := ListIdentitySources200Response{}
	return &this
}

// GetUserSources returns the UserSources field value if set, zero value otherwise.
func (o *ListIdentitySources200Response) GetUserSources() []ListIdentitySources200ResponseAllOfUserSourcesInner {
	if o == nil || IsNil(o.UserSources) {
		var ret []ListIdentitySources200ResponseAllOfUserSourcesInner
		return ret
	}
	return o.UserSources
}

// GetUserSourcesOk returns a tuple with the UserSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200Response) GetUserSourcesOk() ([]ListIdentitySources200ResponseAllOfUserSourcesInner, bool) {
	if o == nil || IsNil(o.UserSources) {
		return nil, false
	}
	return o.UserSources, true
}

// IsSetUserSources returns a boolean if a field has been set.
func (o *ListIdentitySources200Response) IsSetUserSources() bool {
	if o != nil && !IsNil(o.UserSources) {
		return true
	}

	return false
}

// SetUserSources gets a reference to the given []ListIdentitySources200ResponseAllOfUserSourcesInner and assigns it to the UserSources field.
func (o *ListIdentitySources200Response) SetUserSources(v []ListIdentitySources200ResponseAllOfUserSourcesInner) {
	o.UserSources = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListIdentitySources200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListIdentitySources200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListIdentitySources200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListIdentitySources200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIdentitySources200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserSources) {
		toSerialize["userSources"] = o.UserSources
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListIdentitySources200Response struct {
	value *ListIdentitySources200Response
	isSet bool
}

func (v NullableListIdentitySources200Response) Get() *ListIdentitySources200Response {
	return v.value
}

func (v *NullableListIdentitySources200Response) Set(val *ListIdentitySources200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListIdentitySources200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListIdentitySources200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIdentitySources200Response(val *ListIdentitySources200Response) *NullableListIdentitySources200Response {
	return &NullableListIdentitySources200Response{value: val, isSet: true}
}

func (v NullableListIdentitySources200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIdentitySources200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


