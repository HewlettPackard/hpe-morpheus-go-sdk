/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ConvertImageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertImageRequest{}

// ConvertImageRequest struct for ConvertImageRequest
type ConvertImageRequest struct {
	Name *string `json:"name,omitempty"`
	Format *string `json:"format,omitempty"`
	StorageProvider *GetAlerts200ResponseAllOfChecksInnerAccount `json:"storageProvider,omitempty"`
}

// NewConvertImageRequest instantiates a new ConvertImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertImageRequest() *ConvertImageRequest {
	this := ConvertImageRequest{}
	return &this
}

// NewConvertImageRequestWithDefaults instantiates a new ConvertImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertImageRequestWithDefaults() *ConvertImageRequest {
	this := ConvertImageRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConvertImageRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertImageRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ConvertImageRequest) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConvertImageRequest) SetName(v string) {
	o.Name = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ConvertImageRequest) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertImageRequest) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// IsSetFormat returns a boolean if a field has been set.
func (o *ConvertImageRequest) IsSetFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ConvertImageRequest) SetFormat(v string) {
	o.Format = &v
}

// GetStorageProvider returns the StorageProvider field value if set, zero value otherwise.
func (o *ConvertImageRequest) GetStorageProvider() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.StorageProvider) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.StorageProvider
}

// GetStorageProviderOk returns a tuple with the StorageProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertImageRequest) GetStorageProviderOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.StorageProvider) {
		return nil, false
	}
	return o.StorageProvider, true
}

// IsSetStorageProvider returns a boolean if a field has been set.
func (o *ConvertImageRequest) IsSetStorageProvider() bool {
	if o != nil && !IsNil(o.StorageProvider) {
		return true
	}

	return false
}

// SetStorageProvider gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the StorageProvider field.
func (o *ConvertImageRequest) SetStorageProvider(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.StorageProvider = &v
}

func (o ConvertImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertImageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.StorageProvider) {
		toSerialize["storageProvider"] = o.StorageProvider
	}
	return toSerialize, nil
}

type NullableConvertImageRequest struct {
	value *ConvertImageRequest
	isSet bool
}

func (v NullableConvertImageRequest) Get() *ConvertImageRequest {
	return v.value
}

func (v *NullableConvertImageRequest) Set(val *ConvertImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertImageRequest(val *ConvertImageRequest) *NullableConvertImageRequest {
	return &NullableConvertImageRequest{value: val, isSet: true}
}

func (v NullableConvertImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


