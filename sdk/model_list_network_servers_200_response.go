/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListNetworkServers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListNetworkServers200Response{}

// ListNetworkServers200Response struct for ListNetworkServers200Response
type ListNetworkServers200Response struct {
	NetworkServers []ListNetworkServers200ResponseAllOfNetworkServersInner `json:"networkServers,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListNetworkServers200Response instantiates a new ListNetworkServers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListNetworkServers200Response() *ListNetworkServers200Response {
	this := ListNetworkServers200Response{}
	return &this
}

// NewListNetworkServers200ResponseWithDefaults instantiates a new ListNetworkServers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListNetworkServers200ResponseWithDefaults() *ListNetworkServers200Response {
	this := ListNetworkServers200Response{}
	return &this
}

// GetNetworkServers returns the NetworkServers field value if set, zero value otherwise.
func (o *ListNetworkServers200Response) GetNetworkServers() []ListNetworkServers200ResponseAllOfNetworkServersInner {
	if o == nil || IsNil(o.NetworkServers) {
		var ret []ListNetworkServers200ResponseAllOfNetworkServersInner
		return ret
	}
	return o.NetworkServers
}

// GetNetworkServersOk returns a tuple with the NetworkServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNetworkServers200Response) GetNetworkServersOk() ([]ListNetworkServers200ResponseAllOfNetworkServersInner, bool) {
	if o == nil || IsNil(o.NetworkServers) {
		return nil, false
	}
	return o.NetworkServers, true
}

// IsSetNetworkServers returns a boolean if a field has been set.
func (o *ListNetworkServers200Response) IsSetNetworkServers() bool {
	if o != nil && !IsNil(o.NetworkServers) {
		return true
	}

	return false
}

// SetNetworkServers gets a reference to the given []ListNetworkServers200ResponseAllOfNetworkServersInner and assigns it to the NetworkServers field.
func (o *ListNetworkServers200Response) SetNetworkServers(v []ListNetworkServers200ResponseAllOfNetworkServersInner) {
	o.NetworkServers = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListNetworkServers200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNetworkServers200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListNetworkServers200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListNetworkServers200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListNetworkServers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListNetworkServers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkServers) {
		toSerialize["networkServers"] = o.NetworkServers
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListNetworkServers200Response struct {
	value *ListNetworkServers200Response
	isSet bool
}

func (v NullableListNetworkServers200Response) Get() *ListNetworkServers200Response {
	return v.value
}

func (v *NullableListNetworkServers200Response) Set(val *ListNetworkServers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListNetworkServers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListNetworkServers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNetworkServers200Response(val *ListNetworkServers200Response) *NullableListNetworkServers200Response {
	return &NullableListNetworkServers200Response{value: val, isSet: true}
}

func (v NullableListNetworkServers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNetworkServers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


