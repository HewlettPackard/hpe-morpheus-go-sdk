/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddOptionListRequestOptionTypeListConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOptionListRequestOptionTypeListConfig{}

// AddOptionListRequestOptionTypeListConfig Array of source headers to use when requesting data
type AddOptionListRequestOptionTypeListConfig struct {
	SourceHeaders []AddOptionListRequestOptionTypeListConfigSourceHeadersInner `json:"sourceHeaders,omitempty"`
}

// NewAddOptionListRequestOptionTypeListConfig instantiates a new AddOptionListRequestOptionTypeListConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOptionListRequestOptionTypeListConfig() *AddOptionListRequestOptionTypeListConfig {
	this := AddOptionListRequestOptionTypeListConfig{}
	return &this
}

// NewAddOptionListRequestOptionTypeListConfigWithDefaults instantiates a new AddOptionListRequestOptionTypeListConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOptionListRequestOptionTypeListConfigWithDefaults() *AddOptionListRequestOptionTypeListConfig {
	this := AddOptionListRequestOptionTypeListConfig{}
	return &this
}

// GetSourceHeaders returns the SourceHeaders field value if set, zero value otherwise.
func (o *AddOptionListRequestOptionTypeListConfig) GetSourceHeaders() []AddOptionListRequestOptionTypeListConfigSourceHeadersInner {
	if o == nil || IsNil(o.SourceHeaders) {
		var ret []AddOptionListRequestOptionTypeListConfigSourceHeadersInner
		return ret
	}
	return o.SourceHeaders
}

// GetSourceHeadersOk returns a tuple with the SourceHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOptionListRequestOptionTypeListConfig) GetSourceHeadersOk() ([]AddOptionListRequestOptionTypeListConfigSourceHeadersInner, bool) {
	if o == nil || IsNil(o.SourceHeaders) {
		return nil, false
	}
	return o.SourceHeaders, true
}

// IsSetSourceHeaders returns a boolean if a field has been set.
func (o *AddOptionListRequestOptionTypeListConfig) IsSetSourceHeaders() bool {
	if o != nil && !IsNil(o.SourceHeaders) {
		return true
	}

	return false
}

// SetSourceHeaders gets a reference to the given []AddOptionListRequestOptionTypeListConfigSourceHeadersInner and assigns it to the SourceHeaders field.
func (o *AddOptionListRequestOptionTypeListConfig) SetSourceHeaders(v []AddOptionListRequestOptionTypeListConfigSourceHeadersInner) {
	o.SourceHeaders = v
}

func (o AddOptionListRequestOptionTypeListConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOptionListRequestOptionTypeListConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceHeaders) {
		toSerialize["sourceHeaders"] = o.SourceHeaders
	}
	return toSerialize, nil
}

type NullableAddOptionListRequestOptionTypeListConfig struct {
	value *AddOptionListRequestOptionTypeListConfig
	isSet bool
}

func (v NullableAddOptionListRequestOptionTypeListConfig) Get() *AddOptionListRequestOptionTypeListConfig {
	return v.value
}

func (v *NullableAddOptionListRequestOptionTypeListConfig) Set(val *AddOptionListRequestOptionTypeListConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOptionListRequestOptionTypeListConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOptionListRequestOptionTypeListConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOptionListRequestOptionTypeListConfig(val *AddOptionListRequestOptionTypeListConfig) *NullableAddOptionListRequestOptionTypeListConfig {
	return &NullableAddOptionListRequestOptionTypeListConfig{value: val, isSet: true}
}

func (v NullableAddOptionListRequestOptionTypeListConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOptionListRequestOptionTypeListConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


