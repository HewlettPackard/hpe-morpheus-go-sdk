/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateLoadBalancerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLoadBalancerRequest{}

// UpdateLoadBalancerRequest struct for UpdateLoadBalancerRequest
type UpdateLoadBalancerRequest struct {
	LoadBalancer *UpdateLoadBalancerRequestLoadBalancer `json:"loadBalancer,omitempty"`
}

// NewUpdateLoadBalancerRequest instantiates a new UpdateLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLoadBalancerRequest() *UpdateLoadBalancerRequest {
	this := UpdateLoadBalancerRequest{}
	return &this
}

// NewUpdateLoadBalancerRequestWithDefaults instantiates a new UpdateLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLoadBalancerRequestWithDefaults() *UpdateLoadBalancerRequest {
	this := UpdateLoadBalancerRequest{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *UpdateLoadBalancerRequest) GetLoadBalancer() UpdateLoadBalancerRequestLoadBalancer {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret UpdateLoadBalancerRequestLoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerRequest) GetLoadBalancerOk() (*UpdateLoadBalancerRequestLoadBalancer, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// IsSetLoadBalancer returns a boolean if a field has been set.
func (o *UpdateLoadBalancerRequest) IsSetLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given UpdateLoadBalancerRequestLoadBalancer and assigns it to the LoadBalancer field.
func (o *UpdateLoadBalancerRequest) SetLoadBalancer(v UpdateLoadBalancerRequestLoadBalancer) {
	o.LoadBalancer = &v
}

func (o UpdateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLoadBalancerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancer) {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	return toSerialize, nil
}

type NullableUpdateLoadBalancerRequest struct {
	value *UpdateLoadBalancerRequest
	isSet bool
}

func (v NullableUpdateLoadBalancerRequest) Get() *UpdateLoadBalancerRequest {
	return v.value
}

func (v *NullableUpdateLoadBalancerRequest) Set(val *UpdateLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLoadBalancerRequest(val *UpdateLoadBalancerRequest) *NullableUpdateLoadBalancerRequest {
	return &NullableUpdateLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableUpdateLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


