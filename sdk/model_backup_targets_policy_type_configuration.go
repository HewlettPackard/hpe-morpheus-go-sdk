/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the BackupTargetsPolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupTargetsPolicyTypeConfiguration{}

// BackupTargetsPolicyTypeConfiguration Configuration settings for the following policy types: - Backup Targets 
type BackupTargetsPolicyTypeConfiguration struct {
	BackupStorageIds []int64 `json:"backupStorageIds,omitempty"`
}

// NewBackupTargetsPolicyTypeConfiguration instantiates a new BackupTargetsPolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupTargetsPolicyTypeConfiguration() *BackupTargetsPolicyTypeConfiguration {
	this := BackupTargetsPolicyTypeConfiguration{}
	return &this
}

// NewBackupTargetsPolicyTypeConfigurationWithDefaults instantiates a new BackupTargetsPolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupTargetsPolicyTypeConfigurationWithDefaults() *BackupTargetsPolicyTypeConfiguration {
	this := BackupTargetsPolicyTypeConfiguration{}
	return &this
}

// GetBackupStorageIds returns the BackupStorageIds field value if set, zero value otherwise.
func (o *BackupTargetsPolicyTypeConfiguration) GetBackupStorageIds() []int64 {
	if o == nil || IsNil(o.BackupStorageIds) {
		var ret []int64
		return ret
	}
	return o.BackupStorageIds
}

// GetBackupStorageIdsOk returns a tuple with the BackupStorageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTargetsPolicyTypeConfiguration) GetBackupStorageIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.BackupStorageIds) {
		return nil, false
	}
	return o.BackupStorageIds, true
}

// IsSetBackupStorageIds returns a boolean if a field has been set.
func (o *BackupTargetsPolicyTypeConfiguration) IsSetBackupStorageIds() bool {
	if o != nil && !IsNil(o.BackupStorageIds) {
		return true
	}

	return false
}

// SetBackupStorageIds gets a reference to the given []int64 and assigns it to the BackupStorageIds field.
func (o *BackupTargetsPolicyTypeConfiguration) SetBackupStorageIds(v []int64) {
	o.BackupStorageIds = v
}

func (o BackupTargetsPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupTargetsPolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupStorageIds) {
		toSerialize["backupStorageIds"] = o.BackupStorageIds
	}
	return toSerialize, nil
}

type NullableBackupTargetsPolicyTypeConfiguration struct {
	value *BackupTargetsPolicyTypeConfiguration
	isSet bool
}

func (v NullableBackupTargetsPolicyTypeConfiguration) Get() *BackupTargetsPolicyTypeConfiguration {
	return v.value
}

func (v *NullableBackupTargetsPolicyTypeConfiguration) Set(val *BackupTargetsPolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupTargetsPolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupTargetsPolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupTargetsPolicyTypeConfiguration(val *BackupTargetsPolicyTypeConfiguration) *NullableBackupTargetsPolicyTypeConfiguration {
	return &NullableBackupTargetsPolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableBackupTargetsPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupTargetsPolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


