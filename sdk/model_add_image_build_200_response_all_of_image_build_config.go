/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddImageBuild200ResponseAllOfImageBuildConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddImageBuild200ResponseAllOfImageBuildConfig{}

// AddImageBuild200ResponseAllOfImageBuildConfig struct for AddImageBuild200ResponseAllOfImageBuildConfig
type AddImageBuild200ResponseAllOfImageBuildConfig struct {
	Instance *AddImageBuild200ResponseAllOfImageBuildConfigInstance `json:"instance,omitempty"`
	NetworkInterfaces []AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner `json:"networkInterfaces,omitempty"`
	Volumes []AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner `json:"volumes,omitempty"`
	StorageControllers []map[string]interface{} `json:"storageControllers,omitempty"`
	ZoneId *int64 `json:"zoneId,omitempty"`
	Config *AddImageBuild200ResponseAllOfImageBuildConfigConfig `json:"config,omitempty"`
	Plan *ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan `json:"plan,omitempty"`
}

// NewAddImageBuild200ResponseAllOfImageBuildConfig instantiates a new AddImageBuild200ResponseAllOfImageBuildConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddImageBuild200ResponseAllOfImageBuildConfig() *AddImageBuild200ResponseAllOfImageBuildConfig {
	this := AddImageBuild200ResponseAllOfImageBuildConfig{}
	return &this
}

// NewAddImageBuild200ResponseAllOfImageBuildConfigWithDefaults instantiates a new AddImageBuild200ResponseAllOfImageBuildConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddImageBuild200ResponseAllOfImageBuildConfigWithDefaults() *AddImageBuild200ResponseAllOfImageBuildConfig {
	this := AddImageBuild200ResponseAllOfImageBuildConfig{}
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetInstance() AddImageBuild200ResponseAllOfImageBuildConfigInstance {
	if o == nil || IsNil(o.Instance) {
		var ret AddImageBuild200ResponseAllOfImageBuildConfigInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetInstanceOk() (*AddImageBuild200ResponseAllOfImageBuildConfigInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given AddImageBuild200ResponseAllOfImageBuildConfigInstance and assigns it to the Instance field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetInstance(v AddImageBuild200ResponseAllOfImageBuildConfigInstance) {
	o.Instance = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetNetworkInterfaces() []AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetNetworkInterfacesOk() ([]AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// IsSetNetworkInterfaces returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner and assigns it to the NetworkInterfaces field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetNetworkInterfaces(v []AddImageBuild200ResponseAllOfImageBuildConfigNetworkInterfacesInner) {
	o.NetworkInterfaces = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetVolumes() []AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner {
	if o == nil || IsNil(o.Volumes) {
		var ret []AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetVolumesOk() ([]AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// IsSetVolumes returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner and assigns it to the Volumes field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetVolumes(v []AddImageBuild200ResponseAllOfImageBuildConfigVolumesInner) {
	o.Volumes = v
}

// GetStorageControllers returns the StorageControllers field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetStorageControllers() []map[string]interface{} {
	if o == nil || IsNil(o.StorageControllers) {
		var ret []map[string]interface{}
		return ret
	}
	return o.StorageControllers
}

// GetStorageControllersOk returns a tuple with the StorageControllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetStorageControllersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.StorageControllers) {
		return nil, false
	}
	return o.StorageControllers, true
}

// IsSetStorageControllers returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetStorageControllers() bool {
	if o != nil && !IsNil(o.StorageControllers) {
		return true
	}

	return false
}

// SetStorageControllers gets a reference to the given []map[string]interface{} and assigns it to the StorageControllers field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetStorageControllers(v []map[string]interface{}) {
	o.StorageControllers = v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetZoneId() int64 {
	if o == nil || IsNil(o.ZoneId) {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// IsSetZoneId returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetConfig() AddImageBuild200ResponseAllOfImageBuildConfigConfig {
	if o == nil || IsNil(o.Config) {
		var ret AddImageBuild200ResponseAllOfImageBuildConfigConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetConfigOk() (*AddImageBuild200ResponseAllOfImageBuildConfigConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddImageBuild200ResponseAllOfImageBuildConfigConfig and assigns it to the Config field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetConfig(v AddImageBuild200ResponseAllOfImageBuildConfigConfig) {
	o.Config = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetPlan() ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan {
	if o == nil || IsNil(o.Plan) {
		var ret ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) GetPlanOk() (*ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// IsSetPlan returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) IsSetPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan and assigns it to the Plan field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfig) SetPlan(v ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan) {
	o.Plan = &v
}

func (o AddImageBuild200ResponseAllOfImageBuildConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddImageBuild200ResponseAllOfImageBuildConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.StorageControllers) {
		toSerialize["storageControllers"] = o.StorageControllers
	}
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableAddImageBuild200ResponseAllOfImageBuildConfig struct {
	value *AddImageBuild200ResponseAllOfImageBuildConfig
	isSet bool
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfig) Get() *AddImageBuild200ResponseAllOfImageBuildConfig {
	return v.value
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfig) Set(val *AddImageBuild200ResponseAllOfImageBuildConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddImageBuild200ResponseAllOfImageBuildConfig(val *AddImageBuild200ResponseAllOfImageBuildConfig) *NullableAddImageBuild200ResponseAllOfImageBuildConfig {
	return &NullableAddImageBuild200ResponseAllOfImageBuildConfig{value: val, isSet: true}
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


