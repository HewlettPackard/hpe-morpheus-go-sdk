/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddCatalogOrder200ResponseAllOfOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCatalogOrder200ResponseAllOfOrder{}

// AddCatalogOrder200ResponseAllOfOrder struct for AddCatalogOrder200ResponseAllOfOrder
type AddCatalogOrder200ResponseAllOfOrder struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Items []AddCatalogOrder200ResponseAllOfOrderItemsInner `json:"items,omitempty"`
	Stats *ListCatalogCart200ResponseCartStats `json:"stats,omitempty"`
}

// NewAddCatalogOrder200ResponseAllOfOrder instantiates a new AddCatalogOrder200ResponseAllOfOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCatalogOrder200ResponseAllOfOrder() *AddCatalogOrder200ResponseAllOfOrder {
	this := AddCatalogOrder200ResponseAllOfOrder{}
	return &this
}

// NewAddCatalogOrder200ResponseAllOfOrderWithDefaults instantiates a new AddCatalogOrder200ResponseAllOfOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCatalogOrder200ResponseAllOfOrderWithDefaults() *AddCatalogOrder200ResponseAllOfOrder {
	this := AddCatalogOrder200ResponseAllOfOrder{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddCatalogOrder200ResponseAllOfOrder) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddCatalogOrder200ResponseAllOfOrder) SetName(v string) {
	o.Name = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetItems() []AddCatalogOrder200ResponseAllOfOrderItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []AddCatalogOrder200ResponseAllOfOrderItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetItemsOk() ([]AddCatalogOrder200ResponseAllOfOrderItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// IsSetItems returns a boolean if a field has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) IsSetItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AddCatalogOrder200ResponseAllOfOrderItemsInner and assigns it to the Items field.
func (o *AddCatalogOrder200ResponseAllOfOrder) SetItems(v []AddCatalogOrder200ResponseAllOfOrderItemsInner) {
	o.Items = v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetStats() ListCatalogCart200ResponseCartStats {
	if o == nil || IsNil(o.Stats) {
		var ret ListCatalogCart200ResponseCartStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) GetStatsOk() (*ListCatalogCart200ResponseCartStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// IsSetStats returns a boolean if a field has been set.
func (o *AddCatalogOrder200ResponseAllOfOrder) IsSetStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given ListCatalogCart200ResponseCartStats and assigns it to the Stats field.
func (o *AddCatalogOrder200ResponseAllOfOrder) SetStats(v ListCatalogCart200ResponseCartStats) {
	o.Stats = &v
}

func (o AddCatalogOrder200ResponseAllOfOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCatalogOrder200ResponseAllOfOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	return toSerialize, nil
}

type NullableAddCatalogOrder200ResponseAllOfOrder struct {
	value *AddCatalogOrder200ResponseAllOfOrder
	isSet bool
}

func (v NullableAddCatalogOrder200ResponseAllOfOrder) Get() *AddCatalogOrder200ResponseAllOfOrder {
	return v.value
}

func (v *NullableAddCatalogOrder200ResponseAllOfOrder) Set(val *AddCatalogOrder200ResponseAllOfOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCatalogOrder200ResponseAllOfOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCatalogOrder200ResponseAllOfOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCatalogOrder200ResponseAllOfOrder(val *AddCatalogOrder200ResponseAllOfOrder) *NullableAddCatalogOrder200ResponseAllOfOrder {
	return &NullableAddCatalogOrder200ResponseAllOfOrder{value: val, isSet: true}
}

func (v NullableAddCatalogOrder200ResponseAllOfOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCatalogOrder200ResponseAllOfOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


