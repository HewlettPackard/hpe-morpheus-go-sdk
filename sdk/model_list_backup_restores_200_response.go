/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListBackupRestores200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackupRestores200Response{}

// ListBackupRestores200Response struct for ListBackupRestores200Response
type ListBackupRestores200Response struct {
	Restores []ListBackupRestores200ResponseAllOfRestoresInner `json:"restores,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListBackupRestores200Response instantiates a new ListBackupRestores200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackupRestores200Response() *ListBackupRestores200Response {
	this := ListBackupRestores200Response{}
	return &this
}

// NewListBackupRestores200ResponseWithDefaults instantiates a new ListBackupRestores200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackupRestores200ResponseWithDefaults() *ListBackupRestores200Response {
	this := ListBackupRestores200Response{}
	return &this
}

// GetRestores returns the Restores field value if set, zero value otherwise.
func (o *ListBackupRestores200Response) GetRestores() []ListBackupRestores200ResponseAllOfRestoresInner {
	if o == nil || IsNil(o.Restores) {
		var ret []ListBackupRestores200ResponseAllOfRestoresInner
		return ret
	}
	return o.Restores
}

// GetRestoresOk returns a tuple with the Restores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupRestores200Response) GetRestoresOk() ([]ListBackupRestores200ResponseAllOfRestoresInner, bool) {
	if o == nil || IsNil(o.Restores) {
		return nil, false
	}
	return o.Restores, true
}

// IsSetRestores returns a boolean if a field has been set.
func (o *ListBackupRestores200Response) IsSetRestores() bool {
	if o != nil && !IsNil(o.Restores) {
		return true
	}

	return false
}

// SetRestores gets a reference to the given []ListBackupRestores200ResponseAllOfRestoresInner and assigns it to the Restores field.
func (o *ListBackupRestores200Response) SetRestores(v []ListBackupRestores200ResponseAllOfRestoresInner) {
	o.Restores = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListBackupRestores200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupRestores200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListBackupRestores200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListBackupRestores200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListBackupRestores200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackupRestores200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Restores) {
		toSerialize["restores"] = o.Restores
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListBackupRestores200Response struct {
	value *ListBackupRestores200Response
	isSet bool
}

func (v NullableListBackupRestores200Response) Get() *ListBackupRestores200Response {
	return v.value
}

func (v *NullableListBackupRestores200Response) Set(val *ListBackupRestores200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackupRestores200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackupRestores200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackupRestores200Response(val *ListBackupRestores200Response) *NullableListBackupRestores200Response {
	return &NullableListBackupRestores200Response{value: val, isSet: true}
}

func (v NullableListBackupRestores200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackupRestores200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


