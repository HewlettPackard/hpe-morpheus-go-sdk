/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14{}

// ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 - Max Memory 
type ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 struct {
	MaxMemory string `json:"maxMemory"`
	ExcludeContainers *string `json:"excludeContainers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14(maxMemory string) *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14{}
	this.MaxMemory = maxMemory
	var excludeContainers string = "off"
	this.ExcludeContainers = &excludeContainers
	return &this
}

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14WithDefaults instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14WithDefaults() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14{}
	var excludeContainers string = "off"
	this.ExcludeContainers = &excludeContainers
	return &this
}

// GetMaxMemory returns the MaxMemory field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) GetMaxMemory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value
// and a boolean to check if the value has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) GetMaxMemoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMemory, true
}

// SetMaxMemory sets field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) SetMaxMemory(v string) {
	o.MaxMemory = v
}

// GetExcludeContainers returns the ExcludeContainers field value if set, zero value otherwise.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) GetExcludeContainers() string {
	if o == nil || IsNil(o.ExcludeContainers) {
		var ret string
		return ret
	}
	return *o.ExcludeContainers
}

// GetExcludeContainersOk returns a tuple with the ExcludeContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) GetExcludeContainersOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeContainers) {
		return nil, false
	}
	return o.ExcludeContainers, true
}

// IsSetExcludeContainers returns a boolean if a field has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) IsSetExcludeContainers() bool {
	if o != nil && !IsNil(o.ExcludeContainers) {
		return true
	}

	return false
}

// SetExcludeContainers gets a reference to the given string and assigns it to the ExcludeContainers field.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) SetExcludeContainers(v string) {
	o.ExcludeContainers = &v
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maxMemory"] = o.MaxMemory
	if !IsNil(o.ExcludeContainers) {
		toSerialize["excludeContainers"] = o.ExcludeContainers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maxMemory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 := _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14{}

	err = json.Unmarshal(data, &varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14)

	if err != nil {
		return err
	}

	*o = ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14(varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "maxMemory")
		delete(additionalProperties, "excludeContainers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 struct {
	value *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14
	isSet bool
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) Get() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 {
	return v.value
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) Set(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) {
	v.value = val
	v.isSet = true
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) IsSet() bool {
	return v.isSet
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14 {
	return &NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14{value: val, isSet: true}
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf14) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


