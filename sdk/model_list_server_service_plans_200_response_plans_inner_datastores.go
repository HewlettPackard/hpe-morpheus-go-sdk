/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListServerServicePlans200ResponsePlansInnerDatastores type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServerServicePlans200ResponsePlansInnerDatastores{}

// ListServerServicePlans200ResponsePlansInnerDatastores struct for ListServerServicePlans200ResponsePlansInnerDatastores
type ListServerServicePlans200ResponsePlansInnerDatastores struct {
	Cluster []map[string]interface{} `json:"cluster,omitempty"`
	Store []map[string]interface{} `json:"store,omitempty"`
}

// NewListServerServicePlans200ResponsePlansInnerDatastores instantiates a new ListServerServicePlans200ResponsePlansInnerDatastores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServerServicePlans200ResponsePlansInnerDatastores() *ListServerServicePlans200ResponsePlansInnerDatastores {
	this := ListServerServicePlans200ResponsePlansInnerDatastores{}
	return &this
}

// NewListServerServicePlans200ResponsePlansInnerDatastoresWithDefaults instantiates a new ListServerServicePlans200ResponsePlansInnerDatastores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServerServicePlans200ResponsePlansInnerDatastoresWithDefaults() *ListServerServicePlans200ResponsePlansInnerDatastores {
	this := ListServerServicePlans200ResponsePlansInnerDatastores{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) GetCluster() []map[string]interface{} {
	if o == nil || IsNil(o.Cluster) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) GetClusterOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given []map[string]interface{} and assigns it to the Cluster field.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) SetCluster(v []map[string]interface{}) {
	o.Cluster = v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) GetStore() []map[string]interface{} {
	if o == nil || IsNil(o.Store) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) GetStoreOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// IsSetStore returns a boolean if a field has been set.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) IsSetStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given []map[string]interface{} and assigns it to the Store field.
func (o *ListServerServicePlans200ResponsePlansInnerDatastores) SetStore(v []map[string]interface{}) {
	o.Store = v
}

func (o ListServerServicePlans200ResponsePlansInnerDatastores) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServerServicePlans200ResponsePlansInnerDatastores) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	return toSerialize, nil
}

type NullableListServerServicePlans200ResponsePlansInnerDatastores struct {
	value *ListServerServicePlans200ResponsePlansInnerDatastores
	isSet bool
}

func (v NullableListServerServicePlans200ResponsePlansInnerDatastores) Get() *ListServerServicePlans200ResponsePlansInnerDatastores {
	return v.value
}

func (v *NullableListServerServicePlans200ResponsePlansInnerDatastores) Set(val *ListServerServicePlans200ResponsePlansInnerDatastores) {
	v.value = val
	v.isSet = true
}

func (v NullableListServerServicePlans200ResponsePlansInnerDatastores) IsSet() bool {
	return v.isSet
}

func (v *NullableListServerServicePlans200ResponsePlansInnerDatastores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServerServicePlans200ResponsePlansInnerDatastores(val *ListServerServicePlans200ResponsePlansInnerDatastores) *NullableListServerServicePlans200ResponsePlansInnerDatastores {
	return &NullableListServerServicePlans200ResponsePlansInnerDatastores{value: val, isSet: true}
}

func (v NullableListServerServicePlans200ResponsePlansInnerDatastores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServerServicePlans200ResponsePlansInnerDatastores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


