/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListBackupJobs200ResponseAllOfJobsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackupJobs200ResponseAllOfJobsInner{}

// ListBackupJobs200ResponseAllOfJobsInner struct for ListBackupJobs200ResponseAllOfJobsInner
type ListBackupJobs200ResponseAllOfJobsInner struct {
	// Backup ID
	Id *int64 `json:"id,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	Schedule *ListBackups200ResponseAllOfBackupsInnerSchedule `json:"schedule,omitempty"`
	RetentionCount *int64 `json:"retentionCount,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	BackupProvider *ListBackups200ResponseAllOfBackupsInnerBackupProvider `json:"backupProvider,omitempty"`
	BackupRespository *ListBackups200ResponseAllOfBackupsInnerBackupRespository `json:"backupRespository,omitempty"`
	// Cron Expression
	CronExpression *string `json:"cronExpression,omitempty"`
	// Next Fire is the datetime the job will next occur on according to its schedule
	NextFire *time.Time `json:"nextFire,omitempty"`
	Source *string `json:"source,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Account *ListBackupJobs200ResponseAllOfJobsInnerAccount `json:"account,omitempty"`
	// Enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Date Created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Last Updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Backups associated with this job
	Backups []ListBackupJobs200ResponseAllOfJobsInnerBackupsInner `json:"backups,omitempty"`
}

// NewListBackupJobs200ResponseAllOfJobsInner instantiates a new ListBackupJobs200ResponseAllOfJobsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackupJobs200ResponseAllOfJobsInner() *ListBackupJobs200ResponseAllOfJobsInner {
	this := ListBackupJobs200ResponseAllOfJobsInner{}
	return &this
}

// NewListBackupJobs200ResponseAllOfJobsInnerWithDefaults instantiates a new ListBackupJobs200ResponseAllOfJobsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackupJobs200ResponseAllOfJobsInnerWithDefaults() *ListBackupJobs200ResponseAllOfJobsInner {
	this := ListBackupJobs200ResponseAllOfJobsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetName(v string) {
	o.Name = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetSchedule() ListBackups200ResponseAllOfBackupsInnerSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret ListBackups200ResponseAllOfBackupsInnerSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetScheduleOk() (*ListBackups200ResponseAllOfBackupsInnerSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// IsSetSchedule returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given ListBackups200ResponseAllOfBackupsInnerSchedule and assigns it to the Schedule field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetSchedule(v ListBackups200ResponseAllOfBackupsInnerSchedule) {
	o.Schedule = &v
}

// GetRetentionCount returns the RetentionCount field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetRetentionCount() int64 {
	if o == nil || IsNil(o.RetentionCount) {
		var ret int64
		return ret
	}
	return *o.RetentionCount
}

// GetRetentionCountOk returns a tuple with the RetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetRetentionCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RetentionCount) {
		return nil, false
	}
	return o.RetentionCount, true
}

// IsSetRetentionCount returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetRetentionCount() bool {
	if o != nil && !IsNil(o.RetentionCount) {
		return true
	}

	return false
}

// SetRetentionCount gets a reference to the given int64 and assigns it to the RetentionCount field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetRetentionCount(v int64) {
	o.RetentionCount = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetBackupProvider returns the BackupProvider field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackupProvider() ListBackups200ResponseAllOfBackupsInnerBackupProvider {
	if o == nil || IsNil(o.BackupProvider) {
		var ret ListBackups200ResponseAllOfBackupsInnerBackupProvider
		return ret
	}
	return *o.BackupProvider
}

// GetBackupProviderOk returns a tuple with the BackupProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackupProviderOk() (*ListBackups200ResponseAllOfBackupsInnerBackupProvider, bool) {
	if o == nil || IsNil(o.BackupProvider) {
		return nil, false
	}
	return o.BackupProvider, true
}

// IsSetBackupProvider returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetBackupProvider() bool {
	if o != nil && !IsNil(o.BackupProvider) {
		return true
	}

	return false
}

// SetBackupProvider gets a reference to the given ListBackups200ResponseAllOfBackupsInnerBackupProvider and assigns it to the BackupProvider field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetBackupProvider(v ListBackups200ResponseAllOfBackupsInnerBackupProvider) {
	o.BackupProvider = &v
}

// GetBackupRespository returns the BackupRespository field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackupRespository() ListBackups200ResponseAllOfBackupsInnerBackupRespository {
	if o == nil || IsNil(o.BackupRespository) {
		var ret ListBackups200ResponseAllOfBackupsInnerBackupRespository
		return ret
	}
	return *o.BackupRespository
}

// GetBackupRespositoryOk returns a tuple with the BackupRespository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackupRespositoryOk() (*ListBackups200ResponseAllOfBackupsInnerBackupRespository, bool) {
	if o == nil || IsNil(o.BackupRespository) {
		return nil, false
	}
	return o.BackupRespository, true
}

// IsSetBackupRespository returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetBackupRespository() bool {
	if o != nil && !IsNil(o.BackupRespository) {
		return true
	}

	return false
}

// SetBackupRespository gets a reference to the given ListBackups200ResponseAllOfBackupsInnerBackupRespository and assigns it to the BackupRespository field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetBackupRespository(v ListBackups200ResponseAllOfBackupsInnerBackupRespository) {
	o.BackupRespository = &v
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetCronExpression() string {
	if o == nil || IsNil(o.CronExpression) {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetCronExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpression) {
		return nil, false
	}
	return o.CronExpression, true
}

// IsSetCronExpression returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetCronExpression() bool {
	if o != nil && !IsNil(o.CronExpression) {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetNextFire returns the NextFire field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetNextFire() time.Time {
	if o == nil || IsNil(o.NextFire) {
		var ret time.Time
		return ret
	}
	return *o.NextFire
}

// GetNextFireOk returns a tuple with the NextFire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetNextFireOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextFire) {
		return nil, false
	}
	return o.NextFire, true
}

// IsSetNextFire returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetNextFire() bool {
	if o != nil && !IsNil(o.NextFire) {
		return true
	}

	return false
}

// SetNextFire gets a reference to the given time.Time and assigns it to the NextFire field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetNextFire(v time.Time) {
	o.NextFire = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// IsSetSource returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetSource(v string) {
	o.Source = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetVisibility(v string) {
	o.Visibility = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetAccount() ListBackupJobs200ResponseAllOfJobsInnerAccount {
	if o == nil || IsNil(o.Account) {
		var ret ListBackupJobs200ResponseAllOfJobsInnerAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetAccountOk() (*ListBackupJobs200ResponseAllOfJobsInnerAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListBackupJobs200ResponseAllOfJobsInnerAccount and assigns it to the Account field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetAccount(v ListBackupJobs200ResponseAllOfJobsInnerAccount) {
	o.Account = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetBackups returns the Backups field value if set, zero value otherwise.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackups() []ListBackupJobs200ResponseAllOfJobsInnerBackupsInner {
	if o == nil || IsNil(o.Backups) {
		var ret []ListBackupJobs200ResponseAllOfJobsInnerBackupsInner
		return ret
	}
	return o.Backups
}

// GetBackupsOk returns a tuple with the Backups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) GetBackupsOk() ([]ListBackupJobs200ResponseAllOfJobsInnerBackupsInner, bool) {
	if o == nil || IsNil(o.Backups) {
		return nil, false
	}
	return o.Backups, true
}

// IsSetBackups returns a boolean if a field has been set.
func (o *ListBackupJobs200ResponseAllOfJobsInner) IsSetBackups() bool {
	if o != nil && !IsNil(o.Backups) {
		return true
	}

	return false
}

// SetBackups gets a reference to the given []ListBackupJobs200ResponseAllOfJobsInnerBackupsInner and assigns it to the Backups field.
func (o *ListBackupJobs200ResponseAllOfJobsInner) SetBackups(v []ListBackupJobs200ResponseAllOfJobsInnerBackupsInner) {
	o.Backups = v
}

func (o ListBackupJobs200ResponseAllOfJobsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackupJobs200ResponseAllOfJobsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.RetentionCount) {
		toSerialize["retentionCount"] = o.RetentionCount
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.BackupProvider) {
		toSerialize["backupProvider"] = o.BackupProvider
	}
	if !IsNil(o.BackupRespository) {
		toSerialize["backupRespository"] = o.BackupRespository
	}
	if !IsNil(o.CronExpression) {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if !IsNil(o.NextFire) {
		toSerialize["nextFire"] = o.NextFire
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Backups) {
		toSerialize["backups"] = o.Backups
	}
	return toSerialize, nil
}

type NullableListBackupJobs200ResponseAllOfJobsInner struct {
	value *ListBackupJobs200ResponseAllOfJobsInner
	isSet bool
}

func (v NullableListBackupJobs200ResponseAllOfJobsInner) Get() *ListBackupJobs200ResponseAllOfJobsInner {
	return v.value
}

func (v *NullableListBackupJobs200ResponseAllOfJobsInner) Set(val *ListBackupJobs200ResponseAllOfJobsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackupJobs200ResponseAllOfJobsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackupJobs200ResponseAllOfJobsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackupJobs200ResponseAllOfJobsInner(val *ListBackupJobs200ResponseAllOfJobsInner) *NullableListBackupJobs200ResponseAllOfJobsInner {
	return &NullableListBackupJobs200ResponseAllOfJobsInner{value: val, isSet: true}
}

func (v NullableListBackupJobs200ResponseAllOfJobsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackupJobs200ResponseAllOfJobsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


