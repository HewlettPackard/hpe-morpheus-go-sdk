/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListCypherKeys200ResponseAllOfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCypherKeys200ResponseAllOfData{}

// ListCypherKeys200ResponseAllOfData struct for ListCypherKeys200ResponseAllOfData
type ListCypherKeys200ResponseAllOfData struct {
	Keys []string `json:"keys,omitempty"`
}

// NewListCypherKeys200ResponseAllOfData instantiates a new ListCypherKeys200ResponseAllOfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCypherKeys200ResponseAllOfData() *ListCypherKeys200ResponseAllOfData {
	this := ListCypherKeys200ResponseAllOfData{}
	return &this
}

// NewListCypherKeys200ResponseAllOfDataWithDefaults instantiates a new ListCypherKeys200ResponseAllOfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCypherKeys200ResponseAllOfDataWithDefaults() *ListCypherKeys200ResponseAllOfData {
	this := ListCypherKeys200ResponseAllOfData{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *ListCypherKeys200ResponseAllOfData) GetKeys() []string {
	if o == nil || IsNil(o.Keys) {
		var ret []string
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCypherKeys200ResponseAllOfData) GetKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.Keys) {
		return nil, false
	}
	return o.Keys, true
}

// IsSetKeys returns a boolean if a field has been set.
func (o *ListCypherKeys200ResponseAllOfData) IsSetKeys() bool {
	if o != nil && !IsNil(o.Keys) {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []string and assigns it to the Keys field.
func (o *ListCypherKeys200ResponseAllOfData) SetKeys(v []string) {
	o.Keys = v
}

func (o ListCypherKeys200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCypherKeys200ResponseAllOfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keys) {
		toSerialize["keys"] = o.Keys
	}
	return toSerialize, nil
}

type NullableListCypherKeys200ResponseAllOfData struct {
	value *ListCypherKeys200ResponseAllOfData
	isSet bool
}

func (v NullableListCypherKeys200ResponseAllOfData) Get() *ListCypherKeys200ResponseAllOfData {
	return v.value
}

func (v *NullableListCypherKeys200ResponseAllOfData) Set(val *ListCypherKeys200ResponseAllOfData) {
	v.value = val
	v.isSet = true
}

func (v NullableListCypherKeys200ResponseAllOfData) IsSet() bool {
	return v.isSet
}

func (v *NullableListCypherKeys200ResponseAllOfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCypherKeys200ResponseAllOfData(val *ListCypherKeys200ResponseAllOfData) *NullableListCypherKeys200ResponseAllOfData {
	return &NullableListCypherKeys200ResponseAllOfData{value: val, isSet: true}
}

func (v NullableListCypherKeys200ResponseAllOfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCypherKeys200ResponseAllOfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


