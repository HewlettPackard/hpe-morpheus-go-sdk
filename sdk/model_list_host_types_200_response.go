/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHostTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHostTypes200Response{}

// ListHostTypes200Response struct for ListHostTypes200Response
type ListHostTypes200Response struct {
	ServerTypes []ListHostTypes200ResponseAllOfServerTypesInner `json:"serverTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListHostTypes200Response instantiates a new ListHostTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHostTypes200Response() *ListHostTypes200Response {
	this := ListHostTypes200Response{}
	return &this
}

// NewListHostTypes200ResponseWithDefaults instantiates a new ListHostTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHostTypes200ResponseWithDefaults() *ListHostTypes200Response {
	this := ListHostTypes200Response{}
	return &this
}

// GetServerTypes returns the ServerTypes field value if set, zero value otherwise.
func (o *ListHostTypes200Response) GetServerTypes() []ListHostTypes200ResponseAllOfServerTypesInner {
	if o == nil || IsNil(o.ServerTypes) {
		var ret []ListHostTypes200ResponseAllOfServerTypesInner
		return ret
	}
	return o.ServerTypes
}

// GetServerTypesOk returns a tuple with the ServerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostTypes200Response) GetServerTypesOk() ([]ListHostTypes200ResponseAllOfServerTypesInner, bool) {
	if o == nil || IsNil(o.ServerTypes) {
		return nil, false
	}
	return o.ServerTypes, true
}

// IsSetServerTypes returns a boolean if a field has been set.
func (o *ListHostTypes200Response) IsSetServerTypes() bool {
	if o != nil && !IsNil(o.ServerTypes) {
		return true
	}

	return false
}

// SetServerTypes gets a reference to the given []ListHostTypes200ResponseAllOfServerTypesInner and assigns it to the ServerTypes field.
func (o *ListHostTypes200Response) SetServerTypes(v []ListHostTypes200ResponseAllOfServerTypesInner) {
	o.ServerTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListHostTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListHostTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListHostTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListHostTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHostTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerTypes) {
		toSerialize["serverTypes"] = o.ServerTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListHostTypes200Response struct {
	value *ListHostTypes200Response
	isSet bool
}

func (v NullableListHostTypes200Response) Get() *ListHostTypes200Response {
	return v.value
}

func (v *NullableListHostTypes200Response) Set(val *ListHostTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListHostTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListHostTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHostTypes200Response(val *ListHostTypes200Response) *NullableListHostTypes200Response {
	return &NullableListHostTypes200Response{value: val, isSet: true}
}

func (v NullableListHostTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHostTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


