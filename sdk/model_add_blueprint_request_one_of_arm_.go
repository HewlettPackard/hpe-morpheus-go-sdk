/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddBlueprintRequestOneOfArm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOfArm{}

// AddBlueprintRequestOneOfArm struct for AddBlueprintRequestOneOfArm
type AddBlueprintRequestOneOfArm struct {
	// Configuration Type
	ConfigType string `json:"configType"`
	// ARM Template in JSON
	Json *string `json:"json,omitempty"`
	// ARM Template in YAML
	Yaml *string `json:"yaml,omitempty"`
	Git *AddBlueprintRequestOneOfArmGit `json:"git,omitempty"`
	// OS Type
	OsType *string `json:"osType,omitempty"`
	InstallAgent *AddBlueprintRequestOneOfArmInstallAgent `json:"installAgent,omitempty"`
	CloudInitEnabled *AddBlueprintRequestOneOfArmCloudInitEnabled `json:"cloudInitEnabled,omitempty"`
}

type _AddBlueprintRequestOneOfArm AddBlueprintRequestOneOfArm

// NewAddBlueprintRequestOneOfArm instantiates a new AddBlueprintRequestOneOfArm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOfArm(configType string) *AddBlueprintRequestOneOfArm {
	this := AddBlueprintRequestOneOfArm{}
	this.ConfigType = configType
	return &this
}

// NewAddBlueprintRequestOneOfArmWithDefaults instantiates a new AddBlueprintRequestOneOfArm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOfArmWithDefaults() *AddBlueprintRequestOneOfArm {
	this := AddBlueprintRequestOneOfArm{}
	return &this
}

// GetConfigType returns the ConfigType field value
func (o *AddBlueprintRequestOneOfArm) GetConfigType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigType
}

// GetConfigTypeOk returns a tuple with the ConfigType field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetConfigTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigType, true
}

// SetConfigType sets field value
func (o *AddBlueprintRequestOneOfArm) SetConfigType(v string) {
	o.ConfigType = v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetJson() string {
	if o == nil || IsNil(o.Json) {
		var ret string
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetJsonOk() (*string, bool) {
	if o == nil || IsNil(o.Json) {
		return nil, false
	}
	return o.Json, true
}

// IsSetJson returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetJson() bool {
	if o != nil && !IsNil(o.Json) {
		return true
	}

	return false
}

// SetJson gets a reference to the given string and assigns it to the Json field.
func (o *AddBlueprintRequestOneOfArm) SetJson(v string) {
	o.Json = &v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetYaml() string {
	if o == nil || IsNil(o.Yaml) {
		var ret string
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetYamlOk() (*string, bool) {
	if o == nil || IsNil(o.Yaml) {
		return nil, false
	}
	return o.Yaml, true
}

// IsSetYaml returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetYaml() bool {
	if o != nil && !IsNil(o.Yaml) {
		return true
	}

	return false
}

// SetYaml gets a reference to the given string and assigns it to the Yaml field.
func (o *AddBlueprintRequestOneOfArm) SetYaml(v string) {
	o.Yaml = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetGit() AddBlueprintRequestOneOfArmGit {
	if o == nil || IsNil(o.Git) {
		var ret AddBlueprintRequestOneOfArmGit
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetGitOk() (*AddBlueprintRequestOneOfArmGit, bool) {
	if o == nil || IsNil(o.Git) {
		return nil, false
	}
	return o.Git, true
}

// IsSetGit returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetGit() bool {
	if o != nil && !IsNil(o.Git) {
		return true
	}

	return false
}

// SetGit gets a reference to the given AddBlueprintRequestOneOfArmGit and assigns it to the Git field.
func (o *AddBlueprintRequestOneOfArm) SetGit(v AddBlueprintRequestOneOfArmGit) {
	o.Git = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// IsSetOsType returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *AddBlueprintRequestOneOfArm) SetOsType(v string) {
	o.OsType = &v
}

// GetInstallAgent returns the InstallAgent field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetInstallAgent() AddBlueprintRequestOneOfArmInstallAgent {
	if o == nil || IsNil(o.InstallAgent) {
		var ret AddBlueprintRequestOneOfArmInstallAgent
		return ret
	}
	return *o.InstallAgent
}

// GetInstallAgentOk returns a tuple with the InstallAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetInstallAgentOk() (*AddBlueprintRequestOneOfArmInstallAgent, bool) {
	if o == nil || IsNil(o.InstallAgent) {
		return nil, false
	}
	return o.InstallAgent, true
}

// IsSetInstallAgent returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetInstallAgent() bool {
	if o != nil && !IsNil(o.InstallAgent) {
		return true
	}

	return false
}

// SetInstallAgent gets a reference to the given AddBlueprintRequestOneOfArmInstallAgent and assigns it to the InstallAgent field.
func (o *AddBlueprintRequestOneOfArm) SetInstallAgent(v AddBlueprintRequestOneOfArmInstallAgent) {
	o.InstallAgent = &v
}

// GetCloudInitEnabled returns the CloudInitEnabled field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOfArm) GetCloudInitEnabled() AddBlueprintRequestOneOfArmCloudInitEnabled {
	if o == nil || IsNil(o.CloudInitEnabled) {
		var ret AddBlueprintRequestOneOfArmCloudInitEnabled
		return ret
	}
	return *o.CloudInitEnabled
}

// GetCloudInitEnabledOk returns a tuple with the CloudInitEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOfArm) GetCloudInitEnabledOk() (*AddBlueprintRequestOneOfArmCloudInitEnabled, bool) {
	if o == nil || IsNil(o.CloudInitEnabled) {
		return nil, false
	}
	return o.CloudInitEnabled, true
}

// IsSetCloudInitEnabled returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOfArm) IsSetCloudInitEnabled() bool {
	if o != nil && !IsNil(o.CloudInitEnabled) {
		return true
	}

	return false
}

// SetCloudInitEnabled gets a reference to the given AddBlueprintRequestOneOfArmCloudInitEnabled and assigns it to the CloudInitEnabled field.
func (o *AddBlueprintRequestOneOfArm) SetCloudInitEnabled(v AddBlueprintRequestOneOfArmCloudInitEnabled) {
	o.CloudInitEnabled = &v
}

func (o AddBlueprintRequestOneOfArm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOfArm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configType"] = o.ConfigType
	if !IsNil(o.Json) {
		toSerialize["json"] = o.Json
	}
	if !IsNil(o.Yaml) {
		toSerialize["yaml"] = o.Yaml
	}
	if !IsNil(o.Git) {
		toSerialize["git"] = o.Git
	}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	if !IsNil(o.InstallAgent) {
		toSerialize["installAgent"] = o.InstallAgent
	}
	if !IsNil(o.CloudInitEnabled) {
		toSerialize["cloudInitEnabled"] = o.CloudInitEnabled
	}
	return toSerialize, nil
}

func (o *AddBlueprintRequestOneOfArm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"configType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBlueprintRequestOneOfArm := _AddBlueprintRequestOneOfArm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddBlueprintRequestOneOfArm)

	if err != nil {
		return err
	}

	*o = AddBlueprintRequestOneOfArm(varAddBlueprintRequestOneOfArm)

	return err
}

type NullableAddBlueprintRequestOneOfArm struct {
	value *AddBlueprintRequestOneOfArm
	isSet bool
}

func (v NullableAddBlueprintRequestOneOfArm) Get() *AddBlueprintRequestOneOfArm {
	return v.value
}

func (v *NullableAddBlueprintRequestOneOfArm) Set(val *AddBlueprintRequestOneOfArm) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequestOneOfArm) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequestOneOfArm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequestOneOfArm(val *AddBlueprintRequestOneOfArm) *NullableAddBlueprintRequestOneOfArm {
	return &NullableAddBlueprintRequestOneOfArm{value: val, isSet: true}
}

func (v NullableAddBlueprintRequestOneOfArm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequestOneOfArm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


