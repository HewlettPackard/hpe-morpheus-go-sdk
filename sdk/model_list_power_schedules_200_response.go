/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListPowerSchedules200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPowerSchedules200Response{}

// ListPowerSchedules200Response struct for ListPowerSchedules200Response
type ListPowerSchedules200Response struct {
	Schedules []ListPowerSchedules200ResponseAllOfSchedulesInner `json:"schedules,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListPowerSchedules200Response instantiates a new ListPowerSchedules200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPowerSchedules200Response() *ListPowerSchedules200Response {
	this := ListPowerSchedules200Response{}
	return &this
}

// NewListPowerSchedules200ResponseWithDefaults instantiates a new ListPowerSchedules200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPowerSchedules200ResponseWithDefaults() *ListPowerSchedules200Response {
	this := ListPowerSchedules200Response{}
	return &this
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *ListPowerSchedules200Response) GetSchedules() []ListPowerSchedules200ResponseAllOfSchedulesInner {
	if o == nil || IsNil(o.Schedules) {
		var ret []ListPowerSchedules200ResponseAllOfSchedulesInner
		return ret
	}
	return o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPowerSchedules200Response) GetSchedulesOk() ([]ListPowerSchedules200ResponseAllOfSchedulesInner, bool) {
	if o == nil || IsNil(o.Schedules) {
		return nil, false
	}
	return o.Schedules, true
}

// IsSetSchedules returns a boolean if a field has been set.
func (o *ListPowerSchedules200Response) IsSetSchedules() bool {
	if o != nil && !IsNil(o.Schedules) {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []ListPowerSchedules200ResponseAllOfSchedulesInner and assigns it to the Schedules field.
func (o *ListPowerSchedules200Response) SetSchedules(v []ListPowerSchedules200ResponseAllOfSchedulesInner) {
	o.Schedules = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListPowerSchedules200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPowerSchedules200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListPowerSchedules200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListPowerSchedules200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListPowerSchedules200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPowerSchedules200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedules) {
		toSerialize["schedules"] = o.Schedules
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListPowerSchedules200Response struct {
	value *ListPowerSchedules200Response
	isSet bool
}

func (v NullableListPowerSchedules200Response) Get() *ListPowerSchedules200Response {
	return v.value
}

func (v *NullableListPowerSchedules200Response) Set(val *ListPowerSchedules200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListPowerSchedules200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListPowerSchedules200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPowerSchedules200Response(val *ListPowerSchedules200Response) *NullableListPowerSchedules200Response {
	return &NullableListPowerSchedules200Response{value: val, isSet: true}
}

func (v NullableListPowerSchedules200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPowerSchedules200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


