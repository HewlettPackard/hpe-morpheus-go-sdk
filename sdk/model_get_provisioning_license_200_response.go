/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetProvisioningLicense200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProvisioningLicense200Response{}

// GetProvisioningLicense200Response struct for GetProvisioningLicense200Response
type GetProvisioningLicense200Response struct {
	License *ListProvisioningLicenses200ResponseAllOfLicensesInner `json:"license,omitempty"`
}

// NewGetProvisioningLicense200Response instantiates a new GetProvisioningLicense200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProvisioningLicense200Response() *GetProvisioningLicense200Response {
	this := GetProvisioningLicense200Response{}
	return &this
}

// NewGetProvisioningLicense200ResponseWithDefaults instantiates a new GetProvisioningLicense200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProvisioningLicense200ResponseWithDefaults() *GetProvisioningLicense200Response {
	this := GetProvisioningLicense200Response{}
	return &this
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *GetProvisioningLicense200Response) GetLicense() ListProvisioningLicenses200ResponseAllOfLicensesInner {
	if o == nil || IsNil(o.License) {
		var ret ListProvisioningLicenses200ResponseAllOfLicensesInner
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProvisioningLicense200Response) GetLicenseOk() (*ListProvisioningLicenses200ResponseAllOfLicensesInner, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// IsSetLicense returns a boolean if a field has been set.
func (o *GetProvisioningLicense200Response) IsSetLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given ListProvisioningLicenses200ResponseAllOfLicensesInner and assigns it to the License field.
func (o *GetProvisioningLicense200Response) SetLicense(v ListProvisioningLicenses200ResponseAllOfLicensesInner) {
	o.License = &v
}

func (o GetProvisioningLicense200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProvisioningLicense200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	return toSerialize, nil
}

type NullableGetProvisioningLicense200Response struct {
	value *GetProvisioningLicense200Response
	isSet bool
}

func (v NullableGetProvisioningLicense200Response) Get() *GetProvisioningLicense200Response {
	return v.value
}

func (v *NullableGetProvisioningLicense200Response) Set(val *GetProvisioningLicense200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProvisioningLicense200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProvisioningLicense200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProvisioningLicense200Response(val *GetProvisioningLicense200Response) *NullableGetProvisioningLicense200Response {
	return &NullableGetProvisioningLicense200Response{value: val, isSet: true}
}

func (v NullableGetProvisioningLicense200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProvisioningLicense200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


