/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListBackups200ResponseAllOfBackupsInnerLastResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackups200ResponseAllOfBackupsInnerLastResult{}

// ListBackups200ResponseAllOfBackupsInnerLastResult struct for ListBackups200ResponseAllOfBackupsInnerLastResult
type ListBackups200ResponseAllOfBackupsInnerLastResult struct {
	// Last Result ID
	Id *int64 `json:"id,omitempty"`
	// Last Result Status
	Name *string `json:"name,omitempty"`
	// Last Result Date Created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
}

// NewListBackups200ResponseAllOfBackupsInnerLastResult instantiates a new ListBackups200ResponseAllOfBackupsInnerLastResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackups200ResponseAllOfBackupsInnerLastResult() *ListBackups200ResponseAllOfBackupsInnerLastResult {
	this := ListBackups200ResponseAllOfBackupsInnerLastResult{}
	return &this
}

// NewListBackups200ResponseAllOfBackupsInnerLastResultWithDefaults instantiates a new ListBackups200ResponseAllOfBackupsInnerLastResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackups200ResponseAllOfBackupsInnerLastResultWithDefaults() *ListBackups200ResponseAllOfBackupsInnerLastResult {
	this := ListBackups200ResponseAllOfBackupsInnerLastResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) SetName(v string) {
	o.Name = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ListBackups200ResponseAllOfBackupsInnerLastResult) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

func (o ListBackups200ResponseAllOfBackupsInnerLastResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackups200ResponseAllOfBackupsInnerLastResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	return toSerialize, nil
}

type NullableListBackups200ResponseAllOfBackupsInnerLastResult struct {
	value *ListBackups200ResponseAllOfBackupsInnerLastResult
	isSet bool
}

func (v NullableListBackups200ResponseAllOfBackupsInnerLastResult) Get() *ListBackups200ResponseAllOfBackupsInnerLastResult {
	return v.value
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerLastResult) Set(val *ListBackups200ResponseAllOfBackupsInnerLastResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackups200ResponseAllOfBackupsInnerLastResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerLastResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackups200ResponseAllOfBackupsInnerLastResult(val *ListBackups200ResponseAllOfBackupsInnerLastResult) *NullableListBackups200ResponseAllOfBackupsInnerLastResult {
	return &NullableListBackups200ResponseAllOfBackupsInnerLastResult{value: val, isSet: true}
}

func (v NullableListBackups200ResponseAllOfBackupsInnerLastResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerLastResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


