/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetClouds200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClouds200Response{}

// GetClouds200Response struct for GetClouds200Response
type GetClouds200Response struct {
	Zone *ListClouds200ResponseAllOfZonesInner `json:"zone,omitempty"`
}

// NewGetClouds200Response instantiates a new GetClouds200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClouds200Response() *GetClouds200Response {
	this := GetClouds200Response{}
	return &this
}

// NewGetClouds200ResponseWithDefaults instantiates a new GetClouds200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClouds200ResponseWithDefaults() *GetClouds200Response {
	this := GetClouds200Response{}
	return &this
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *GetClouds200Response) GetZone() ListClouds200ResponseAllOfZonesInner {
	if o == nil || IsNil(o.Zone) {
		var ret ListClouds200ResponseAllOfZonesInner
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClouds200Response) GetZoneOk() (*ListClouds200ResponseAllOfZonesInner, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *GetClouds200Response) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given ListClouds200ResponseAllOfZonesInner and assigns it to the Zone field.
func (o *GetClouds200Response) SetZone(v ListClouds200ResponseAllOfZonesInner) {
	o.Zone = &v
}

func (o GetClouds200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClouds200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	return toSerialize, nil
}

type NullableGetClouds200Response struct {
	value *GetClouds200Response
	isSet bool
}

func (v NullableGetClouds200Response) Get() *GetClouds200Response {
	return v.value
}

func (v *NullableGetClouds200Response) Set(val *GetClouds200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClouds200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClouds200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClouds200Response(val *GetClouds200Response) *NullableGetClouds200Response {
	return &NullableGetClouds200Response{value: val, isSet: true}
}

func (v NullableGetClouds200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClouds200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


