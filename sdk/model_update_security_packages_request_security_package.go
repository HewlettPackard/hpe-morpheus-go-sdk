/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateSecurityPackagesRequestSecurityPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSecurityPackagesRequestSecurityPackage{}

// UpdateSecurityPackagesRequestSecurityPackage struct for UpdateSecurityPackagesRequestSecurityPackage
type UpdateSecurityPackagesRequestSecurityPackage struct {
	// A name for the security package
	Name *string `json:"name,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Security Package Type Code
	Type *string `json:"type,omitempty"`
	// A description for the security package
	Description *string `json:"description,omitempty"`
	// URL to download the security package zip file from
	Url *string `json:"url,omitempty"`
	// Can be used to disable the security package
	Enabled *bool `json:"enabled,omitempty"`
}

// NewUpdateSecurityPackagesRequestSecurityPackage instantiates a new UpdateSecurityPackagesRequestSecurityPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSecurityPackagesRequestSecurityPackage() *UpdateSecurityPackagesRequestSecurityPackage {
	this := UpdateSecurityPackagesRequestSecurityPackage{}
	var type_ string = "scap-package"
	this.Type = &type_
	return &this
}

// NewUpdateSecurityPackagesRequestSecurityPackageWithDefaults instantiates a new UpdateSecurityPackagesRequestSecurityPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSecurityPackagesRequestSecurityPackageWithDefaults() *UpdateSecurityPackagesRequestSecurityPackage {
	this := UpdateSecurityPackagesRequestSecurityPackage{}
	var type_ string = "scap-package"
	this.Type = &type_
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetLabels(v []string) {
	o.Labels = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// IsSetUrl returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetUrl(v string) {
	o.Url = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *UpdateSecurityPackagesRequestSecurityPackage) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateSecurityPackagesRequestSecurityPackage) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o UpdateSecurityPackagesRequestSecurityPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSecurityPackagesRequestSecurityPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableUpdateSecurityPackagesRequestSecurityPackage struct {
	value *UpdateSecurityPackagesRequestSecurityPackage
	isSet bool
}

func (v NullableUpdateSecurityPackagesRequestSecurityPackage) Get() *UpdateSecurityPackagesRequestSecurityPackage {
	return v.value
}

func (v *NullableUpdateSecurityPackagesRequestSecurityPackage) Set(val *UpdateSecurityPackagesRequestSecurityPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSecurityPackagesRequestSecurityPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSecurityPackagesRequestSecurityPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSecurityPackagesRequestSecurityPackage(val *UpdateSecurityPackagesRequestSecurityPackage) *NullableUpdateSecurityPackagesRequestSecurityPackage {
	return &NullableUpdateSecurityPackagesRequestSecurityPackage{value: val, isSet: true}
}

func (v NullableUpdateSecurityPackagesRequestSecurityPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSecurityPackagesRequestSecurityPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


