/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AcknowledgeHealthAlarmsRequestAlarm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcknowledgeHealthAlarmsRequestAlarm{}

// AcknowledgeHealthAlarmsRequestAlarm struct for AcknowledgeHealthAlarmsRequestAlarm
type AcknowledgeHealthAlarmsRequestAlarm struct {
	// Pass `true` to ackowledge an alarm, or pass `false` to unacknowledge it.
	Acknowledged bool `json:"acknowledged"`
	// Array of Alarm ID(s)to be updated.
	Ids []int64 `json:"ids,omitempty"`
	// Pass `true` to update all alarms instead of passing ids. This will update any active alarm that is not already acknowledged. 
	All *bool `json:"all,omitempty"`
}

type _AcknowledgeHealthAlarmsRequestAlarm AcknowledgeHealthAlarmsRequestAlarm

// NewAcknowledgeHealthAlarmsRequestAlarm instantiates a new AcknowledgeHealthAlarmsRequestAlarm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcknowledgeHealthAlarmsRequestAlarm(acknowledged bool) *AcknowledgeHealthAlarmsRequestAlarm {
	this := AcknowledgeHealthAlarmsRequestAlarm{}
	this.Acknowledged = acknowledged
	var all bool = false
	this.All = &all
	return &this
}

// NewAcknowledgeHealthAlarmsRequestAlarmWithDefaults instantiates a new AcknowledgeHealthAlarmsRequestAlarm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcknowledgeHealthAlarmsRequestAlarmWithDefaults() *AcknowledgeHealthAlarmsRequestAlarm {
	this := AcknowledgeHealthAlarmsRequestAlarm{}
	var all bool = false
	this.All = &all
	return &this
}

// GetAcknowledged returns the Acknowledged field value
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetAcknowledged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Acknowledged
}

// GetAcknowledgedOk returns a tuple with the Acknowledged field value
// and a boolean to check if the value has been set.
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetAcknowledgedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Acknowledged, true
}

// SetAcknowledged sets field value
func (o *AcknowledgeHealthAlarmsRequestAlarm) SetAcknowledged(v bool) {
	o.Acknowledged = v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetIds() []int64 {
	if o == nil || IsNil(o.Ids) {
		var ret []int64
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// IsSetIds returns a boolean if a field has been set.
func (o *AcknowledgeHealthAlarmsRequestAlarm) IsSetIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int64 and assigns it to the Ids field.
func (o *AcknowledgeHealthAlarmsRequestAlarm) SetIds(v []int64) {
	o.Ids = v
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetAll() bool {
	if o == nil || IsNil(o.All) {
		var ret bool
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcknowledgeHealthAlarmsRequestAlarm) GetAllOk() (*bool, bool) {
	if o == nil || IsNil(o.All) {
		return nil, false
	}
	return o.All, true
}

// IsSetAll returns a boolean if a field has been set.
func (o *AcknowledgeHealthAlarmsRequestAlarm) IsSetAll() bool {
	if o != nil && !IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given bool and assigns it to the All field.
func (o *AcknowledgeHealthAlarmsRequestAlarm) SetAll(v bool) {
	o.All = &v
}

func (o AcknowledgeHealthAlarmsRequestAlarm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcknowledgeHealthAlarmsRequestAlarm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["acknowledged"] = o.Acknowledged
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	return toSerialize, nil
}

func (o *AcknowledgeHealthAlarmsRequestAlarm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"acknowledged",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAcknowledgeHealthAlarmsRequestAlarm := _AcknowledgeHealthAlarmsRequestAlarm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAcknowledgeHealthAlarmsRequestAlarm)

	if err != nil {
		return err
	}

	*o = AcknowledgeHealthAlarmsRequestAlarm(varAcknowledgeHealthAlarmsRequestAlarm)

	return err
}

type NullableAcknowledgeHealthAlarmsRequestAlarm struct {
	value *AcknowledgeHealthAlarmsRequestAlarm
	isSet bool
}

func (v NullableAcknowledgeHealthAlarmsRequestAlarm) Get() *AcknowledgeHealthAlarmsRequestAlarm {
	return v.value
}

func (v *NullableAcknowledgeHealthAlarmsRequestAlarm) Set(val *AcknowledgeHealthAlarmsRequestAlarm) {
	v.value = val
	v.isSet = true
}

func (v NullableAcknowledgeHealthAlarmsRequestAlarm) IsSet() bool {
	return v.isSet
}

func (v *NullableAcknowledgeHealthAlarmsRequestAlarm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcknowledgeHealthAlarmsRequestAlarm(val *AcknowledgeHealthAlarmsRequestAlarm) *NullableAcknowledgeHealthAlarmsRequestAlarm {
	return &NullableAcknowledgeHealthAlarmsRequestAlarm{value: val, isSet: true}
}

func (v NullableAcknowledgeHealthAlarmsRequestAlarm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcknowledgeHealthAlarmsRequestAlarm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


