/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetPrices200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPrices200Response{}

// GetPrices200Response struct for GetPrices200Response
type GetPrices200Response struct {
	Price *ListPrices200ResponseAllOfPricesInner `json:"price,omitempty"`
}

// NewGetPrices200Response instantiates a new GetPrices200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPrices200Response() *GetPrices200Response {
	this := GetPrices200Response{}
	return &this
}

// NewGetPrices200ResponseWithDefaults instantiates a new GetPrices200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPrices200ResponseWithDefaults() *GetPrices200Response {
	this := GetPrices200Response{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetPrices200Response) GetPrice() ListPrices200ResponseAllOfPricesInner {
	if o == nil || IsNil(o.Price) {
		var ret ListPrices200ResponseAllOfPricesInner
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrices200Response) GetPriceOk() (*ListPrices200ResponseAllOfPricesInner, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// IsSetPrice returns a boolean if a field has been set.
func (o *GetPrices200Response) IsSetPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ListPrices200ResponseAllOfPricesInner and assigns it to the Price field.
func (o *GetPrices200Response) SetPrice(v ListPrices200ResponseAllOfPricesInner) {
	o.Price = &v
}

func (o GetPrices200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPrices200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableGetPrices200Response struct {
	value *GetPrices200Response
	isSet bool
}

func (v NullableGetPrices200Response) Get() *GetPrices200Response {
	return v.value
}

func (v *NullableGetPrices200Response) Set(val *GetPrices200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPrices200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPrices200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPrices200Response(val *GetPrices200Response) *NullableGetPrices200Response {
	return &NullableGetPrices200Response{value: val, isSet: true}
}

func (v NullableGetPrices200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPrices200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


