/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostRequest{}

// UpdateHostRequest struct for UpdateHostRequest
type UpdateHostRequest struct {
	Server *UpdateHostRequestServer `json:"server,omitempty"`
}

// NewUpdateHostRequest instantiates a new UpdateHostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostRequest() *UpdateHostRequest {
	this := UpdateHostRequest{}
	return &this
}

// NewUpdateHostRequestWithDefaults instantiates a new UpdateHostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostRequestWithDefaults() *UpdateHostRequest {
	this := UpdateHostRequest{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *UpdateHostRequest) GetServer() UpdateHostRequestServer {
	if o == nil || IsNil(o.Server) {
		var ret UpdateHostRequestServer
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostRequest) GetServerOk() (*UpdateHostRequestServer, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// IsSetServer returns a boolean if a field has been set.
func (o *UpdateHostRequest) IsSetServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given UpdateHostRequestServer and assigns it to the Server field.
func (o *UpdateHostRequest) SetServer(v UpdateHostRequestServer) {
	o.Server = &v
}

func (o UpdateHostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	return toSerialize, nil
}

type NullableUpdateHostRequest struct {
	value *UpdateHostRequest
	isSet bool
}

func (v NullableUpdateHostRequest) Get() *UpdateHostRequest {
	return v.value
}

func (v *NullableUpdateHostRequest) Set(val *UpdateHostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostRequest(val *UpdateHostRequest) *NullableUpdateHostRequest {
	return &NullableUpdateHostRequest{value: val, isSet: true}
}

func (v NullableUpdateHostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


