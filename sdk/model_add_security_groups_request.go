/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddSecurityGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSecurityGroupsRequest{}

// AddSecurityGroupsRequest struct for AddSecurityGroupsRequest
type AddSecurityGroupsRequest struct {
	SecurityGroup AddSecurityGroupsRequestSecurityGroup `json:"securityGroup"`
}

type _AddSecurityGroupsRequest AddSecurityGroupsRequest

// NewAddSecurityGroupsRequest instantiates a new AddSecurityGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSecurityGroupsRequest(securityGroup AddSecurityGroupsRequestSecurityGroup) *AddSecurityGroupsRequest {
	this := AddSecurityGroupsRequest{}
	this.SecurityGroup = securityGroup
	return &this
}

// NewAddSecurityGroupsRequestWithDefaults instantiates a new AddSecurityGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSecurityGroupsRequestWithDefaults() *AddSecurityGroupsRequest {
	this := AddSecurityGroupsRequest{}
	return &this
}

// GetSecurityGroup returns the SecurityGroup field value
func (o *AddSecurityGroupsRequest) GetSecurityGroup() AddSecurityGroupsRequestSecurityGroup {
	if o == nil {
		var ret AddSecurityGroupsRequestSecurityGroup
		return ret
	}

	return o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupsRequest) GetSecurityGroupOk() (*AddSecurityGroupsRequestSecurityGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroup, true
}

// SetSecurityGroup sets field value
func (o *AddSecurityGroupsRequest) SetSecurityGroup(v AddSecurityGroupsRequestSecurityGroup) {
	o.SecurityGroup = v
}

func (o AddSecurityGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSecurityGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["securityGroup"] = o.SecurityGroup
	return toSerialize, nil
}

func (o *AddSecurityGroupsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"securityGroup",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddSecurityGroupsRequest := _AddSecurityGroupsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddSecurityGroupsRequest)

	if err != nil {
		return err
	}

	*o = AddSecurityGroupsRequest(varAddSecurityGroupsRequest)

	return err
}

type NullableAddSecurityGroupsRequest struct {
	value *AddSecurityGroupsRequest
	isSet bool
}

func (v NullableAddSecurityGroupsRequest) Get() *AddSecurityGroupsRequest {
	return v.value
}

func (v *NullableAddSecurityGroupsRequest) Set(val *AddSecurityGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSecurityGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSecurityGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSecurityGroupsRequest(val *AddSecurityGroupsRequest) *NullableAddSecurityGroupsRequest {
	return &NullableAddSecurityGroupsRequest{value: val, isSet: true}
}

func (v NullableAddSecurityGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSecurityGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


