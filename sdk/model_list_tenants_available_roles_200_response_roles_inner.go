/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTenantsAvailableRoles200ResponseRolesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTenantsAvailableRoles200ResponseRolesInner{}

// ListTenantsAvailableRoles200ResponseRolesInner struct for ListTenantsAvailableRoles200ResponseRolesInner
type ListTenantsAvailableRoles200ResponseRolesInner struct {
	Id *int64 `json:"id,omitempty"`
	Authority *string `json:"authority,omitempty"`
	Description *string `json:"description,omitempty"`
	RoleType *string `json:"roleType,omitempty"`
	Owner map[string]interface{} `json:"owner,omitempty"`
}

// NewListTenantsAvailableRoles200ResponseRolesInner instantiates a new ListTenantsAvailableRoles200ResponseRolesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTenantsAvailableRoles200ResponseRolesInner() *ListTenantsAvailableRoles200ResponseRolesInner {
	this := ListTenantsAvailableRoles200ResponseRolesInner{}
	return &this
}

// NewListTenantsAvailableRoles200ResponseRolesInnerWithDefaults instantiates a new ListTenantsAvailableRoles200ResponseRolesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTenantsAvailableRoles200ResponseRolesInnerWithDefaults() *ListTenantsAvailableRoles200ResponseRolesInner {
	this := ListTenantsAvailableRoles200ResponseRolesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) SetId(v int64) {
	o.Id = &v
}

// GetAuthority returns the Authority field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetAuthority() string {
	if o == nil || IsNil(o.Authority) {
		var ret string
		return ret
	}
	return *o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.Authority) {
		return nil, false
	}
	return o.Authority, true
}

// IsSetAuthority returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) IsSetAuthority() bool {
	if o != nil && !IsNil(o.Authority) {
		return true
	}

	return false
}

// SetAuthority gets a reference to the given string and assigns it to the Authority field.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) SetAuthority(v string) {
	o.Authority = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) SetDescription(v string) {
	o.Description = &v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetRoleType() string {
	if o == nil || IsNil(o.RoleType) {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetRoleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoleType) {
		return nil, false
	}
	return o.RoleType, true
}

// IsSetRoleType returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) IsSetRoleType() bool {
	if o != nil && !IsNil(o.RoleType) {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) SetRoleType(v string) {
	o.RoleType = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetOwner() map[string]interface{} {
	if o == nil || IsNil(o.Owner) {
		var ret map[string]interface{}
		return ret
	}
	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) GetOwnerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Owner) {
		return map[string]interface{}{}, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given map[string]interface{} and assigns it to the Owner field.
func (o *ListTenantsAvailableRoles200ResponseRolesInner) SetOwner(v map[string]interface{}) {
	o.Owner = v
}

func (o ListTenantsAvailableRoles200ResponseRolesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTenantsAvailableRoles200ResponseRolesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Authority) {
		toSerialize["authority"] = o.Authority
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RoleType) {
		toSerialize["roleType"] = o.RoleType
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

type NullableListTenantsAvailableRoles200ResponseRolesInner struct {
	value *ListTenantsAvailableRoles200ResponseRolesInner
	isSet bool
}

func (v NullableListTenantsAvailableRoles200ResponseRolesInner) Get() *ListTenantsAvailableRoles200ResponseRolesInner {
	return v.value
}

func (v *NullableListTenantsAvailableRoles200ResponseRolesInner) Set(val *ListTenantsAvailableRoles200ResponseRolesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListTenantsAvailableRoles200ResponseRolesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListTenantsAvailableRoles200ResponseRolesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTenantsAvailableRoles200ResponseRolesInner(val *ListTenantsAvailableRoles200ResponseRolesInner) *NullableListTenantsAvailableRoles200ResponseRolesInner {
	return &NullableListTenantsAvailableRoles200ResponseRolesInner{value: val, isSet: true}
}

func (v NullableListTenantsAvailableRoles200ResponseRolesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTenantsAvailableRoles200ResponseRolesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


