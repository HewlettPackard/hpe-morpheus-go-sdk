/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddSecurityPackages200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSecurityPackages200Response{}

// AddSecurityPackages200Response struct for AddSecurityPackages200Response
type AddSecurityPackages200Response struct {
	SecurityPackage *ListSecurityPackages200ResponseAllOfSecurityPackagesInner `json:"securityPackage,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddSecurityPackages200Response instantiates a new AddSecurityPackages200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSecurityPackages200Response() *AddSecurityPackages200Response {
	this := AddSecurityPackages200Response{}
	return &this
}

// NewAddSecurityPackages200ResponseWithDefaults instantiates a new AddSecurityPackages200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSecurityPackages200ResponseWithDefaults() *AddSecurityPackages200Response {
	this := AddSecurityPackages200Response{}
	return &this
}

// GetSecurityPackage returns the SecurityPackage field value if set, zero value otherwise.
func (o *AddSecurityPackages200Response) GetSecurityPackage() ListSecurityPackages200ResponseAllOfSecurityPackagesInner {
	if o == nil || IsNil(o.SecurityPackage) {
		var ret ListSecurityPackages200ResponseAllOfSecurityPackagesInner
		return ret
	}
	return *o.SecurityPackage
}

// GetSecurityPackageOk returns a tuple with the SecurityPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityPackages200Response) GetSecurityPackageOk() (*ListSecurityPackages200ResponseAllOfSecurityPackagesInner, bool) {
	if o == nil || IsNil(o.SecurityPackage) {
		return nil, false
	}
	return o.SecurityPackage, true
}

// IsSetSecurityPackage returns a boolean if a field has been set.
func (o *AddSecurityPackages200Response) IsSetSecurityPackage() bool {
	if o != nil && !IsNil(o.SecurityPackage) {
		return true
	}

	return false
}

// SetSecurityPackage gets a reference to the given ListSecurityPackages200ResponseAllOfSecurityPackagesInner and assigns it to the SecurityPackage field.
func (o *AddSecurityPackages200Response) SetSecurityPackage(v ListSecurityPackages200ResponseAllOfSecurityPackagesInner) {
	o.SecurityPackage = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddSecurityPackages200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityPackages200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddSecurityPackages200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddSecurityPackages200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddSecurityPackages200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSecurityPackages200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecurityPackage) {
		toSerialize["securityPackage"] = o.SecurityPackage
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddSecurityPackages200Response struct {
	value *AddSecurityPackages200Response
	isSet bool
}

func (v NullableAddSecurityPackages200Response) Get() *AddSecurityPackages200Response {
	return v.value
}

func (v *NullableAddSecurityPackages200Response) Set(val *AddSecurityPackages200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSecurityPackages200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSecurityPackages200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSecurityPackages200Response(val *AddSecurityPackages200Response) *NullableAddSecurityPackages200Response {
	return &NullableAddSecurityPackages200Response{value: val, isSet: true}
}

func (v NullableAddSecurityPackages200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSecurityPackages200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


