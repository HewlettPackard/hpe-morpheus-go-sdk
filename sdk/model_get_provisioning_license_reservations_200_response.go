/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetProvisioningLicenseReservations200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProvisioningLicenseReservations200Response{}

// GetProvisioningLicenseReservations200Response struct for GetProvisioningLicenseReservations200Response
type GetProvisioningLicenseReservations200Response struct {
	Licenses []GetProvisioningLicenseReservations200ResponseLicensesInner `json:"licenses,omitempty"`
}

// NewGetProvisioningLicenseReservations200Response instantiates a new GetProvisioningLicenseReservations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProvisioningLicenseReservations200Response() *GetProvisioningLicenseReservations200Response {
	this := GetProvisioningLicenseReservations200Response{}
	return &this
}

// NewGetProvisioningLicenseReservations200ResponseWithDefaults instantiates a new GetProvisioningLicenseReservations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProvisioningLicenseReservations200ResponseWithDefaults() *GetProvisioningLicenseReservations200Response {
	this := GetProvisioningLicenseReservations200Response{}
	return &this
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *GetProvisioningLicenseReservations200Response) GetLicenses() []GetProvisioningLicenseReservations200ResponseLicensesInner {
	if o == nil || IsNil(o.Licenses) {
		var ret []GetProvisioningLicenseReservations200ResponseLicensesInner
		return ret
	}
	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProvisioningLicenseReservations200Response) GetLicensesOk() ([]GetProvisioningLicenseReservations200ResponseLicensesInner, bool) {
	if o == nil || IsNil(o.Licenses) {
		return nil, false
	}
	return o.Licenses, true
}

// IsSetLicenses returns a boolean if a field has been set.
func (o *GetProvisioningLicenseReservations200Response) IsSetLicenses() bool {
	if o != nil && !IsNil(o.Licenses) {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given []GetProvisioningLicenseReservations200ResponseLicensesInner and assigns it to the Licenses field.
func (o *GetProvisioningLicenseReservations200Response) SetLicenses(v []GetProvisioningLicenseReservations200ResponseLicensesInner) {
	o.Licenses = v
}

func (o GetProvisioningLicenseReservations200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProvisioningLicenseReservations200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Licenses) {
		toSerialize["licenses"] = o.Licenses
	}
	return toSerialize, nil
}

type NullableGetProvisioningLicenseReservations200Response struct {
	value *GetProvisioningLicenseReservations200Response
	isSet bool
}

func (v NullableGetProvisioningLicenseReservations200Response) Get() *GetProvisioningLicenseReservations200Response {
	return v.value
}

func (v *NullableGetProvisioningLicenseReservations200Response) Set(val *GetProvisioningLicenseReservations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProvisioningLicenseReservations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProvisioningLicenseReservations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProvisioningLicenseReservations200Response(val *GetProvisioningLicenseReservations200Response) *NullableGetProvisioningLicenseReservations200Response {
	return &NullableGetProvisioningLicenseReservations200Response{value: val, isSet: true}
}

func (v NullableGetProvisioningLicenseReservations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProvisioningLicenseReservations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


