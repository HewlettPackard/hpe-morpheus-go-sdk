/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetCloudTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCloudTypes200Response{}

// GetCloudTypes200Response struct for GetCloudTypes200Response
type GetCloudTypes200Response struct {
	ZoneType *ListCloudTypes200ResponseAllOfZoneTypesInner `json:"zoneType,omitempty"`
}

// NewGetCloudTypes200Response instantiates a new GetCloudTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCloudTypes200Response() *GetCloudTypes200Response {
	this := GetCloudTypes200Response{}
	return &this
}

// NewGetCloudTypes200ResponseWithDefaults instantiates a new GetCloudTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCloudTypes200ResponseWithDefaults() *GetCloudTypes200Response {
	this := GetCloudTypes200Response{}
	return &this
}

// GetZoneType returns the ZoneType field value if set, zero value otherwise.
func (o *GetCloudTypes200Response) GetZoneType() ListCloudTypes200ResponseAllOfZoneTypesInner {
	if o == nil || IsNil(o.ZoneType) {
		var ret ListCloudTypes200ResponseAllOfZoneTypesInner
		return ret
	}
	return *o.ZoneType
}

// GetZoneTypeOk returns a tuple with the ZoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCloudTypes200Response) GetZoneTypeOk() (*ListCloudTypes200ResponseAllOfZoneTypesInner, bool) {
	if o == nil || IsNil(o.ZoneType) {
		return nil, false
	}
	return o.ZoneType, true
}

// IsSetZoneType returns a boolean if a field has been set.
func (o *GetCloudTypes200Response) IsSetZoneType() bool {
	if o != nil && !IsNil(o.ZoneType) {
		return true
	}

	return false
}

// SetZoneType gets a reference to the given ListCloudTypes200ResponseAllOfZoneTypesInner and assigns it to the ZoneType field.
func (o *GetCloudTypes200Response) SetZoneType(v ListCloudTypes200ResponseAllOfZoneTypesInner) {
	o.ZoneType = &v
}

func (o GetCloudTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCloudTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ZoneType) {
		toSerialize["zoneType"] = o.ZoneType
	}
	return toSerialize, nil
}

type NullableGetCloudTypes200Response struct {
	value *GetCloudTypes200Response
	isSet bool
}

func (v NullableGetCloudTypes200Response) Get() *GetCloudTypes200Response {
	return v.value
}

func (v *NullableGetCloudTypes200Response) Set(val *GetCloudTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCloudTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCloudTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCloudTypes200Response(val *GetCloudTypes200Response) *NullableGetCloudTypes200Response {
	return &NullableGetCloudTypes200Response{value: val, isSet: true}
}

func (v NullableGetCloudTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCloudTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


