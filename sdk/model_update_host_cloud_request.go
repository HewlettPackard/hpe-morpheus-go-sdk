/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostCloudRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostCloudRequest{}

// UpdateHostCloudRequest struct for UpdateHostCloudRequest
type UpdateHostCloudRequest struct {
	// The cloud/zone ID we are moving the set of servers to
	CloudId *int64 `json:"cloudId,omitempty"`
	// A JSON array of source: and target: server ids to be moved. If the target is blank Morpheus will automatically try to match by the servers unique or externalId
	Servers []UpdateHostCloudRequestServersInner `json:"servers,omitempty"`
}

// NewUpdateHostCloudRequest instantiates a new UpdateHostCloudRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostCloudRequest() *UpdateHostCloudRequest {
	this := UpdateHostCloudRequest{}
	return &this
}

// NewUpdateHostCloudRequestWithDefaults instantiates a new UpdateHostCloudRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostCloudRequestWithDefaults() *UpdateHostCloudRequest {
	this := UpdateHostCloudRequest{}
	return &this
}

// GetCloudId returns the CloudId field value if set, zero value otherwise.
func (o *UpdateHostCloudRequest) GetCloudId() int64 {
	if o == nil || IsNil(o.CloudId) {
		var ret int64
		return ret
	}
	return *o.CloudId
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloudRequest) GetCloudIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CloudId) {
		return nil, false
	}
	return o.CloudId, true
}

// IsSetCloudId returns a boolean if a field has been set.
func (o *UpdateHostCloudRequest) IsSetCloudId() bool {
	if o != nil && !IsNil(o.CloudId) {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given int64 and assigns it to the CloudId field.
func (o *UpdateHostCloudRequest) SetCloudId(v int64) {
	o.CloudId = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *UpdateHostCloudRequest) GetServers() []UpdateHostCloudRequestServersInner {
	if o == nil || IsNil(o.Servers) {
		var ret []UpdateHostCloudRequestServersInner
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloudRequest) GetServersOk() ([]UpdateHostCloudRequestServersInner, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// IsSetServers returns a boolean if a field has been set.
func (o *UpdateHostCloudRequest) IsSetServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []UpdateHostCloudRequestServersInner and assigns it to the Servers field.
func (o *UpdateHostCloudRequest) SetServers(v []UpdateHostCloudRequestServersInner) {
	o.Servers = v
}

func (o UpdateHostCloudRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostCloudRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudId) {
		toSerialize["cloudId"] = o.CloudId
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	return toSerialize, nil
}

type NullableUpdateHostCloudRequest struct {
	value *UpdateHostCloudRequest
	isSet bool
}

func (v NullableUpdateHostCloudRequest) Get() *UpdateHostCloudRequest {
	return v.value
}

func (v *NullableUpdateHostCloudRequest) Set(val *UpdateHostCloudRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostCloudRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostCloudRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostCloudRequest(val *UpdateHostCloudRequest) *NullableUpdateHostCloudRequest {
	return &NullableUpdateHostCloudRequest{value: val, isSet: true}
}

func (v NullableUpdateHostCloudRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostCloudRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


