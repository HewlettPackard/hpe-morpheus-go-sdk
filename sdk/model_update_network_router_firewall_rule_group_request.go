/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkRouterFirewallRuleGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkRouterFirewallRuleGroupRequest{}

// UpdateNetworkRouterFirewallRuleGroupRequest struct for UpdateNetworkRouterFirewallRuleGroupRequest
type UpdateNetworkRouterFirewallRuleGroupRequest struct {
	RuleGroup map[string]interface{} `json:"ruleGroup,omitempty"`
}

// NewUpdateNetworkRouterFirewallRuleGroupRequest instantiates a new UpdateNetworkRouterFirewallRuleGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkRouterFirewallRuleGroupRequest() *UpdateNetworkRouterFirewallRuleGroupRequest {
	this := UpdateNetworkRouterFirewallRuleGroupRequest{}
	return &this
}

// NewUpdateNetworkRouterFirewallRuleGroupRequestWithDefaults instantiates a new UpdateNetworkRouterFirewallRuleGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkRouterFirewallRuleGroupRequestWithDefaults() *UpdateNetworkRouterFirewallRuleGroupRequest {
	this := UpdateNetworkRouterFirewallRuleGroupRequest{}
	return &this
}

// GetRuleGroup returns the RuleGroup field value if set, zero value otherwise.
func (o *UpdateNetworkRouterFirewallRuleGroupRequest) GetRuleGroup() map[string]interface{} {
	if o == nil || IsNil(o.RuleGroup) {
		var ret map[string]interface{}
		return ret
	}
	return o.RuleGroup
}

// GetRuleGroupOk returns a tuple with the RuleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkRouterFirewallRuleGroupRequest) GetRuleGroupOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RuleGroup) {
		return map[string]interface{}{}, false
	}
	return o.RuleGroup, true
}

// IsSetRuleGroup returns a boolean if a field has been set.
func (o *UpdateNetworkRouterFirewallRuleGroupRequest) IsSetRuleGroup() bool {
	if o != nil && !IsNil(o.RuleGroup) {
		return true
	}

	return false
}

// SetRuleGroup gets a reference to the given map[string]interface{} and assigns it to the RuleGroup field.
func (o *UpdateNetworkRouterFirewallRuleGroupRequest) SetRuleGroup(v map[string]interface{}) {
	o.RuleGroup = v
}

func (o UpdateNetworkRouterFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkRouterFirewallRuleGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleGroup) {
		toSerialize["ruleGroup"] = o.RuleGroup
	}
	return toSerialize, nil
}

type NullableUpdateNetworkRouterFirewallRuleGroupRequest struct {
	value *UpdateNetworkRouterFirewallRuleGroupRequest
	isSet bool
}

func (v NullableUpdateNetworkRouterFirewallRuleGroupRequest) Get() *UpdateNetworkRouterFirewallRuleGroupRequest {
	return v.value
}

func (v *NullableUpdateNetworkRouterFirewallRuleGroupRequest) Set(val *UpdateNetworkRouterFirewallRuleGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkRouterFirewallRuleGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkRouterFirewallRuleGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkRouterFirewallRuleGroupRequest(val *UpdateNetworkRouterFirewallRuleGroupRequest) *NullableUpdateNetworkRouterFirewallRuleGroupRequest {
	return &NullableUpdateNetworkRouterFirewallRuleGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkRouterFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkRouterFirewallRuleGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


