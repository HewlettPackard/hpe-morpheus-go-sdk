/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetClusterNamespaces200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClusterNamespaces200Response{}

// GetClusterNamespaces200Response struct for GetClusterNamespaces200Response
type GetClusterNamespaces200Response struct {
	Namespaces []GetClusterNamespaces200ResponseAllOfNamespacesInner `json:"namespaces,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewGetClusterNamespaces200Response instantiates a new GetClusterNamespaces200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClusterNamespaces200Response() *GetClusterNamespaces200Response {
	this := GetClusterNamespaces200Response{}
	return &this
}

// NewGetClusterNamespaces200ResponseWithDefaults instantiates a new GetClusterNamespaces200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClusterNamespaces200ResponseWithDefaults() *GetClusterNamespaces200Response {
	this := GetClusterNamespaces200Response{}
	return &this
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *GetClusterNamespaces200Response) GetNamespaces() []GetClusterNamespaces200ResponseAllOfNamespacesInner {
	if o == nil || IsNil(o.Namespaces) {
		var ret []GetClusterNamespaces200ResponseAllOfNamespacesInner
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClusterNamespaces200Response) GetNamespacesOk() ([]GetClusterNamespaces200ResponseAllOfNamespacesInner, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// IsSetNamespaces returns a boolean if a field has been set.
func (o *GetClusterNamespaces200Response) IsSetNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []GetClusterNamespaces200ResponseAllOfNamespacesInner and assigns it to the Namespaces field.
func (o *GetClusterNamespaces200Response) SetNamespaces(v []GetClusterNamespaces200ResponseAllOfNamespacesInner) {
	o.Namespaces = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetClusterNamespaces200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClusterNamespaces200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *GetClusterNamespaces200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *GetClusterNamespaces200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o GetClusterNamespaces200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClusterNamespaces200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableGetClusterNamespaces200Response struct {
	value *GetClusterNamespaces200Response
	isSet bool
}

func (v NullableGetClusterNamespaces200Response) Get() *GetClusterNamespaces200Response {
	return v.value
}

func (v *NullableGetClusterNamespaces200Response) Set(val *GetClusterNamespaces200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClusterNamespaces200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClusterNamespaces200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClusterNamespaces200Response(val *GetClusterNamespaces200Response) *NullableGetClusterNamespaces200Response {
	return &NullableGetClusterNamespaces200Response{value: val, isSet: true}
}

func (v NullableGetClusterNamespaces200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClusterNamespaces200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


