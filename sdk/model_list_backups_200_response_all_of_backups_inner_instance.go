/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListBackups200ResponseAllOfBackupsInnerInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackups200ResponseAllOfBackupsInnerInstance{}

// ListBackups200ResponseAllOfBackupsInnerInstance struct for ListBackups200ResponseAllOfBackupsInnerInstance
type ListBackups200ResponseAllOfBackupsInnerInstance struct {
	// Instance ID
	Id *int64 `json:"id,omitempty"`
	// Instance Name
	Name *string `json:"name,omitempty"`
}

// NewListBackups200ResponseAllOfBackupsInnerInstance instantiates a new ListBackups200ResponseAllOfBackupsInnerInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackups200ResponseAllOfBackupsInnerInstance() *ListBackups200ResponseAllOfBackupsInnerInstance {
	this := ListBackups200ResponseAllOfBackupsInnerInstance{}
	return &this
}

// NewListBackups200ResponseAllOfBackupsInnerInstanceWithDefaults instantiates a new ListBackups200ResponseAllOfBackupsInnerInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackups200ResponseAllOfBackupsInnerInstanceWithDefaults() *ListBackups200ResponseAllOfBackupsInnerInstance {
	this := ListBackups200ResponseAllOfBackupsInnerInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListBackups200ResponseAllOfBackupsInnerInstance) SetName(v string) {
	o.Name = &v
}

func (o ListBackups200ResponseAllOfBackupsInnerInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackups200ResponseAllOfBackupsInnerInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableListBackups200ResponseAllOfBackupsInnerInstance struct {
	value *ListBackups200ResponseAllOfBackupsInnerInstance
	isSet bool
}

func (v NullableListBackups200ResponseAllOfBackupsInnerInstance) Get() *ListBackups200ResponseAllOfBackupsInnerInstance {
	return v.value
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerInstance) Set(val *ListBackups200ResponseAllOfBackupsInnerInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackups200ResponseAllOfBackupsInnerInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackups200ResponseAllOfBackupsInnerInstance(val *ListBackups200ResponseAllOfBackupsInnerInstance) *NullableListBackups200ResponseAllOfBackupsInnerInstance {
	return &NullableListBackups200ResponseAllOfBackupsInnerInstance{value: val, isSet: true}
}

func (v NullableListBackups200ResponseAllOfBackupsInnerInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackups200ResponseAllOfBackupsInnerInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


