/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner{}

// AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner struct for AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner
type AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner struct {
	// Port number.
	Port *int64 `json:"port,omitempty"`
	// A name for the port.
	Name *string `json:"name,omitempty"`
	// The load balancer protocol. HTTP, HTTPS, or TCP.
	Lb *string `json:"lb,omitempty"`
}

// NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner instantiates a new AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner() *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner {
	this := AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner{}
	return &this
}

// NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInnerWithDefaults instantiates a new AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInnerWithDefaults() *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner {
	this := AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// IsSetPort returns a boolean if a field has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) IsSetPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) SetPort(v int64) {
	o.Port = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) SetName(v string) {
	o.Name = &v
}

// GetLb returns the Lb field value if set, zero value otherwise.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetLb() string {
	if o == nil || IsNil(o.Lb) {
		var ret string
		return ret
	}
	return *o.Lb
}

// GetLbOk returns a tuple with the Lb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) GetLbOk() (*string, bool) {
	if o == nil || IsNil(o.Lb) {
		return nil, false
	}
	return o.Lb, true
}

// IsSetLb returns a boolean if a field has been set.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) IsSetLb() bool {
	if o != nil && !IsNil(o.Lb) {
		return true
	}

	return false
}

// SetLb gets a reference to the given string and assigns it to the Lb field.
func (o *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) SetLb(v string) {
	o.Lb = &v
}

func (o AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Lb) {
		toSerialize["lb"] = o.Lb
	}
	return toSerialize, nil
}

type NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner struct {
	value *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner
	isSet bool
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) Get() *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner {
	return v.value
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) Set(val *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner(val *AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner {
	return &NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner{value: val, isSet: true}
}

func (v NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCatalogItemTypeRequestCatalogItemTypeOneOfConfigPortsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


