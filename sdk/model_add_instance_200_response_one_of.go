/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddInstance200ResponseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstance200ResponseOneOf{}

// AddInstance200ResponseOneOf struct for AddInstance200ResponseOneOf
type AddInstance200ResponseOneOf struct {
	Instance AddInstanceRequestInstance `json:"instance"`
	// The Cloud ID to provision the instance onto.
	ZoneId *int64 `json:"zoneId,omitempty"`
	// Environment Variables, an array of objects that have name and value.
	Evars []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"evars,omitempty"`
	// Number of copies to provision.
	Copies *int64 `json:"copies,omitempty"`
	// Apply a multiply factor of containers/vms within the instance.
	LayoutSize *int64 `json:"layoutSize,omitempty"`
	// Map of custom options depending on selected service plan.
	ServicePlanOptions map[string]interface{} `json:"servicePlanOptions,omitempty"`
	// Key for security group configuration. It should be passed as an array of objects containing the id of the security group to assign the instance to.
	SecurityGroups []map[string]interface{} `json:"securityGroups,omitempty"`
	// The (optional) volumes parameter is for LV configuration, can create additional LVs at provision It should be passed as an array of
	Volumes []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner `json:"volumes,omitempty"`
	// The networkInterfaces parameter is for network configuration.  The Options API `/api/options/zoneNetworkOptions?zoneId=5&provisionTypeId=10` can be used to see which options are available. 
	NetworkInterfaces []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner `json:"networkInterfaces,omitempty"`
	Config AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig `json:"config"`
	// Array of strings (keywords).
	Labels []string `json:"labels,omitempty"`
	// Metadata tags, Array of objects having a name and value.
	Tags []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"tags,omitempty"`
	// Alias for `tags`.
	Metadata []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"metadata,omitempty"`
	// The ports parameter is for port configuration.  The layout may have default ports, which are defined in node types, that are always configured. This parameter will be for additional custom ports to be opened. 
	Ports []AddInstanceRequestPortsInner `json:"ports,omitempty"`
	// The Workflow ID to execute.
	TaskSetId *int64 `json:"taskSetId,omitempty"`
	// The Workflow Name to execute.
	TaskSetName *string `json:"taskSetName,omitempty"`
	Success *bool `json:"success,omitempty"`
}

type _AddInstance200ResponseOneOf AddInstance200ResponseOneOf

// NewAddInstance200ResponseOneOf instantiates a new AddInstance200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstance200ResponseOneOf(instance AddInstanceRequestInstance, config AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig) *AddInstance200ResponseOneOf {
	this := AddInstance200ResponseOneOf{}
	this.Instance = instance
	var copies int64 = 1
	this.Copies = &copies
	var layoutSize int64 = 1
	this.LayoutSize = &layoutSize
	this.Config = config
	return &this
}

// NewAddInstance200ResponseOneOfWithDefaults instantiates a new AddInstance200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstance200ResponseOneOfWithDefaults() *AddInstance200ResponseOneOf {
	this := AddInstance200ResponseOneOf{}
	var copies int64 = 1
	this.Copies = &copies
	var layoutSize int64 = 1
	this.LayoutSize = &layoutSize
	return &this
}

// GetInstance returns the Instance field value
func (o *AddInstance200ResponseOneOf) GetInstance() AddInstanceRequestInstance {
	if o == nil {
		var ret AddInstanceRequestInstance
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetInstanceOk() (*AddInstanceRequestInstance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *AddInstance200ResponseOneOf) SetInstance(v AddInstanceRequestInstance) {
	o.Instance = v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetZoneId() int64 {
	if o == nil || IsNil(o.ZoneId) {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// IsSetZoneId returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *AddInstance200ResponseOneOf) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetEvars returns the Evars field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetEvars() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Evars) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Evars
}

// GetEvarsOk returns a tuple with the Evars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetEvarsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Evars) {
		return nil, false
	}
	return o.Evars, true
}

// IsSetEvars returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetEvars() bool {
	if o != nil && !IsNil(o.Evars) {
		return true
	}

	return false
}

// SetEvars gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Evars field.
func (o *AddInstance200ResponseOneOf) SetEvars(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Evars = v
}

// GetCopies returns the Copies field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetCopies() int64 {
	if o == nil || IsNil(o.Copies) {
		var ret int64
		return ret
	}
	return *o.Copies
}

// GetCopiesOk returns a tuple with the Copies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetCopiesOk() (*int64, bool) {
	if o == nil || IsNil(o.Copies) {
		return nil, false
	}
	return o.Copies, true
}

// IsSetCopies returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetCopies() bool {
	if o != nil && !IsNil(o.Copies) {
		return true
	}

	return false
}

// SetCopies gets a reference to the given int64 and assigns it to the Copies field.
func (o *AddInstance200ResponseOneOf) SetCopies(v int64) {
	o.Copies = &v
}

// GetLayoutSize returns the LayoutSize field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetLayoutSize() int64 {
	if o == nil || IsNil(o.LayoutSize) {
		var ret int64
		return ret
	}
	return *o.LayoutSize
}

// GetLayoutSizeOk returns a tuple with the LayoutSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetLayoutSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LayoutSize) {
		return nil, false
	}
	return o.LayoutSize, true
}

// IsSetLayoutSize returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetLayoutSize() bool {
	if o != nil && !IsNil(o.LayoutSize) {
		return true
	}

	return false
}

// SetLayoutSize gets a reference to the given int64 and assigns it to the LayoutSize field.
func (o *AddInstance200ResponseOneOf) SetLayoutSize(v int64) {
	o.LayoutSize = &v
}

// GetServicePlanOptions returns the ServicePlanOptions field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetServicePlanOptions() map[string]interface{} {
	if o == nil || IsNil(o.ServicePlanOptions) {
		var ret map[string]interface{}
		return ret
	}
	return o.ServicePlanOptions
}

// GetServicePlanOptionsOk returns a tuple with the ServicePlanOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetServicePlanOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ServicePlanOptions) {
		return map[string]interface{}{}, false
	}
	return o.ServicePlanOptions, true
}

// IsSetServicePlanOptions returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetServicePlanOptions() bool {
	if o != nil && !IsNil(o.ServicePlanOptions) {
		return true
	}

	return false
}

// SetServicePlanOptions gets a reference to the given map[string]interface{} and assigns it to the ServicePlanOptions field.
func (o *AddInstance200ResponseOneOf) SetServicePlanOptions(v map[string]interface{}) {
	o.ServicePlanOptions = v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetSecurityGroups() []map[string]interface{} {
	if o == nil || IsNil(o.SecurityGroups) {
		var ret []map[string]interface{}
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetSecurityGroupsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// IsSetSecurityGroups returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []map[string]interface{} and assigns it to the SecurityGroups field.
func (o *AddInstance200ResponseOneOf) SetSecurityGroups(v []map[string]interface{}) {
	o.SecurityGroups = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetVolumes() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner {
	if o == nil || IsNil(o.Volumes) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetVolumesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// IsSetVolumes returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner and assigns it to the Volumes field.
func (o *AddInstance200ResponseOneOf) SetVolumes(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigVolumesInner) {
	o.Volumes = v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetNetworkInterfaces() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetNetworkInterfacesOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// IsSetNetworkInterfaces returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner and assigns it to the NetworkInterfaces field.
func (o *AddInstance200ResponseOneOf) SetNetworkInterfaces(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigNetworkInterfacesInner) {
	o.NetworkInterfaces = v
}

// GetConfig returns the Config field value
func (o *AddInstance200ResponseOneOf) GetConfig() AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig {
	if o == nil {
		var ret AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetConfigOk() (*AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *AddInstance200ResponseOneOf) SetConfig(v AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigConfig) {
	o.Config = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *AddInstance200ResponseOneOf) SetLabels(v []string) {
	o.Labels = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetTags() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetTagsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Tags field.
func (o *AddInstance200ResponseOneOf) SetTags(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Tags = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetMetadata() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Metadata) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetMetadataOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// IsSetMetadata returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Metadata field.
func (o *AddInstance200ResponseOneOf) SetMetadata(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Metadata = v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetPorts() []AddInstanceRequestPortsInner {
	if o == nil || IsNil(o.Ports) {
		var ret []AddInstanceRequestPortsInner
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetPortsOk() ([]AddInstanceRequestPortsInner, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// IsSetPorts returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []AddInstanceRequestPortsInner and assigns it to the Ports field.
func (o *AddInstance200ResponseOneOf) SetPorts(v []AddInstanceRequestPortsInner) {
	o.Ports = v
}

// GetTaskSetId returns the TaskSetId field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetTaskSetId() int64 {
	if o == nil || IsNil(o.TaskSetId) {
		var ret int64
		return ret
	}
	return *o.TaskSetId
}

// GetTaskSetIdOk returns a tuple with the TaskSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetTaskSetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TaskSetId) {
		return nil, false
	}
	return o.TaskSetId, true
}

// IsSetTaskSetId returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetTaskSetId() bool {
	if o != nil && !IsNil(o.TaskSetId) {
		return true
	}

	return false
}

// SetTaskSetId gets a reference to the given int64 and assigns it to the TaskSetId field.
func (o *AddInstance200ResponseOneOf) SetTaskSetId(v int64) {
	o.TaskSetId = &v
}

// GetTaskSetName returns the TaskSetName field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetTaskSetName() string {
	if o == nil || IsNil(o.TaskSetName) {
		var ret string
		return ret
	}
	return *o.TaskSetName
}

// GetTaskSetNameOk returns a tuple with the TaskSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetTaskSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaskSetName) {
		return nil, false
	}
	return o.TaskSetName, true
}

// IsSetTaskSetName returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetTaskSetName() bool {
	if o != nil && !IsNil(o.TaskSetName) {
		return true
	}

	return false
}

// SetTaskSetName gets a reference to the given string and assigns it to the TaskSetName field.
func (o *AddInstance200ResponseOneOf) SetTaskSetName(v string) {
	o.TaskSetName = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddInstance200ResponseOneOf) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseOneOf) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddInstance200ResponseOneOf) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddInstance200ResponseOneOf) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddInstance200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstance200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance"] = o.Instance
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.Evars) {
		toSerialize["evars"] = o.Evars
	}
	if !IsNil(o.Copies) {
		toSerialize["copies"] = o.Copies
	}
	if !IsNil(o.LayoutSize) {
		toSerialize["layoutSize"] = o.LayoutSize
	}
	if !IsNil(o.ServicePlanOptions) {
		toSerialize["servicePlanOptions"] = o.ServicePlanOptions
	}
	if !IsNil(o.SecurityGroups) {
		toSerialize["securityGroups"] = o.SecurityGroups
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	toSerialize["config"] = o.Config
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.TaskSetId) {
		toSerialize["taskSetId"] = o.TaskSetId
	}
	if !IsNil(o.TaskSetName) {
		toSerialize["taskSetName"] = o.TaskSetName
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

func (o *AddInstance200ResponseOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instance",
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddInstance200ResponseOneOf := _AddInstance200ResponseOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddInstance200ResponseOneOf)

	if err != nil {
		return err
	}

	*o = AddInstance200ResponseOneOf(varAddInstance200ResponseOneOf)

	return err
}

type NullableAddInstance200ResponseOneOf struct {
	value *AddInstance200ResponseOneOf
	isSet bool
}

func (v NullableAddInstance200ResponseOneOf) Get() *AddInstance200ResponseOneOf {
	return v.value
}

func (v *NullableAddInstance200ResponseOneOf) Set(val *AddInstance200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInstance200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInstance200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInstance200ResponseOneOf(val *AddInstance200ResponseOneOf) *NullableAddInstance200ResponseOneOf {
	return &NullableAddInstance200ResponseOneOf{value: val, isSet: true}
}

func (v NullableAddInstance200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInstance200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


