/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AddRolesRequestRoleInstanceTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddRolesRequestRoleInstanceTypesInner{}

// AddRolesRequestRoleInstanceTypesInner struct for AddRolesRequestRoleInstanceTypesInner
type AddRolesRequestRoleInstanceTypesInner struct {
	// `id` of the instance type
	Id int32 `json:"id"`
	// The new access level.
	Access string `json:"access"`
	AdditionalProperties map[string]interface{}
}

type _AddRolesRequestRoleInstanceTypesInner AddRolesRequestRoleInstanceTypesInner

// NewAddRolesRequestRoleInstanceTypesInner instantiates a new AddRolesRequestRoleInstanceTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddRolesRequestRoleInstanceTypesInner(id int32, access string) *AddRolesRequestRoleInstanceTypesInner {
	this := AddRolesRequestRoleInstanceTypesInner{}
	this.Id = id
	this.Access = access
	return &this
}

// NewAddRolesRequestRoleInstanceTypesInnerWithDefaults instantiates a new AddRolesRequestRoleInstanceTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRolesRequestRoleInstanceTypesInnerWithDefaults() *AddRolesRequestRoleInstanceTypesInner {
	this := AddRolesRequestRoleInstanceTypesInner{}
	return &this
}

// GetId returns the Id field value
func (o *AddRolesRequestRoleInstanceTypesInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRoleInstanceTypesInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddRolesRequestRoleInstanceTypesInner) SetId(v int32) {
	o.Id = v
}

// GetAccess returns the Access field value
func (o *AddRolesRequestRoleInstanceTypesInner) GetAccess() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRoleInstanceTypesInner) GetAccessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *AddRolesRequestRoleInstanceTypesInner) SetAccess(v string) {
	o.Access = v
}

func (o AddRolesRequestRoleInstanceTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddRolesRequestRoleInstanceTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["access"] = o.Access

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddRolesRequestRoleInstanceTypesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"access",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddRolesRequestRoleInstanceTypesInner := _AddRolesRequestRoleInstanceTypesInner{}

	err = json.Unmarshal(data, &varAddRolesRequestRoleInstanceTypesInner)

	if err != nil {
		return err
	}

	*o = AddRolesRequestRoleInstanceTypesInner(varAddRolesRequestRoleInstanceTypesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "access")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddRolesRequestRoleInstanceTypesInner struct {
	value *AddRolesRequestRoleInstanceTypesInner
	isSet bool
}

func (v NullableAddRolesRequestRoleInstanceTypesInner) Get() *AddRolesRequestRoleInstanceTypesInner {
	return v.value
}

func (v *NullableAddRolesRequestRoleInstanceTypesInner) Set(val *AddRolesRequestRoleInstanceTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRolesRequestRoleInstanceTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRolesRequestRoleInstanceTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRolesRequestRoleInstanceTypesInner(val *AddRolesRequestRoleInstanceTypesInner) *NullableAddRolesRequestRoleInstanceTypesInner {
	return &NullableAddRolesRequestRoleInstanceTypesInner{value: val, isSet: true}
}

func (v NullableAddRolesRequestRoleInstanceTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRolesRequestRoleInstanceTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


