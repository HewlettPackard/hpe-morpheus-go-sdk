/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListUsages200ResponseMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsages200ResponseMeta{}

// ListUsages200ResponseMeta struct for ListUsages200ResponseMeta
type ListUsages200ResponseMeta struct {
	// Offset records, the number of records to skip, can be used to paginate over results.
	Offset *int64 `json:"offset,omitempty"`
	// Max size, the maximum number of records to include in the response.
	Max *int64 `json:"max,omitempty"`
	// Number of records returned in the response
	Size *int64 `json:"size,omitempty"`
	// Total number of records found
	Total *int64 `json:"total,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
}

// NewListUsages200ResponseMeta instantiates a new ListUsages200ResponseMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsages200ResponseMeta() *ListUsages200ResponseMeta {
	this := ListUsages200ResponseMeta{}
	var offset int64 = 0
	this.Offset = &offset
	var max int64 = 25
	this.Max = &max
	var size int64 = 0
	this.Size = &size
	var total int64 = 0
	this.Total = &total
	return &this
}

// NewListUsages200ResponseMetaWithDefaults instantiates a new ListUsages200ResponseMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsages200ResponseMetaWithDefaults() *ListUsages200ResponseMeta {
	this := ListUsages200ResponseMeta{}
	var offset int64 = 0
	this.Offset = &offset
	var max int64 = 25
	this.Max = &max
	var size int64 = 0
	this.Size = &size
	var total int64 = 0
	this.Total = &total
	return &this
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetOffset() int64 {
	if o == nil || IsNil(o.Offset) {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetOffsetOk() (*int64, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// IsSetOffset returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *ListUsages200ResponseMeta) SetOffset(v int64) {
	o.Offset = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetMax() int64 {
	if o == nil || IsNil(o.Max) {
		var ret int64
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// IsSetMax returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int64 and assigns it to the Max field.
func (o *ListUsages200ResponseMeta) SetMax(v int64) {
	o.Max = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// IsSetSize returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *ListUsages200ResponseMeta) SetSize(v int64) {
	o.Size = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// IsSetTotal returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *ListUsages200ResponseMeta) SetTotal(v int64) {
	o.Total = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// IsSetStartDate returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ListUsages200ResponseMeta) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ListUsages200ResponseMeta) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsages200ResponseMeta) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// IsSetEndDate returns a boolean if a field has been set.
func (o *ListUsages200ResponseMeta) IsSetEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ListUsages200ResponseMeta) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o ListUsages200ResponseMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUsages200ResponseMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableListUsages200ResponseMeta struct {
	value *ListUsages200ResponseMeta
	isSet bool
}

func (v NullableListUsages200ResponseMeta) Get() *ListUsages200ResponseMeta {
	return v.value
}

func (v *NullableListUsages200ResponseMeta) Set(val *ListUsages200ResponseMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsages200ResponseMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsages200ResponseMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsages200ResponseMeta(val *ListUsages200ResponseMeta) *NullableListUsages200ResponseMeta {
	return &NullableListUsages200ResponseMeta{value: val, isSet: true}
}

func (v NullableListUsages200ResponseMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsages200ResponseMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


