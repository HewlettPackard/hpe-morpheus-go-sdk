/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterSecrets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterSecrets200Response{}

// ListClusterSecrets200Response struct for ListClusterSecrets200Response
type ListClusterSecrets200Response struct {
	Secrets []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner `json:"secrets,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterSecrets200Response instantiates a new ListClusterSecrets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterSecrets200Response() *ListClusterSecrets200Response {
	this := ListClusterSecrets200Response{}
	return &this
}

// NewListClusterSecrets200ResponseWithDefaults instantiates a new ListClusterSecrets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterSecrets200ResponseWithDefaults() *ListClusterSecrets200Response {
	this := ListClusterSecrets200Response{}
	return &this
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *ListClusterSecrets200Response) GetSecrets() []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner {
	if o == nil || IsNil(o.Secrets) {
		var ret []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterSecrets200Response) GetSecretsOk() ([]ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// IsSetSecrets returns a boolean if a field has been set.
func (o *ListClusterSecrets200Response) IsSetSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner and assigns it to the Secrets field.
func (o *ListClusterSecrets200Response) SetSecrets(v []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner) {
	o.Secrets = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterSecrets200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterSecrets200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterSecrets200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterSecrets200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterSecrets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterSecrets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterSecrets200Response struct {
	value *ListClusterSecrets200Response
	isSet bool
}

func (v NullableListClusterSecrets200Response) Get() *ListClusterSecrets200Response {
	return v.value
}

func (v *NullableListClusterSecrets200Response) Set(val *ListClusterSecrets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterSecrets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterSecrets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterSecrets200Response(val *ListClusterSecrets200Response) *NullableListClusterSecrets200Response {
	return &NullableListClusterSecrets200Response{value: val, isSet: true}
}

func (v NullableListClusterSecrets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterSecrets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


