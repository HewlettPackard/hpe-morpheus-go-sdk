/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddInstanceTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstanceTypeRequest{}

// AddInstanceTypeRequest struct for AddInstanceTypeRequest
type AddInstanceTypeRequest struct {
	InstanceType *AddInstanceTypeRequestInstanceType `json:"instanceType,omitempty"`
}

// NewAddInstanceTypeRequest instantiates a new AddInstanceTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstanceTypeRequest() *AddInstanceTypeRequest {
	this := AddInstanceTypeRequest{}
	return &this
}

// NewAddInstanceTypeRequestWithDefaults instantiates a new AddInstanceTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstanceTypeRequestWithDefaults() *AddInstanceTypeRequest {
	this := AddInstanceTypeRequest{}
	return &this
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *AddInstanceTypeRequest) GetInstanceType() AddInstanceTypeRequestInstanceType {
	if o == nil || IsNil(o.InstanceType) {
		var ret AddInstanceTypeRequestInstanceType
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceTypeRequest) GetInstanceTypeOk() (*AddInstanceTypeRequestInstanceType, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// IsSetInstanceType returns a boolean if a field has been set.
func (o *AddInstanceTypeRequest) IsSetInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given AddInstanceTypeRequestInstanceType and assigns it to the InstanceType field.
func (o *AddInstanceTypeRequest) SetInstanceType(v AddInstanceTypeRequestInstanceType) {
	o.InstanceType = &v
}

func (o AddInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstanceTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceType) {
		toSerialize["instanceType"] = o.InstanceType
	}
	return toSerialize, nil
}

type NullableAddInstanceTypeRequest struct {
	value *AddInstanceTypeRequest
	isSet bool
}

func (v NullableAddInstanceTypeRequest) Get() *AddInstanceTypeRequest {
	return v.value
}

func (v *NullableAddInstanceTypeRequest) Set(val *AddInstanceTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInstanceTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInstanceTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInstanceTypeRequest(val *AddInstanceTypeRequest) *NullableAddInstanceTypeRequest {
	return &NullableAddInstanceTypeRequest{value: val, isSet: true}
}

func (v NullableAddInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInstanceTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


