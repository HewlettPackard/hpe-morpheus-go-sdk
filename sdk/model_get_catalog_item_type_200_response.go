/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetCatalogItemType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCatalogItemType200Response{}

// GetCatalogItemType200Response struct for GetCatalogItemType200Response
type GetCatalogItemType200Response struct {
	CatalogItemType      *ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner `json:"catalogItemType,omitempty"`
	AdditionalProperties map[string]interface{}                                     `json:",remain"`
}

type _GetCatalogItemType200Response GetCatalogItemType200Response

// NewGetCatalogItemType200Response instantiates a new GetCatalogItemType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCatalogItemType200Response() *GetCatalogItemType200Response {
	this := GetCatalogItemType200Response{}
	return &this
}

// NewGetCatalogItemType200ResponseWithDefaults instantiates a new GetCatalogItemType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCatalogItemType200ResponseWithDefaults() *GetCatalogItemType200Response {
	this := GetCatalogItemType200Response{}
	return &this
}

// GetCatalogItemType returns the CatalogItemType field value if set, zero value otherwise.
func (o *GetCatalogItemType200Response) GetCatalogItemType() ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner {
	if o == nil || IsNil(o.CatalogItemType) {
		var ret ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner
		return ret
	}
	return *o.CatalogItemType
}

// GetCatalogItemTypeOk returns a tuple with the CatalogItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCatalogItemType200Response) GetCatalogItemTypeOk() (*ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner, bool) {
	if o == nil || IsNil(o.CatalogItemType) {
		return nil, false
	}
	return o.CatalogItemType, true
}

// IsSetCatalogItemType returns a boolean if a field has been set.
func (o *GetCatalogItemType200Response) IsSetCatalogItemType() bool {
	if o != nil && !IsNil(o.CatalogItemType) {
		return true
	}

	return false
}

// SetCatalogItemType gets a reference to the given ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner and assigns it to the CatalogItemType field.
func (o *GetCatalogItemType200Response) SetCatalogItemType(v ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInner) {
	o.CatalogItemType = &v
}

func (o GetCatalogItemType200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCatalogItemType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogItemType) {
		toSerialize["catalogItemType"] = o.CatalogItemType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetCatalogItemType200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
