/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ZoneGcpConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneGcpConfig{}

// ZoneGcpConfig struct for ZoneGcpConfig
type ZoneGcpConfig struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	ClientEmail *string `json:"clientEmail,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	GoogleRegionId *string `json:"googleRegionId,omitempty"`
	ImportExisting *string `json:"importExisting,omitempty"`
	ApplianceUrl *string `json:"applianceUrl,omitempty"`
	DatacenterName *string `json:"datacenterName,omitempty"`
	NetworkServerId *string `json:"networkServer.id,omitempty"`
	NetworkServer *ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer `json:"networkServer,omitempty"`
	SecurityServer *string `json:"securityServer,omitempty"`
	CertificateProvider *string `json:"certificateProvider,omitempty"`
	BackupMode *string `json:"backupMode,omitempty"`
	ReplicationMode *string `json:"replicationMode,omitempty"`
	DnsIntegrationId *string `json:"dnsIntegrationId,omitempty"`
	ServiceRegistryId *string `json:"serviceRegistryId,omitempty"`
	ConfigManagementId *string `json:"configManagementId,omitempty"`
	PrivateKeyHash *string `json:"privateKeyHash,omitempty"`
}

// NewZoneGcpConfig instantiates a new ZoneGcpConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneGcpConfig() *ZoneGcpConfig {
	this := ZoneGcpConfig{}
	return &this
}

// NewZoneGcpConfigWithDefaults instantiates a new ZoneGcpConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneGcpConfigWithDefaults() *ZoneGcpConfig {
	this := ZoneGcpConfig{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// IsSetPrivateKey returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *ZoneGcpConfig) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetClientEmail returns the ClientEmail field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetClientEmail() string {
	if o == nil || IsNil(o.ClientEmail) {
		var ret string
		return ret
	}
	return *o.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetClientEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ClientEmail) {
		return nil, false
	}
	return o.ClientEmail, true
}

// IsSetClientEmail returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetClientEmail() bool {
	if o != nil && !IsNil(o.ClientEmail) {
		return true
	}

	return false
}

// SetClientEmail gets a reference to the given string and assigns it to the ClientEmail field.
func (o *ZoneGcpConfig) SetClientEmail(v string) {
	o.ClientEmail = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// IsSetProjectId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ZoneGcpConfig) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetGoogleRegionId returns the GoogleRegionId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetGoogleRegionId() string {
	if o == nil || IsNil(o.GoogleRegionId) {
		var ret string
		return ret
	}
	return *o.GoogleRegionId
}

// GetGoogleRegionIdOk returns a tuple with the GoogleRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetGoogleRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleRegionId) {
		return nil, false
	}
	return o.GoogleRegionId, true
}

// IsSetGoogleRegionId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetGoogleRegionId() bool {
	if o != nil && !IsNil(o.GoogleRegionId) {
		return true
	}

	return false
}

// SetGoogleRegionId gets a reference to the given string and assigns it to the GoogleRegionId field.
func (o *ZoneGcpConfig) SetGoogleRegionId(v string) {
	o.GoogleRegionId = &v
}

// GetImportExisting returns the ImportExisting field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetImportExisting() string {
	if o == nil || IsNil(o.ImportExisting) {
		var ret string
		return ret
	}
	return *o.ImportExisting
}

// GetImportExistingOk returns a tuple with the ImportExisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetImportExistingOk() (*string, bool) {
	if o == nil || IsNil(o.ImportExisting) {
		return nil, false
	}
	return o.ImportExisting, true
}

// IsSetImportExisting returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetImportExisting() bool {
	if o != nil && !IsNil(o.ImportExisting) {
		return true
	}

	return false
}

// SetImportExisting gets a reference to the given string and assigns it to the ImportExisting field.
func (o *ZoneGcpConfig) SetImportExisting(v string) {
	o.ImportExisting = &v
}

// GetApplianceUrl returns the ApplianceUrl field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetApplianceUrl() string {
	if o == nil || IsNil(o.ApplianceUrl) {
		var ret string
		return ret
	}
	return *o.ApplianceUrl
}

// GetApplianceUrlOk returns a tuple with the ApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceUrl) {
		return nil, false
	}
	return o.ApplianceUrl, true
}

// IsSetApplianceUrl returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetApplianceUrl() bool {
	if o != nil && !IsNil(o.ApplianceUrl) {
		return true
	}

	return false
}

// SetApplianceUrl gets a reference to the given string and assigns it to the ApplianceUrl field.
func (o *ZoneGcpConfig) SetApplianceUrl(v string) {
	o.ApplianceUrl = &v
}

// GetDatacenterName returns the DatacenterName field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetDatacenterName() string {
	if o == nil || IsNil(o.DatacenterName) {
		var ret string
		return ret
	}
	return *o.DatacenterName
}

// GetDatacenterNameOk returns a tuple with the DatacenterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetDatacenterNameOk() (*string, bool) {
	if o == nil || IsNil(o.DatacenterName) {
		return nil, false
	}
	return o.DatacenterName, true
}

// IsSetDatacenterName returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetDatacenterName() bool {
	if o != nil && !IsNil(o.DatacenterName) {
		return true
	}

	return false
}

// SetDatacenterName gets a reference to the given string and assigns it to the DatacenterName field.
func (o *ZoneGcpConfig) SetDatacenterName(v string) {
	o.DatacenterName = &v
}

// GetNetworkServerId returns the NetworkServerId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetNetworkServerId() string {
	if o == nil || IsNil(o.NetworkServerId) {
		var ret string
		return ret
	}
	return *o.NetworkServerId
}

// GetNetworkServerIdOk returns a tuple with the NetworkServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetNetworkServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkServerId) {
		return nil, false
	}
	return o.NetworkServerId, true
}

// IsSetNetworkServerId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetNetworkServerId() bool {
	if o != nil && !IsNil(o.NetworkServerId) {
		return true
	}

	return false
}

// SetNetworkServerId gets a reference to the given string and assigns it to the NetworkServerId field.
func (o *ZoneGcpConfig) SetNetworkServerId(v string) {
	o.NetworkServerId = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetNetworkServer() ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer {
	if o == nil || IsNil(o.NetworkServer) {
		var ret ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetNetworkServerOk() (*ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer and assigns it to the NetworkServer field.
func (o *ZoneGcpConfig) SetNetworkServer(v ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer) {
	o.NetworkServer = &v
}

// GetSecurityServer returns the SecurityServer field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetSecurityServer() string {
	if o == nil || IsNil(o.SecurityServer) {
		var ret string
		return ret
	}
	return *o.SecurityServer
}

// GetSecurityServerOk returns a tuple with the SecurityServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetSecurityServerOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityServer) {
		return nil, false
	}
	return o.SecurityServer, true
}

// IsSetSecurityServer returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetSecurityServer() bool {
	if o != nil && !IsNil(o.SecurityServer) {
		return true
	}

	return false
}

// SetSecurityServer gets a reference to the given string and assigns it to the SecurityServer field.
func (o *ZoneGcpConfig) SetSecurityServer(v string) {
	o.SecurityServer = &v
}

// GetCertificateProvider returns the CertificateProvider field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetCertificateProvider() string {
	if o == nil || IsNil(o.CertificateProvider) {
		var ret string
		return ret
	}
	return *o.CertificateProvider
}

// GetCertificateProviderOk returns a tuple with the CertificateProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetCertificateProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateProvider) {
		return nil, false
	}
	return o.CertificateProvider, true
}

// IsSetCertificateProvider returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetCertificateProvider() bool {
	if o != nil && !IsNil(o.CertificateProvider) {
		return true
	}

	return false
}

// SetCertificateProvider gets a reference to the given string and assigns it to the CertificateProvider field.
func (o *ZoneGcpConfig) SetCertificateProvider(v string) {
	o.CertificateProvider = &v
}

// GetBackupMode returns the BackupMode field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetBackupMode() string {
	if o == nil || IsNil(o.BackupMode) {
		var ret string
		return ret
	}
	return *o.BackupMode
}

// GetBackupModeOk returns a tuple with the BackupMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetBackupModeOk() (*string, bool) {
	if o == nil || IsNil(o.BackupMode) {
		return nil, false
	}
	return o.BackupMode, true
}

// IsSetBackupMode returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetBackupMode() bool {
	if o != nil && !IsNil(o.BackupMode) {
		return true
	}

	return false
}

// SetBackupMode gets a reference to the given string and assigns it to the BackupMode field.
func (o *ZoneGcpConfig) SetBackupMode(v string) {
	o.BackupMode = &v
}

// GetReplicationMode returns the ReplicationMode field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetReplicationMode() string {
	if o == nil || IsNil(o.ReplicationMode) {
		var ret string
		return ret
	}
	return *o.ReplicationMode
}

// GetReplicationModeOk returns a tuple with the ReplicationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetReplicationModeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationMode) {
		return nil, false
	}
	return o.ReplicationMode, true
}

// IsSetReplicationMode returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetReplicationMode() bool {
	if o != nil && !IsNil(o.ReplicationMode) {
		return true
	}

	return false
}

// SetReplicationMode gets a reference to the given string and assigns it to the ReplicationMode field.
func (o *ZoneGcpConfig) SetReplicationMode(v string) {
	o.ReplicationMode = &v
}

// GetDnsIntegrationId returns the DnsIntegrationId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetDnsIntegrationId() string {
	if o == nil || IsNil(o.DnsIntegrationId) {
		var ret string
		return ret
	}
	return *o.DnsIntegrationId
}

// GetDnsIntegrationIdOk returns a tuple with the DnsIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetDnsIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DnsIntegrationId) {
		return nil, false
	}
	return o.DnsIntegrationId, true
}

// IsSetDnsIntegrationId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetDnsIntegrationId() bool {
	if o != nil && !IsNil(o.DnsIntegrationId) {
		return true
	}

	return false
}

// SetDnsIntegrationId gets a reference to the given string and assigns it to the DnsIntegrationId field.
func (o *ZoneGcpConfig) SetDnsIntegrationId(v string) {
	o.DnsIntegrationId = &v
}

// GetServiceRegistryId returns the ServiceRegistryId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetServiceRegistryId() string {
	if o == nil || IsNil(o.ServiceRegistryId) {
		var ret string
		return ret
	}
	return *o.ServiceRegistryId
}

// GetServiceRegistryIdOk returns a tuple with the ServiceRegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetServiceRegistryIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceRegistryId) {
		return nil, false
	}
	return o.ServiceRegistryId, true
}

// IsSetServiceRegistryId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetServiceRegistryId() bool {
	if o != nil && !IsNil(o.ServiceRegistryId) {
		return true
	}

	return false
}

// SetServiceRegistryId gets a reference to the given string and assigns it to the ServiceRegistryId field.
func (o *ZoneGcpConfig) SetServiceRegistryId(v string) {
	o.ServiceRegistryId = &v
}

// GetConfigManagementId returns the ConfigManagementId field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetConfigManagementId() string {
	if o == nil || IsNil(o.ConfigManagementId) {
		var ret string
		return ret
	}
	return *o.ConfigManagementId
}

// GetConfigManagementIdOk returns a tuple with the ConfigManagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetConfigManagementIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigManagementId) {
		return nil, false
	}
	return o.ConfigManagementId, true
}

// IsSetConfigManagementId returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetConfigManagementId() bool {
	if o != nil && !IsNil(o.ConfigManagementId) {
		return true
	}

	return false
}

// SetConfigManagementId gets a reference to the given string and assigns it to the ConfigManagementId field.
func (o *ZoneGcpConfig) SetConfigManagementId(v string) {
	o.ConfigManagementId = &v
}

// GetPrivateKeyHash returns the PrivateKeyHash field value if set, zero value otherwise.
func (o *ZoneGcpConfig) GetPrivateKeyHash() string {
	if o == nil || IsNil(o.PrivateKeyHash) {
		var ret string
		return ret
	}
	return *o.PrivateKeyHash
}

// GetPrivateKeyHashOk returns a tuple with the PrivateKeyHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGcpConfig) GetPrivateKeyHashOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKeyHash) {
		return nil, false
	}
	return o.PrivateKeyHash, true
}

// IsSetPrivateKeyHash returns a boolean if a field has been set.
func (o *ZoneGcpConfig) IsSetPrivateKeyHash() bool {
	if o != nil && !IsNil(o.PrivateKeyHash) {
		return true
	}

	return false
}

// SetPrivateKeyHash gets a reference to the given string and assigns it to the PrivateKeyHash field.
func (o *ZoneGcpConfig) SetPrivateKeyHash(v string) {
	o.PrivateKeyHash = &v
}

func (o ZoneGcpConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneGcpConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrivateKey) {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if !IsNil(o.ClientEmail) {
		toSerialize["clientEmail"] = o.ClientEmail
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.GoogleRegionId) {
		toSerialize["googleRegionId"] = o.GoogleRegionId
	}
	if !IsNil(o.ImportExisting) {
		toSerialize["importExisting"] = o.ImportExisting
	}
	if !IsNil(o.ApplianceUrl) {
		toSerialize["applianceUrl"] = o.ApplianceUrl
	}
	if !IsNil(o.DatacenterName) {
		toSerialize["datacenterName"] = o.DatacenterName
	}
	if !IsNil(o.NetworkServerId) {
		toSerialize["networkServer.id"] = o.NetworkServerId
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	if !IsNil(o.SecurityServer) {
		toSerialize["securityServer"] = o.SecurityServer
	}
	if !IsNil(o.CertificateProvider) {
		toSerialize["certificateProvider"] = o.CertificateProvider
	}
	if !IsNil(o.BackupMode) {
		toSerialize["backupMode"] = o.BackupMode
	}
	if !IsNil(o.ReplicationMode) {
		toSerialize["replicationMode"] = o.ReplicationMode
	}
	if !IsNil(o.DnsIntegrationId) {
		toSerialize["dnsIntegrationId"] = o.DnsIntegrationId
	}
	if !IsNil(o.ServiceRegistryId) {
		toSerialize["serviceRegistryId"] = o.ServiceRegistryId
	}
	if !IsNil(o.ConfigManagementId) {
		toSerialize["configManagementId"] = o.ConfigManagementId
	}
	if !IsNil(o.PrivateKeyHash) {
		toSerialize["privateKeyHash"] = o.PrivateKeyHash
	}
	return toSerialize, nil
}

type NullableZoneGcpConfig struct {
	value *ZoneGcpConfig
	isSet bool
}

func (v NullableZoneGcpConfig) Get() *ZoneGcpConfig {
	return v.value
}

func (v *NullableZoneGcpConfig) Set(val *ZoneGcpConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneGcpConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneGcpConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneGcpConfig(val *ZoneGcpConfig) *NullableZoneGcpConfig {
	return &NullableZoneGcpConfig{value: val, isSet: true}
}

func (v NullableZoneGcpConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneGcpConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


