/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner{}

// ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner struct for ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner
type ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner struct {
	Id *int32 `json:"id,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	OptionTypes []map[string]interface{} `json:"optionTypes,omitempty"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
	Code *string `json:"code,omitempty"`
	VolumeType *string `json:"volumeType,omitempty"`
	MinStorage *string `json:"minStorage,omitempty"`
	Deletable *bool `json:"deletable,omitempty"`
	DefaultType *bool `json:"defaultType,omitempty"`
	CreateDatastore *string `json:"createDatastore,omitempty"`
	Resizable *bool `json:"resizable,omitempty"`
	StorageType *string `json:"storageType,omitempty"`
	AllowSearch *bool `json:"allowSearch,omitempty"`
	VolumeOptionSource *string `json:"volumeOptionSource,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	MinIOPS *string `json:"minIOPS,omitempty"`
	MaxIOPS *string `json:"maxIOPS,omitempty"`
	HasDatastore *bool `json:"hasDatastore,omitempty"`
	CustomSize *bool `json:"customSize,omitempty"`
	AutoDelete *bool `json:"autoDelete,omitempty"`
	Name *string `json:"name,omitempty"`
	ConfigurableIOPS *bool `json:"configurableIOPS,omitempty"`
	CustomLabel *bool `json:"customLabel,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Description *string `json:"description,omitempty"`
	VolumeCategory *string `json:"volumeCategory,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	MaxStorage *string `json:"maxStorage,omitempty"`
}

// NewListInstanceServicePlans200ResponsePlansInnerStorageTypesInner instantiates a new ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstanceServicePlans200ResponsePlansInnerStorageTypesInner() *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner {
	this := ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner{}
	return &this
}

// NewListInstanceServicePlans200ResponsePlansInnerStorageTypesInnerWithDefaults instantiates a new ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstanceServicePlans200ResponsePlansInnerStorageTypesInnerWithDefaults() *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner {
	this := ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetId(v int32) {
	o.Id = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetEditable() bool {
	if o == nil || IsNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.Editable) {
		return nil, false
	}
	return o.Editable, true
}

// IsSetEditable returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetEditable() bool {
	if o != nil && !IsNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetEditable(v bool) {
	o.Editable = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetOptionTypes() []map[string]interface{} {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []map[string]interface{}
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetOptionTypesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []map[string]interface{} and assigns it to the OptionTypes field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetOptionTypes(v []map[string]interface{}) {
	o.OptionTypes = v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDisplayOrder() int32 {
	if o == nil || IsNil(o.DisplayOrder) {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// IsSetDisplayOrder returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetDisplayOrder() bool {
	if o != nil && !IsNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetCode(v string) {
	o.Code = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeType() string {
	if o == nil || IsNil(o.VolumeType) {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeType) {
		return nil, false
	}
	return o.VolumeType, true
}

// IsSetVolumeType returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetVolumeType() bool {
	if o != nil && !IsNil(o.VolumeType) {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetVolumeType(v string) {
	o.VolumeType = &v
}

// GetMinStorage returns the MinStorage field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMinStorage() string {
	if o == nil || IsNil(o.MinStorage) {
		var ret string
		return ret
	}
	return *o.MinStorage
}

// GetMinStorageOk returns a tuple with the MinStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMinStorageOk() (*string, bool) {
	if o == nil || IsNil(o.MinStorage) {
		return nil, false
	}
	return o.MinStorage, true
}

// IsSetMinStorage returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetMinStorage() bool {
	if o != nil && !IsNil(o.MinStorage) {
		return true
	}

	return false
}

// SetMinStorage gets a reference to the given string and assigns it to the MinStorage field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetMinStorage(v string) {
	o.MinStorage = &v
}

// GetDeletable returns the Deletable field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDeletable() bool {
	if o == nil || IsNil(o.Deletable) {
		var ret bool
		return ret
	}
	return *o.Deletable
}

// GetDeletableOk returns a tuple with the Deletable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDeletableOk() (*bool, bool) {
	if o == nil || IsNil(o.Deletable) {
		return nil, false
	}
	return o.Deletable, true
}

// IsSetDeletable returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetDeletable() bool {
	if o != nil && !IsNil(o.Deletable) {
		return true
	}

	return false
}

// SetDeletable gets a reference to the given bool and assigns it to the Deletable field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetDeletable(v bool) {
	o.Deletable = &v
}

// GetDefaultType returns the DefaultType field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDefaultType() bool {
	if o == nil || IsNil(o.DefaultType) {
		var ret bool
		return ret
	}
	return *o.DefaultType
}

// GetDefaultTypeOk returns a tuple with the DefaultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDefaultTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultType) {
		return nil, false
	}
	return o.DefaultType, true
}

// IsSetDefaultType returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetDefaultType() bool {
	if o != nil && !IsNil(o.DefaultType) {
		return true
	}

	return false
}

// SetDefaultType gets a reference to the given bool and assigns it to the DefaultType field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetDefaultType(v bool) {
	o.DefaultType = &v
}

// GetCreateDatastore returns the CreateDatastore field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCreateDatastore() string {
	if o == nil || IsNil(o.CreateDatastore) {
		var ret string
		return ret
	}
	return *o.CreateDatastore
}

// GetCreateDatastoreOk returns a tuple with the CreateDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCreateDatastoreOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDatastore) {
		return nil, false
	}
	return o.CreateDatastore, true
}

// IsSetCreateDatastore returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetCreateDatastore() bool {
	if o != nil && !IsNil(o.CreateDatastore) {
		return true
	}

	return false
}

// SetCreateDatastore gets a reference to the given string and assigns it to the CreateDatastore field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetCreateDatastore(v string) {
	o.CreateDatastore = &v
}

// GetResizable returns the Resizable field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetResizable() bool {
	if o == nil || IsNil(o.Resizable) {
		var ret bool
		return ret
	}
	return *o.Resizable
}

// GetResizableOk returns a tuple with the Resizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetResizableOk() (*bool, bool) {
	if o == nil || IsNil(o.Resizable) {
		return nil, false
	}
	return o.Resizable, true
}

// IsSetResizable returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetResizable() bool {
	if o != nil && !IsNil(o.Resizable) {
		return true
	}

	return false
}

// SetResizable gets a reference to the given bool and assigns it to the Resizable field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetResizable(v bool) {
	o.Resizable = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetStorageType() string {
	if o == nil || IsNil(o.StorageType) {
		var ret string
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StorageType) {
		return nil, false
	}
	return o.StorageType, true
}

// IsSetStorageType returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetStorageType() bool {
	if o != nil && !IsNil(o.StorageType) {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given string and assigns it to the StorageType field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetStorageType(v string) {
	o.StorageType = &v
}

// GetAllowSearch returns the AllowSearch field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetAllowSearch() bool {
	if o == nil || IsNil(o.AllowSearch) {
		var ret bool
		return ret
	}
	return *o.AllowSearch
}

// GetAllowSearchOk returns a tuple with the AllowSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetAllowSearchOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSearch) {
		return nil, false
	}
	return o.AllowSearch, true
}

// IsSetAllowSearch returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetAllowSearch() bool {
	if o != nil && !IsNil(o.AllowSearch) {
		return true
	}

	return false
}

// SetAllowSearch gets a reference to the given bool and assigns it to the AllowSearch field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetAllowSearch(v bool) {
	o.AllowSearch = &v
}

// GetVolumeOptionSource returns the VolumeOptionSource field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeOptionSource() string {
	if o == nil || IsNil(o.VolumeOptionSource) {
		var ret string
		return ret
	}
	return *o.VolumeOptionSource
}

// GetVolumeOptionSourceOk returns a tuple with the VolumeOptionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeOptionSourceOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeOptionSource) {
		return nil, false
	}
	return o.VolumeOptionSource, true
}

// IsSetVolumeOptionSource returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetVolumeOptionSource() bool {
	if o != nil && !IsNil(o.VolumeOptionSource) {
		return true
	}

	return false
}

// SetVolumeOptionSource gets a reference to the given string and assigns it to the VolumeOptionSource field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetVolumeOptionSource(v string) {
	o.VolumeOptionSource = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// IsSetDisplayName returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetMinIOPS returns the MinIOPS field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMinIOPS() string {
	if o == nil || IsNil(o.MinIOPS) {
		var ret string
		return ret
	}
	return *o.MinIOPS
}

// GetMinIOPSOk returns a tuple with the MinIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMinIOPSOk() (*string, bool) {
	if o == nil || IsNil(o.MinIOPS) {
		return nil, false
	}
	return o.MinIOPS, true
}

// IsSetMinIOPS returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetMinIOPS() bool {
	if o != nil && !IsNil(o.MinIOPS) {
		return true
	}

	return false
}

// SetMinIOPS gets a reference to the given string and assigns it to the MinIOPS field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetMinIOPS(v string) {
	o.MinIOPS = &v
}

// GetMaxIOPS returns the MaxIOPS field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMaxIOPS() string {
	if o == nil || IsNil(o.MaxIOPS) {
		var ret string
		return ret
	}
	return *o.MaxIOPS
}

// GetMaxIOPSOk returns a tuple with the MaxIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMaxIOPSOk() (*string, bool) {
	if o == nil || IsNil(o.MaxIOPS) {
		return nil, false
	}
	return o.MaxIOPS, true
}

// IsSetMaxIOPS returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetMaxIOPS() bool {
	if o != nil && !IsNil(o.MaxIOPS) {
		return true
	}

	return false
}

// SetMaxIOPS gets a reference to the given string and assigns it to the MaxIOPS field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetMaxIOPS(v string) {
	o.MaxIOPS = &v
}

// GetHasDatastore returns the HasDatastore field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetHasDatastore() bool {
	if o == nil || IsNil(o.HasDatastore) {
		var ret bool
		return ret
	}
	return *o.HasDatastore
}

// GetHasDatastoreOk returns a tuple with the HasDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetHasDatastoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDatastore) {
		return nil, false
	}
	return o.HasDatastore, true
}

// IsSetHasDatastore returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetHasDatastore() bool {
	if o != nil && !IsNil(o.HasDatastore) {
		return true
	}

	return false
}

// SetHasDatastore gets a reference to the given bool and assigns it to the HasDatastore field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetHasDatastore(v bool) {
	o.HasDatastore = &v
}

// GetCustomSize returns the CustomSize field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCustomSize() bool {
	if o == nil || IsNil(o.CustomSize) {
		var ret bool
		return ret
	}
	return *o.CustomSize
}

// GetCustomSizeOk returns a tuple with the CustomSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCustomSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomSize) {
		return nil, false
	}
	return o.CustomSize, true
}

// IsSetCustomSize returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetCustomSize() bool {
	if o != nil && !IsNil(o.CustomSize) {
		return true
	}

	return false
}

// SetCustomSize gets a reference to the given bool and assigns it to the CustomSize field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetCustomSize(v bool) {
	o.CustomSize = &v
}

// GetAutoDelete returns the AutoDelete field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetAutoDelete() bool {
	if o == nil || IsNil(o.AutoDelete) {
		var ret bool
		return ret
	}
	return *o.AutoDelete
}

// GetAutoDeleteOk returns a tuple with the AutoDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetAutoDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoDelete) {
		return nil, false
	}
	return o.AutoDelete, true
}

// IsSetAutoDelete returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetAutoDelete() bool {
	if o != nil && !IsNil(o.AutoDelete) {
		return true
	}

	return false
}

// SetAutoDelete gets a reference to the given bool and assigns it to the AutoDelete field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetAutoDelete(v bool) {
	o.AutoDelete = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetName(v string) {
	o.Name = &v
}

// GetConfigurableIOPS returns the ConfigurableIOPS field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetConfigurableIOPS() bool {
	if o == nil || IsNil(o.ConfigurableIOPS) {
		var ret bool
		return ret
	}
	return *o.ConfigurableIOPS
}

// GetConfigurableIOPSOk returns a tuple with the ConfigurableIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetConfigurableIOPSOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfigurableIOPS) {
		return nil, false
	}
	return o.ConfigurableIOPS, true
}

// IsSetConfigurableIOPS returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetConfigurableIOPS() bool {
	if o != nil && !IsNil(o.ConfigurableIOPS) {
		return true
	}

	return false
}

// SetConfigurableIOPS gets a reference to the given bool and assigns it to the ConfigurableIOPS field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetConfigurableIOPS(v bool) {
	o.ConfigurableIOPS = &v
}

// GetCustomLabel returns the CustomLabel field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCustomLabel() bool {
	if o == nil || IsNil(o.CustomLabel) {
		var ret bool
		return ret
	}
	return *o.CustomLabel
}

// GetCustomLabelOk returns a tuple with the CustomLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetCustomLabelOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomLabel) {
		return nil, false
	}
	return o.CustomLabel, true
}

// IsSetCustomLabel returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetCustomLabel() bool {
	if o != nil && !IsNil(o.CustomLabel) {
		return true
	}

	return false
}

// SetCustomLabel gets a reference to the given bool and assigns it to the CustomLabel field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetCustomLabel(v bool) {
	o.CustomLabel = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetDescription(v string) {
	o.Description = &v
}

// GetVolumeCategory returns the VolumeCategory field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeCategory() string {
	if o == nil || IsNil(o.VolumeCategory) {
		var ret string
		return ret
	}
	return *o.VolumeCategory
}

// GetVolumeCategoryOk returns a tuple with the VolumeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetVolumeCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeCategory) {
		return nil, false
	}
	return o.VolumeCategory, true
}

// IsSetVolumeCategory returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetVolumeCategory() bool {
	if o != nil && !IsNil(o.VolumeCategory) {
		return true
	}

	return false
}

// SetVolumeCategory gets a reference to the given string and assigns it to the VolumeCategory field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetVolumeCategory(v string) {
	o.VolumeCategory = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMaxStorage() string {
	if o == nil || IsNil(o.MaxStorage) {
		var ret string
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) GetMaxStorageOk() (*string, bool) {
	if o == nil || IsNil(o.MaxStorage) {
		return nil, false
	}
	return o.MaxStorage, true
}

// IsSetMaxStorage returns a boolean if a field has been set.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSetMaxStorage() bool {
	if o != nil && !IsNil(o.MaxStorage) {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given string and assigns it to the MaxStorage field.
func (o *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) SetMaxStorage(v string) {
	o.MaxStorage = &v
}

func (o ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.DisplayOrder) {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.VolumeType) {
		toSerialize["volumeType"] = o.VolumeType
	}
	if !IsNil(o.MinStorage) {
		toSerialize["minStorage"] = o.MinStorage
	}
	if !IsNil(o.Deletable) {
		toSerialize["deletable"] = o.Deletable
	}
	if !IsNil(o.DefaultType) {
		toSerialize["defaultType"] = o.DefaultType
	}
	if !IsNil(o.CreateDatastore) {
		toSerialize["createDatastore"] = o.CreateDatastore
	}
	if !IsNil(o.Resizable) {
		toSerialize["resizable"] = o.Resizable
	}
	if !IsNil(o.StorageType) {
		toSerialize["storageType"] = o.StorageType
	}
	if !IsNil(o.AllowSearch) {
		toSerialize["allowSearch"] = o.AllowSearch
	}
	if !IsNil(o.VolumeOptionSource) {
		toSerialize["volumeOptionSource"] = o.VolumeOptionSource
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.MinIOPS) {
		toSerialize["minIOPS"] = o.MinIOPS
	}
	if !IsNil(o.MaxIOPS) {
		toSerialize["maxIOPS"] = o.MaxIOPS
	}
	if !IsNil(o.HasDatastore) {
		toSerialize["hasDatastore"] = o.HasDatastore
	}
	if !IsNil(o.CustomSize) {
		toSerialize["customSize"] = o.CustomSize
	}
	if !IsNil(o.AutoDelete) {
		toSerialize["autoDelete"] = o.AutoDelete
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ConfigurableIOPS) {
		toSerialize["configurableIOPS"] = o.ConfigurableIOPS
	}
	if !IsNil(o.CustomLabel) {
		toSerialize["customLabel"] = o.CustomLabel
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.VolumeCategory) {
		toSerialize["volumeCategory"] = o.VolumeCategory
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.MaxStorage) {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	return toSerialize, nil
}

type NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner struct {
	value *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner
	isSet bool
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) Get() *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner {
	return v.value
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) Set(val *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner(val *ListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) *NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner {
	return &NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner{value: val, isSet: true}
}

func (v NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstanceServicePlans200ResponsePlansInnerStorageTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


