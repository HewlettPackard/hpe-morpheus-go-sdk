/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateBackupSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBackupSettingsRequest{}

// UpdateBackupSettingsRequest struct for UpdateBackupSettingsRequest
type UpdateBackupSettingsRequest struct {
	BackupSettings       *UpdateBackupSettingsRequestBackupSettings `json:"backupSettings,omitempty"`
	AdditionalProperties map[string]interface{}                     `json:",remain"`
}

type _UpdateBackupSettingsRequest UpdateBackupSettingsRequest

// NewUpdateBackupSettingsRequest instantiates a new UpdateBackupSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBackupSettingsRequest() *UpdateBackupSettingsRequest {
	this := UpdateBackupSettingsRequest{}
	return &this
}

// NewUpdateBackupSettingsRequestWithDefaults instantiates a new UpdateBackupSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBackupSettingsRequestWithDefaults() *UpdateBackupSettingsRequest {
	this := UpdateBackupSettingsRequest{}
	return &this
}

// GetBackupSettings returns the BackupSettings field value if set, zero value otherwise.
func (o *UpdateBackupSettingsRequest) GetBackupSettings() UpdateBackupSettingsRequestBackupSettings {
	if o == nil || IsNil(o.BackupSettings) {
		var ret UpdateBackupSettingsRequestBackupSettings
		return ret
	}
	return *o.BackupSettings
}

// GetBackupSettingsOk returns a tuple with the BackupSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBackupSettingsRequest) GetBackupSettingsOk() (*UpdateBackupSettingsRequestBackupSettings, bool) {
	if o == nil || IsNil(o.BackupSettings) {
		return nil, false
	}
	return o.BackupSettings, true
}

// IsSetBackupSettings returns a boolean if a field has been set.
func (o *UpdateBackupSettingsRequest) IsSetBackupSettings() bool {
	if o != nil && !IsNil(o.BackupSettings) {
		return true
	}

	return false
}

// SetBackupSettings gets a reference to the given UpdateBackupSettingsRequestBackupSettings and assigns it to the BackupSettings field.
func (o *UpdateBackupSettingsRequest) SetBackupSettings(v UpdateBackupSettingsRequestBackupSettings) {
	o.BackupSettings = &v
}

func (o UpdateBackupSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBackupSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupSettings) {
		toSerialize["backupSettings"] = o.BackupSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateBackupSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
