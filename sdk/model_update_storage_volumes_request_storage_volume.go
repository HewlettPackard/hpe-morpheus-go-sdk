/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateStorageVolumesRequestStorageVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStorageVolumesRequestStorageVolume{}

// UpdateStorageVolumesRequestStorageVolume struct for UpdateStorageVolumesRequestStorageVolume
type UpdateStorageVolumesRequestStorageVolume struct {
	// A unique name scoped to your account for the storage volume
	Name *string `json:"name,omitempty"`
	// Storage Type Code or ID
	Type *string `json:"type,omitempty"`
	// Configuration object with parameters that vary by `type`.
	Config map[string]interface{} `json:"config,omitempty"`
	StorageServer *AddClusterLayoutsRequestLayoutMastersInnerContainerType `json:"storageServer,omitempty"`
	StorageGroup *AddClusterLayoutsRequestLayoutMastersInnerContainerType `json:"storageGroup,omitempty"`
}

// NewUpdateStorageVolumesRequestStorageVolume instantiates a new UpdateStorageVolumesRequestStorageVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStorageVolumesRequestStorageVolume() *UpdateStorageVolumesRequestStorageVolume {
	this := UpdateStorageVolumesRequestStorageVolume{}
	return &this
}

// NewUpdateStorageVolumesRequestStorageVolumeWithDefaults instantiates a new UpdateStorageVolumesRequestStorageVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStorageVolumesRequestStorageVolumeWithDefaults() *UpdateStorageVolumesRequestStorageVolume {
	this := UpdateStorageVolumesRequestStorageVolume{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateStorageVolumesRequestStorageVolume) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateStorageVolumesRequestStorageVolume) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateStorageVolumesRequestStorageVolume) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateStorageVolumesRequestStorageVolume) SetType(v string) {
	o.Type = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdateStorageVolumesRequestStorageVolume) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *UpdateStorageVolumesRequestStorageVolume) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetStorageServer returns the StorageServer field value if set, zero value otherwise.
func (o *UpdateStorageVolumesRequestStorageVolume) GetStorageServer() AddClusterLayoutsRequestLayoutMastersInnerContainerType {
	if o == nil || IsNil(o.StorageServer) {
		var ret AddClusterLayoutsRequestLayoutMastersInnerContainerType
		return ret
	}
	return *o.StorageServer
}

// GetStorageServerOk returns a tuple with the StorageServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) GetStorageServerOk() (*AddClusterLayoutsRequestLayoutMastersInnerContainerType, bool) {
	if o == nil || IsNil(o.StorageServer) {
		return nil, false
	}
	return o.StorageServer, true
}

// IsSetStorageServer returns a boolean if a field has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) IsSetStorageServer() bool {
	if o != nil && !IsNil(o.StorageServer) {
		return true
	}

	return false
}

// SetStorageServer gets a reference to the given AddClusterLayoutsRequestLayoutMastersInnerContainerType and assigns it to the StorageServer field.
func (o *UpdateStorageVolumesRequestStorageVolume) SetStorageServer(v AddClusterLayoutsRequestLayoutMastersInnerContainerType) {
	o.StorageServer = &v
}

// GetStorageGroup returns the StorageGroup field value if set, zero value otherwise.
func (o *UpdateStorageVolumesRequestStorageVolume) GetStorageGroup() AddClusterLayoutsRequestLayoutMastersInnerContainerType {
	if o == nil || IsNil(o.StorageGroup) {
		var ret AddClusterLayoutsRequestLayoutMastersInnerContainerType
		return ret
	}
	return *o.StorageGroup
}

// GetStorageGroupOk returns a tuple with the StorageGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) GetStorageGroupOk() (*AddClusterLayoutsRequestLayoutMastersInnerContainerType, bool) {
	if o == nil || IsNil(o.StorageGroup) {
		return nil, false
	}
	return o.StorageGroup, true
}

// IsSetStorageGroup returns a boolean if a field has been set.
func (o *UpdateStorageVolumesRequestStorageVolume) IsSetStorageGroup() bool {
	if o != nil && !IsNil(o.StorageGroup) {
		return true
	}

	return false
}

// SetStorageGroup gets a reference to the given AddClusterLayoutsRequestLayoutMastersInnerContainerType and assigns it to the StorageGroup field.
func (o *UpdateStorageVolumesRequestStorageVolume) SetStorageGroup(v AddClusterLayoutsRequestLayoutMastersInnerContainerType) {
	o.StorageGroup = &v
}

func (o UpdateStorageVolumesRequestStorageVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStorageVolumesRequestStorageVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.StorageServer) {
		toSerialize["storageServer"] = o.StorageServer
	}
	if !IsNil(o.StorageGroup) {
		toSerialize["storageGroup"] = o.StorageGroup
	}
	return toSerialize, nil
}

type NullableUpdateStorageVolumesRequestStorageVolume struct {
	value *UpdateStorageVolumesRequestStorageVolume
	isSet bool
}

func (v NullableUpdateStorageVolumesRequestStorageVolume) Get() *UpdateStorageVolumesRequestStorageVolume {
	return v.value
}

func (v *NullableUpdateStorageVolumesRequestStorageVolume) Set(val *UpdateStorageVolumesRequestStorageVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStorageVolumesRequestStorageVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStorageVolumesRequestStorageVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStorageVolumesRequestStorageVolume(val *UpdateStorageVolumesRequestStorageVolume) *NullableUpdateStorageVolumesRequestStorageVolume {
	return &NullableUpdateStorageVolumesRequestStorageVolume{value: val, isSet: true}
}

func (v NullableUpdateStorageVolumesRequestStorageVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStorageVolumesRequestStorageVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


