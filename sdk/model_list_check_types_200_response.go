/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListCheckTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCheckTypes200Response{}

// ListCheckTypes200Response struct for ListCheckTypes200Response
type ListCheckTypes200Response struct {
	CheckTypes []ListCheckTypes200ResponseAllOfCheckTypesInner `json:"checkTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListCheckTypes200Response instantiates a new ListCheckTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCheckTypes200Response() *ListCheckTypes200Response {
	this := ListCheckTypes200Response{}
	return &this
}

// NewListCheckTypes200ResponseWithDefaults instantiates a new ListCheckTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCheckTypes200ResponseWithDefaults() *ListCheckTypes200Response {
	this := ListCheckTypes200Response{}
	return &this
}

// GetCheckTypes returns the CheckTypes field value if set, zero value otherwise.
func (o *ListCheckTypes200Response) GetCheckTypes() []ListCheckTypes200ResponseAllOfCheckTypesInner {
	if o == nil || IsNil(o.CheckTypes) {
		var ret []ListCheckTypes200ResponseAllOfCheckTypesInner
		return ret
	}
	return o.CheckTypes
}

// GetCheckTypesOk returns a tuple with the CheckTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCheckTypes200Response) GetCheckTypesOk() ([]ListCheckTypes200ResponseAllOfCheckTypesInner, bool) {
	if o == nil || IsNil(o.CheckTypes) {
		return nil, false
	}
	return o.CheckTypes, true
}

// IsSetCheckTypes returns a boolean if a field has been set.
func (o *ListCheckTypes200Response) IsSetCheckTypes() bool {
	if o != nil && !IsNil(o.CheckTypes) {
		return true
	}

	return false
}

// SetCheckTypes gets a reference to the given []ListCheckTypes200ResponseAllOfCheckTypesInner and assigns it to the CheckTypes field.
func (o *ListCheckTypes200Response) SetCheckTypes(v []ListCheckTypes200ResponseAllOfCheckTypesInner) {
	o.CheckTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListCheckTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCheckTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListCheckTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListCheckTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListCheckTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCheckTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckTypes) {
		toSerialize["checkTypes"] = o.CheckTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListCheckTypes200Response struct {
	value *ListCheckTypes200Response
	isSet bool
}

func (v NullableListCheckTypes200Response) Get() *ListCheckTypes200Response {
	return v.value
}

func (v *NullableListCheckTypes200Response) Set(val *ListCheckTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListCheckTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListCheckTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCheckTypes200Response(val *ListCheckTypes200Response) *NullableListCheckTypes200Response {
	return &NullableListCheckTypes200Response{value: val, isSet: true}
}

func (v NullableListCheckTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCheckTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


