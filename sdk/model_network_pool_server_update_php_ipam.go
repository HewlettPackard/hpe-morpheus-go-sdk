/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the NetworkPoolServerUpdatePhpIpam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkPoolServerUpdatePhpIpam{}

// NetworkPoolServerUpdatePhpIpam struct for NetworkPoolServerUpdatePhpIpam
type NetworkPoolServerUpdatePhpIpam struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Can be used to enable / disable the network pool server.
	Enabled *bool `json:"enabled,omitempty"`
	// URL
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Username
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	// Password
	ServicePassword *string `json:"servicePassword,omitempty"`
	// Throttle Rate
	ServiceThrottleRate *int64 `json:"serviceThrottleRate,omitempty"`
	// Disable SSL SNI Verification
	IgnoreSsl *bool `json:"ignoreSsl,omitempty"`
	// Network Filter
	NetworkFilter *string `json:"networkFilter,omitempty"`
	Config *PhpIPAMNetworkPoolServerUpdateConfig `json:"config,omitempty"`
	Credential *NSXNetworkServerCredential `json:"credential,omitempty"`
}

// NewNetworkPoolServerUpdatePhpIpam instantiates a new NetworkPoolServerUpdatePhpIpam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPoolServerUpdatePhpIpam() *NetworkPoolServerUpdatePhpIpam {
	this := NetworkPoolServerUpdatePhpIpam{}
	var enabled bool = true
	this.Enabled = &enabled
	var serviceThrottleRate int64 = 0
	this.ServiceThrottleRate = &serviceThrottleRate
	return &this
}

// NewNetworkPoolServerUpdatePhpIpamWithDefaults instantiates a new NetworkPoolServerUpdatePhpIpam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPoolServerUpdatePhpIpamWithDefaults() *NetworkPoolServerUpdatePhpIpam {
	this := NetworkPoolServerUpdatePhpIpam{}
	var enabled bool = true
	this.Enabled = &enabled
	var serviceThrottleRate int64 = 0
	this.ServiceThrottleRate = &serviceThrottleRate
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkPoolServerUpdatePhpIpam) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkPoolServerUpdatePhpIpam) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *NetworkPoolServerUpdatePhpIpam) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *NetworkPoolServerUpdatePhpIpam) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *NetworkPoolServerUpdatePhpIpam) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetServiceThrottleRate returns the ServiceThrottleRate field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceThrottleRate() int64 {
	if o == nil || IsNil(o.ServiceThrottleRate) {
		var ret int64
		return ret
	}
	return *o.ServiceThrottleRate
}

// GetServiceThrottleRateOk returns a tuple with the ServiceThrottleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetServiceThrottleRateOk() (*int64, bool) {
	if o == nil || IsNil(o.ServiceThrottleRate) {
		return nil, false
	}
	return o.ServiceThrottleRate, true
}

// IsSetServiceThrottleRate returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetServiceThrottleRate() bool {
	if o != nil && !IsNil(o.ServiceThrottleRate) {
		return true
	}

	return false
}

// SetServiceThrottleRate gets a reference to the given int64 and assigns it to the ServiceThrottleRate field.
func (o *NetworkPoolServerUpdatePhpIpam) SetServiceThrottleRate(v int64) {
	o.ServiceThrottleRate = &v
}

// GetIgnoreSsl returns the IgnoreSsl field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetIgnoreSsl() bool {
	if o == nil || IsNil(o.IgnoreSsl) {
		var ret bool
		return ret
	}
	return *o.IgnoreSsl
}

// GetIgnoreSslOk returns a tuple with the IgnoreSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetIgnoreSslOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreSsl) {
		return nil, false
	}
	return o.IgnoreSsl, true
}

// IsSetIgnoreSsl returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetIgnoreSsl() bool {
	if o != nil && !IsNil(o.IgnoreSsl) {
		return true
	}

	return false
}

// SetIgnoreSsl gets a reference to the given bool and assigns it to the IgnoreSsl field.
func (o *NetworkPoolServerUpdatePhpIpam) SetIgnoreSsl(v bool) {
	o.IgnoreSsl = &v
}

// GetNetworkFilter returns the NetworkFilter field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetNetworkFilter() string {
	if o == nil || IsNil(o.NetworkFilter) {
		var ret string
		return ret
	}
	return *o.NetworkFilter
}

// GetNetworkFilterOk returns a tuple with the NetworkFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetNetworkFilterOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkFilter) {
		return nil, false
	}
	return o.NetworkFilter, true
}

// IsSetNetworkFilter returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetNetworkFilter() bool {
	if o != nil && !IsNil(o.NetworkFilter) {
		return true
	}

	return false
}

// SetNetworkFilter gets a reference to the given string and assigns it to the NetworkFilter field.
func (o *NetworkPoolServerUpdatePhpIpam) SetNetworkFilter(v string) {
	o.NetworkFilter = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetConfig() PhpIPAMNetworkPoolServerUpdateConfig {
	if o == nil || IsNil(o.Config) {
		var ret PhpIPAMNetworkPoolServerUpdateConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetConfigOk() (*PhpIPAMNetworkPoolServerUpdateConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given PhpIPAMNetworkPoolServerUpdateConfig and assigns it to the Config field.
func (o *NetworkPoolServerUpdatePhpIpam) SetConfig(v PhpIPAMNetworkPoolServerUpdateConfig) {
	o.Config = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdatePhpIpam) GetCredential() NSXNetworkServerCredential {
	if o == nil || IsNil(o.Credential) {
		var ret NSXNetworkServerCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdatePhpIpam) GetCredentialOk() (*NSXNetworkServerCredential, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// IsSetCredential returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdatePhpIpam) IsSetCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given NSXNetworkServerCredential and assigns it to the Credential field.
func (o *NetworkPoolServerUpdatePhpIpam) SetCredential(v NSXNetworkServerCredential) {
	o.Credential = &v
}

func (o NetworkPoolServerUpdatePhpIpam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkPoolServerUpdatePhpIpam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.ServiceThrottleRate) {
		toSerialize["serviceThrottleRate"] = o.ServiceThrottleRate
	}
	if !IsNil(o.IgnoreSsl) {
		toSerialize["ignoreSsl"] = o.IgnoreSsl
	}
	if !IsNil(o.NetworkFilter) {
		toSerialize["networkFilter"] = o.NetworkFilter
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	return toSerialize, nil
}

type NullableNetworkPoolServerUpdatePhpIpam struct {
	value *NetworkPoolServerUpdatePhpIpam
	isSet bool
}

func (v NullableNetworkPoolServerUpdatePhpIpam) Get() *NetworkPoolServerUpdatePhpIpam {
	return v.value
}

func (v *NullableNetworkPoolServerUpdatePhpIpam) Set(val *NetworkPoolServerUpdatePhpIpam) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPoolServerUpdatePhpIpam) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPoolServerUpdatePhpIpam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPoolServerUpdatePhpIpam(val *NetworkPoolServerUpdatePhpIpam) *NullableNetworkPoolServerUpdatePhpIpam {
	return &NullableNetworkPoolServerUpdatePhpIpam{value: val, isSet: true}
}

func (v NullableNetworkPoolServerUpdatePhpIpam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPoolServerUpdatePhpIpam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


