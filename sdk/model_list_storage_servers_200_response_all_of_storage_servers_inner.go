/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ListStorageServers200ResponseAllOfStorageServersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStorageServers200ResponseAllOfStorageServersInner{}

// ListStorageServers200ResponseAllOfStorageServersInner struct for ListStorageServers200ResponseAllOfStorageServersInner
type ListStorageServers200ResponseAllOfStorageServersInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"type,omitempty"`
	Chassis *string `json:"chassis,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description *string `json:"description,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	ServiceHost *string `json:"serviceHost,omitempty"`
	ServicePath *string `json:"servicePath,omitempty"`
	ServiceToken *string `json:"serviceToken,omitempty"`
	ServiceTokenHash *string `json:"serviceTokenHash,omitempty"`
	ServiceVersion *string `json:"serviceVersion,omitempty"`
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	ServicePassword *string `json:"servicePassword,omitempty"`
	ServicePasswordHash *string `json:"servicePasswordHash,omitempty"`
	InternalIp *string `json:"internalIp,omitempty"`
	ExternalIp *string `json:"externalIp,omitempty"`
	ApiPort *string `json:"apiPort,omitempty"`
	AdminPort *string `json:"adminPort,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	Category *string `json:"category,omitempty"`
	ServerVendor *string `json:"serverVendor,omitempty"`
	ServerModel *string `json:"serverModel,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
	StatusDate *time.Time `json:"statusDate,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	MaxStorage *string `json:"maxStorage,omitempty"`
	UsedStorage *string `json:"usedStorage,omitempty"`
	DiskCount *string `json:"diskCount,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Groups []map[string]interface{} `json:"groups,omitempty"`
	HostGroups []map[string]interface{} `json:"hostGroups,omitempty"`
	Hosts []map[string]interface{} `json:"hosts,omitempty"`
	Tenants []map[string]interface{} `json:"tenants,omitempty"`
	Owner *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"owner,omitempty"`
	Credential map[string]interface{} `json:"credential,omitempty"`
}

// NewListStorageServers200ResponseAllOfStorageServersInner instantiates a new ListStorageServers200ResponseAllOfStorageServersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageServers200ResponseAllOfStorageServersInner() *ListStorageServers200ResponseAllOfStorageServersInner {
	this := ListStorageServers200ResponseAllOfStorageServersInner{}
	return &this
}

// NewListStorageServers200ResponseAllOfStorageServersInnerWithDefaults instantiates a new ListStorageServers200ResponseAllOfStorageServersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageServers200ResponseAllOfStorageServersInnerWithDefaults() *ListStorageServers200ResponseAllOfStorageServersInner {
	this := ListStorageServers200ResponseAllOfStorageServersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.Type) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the Type field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.Type = &v
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetChassis() string {
	if o == nil || IsNil(o.Chassis) {
		var ret string
		return ret
	}
	return *o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetChassisOk() (*string, bool) {
	if o == nil || IsNil(o.Chassis) {
		return nil, false
	}
	return o.Chassis, true
}

// IsSetChassis returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetChassis() bool {
	if o != nil && !IsNil(o.Chassis) {
		return true
	}

	return false
}

// SetChassis gets a reference to the given string and assigns it to the Chassis field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetChassis(v string) {
	o.Chassis = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetDescription(v string) {
	o.Description = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// IsSetInternalId returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetServiceHost returns the ServiceHost field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceHost() string {
	if o == nil || IsNil(o.ServiceHost) {
		var ret string
		return ret
	}
	return *o.ServiceHost
}

// GetServiceHostOk returns a tuple with the ServiceHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceHostOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceHost) {
		return nil, false
	}
	return o.ServiceHost, true
}

// IsSetServiceHost returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceHost() bool {
	if o != nil && !IsNil(o.ServiceHost) {
		return true
	}

	return false
}

// SetServiceHost gets a reference to the given string and assigns it to the ServiceHost field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceHost(v string) {
	o.ServiceHost = &v
}

// GetServicePath returns the ServicePath field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePath() string {
	if o == nil || IsNil(o.ServicePath) {
		var ret string
		return ret
	}
	return *o.ServicePath
}

// GetServicePathOk returns a tuple with the ServicePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePathOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePath) {
		return nil, false
	}
	return o.ServicePath, true
}

// IsSetServicePath returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServicePath() bool {
	if o != nil && !IsNil(o.ServicePath) {
		return true
	}

	return false
}

// SetServicePath gets a reference to the given string and assigns it to the ServicePath field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServicePath(v string) {
	o.ServicePath = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceToken() string {
	if o == nil || IsNil(o.ServiceToken) {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceToken) {
		return nil, false
	}
	return o.ServiceToken, true
}

// IsSetServiceToken returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceToken() bool {
	if o != nil && !IsNil(o.ServiceToken) {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceToken(v string) {
	o.ServiceToken = &v
}

// GetServiceTokenHash returns the ServiceTokenHash field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceTokenHash() string {
	if o == nil || IsNil(o.ServiceTokenHash) {
		var ret string
		return ret
	}
	return *o.ServiceTokenHash
}

// GetServiceTokenHashOk returns a tuple with the ServiceTokenHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceTokenHashOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceTokenHash) {
		return nil, false
	}
	return o.ServiceTokenHash, true
}

// IsSetServiceTokenHash returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceTokenHash() bool {
	if o != nil && !IsNil(o.ServiceTokenHash) {
		return true
	}

	return false
}

// SetServiceTokenHash gets a reference to the given string and assigns it to the ServiceTokenHash field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceTokenHash(v string) {
	o.ServiceTokenHash = &v
}

// GetServiceVersion returns the ServiceVersion field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceVersion() string {
	if o == nil || IsNil(o.ServiceVersion) {
		var ret string
		return ret
	}
	return *o.ServiceVersion
}

// GetServiceVersionOk returns a tuple with the ServiceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceVersion) {
		return nil, false
	}
	return o.ServiceVersion, true
}

// IsSetServiceVersion returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceVersion() bool {
	if o != nil && !IsNil(o.ServiceVersion) {
		return true
	}

	return false
}

// SetServiceVersion gets a reference to the given string and assigns it to the ServiceVersion field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceVersion(v string) {
	o.ServiceVersion = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetServicePasswordHash returns the ServicePasswordHash field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePasswordHash() string {
	if o == nil || IsNil(o.ServicePasswordHash) {
		var ret string
		return ret
	}
	return *o.ServicePasswordHash
}

// GetServicePasswordHashOk returns a tuple with the ServicePasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServicePasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePasswordHash) {
		return nil, false
	}
	return o.ServicePasswordHash, true
}

// IsSetServicePasswordHash returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServicePasswordHash() bool {
	if o != nil && !IsNil(o.ServicePasswordHash) {
		return true
	}

	return false
}

// SetServicePasswordHash gets a reference to the given string and assigns it to the ServicePasswordHash field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServicePasswordHash(v string) {
	o.ServicePasswordHash = &v
}

// GetInternalIp returns the InternalIp field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetInternalIp() string {
	if o == nil || IsNil(o.InternalIp) {
		var ret string
		return ret
	}
	return *o.InternalIp
}

// GetInternalIpOk returns a tuple with the InternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetInternalIpOk() (*string, bool) {
	if o == nil || IsNil(o.InternalIp) {
		return nil, false
	}
	return o.InternalIp, true
}

// IsSetInternalIp returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetInternalIp() bool {
	if o != nil && !IsNil(o.InternalIp) {
		return true
	}

	return false
}

// SetInternalIp gets a reference to the given string and assigns it to the InternalIp field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetInternalIp(v string) {
	o.InternalIp = &v
}

// GetExternalIp returns the ExternalIp field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetExternalIp() string {
	if o == nil || IsNil(o.ExternalIp) {
		var ret string
		return ret
	}
	return *o.ExternalIp
}

// GetExternalIpOk returns a tuple with the ExternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetExternalIpOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalIp) {
		return nil, false
	}
	return o.ExternalIp, true
}

// IsSetExternalIp returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetExternalIp() bool {
	if o != nil && !IsNil(o.ExternalIp) {
		return true
	}

	return false
}

// SetExternalIp gets a reference to the given string and assigns it to the ExternalIp field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetExternalIp(v string) {
	o.ExternalIp = &v
}

// GetApiPort returns the ApiPort field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetApiPort() string {
	if o == nil || IsNil(o.ApiPort) {
		var ret string
		return ret
	}
	return *o.ApiPort
}

// GetApiPortOk returns a tuple with the ApiPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetApiPortOk() (*string, bool) {
	if o == nil || IsNil(o.ApiPort) {
		return nil, false
	}
	return o.ApiPort, true
}

// IsSetApiPort returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetApiPort() bool {
	if o != nil && !IsNil(o.ApiPort) {
		return true
	}

	return false
}

// SetApiPort gets a reference to the given string and assigns it to the ApiPort field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetApiPort(v string) {
	o.ApiPort = &v
}

// GetAdminPort returns the AdminPort field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetAdminPort() string {
	if o == nil || IsNil(o.AdminPort) {
		var ret string
		return ret
	}
	return *o.AdminPort
}

// GetAdminPortOk returns a tuple with the AdminPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetAdminPortOk() (*string, bool) {
	if o == nil || IsNil(o.AdminPort) {
		return nil, false
	}
	return o.AdminPort, true
}

// IsSetAdminPort returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetAdminPort() bool {
	if o != nil && !IsNil(o.AdminPort) {
		return true
	}

	return false
}

// SetAdminPort gets a reference to the given string and assigns it to the AdminPort field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetAdminPort(v string) {
	o.AdminPort = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetRefId(v int64) {
	o.RefId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetCategory(v string) {
	o.Category = &v
}

// GetServerVendor returns the ServerVendor field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServerVendor() string {
	if o == nil || IsNil(o.ServerVendor) {
		var ret string
		return ret
	}
	return *o.ServerVendor
}

// GetServerVendorOk returns a tuple with the ServerVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServerVendorOk() (*string, bool) {
	if o == nil || IsNil(o.ServerVendor) {
		return nil, false
	}
	return o.ServerVendor, true
}

// IsSetServerVendor returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServerVendor() bool {
	if o != nil && !IsNil(o.ServerVendor) {
		return true
	}

	return false
}

// SetServerVendor gets a reference to the given string and assigns it to the ServerVendor field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServerVendor(v string) {
	o.ServerVendor = &v
}

// GetServerModel returns the ServerModel field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServerModel() string {
	if o == nil || IsNil(o.ServerModel) {
		var ret string
		return ret
	}
	return *o.ServerModel
}

// GetServerModelOk returns a tuple with the ServerModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetServerModelOk() (*string, bool) {
	if o == nil || IsNil(o.ServerModel) {
		return nil, false
	}
	return o.ServerModel, true
}

// IsSetServerModel returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetServerModel() bool {
	if o != nil && !IsNil(o.ServerModel) {
		return true
	}

	return false
}

// SetServerModel gets a reference to the given string and assigns it to the ServerModel field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetServerModel(v string) {
	o.ServerModel = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// IsSetSerialNumber returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// IsSetStatusMessage returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatusDate() time.Time {
	if o == nil || IsNil(o.StatusDate) {
		var ret time.Time
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetStatusDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StatusDate) {
		return nil, false
	}
	return o.StatusDate, true
}

// IsSetStatusDate returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetStatusDate() bool {
	if o != nil && !IsNil(o.StatusDate) {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given time.Time and assigns it to the StatusDate field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetStatusDate(v time.Time) {
	o.StatusDate = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// IsSetErrorMessage returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetMaxStorage() string {
	if o == nil || IsNil(o.MaxStorage) {
		var ret string
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetMaxStorageOk() (*string, bool) {
	if o == nil || IsNil(o.MaxStorage) {
		return nil, false
	}
	return o.MaxStorage, true
}

// IsSetMaxStorage returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetMaxStorage() bool {
	if o != nil && !IsNil(o.MaxStorage) {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given string and assigns it to the MaxStorage field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetMaxStorage(v string) {
	o.MaxStorage = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetUsedStorage() string {
	if o == nil || IsNil(o.UsedStorage) {
		var ret string
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetUsedStorageOk() (*string, bool) {
	if o == nil || IsNil(o.UsedStorage) {
		return nil, false
	}
	return o.UsedStorage, true
}

// IsSetUsedStorage returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetUsedStorage() bool {
	if o != nil && !IsNil(o.UsedStorage) {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given string and assigns it to the UsedStorage field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetUsedStorage(v string) {
	o.UsedStorage = &v
}

// GetDiskCount returns the DiskCount field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDiskCount() string {
	if o == nil || IsNil(o.DiskCount) {
		var ret string
		return ret
	}
	return *o.DiskCount
}

// GetDiskCountOk returns a tuple with the DiskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDiskCountOk() (*string, bool) {
	if o == nil || IsNil(o.DiskCount) {
		return nil, false
	}
	return o.DiskCount, true
}

// IsSetDiskCount returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetDiskCount() bool {
	if o != nil && !IsNil(o.DiskCount) {
		return true
	}

	return false
}

// SetDiskCount gets a reference to the given string and assigns it to the DiskCount field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetDiskCount(v string) {
	o.DiskCount = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetGroups() []map[string]interface{} {
	if o == nil || IsNil(o.Groups) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetGroupsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// IsSetGroups returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []map[string]interface{} and assigns it to the Groups field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetGroups(v []map[string]interface{}) {
	o.Groups = v
}

// GetHostGroups returns the HostGroups field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetHostGroups() []map[string]interface{} {
	if o == nil || IsNil(o.HostGroups) {
		var ret []map[string]interface{}
		return ret
	}
	return o.HostGroups
}

// GetHostGroupsOk returns a tuple with the HostGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetHostGroupsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.HostGroups) {
		return nil, false
	}
	return o.HostGroups, true
}

// IsSetHostGroups returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetHostGroups() bool {
	if o != nil && !IsNil(o.HostGroups) {
		return true
	}

	return false
}

// SetHostGroups gets a reference to the given []map[string]interface{} and assigns it to the HostGroups field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetHostGroups(v []map[string]interface{}) {
	o.HostGroups = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetHosts() []map[string]interface{} {
	if o == nil || IsNil(o.Hosts) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetHostsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// IsSetHosts returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []map[string]interface{} and assigns it to the Hosts field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetHosts(v []map[string]interface{}) {
	o.Hosts = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetTenants() []map[string]interface{} {
	if o == nil || IsNil(o.Tenants) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetTenantsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []map[string]interface{} and assigns it to the Tenants field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetTenants(v []map[string]interface{}) {
	o.Tenants = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetOwner() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Owner) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetOwnerOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Owner field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetOwner(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Owner = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetCredential() map[string]interface{} {
	if o == nil || IsNil(o.Credential) {
		var ret map[string]interface{}
		return ret
	}
	return o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) GetCredentialOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Credential) {
		return map[string]interface{}{}, false
	}
	return o.Credential, true
}

// IsSetCredential returns a boolean if a field has been set.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) IsSetCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given map[string]interface{} and assigns it to the Credential field.
func (o *ListStorageServers200ResponseAllOfStorageServersInner) SetCredential(v map[string]interface{}) {
	o.Credential = v
}

func (o ListStorageServers200ResponseAllOfStorageServersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStorageServers200ResponseAllOfStorageServersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Chassis) {
		toSerialize["chassis"] = o.Chassis
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.ServiceHost) {
		toSerialize["serviceHost"] = o.ServiceHost
	}
	if !IsNil(o.ServicePath) {
		toSerialize["servicePath"] = o.ServicePath
	}
	if !IsNil(o.ServiceToken) {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	if !IsNil(o.ServiceTokenHash) {
		toSerialize["serviceTokenHash"] = o.ServiceTokenHash
	}
	if !IsNil(o.ServiceVersion) {
		toSerialize["serviceVersion"] = o.ServiceVersion
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.ServicePasswordHash) {
		toSerialize["servicePasswordHash"] = o.ServicePasswordHash
	}
	if !IsNil(o.InternalIp) {
		toSerialize["internalIp"] = o.InternalIp
	}
	if !IsNil(o.ExternalIp) {
		toSerialize["externalIp"] = o.ExternalIp
	}
	if !IsNil(o.ApiPort) {
		toSerialize["apiPort"] = o.ApiPort
	}
	if !IsNil(o.AdminPort) {
		toSerialize["adminPort"] = o.AdminPort
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ServerVendor) {
		toSerialize["serverVendor"] = o.ServerVendor
	}
	if !IsNil(o.ServerModel) {
		toSerialize["serverModel"] = o.ServerModel
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.StatusDate) {
		toSerialize["statusDate"] = o.StatusDate
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.MaxStorage) {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if !IsNil(o.UsedStorage) {
		toSerialize["usedStorage"] = o.UsedStorage
	}
	if !IsNil(o.DiskCount) {
		toSerialize["diskCount"] = o.DiskCount
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.HostGroups) {
		toSerialize["hostGroups"] = o.HostGroups
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	return toSerialize, nil
}

type NullableListStorageServers200ResponseAllOfStorageServersInner struct {
	value *ListStorageServers200ResponseAllOfStorageServersInner
	isSet bool
}

func (v NullableListStorageServers200ResponseAllOfStorageServersInner) Get() *ListStorageServers200ResponseAllOfStorageServersInner {
	return v.value
}

func (v *NullableListStorageServers200ResponseAllOfStorageServersInner) Set(val *ListStorageServers200ResponseAllOfStorageServersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageServers200ResponseAllOfStorageServersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageServers200ResponseAllOfStorageServersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageServers200ResponseAllOfStorageServersInner(val *ListStorageServers200ResponseAllOfStorageServersInner) *NullableListStorageServers200ResponseAllOfStorageServersInner {
	return &NullableListStorageServers200ResponseAllOfStorageServersInner{value: val, isSet: true}
}

func (v NullableListStorageServers200ResponseAllOfStorageServersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageServers200ResponseAllOfStorageServersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


