/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListReports200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListReports200Response{}

// ListReports200Response struct for ListReports200Response
type ListReports200Response struct {
	ReportResults []ListReports200ResponseAllOfReportResultsInner `json:"reportResults,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListReports200Response instantiates a new ListReports200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListReports200Response() *ListReports200Response {
	this := ListReports200Response{}
	return &this
}

// NewListReports200ResponseWithDefaults instantiates a new ListReports200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListReports200ResponseWithDefaults() *ListReports200Response {
	this := ListReports200Response{}
	return &this
}

// GetReportResults returns the ReportResults field value if set, zero value otherwise.
func (o *ListReports200Response) GetReportResults() []ListReports200ResponseAllOfReportResultsInner {
	if o == nil || IsNil(o.ReportResults) {
		var ret []ListReports200ResponseAllOfReportResultsInner
		return ret
	}
	return o.ReportResults
}

// GetReportResultsOk returns a tuple with the ReportResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListReports200Response) GetReportResultsOk() ([]ListReports200ResponseAllOfReportResultsInner, bool) {
	if o == nil || IsNil(o.ReportResults) {
		return nil, false
	}
	return o.ReportResults, true
}

// IsSetReportResults returns a boolean if a field has been set.
func (o *ListReports200Response) IsSetReportResults() bool {
	if o != nil && !IsNil(o.ReportResults) {
		return true
	}

	return false
}

// SetReportResults gets a reference to the given []ListReports200ResponseAllOfReportResultsInner and assigns it to the ReportResults field.
func (o *ListReports200Response) SetReportResults(v []ListReports200ResponseAllOfReportResultsInner) {
	o.ReportResults = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListReports200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListReports200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListReports200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListReports200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListReports200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListReports200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportResults) {
		toSerialize["reportResults"] = o.ReportResults
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListReports200Response struct {
	value *ListReports200Response
	isSet bool
}

func (v NullableListReports200Response) Get() *ListReports200Response {
	return v.value
}

func (v *NullableListReports200Response) Set(val *ListReports200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListReports200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListReports200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListReports200Response(val *ListReports200Response) *NullableListReports200Response {
	return &NullableListReports200Response{value: val, isSet: true}
}

func (v NullableListReports200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListReports200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


