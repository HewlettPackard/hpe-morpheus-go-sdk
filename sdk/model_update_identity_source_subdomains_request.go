/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateIdentitySourceSubdomainsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIdentitySourceSubdomainsRequest{}

// UpdateIdentitySourceSubdomainsRequest struct for UpdateIdentitySourceSubdomainsRequest
type UpdateIdentitySourceSubdomainsRequest struct {
	// New Subdomain for account
	Subdomain            string                 `json:"subdomain"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _UpdateIdentitySourceSubdomainsRequest UpdateIdentitySourceSubdomainsRequest

// NewUpdateIdentitySourceSubdomainsRequest instantiates a new UpdateIdentitySourceSubdomainsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIdentitySourceSubdomainsRequest(subdomain string) *UpdateIdentitySourceSubdomainsRequest {
	this := UpdateIdentitySourceSubdomainsRequest{}
	this.Subdomain = subdomain
	return &this
}

// NewUpdateIdentitySourceSubdomainsRequestWithDefaults instantiates a new UpdateIdentitySourceSubdomainsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIdentitySourceSubdomainsRequestWithDefaults() *UpdateIdentitySourceSubdomainsRequest {
	this := UpdateIdentitySourceSubdomainsRequest{}
	return &this
}

// GetSubdomain returns the Subdomain field value
func (o *UpdateIdentitySourceSubdomainsRequest) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *UpdateIdentitySourceSubdomainsRequest) GetSubdomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *UpdateIdentitySourceSubdomainsRequest) SetSubdomain(v string) {
	o.Subdomain = v
}

func (o UpdateIdentitySourceSubdomainsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIdentitySourceSubdomainsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subdomain"] = o.Subdomain

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateIdentitySourceSubdomainsRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
