/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2{}

// ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 - Backup Targets 
type ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 struct {
	BackupStorageIds []string `json:"backupStorageIds"`
	AdditionalProperties map[string]interface{}
}

type _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2(backupStorageIds []string) *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2{}
	this.BackupStorageIds = backupStorageIds
	return &this
}

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2WithDefaults instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2WithDefaults() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2{}
	return &this
}

// GetBackupStorageIds returns the BackupStorageIds field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) GetBackupStorageIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BackupStorageIds
}

// GetBackupStorageIdsOk returns a tuple with the BackupStorageIds field value
// and a boolean to check if the value has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) GetBackupStorageIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupStorageIds, true
}

// SetBackupStorageIds sets field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) SetBackupStorageIds(v []string) {
	o.BackupStorageIds = v
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backupStorageIds"] = o.BackupStorageIds

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backupStorageIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 := _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2{}

	err = json.Unmarshal(data, &varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2)

	if err != nil {
		return err
	}

	*o = ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2(varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "backupStorageIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 struct {
	value *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2
	isSet bool
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) Get() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 {
	return v.value
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) Set(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2 {
	return &NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2{value: val, isSet: true}
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


