/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetClusterNamespace200ResponseNamespacePermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClusterNamespace200ResponseNamespacePermissions{}

// GetClusterNamespace200ResponseNamespacePermissions struct for GetClusterNamespace200ResponseNamespacePermissions
type GetClusterNamespace200ResponseNamespacePermissions struct {
	ResourcePermissions  *GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions `json:"resourcePermissions,omitempty"`
	AdditionalProperties map[string]interface{}                                                 `json:",remain"`
}

type _GetClusterNamespace200ResponseNamespacePermissions GetClusterNamespace200ResponseNamespacePermissions

// NewGetClusterNamespace200ResponseNamespacePermissions instantiates a new GetClusterNamespace200ResponseNamespacePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClusterNamespace200ResponseNamespacePermissions() *GetClusterNamespace200ResponseNamespacePermissions {
	this := GetClusterNamespace200ResponseNamespacePermissions{}
	return &this
}

// NewGetClusterNamespace200ResponseNamespacePermissionsWithDefaults instantiates a new GetClusterNamespace200ResponseNamespacePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClusterNamespace200ResponseNamespacePermissionsWithDefaults() *GetClusterNamespace200ResponseNamespacePermissions {
	this := GetClusterNamespace200ResponseNamespacePermissions{}
	return &this
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *GetClusterNamespace200ResponseNamespacePermissions) GetResourcePermissions() GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClusterNamespace200ResponseNamespacePermissions) GetResourcePermissionsOk() (*GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *GetClusterNamespace200ResponseNamespacePermissions) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions and assigns it to the ResourcePermissions field.
func (o *GetClusterNamespace200ResponseNamespacePermissions) SetResourcePermissions(v GetClusterNamespace200ResponseNamespacePermissionsResourcePermissions) {
	o.ResourcePermissions = &v
}

func (o GetClusterNamespace200ResponseNamespacePermissions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClusterNamespace200ResponseNamespacePermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetClusterNamespace200ResponseNamespacePermissions) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
