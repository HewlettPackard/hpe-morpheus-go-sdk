/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions{}

// ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions struct for ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions
type ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions struct {
	// Operational Workflow ID
	OperationalWorkflowId string `json:"operationalWorkflowId"`
	// Operational Workflow Name
	OperationalWorkflowName *string `json:"operationalWorkflowName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions

// NewListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions(operationalWorkflowId string) *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions{}
	this.OperationalWorkflowId = operationalWorkflowId
	return &this
}

// NewListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptionsWithDefaults instantiates a new ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptionsWithDefaults() *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions {
	this := ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions{}
	return &this
}

// GetOperationalWorkflowId returns the OperationalWorkflowId field value
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) GetOperationalWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationalWorkflowId
}

// GetOperationalWorkflowIdOk returns a tuple with the OperationalWorkflowId field value
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) GetOperationalWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationalWorkflowId, true
}

// SetOperationalWorkflowId sets field value
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) SetOperationalWorkflowId(v string) {
	o.OperationalWorkflowId = v
}

// GetOperationalWorkflowName returns the OperationalWorkflowName field value if set, zero value otherwise.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) GetOperationalWorkflowName() string {
	if o == nil || IsNil(o.OperationalWorkflowName) {
		var ret string
		return ret
	}
	return *o.OperationalWorkflowName
}

// GetOperationalWorkflowNameOk returns a tuple with the OperationalWorkflowName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) GetOperationalWorkflowNameOk() (*string, bool) {
	if o == nil || IsNil(o.OperationalWorkflowName) {
		return nil, false
	}
	return o.OperationalWorkflowName, true
}

// IsSetOperationalWorkflowName returns a boolean if a field has been set.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) IsSetOperationalWorkflowName() bool {
	if o != nil && !IsNil(o.OperationalWorkflowName) {
		return true
	}

	return false
}

// SetOperationalWorkflowName gets a reference to the given string and assigns it to the OperationalWorkflowName field.
func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) SetOperationalWorkflowName(v string) {
	o.OperationalWorkflowName = &v
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operationalWorkflowId"] = o.OperationalWorkflowId
	if !IsNil(o.OperationalWorkflowName) {
		toSerialize["operationalWorkflowName"] = o.OperationalWorkflowName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operationalWorkflowId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions := _ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions{}

	err = json.Unmarshal(data, &varListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions)

	if err != nil {
		return err
	}

	*o = ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions(varListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "operationalWorkflowId")
		delete(additionalProperties, "operationalWorkflowName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions struct {
	value *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions
	isSet bool
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) Get() *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions {
	return v.value
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) Set(val *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions(val *ListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) *NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions {
	return &NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions{value: val, isSet: true}
}

func (v NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200ResponseAllOfTasksInnerAnyOf9TaskOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


