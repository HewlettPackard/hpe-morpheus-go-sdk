/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddOsTypesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOsTypesRequest{}

// AddOsTypesRequest struct for AddOsTypesRequest
type AddOsTypesRequest struct {
	OsType               *AddOsTypesRequestOsType `json:"osType,omitempty"`
	AdditionalProperties map[string]interface{}   `json:",remain"`
}

type _AddOsTypesRequest AddOsTypesRequest

// NewAddOsTypesRequest instantiates a new AddOsTypesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOsTypesRequest() *AddOsTypesRequest {
	this := AddOsTypesRequest{}
	return &this
}

// NewAddOsTypesRequestWithDefaults instantiates a new AddOsTypesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOsTypesRequestWithDefaults() *AddOsTypesRequest {
	this := AddOsTypesRequest{}
	return &this
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *AddOsTypesRequest) GetOsType() AddOsTypesRequestOsType {
	if o == nil || IsNil(o.OsType) {
		var ret AddOsTypesRequestOsType
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequest) GetOsTypeOk() (*AddOsTypesRequestOsType, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// IsSetOsType returns a boolean if a field has been set.
func (o *AddOsTypesRequest) IsSetOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given AddOsTypesRequestOsType and assigns it to the OsType field.
func (o *AddOsTypesRequest) SetOsType(v AddOsTypesRequestOsType) {
	o.OsType = &v
}

func (o AddOsTypesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOsTypesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddOsTypesRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
