/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListStorageServerTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStorageServerTypes200Response{}

// ListStorageServerTypes200Response struct for ListStorageServerTypes200Response
type ListStorageServerTypes200Response struct {
	StorageServerTypes []ListStorageServerTypes200ResponseAllOfStorageServerTypesInner `json:"storageServerTypes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListStorageServerTypes200Response instantiates a new ListStorageServerTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageServerTypes200Response() *ListStorageServerTypes200Response {
	this := ListStorageServerTypes200Response{}
	return &this
}

// NewListStorageServerTypes200ResponseWithDefaults instantiates a new ListStorageServerTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageServerTypes200ResponseWithDefaults() *ListStorageServerTypes200Response {
	this := ListStorageServerTypes200Response{}
	return &this
}

// GetStorageServerTypes returns the StorageServerTypes field value if set, zero value otherwise.
func (o *ListStorageServerTypes200Response) GetStorageServerTypes() []ListStorageServerTypes200ResponseAllOfStorageServerTypesInner {
	if o == nil || IsNil(o.StorageServerTypes) {
		var ret []ListStorageServerTypes200ResponseAllOfStorageServerTypesInner
		return ret
	}
	return o.StorageServerTypes
}

// GetStorageServerTypesOk returns a tuple with the StorageServerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServerTypes200Response) GetStorageServerTypesOk() ([]ListStorageServerTypes200ResponseAllOfStorageServerTypesInner, bool) {
	if o == nil || IsNil(o.StorageServerTypes) {
		return nil, false
	}
	return o.StorageServerTypes, true
}

// IsSetStorageServerTypes returns a boolean if a field has been set.
func (o *ListStorageServerTypes200Response) IsSetStorageServerTypes() bool {
	if o != nil && !IsNil(o.StorageServerTypes) {
		return true
	}

	return false
}

// SetStorageServerTypes gets a reference to the given []ListStorageServerTypes200ResponseAllOfStorageServerTypesInner and assigns it to the StorageServerTypes field.
func (o *ListStorageServerTypes200Response) SetStorageServerTypes(v []ListStorageServerTypes200ResponseAllOfStorageServerTypesInner) {
	o.StorageServerTypes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListStorageServerTypes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServerTypes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListStorageServerTypes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListStorageServerTypes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListStorageServerTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStorageServerTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageServerTypes) {
		toSerialize["storageServerTypes"] = o.StorageServerTypes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListStorageServerTypes200Response struct {
	value *ListStorageServerTypes200Response
	isSet bool
}

func (v NullableListStorageServerTypes200Response) Get() *ListStorageServerTypes200Response {
	return v.value
}

func (v *NullableListStorageServerTypes200Response) Set(val *ListStorageServerTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageServerTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageServerTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageServerTypes200Response(val *ListStorageServerTypes200Response) *NullableListStorageServerTypes200Response {
	return &NullableListStorageServerTypes200Response{value: val, isSet: true}
}

func (v NullableListStorageServerTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageServerTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


