/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddImageBuild200ResponseAllOfImageBuildConfigInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddImageBuild200ResponseAllOfImageBuildConfigInstance{}

// AddImageBuild200ResponseAllOfImageBuildConfigInstance struct for AddImageBuild200ResponseAllOfImageBuildConfigInstance
type AddImageBuild200ResponseAllOfImageBuildConfigInstance struct {
	Layout *ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan `json:"layout,omitempty"`
	Type *string `json:"type,omitempty"`
	UserGroup *ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer `json:"userGroup,omitempty"`
}

// NewAddImageBuild200ResponseAllOfImageBuildConfigInstance instantiates a new AddImageBuild200ResponseAllOfImageBuildConfigInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddImageBuild200ResponseAllOfImageBuildConfigInstance() *AddImageBuild200ResponseAllOfImageBuildConfigInstance {
	this := AddImageBuild200ResponseAllOfImageBuildConfigInstance{}
	return &this
}

// NewAddImageBuild200ResponseAllOfImageBuildConfigInstanceWithDefaults instantiates a new AddImageBuild200ResponseAllOfImageBuildConfigInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddImageBuild200ResponseAllOfImageBuildConfigInstanceWithDefaults() *AddImageBuild200ResponseAllOfImageBuildConfigInstance {
	this := AddImageBuild200ResponseAllOfImageBuildConfigInstance{}
	return &this
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetLayout() ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan {
	if o == nil || IsNil(o.Layout) {
		var ret ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetLayoutOk() (*ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan, bool) {
	if o == nil || IsNil(o.Layout) {
		return nil, false
	}
	return o.Layout, true
}

// IsSetLayout returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) IsSetLayout() bool {
	if o != nil && !IsNil(o.Layout) {
		return true
	}

	return false
}

// SetLayout gets a reference to the given ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan and assigns it to the Layout field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) SetLayout(v ListImageBuilds200ResponseAllOfImageBuildsInnerConfigPlan) {
	o.Layout = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) SetType(v string) {
	o.Type = &v
}

// GetUserGroup returns the UserGroup field value if set, zero value otherwise.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetUserGroup() ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer {
	if o == nil || IsNil(o.UserGroup) {
		var ret ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer
		return ret
	}
	return *o.UserGroup
}

// GetUserGroupOk returns a tuple with the UserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) GetUserGroupOk() (*ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer, bool) {
	if o == nil || IsNil(o.UserGroup) {
		return nil, false
	}
	return o.UserGroup, true
}

// IsSetUserGroup returns a boolean if a field has been set.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) IsSetUserGroup() bool {
	if o != nil && !IsNil(o.UserGroup) {
		return true
	}

	return false
}

// SetUserGroup gets a reference to the given ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer and assigns it to the UserGroup field.
func (o *AddImageBuild200ResponseAllOfImageBuildConfigInstance) SetUserGroup(v ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer) {
	o.UserGroup = &v
}

func (o AddImageBuild200ResponseAllOfImageBuildConfigInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddImageBuild200ResponseAllOfImageBuildConfigInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Layout) {
		toSerialize["layout"] = o.Layout
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserGroup) {
		toSerialize["userGroup"] = o.UserGroup
	}
	return toSerialize, nil
}

type NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance struct {
	value *AddImageBuild200ResponseAllOfImageBuildConfigInstance
	isSet bool
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) Get() *AddImageBuild200ResponseAllOfImageBuildConfigInstance {
	return v.value
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) Set(val *AddImageBuild200ResponseAllOfImageBuildConfigInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddImageBuild200ResponseAllOfImageBuildConfigInstance(val *AddImageBuild200ResponseAllOfImageBuildConfigInstance) *NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance {
	return &NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance{value: val, isSet: true}
}

func (v NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddImageBuild200ResponseAllOfImageBuildConfigInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


