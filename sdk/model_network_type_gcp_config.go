/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkTypeGcpConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkTypeGcpConfig{}

// NetworkTypeGcpConfig struct for NetworkTypeGcpConfig
type NetworkTypeGcpConfig struct {
	// GCP MTU
	Mtu string `json:"mtu"`
	ZonePool CreateNetworksRequestNetworkConfigAnyOf2ZonePool `json:"zonePool"`
	// Auto create subnets
	AutoCreate bool `json:"autoCreate"`
}

type _NetworkTypeGcpConfig NetworkTypeGcpConfig

// NewNetworkTypeGcpConfig instantiates a new NetworkTypeGcpConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTypeGcpConfig(mtu string, zonePool CreateNetworksRequestNetworkConfigAnyOf2ZonePool, autoCreate bool) *NetworkTypeGcpConfig {
	this := NetworkTypeGcpConfig{}
	this.Mtu = mtu
	this.ZonePool = zonePool
	this.AutoCreate = autoCreate
	return &this
}

// NewNetworkTypeGcpConfigWithDefaults instantiates a new NetworkTypeGcpConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTypeGcpConfigWithDefaults() *NetworkTypeGcpConfig {
	this := NetworkTypeGcpConfig{}
	var mtu string = "1460"
	this.Mtu = mtu
	var autoCreate bool = true
	this.AutoCreate = autoCreate
	return &this
}

// GetMtu returns the Mtu field value
func (o *NetworkTypeGcpConfig) GetMtu() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeGcpConfig) GetMtuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mtu, true
}

// SetMtu sets field value
func (o *NetworkTypeGcpConfig) SetMtu(v string) {
	o.Mtu = v
}

// GetZonePool returns the ZonePool field value
func (o *NetworkTypeGcpConfig) GetZonePool() CreateNetworksRequestNetworkConfigAnyOf2ZonePool {
	if o == nil {
		var ret CreateNetworksRequestNetworkConfigAnyOf2ZonePool
		return ret
	}

	return o.ZonePool
}

// GetZonePoolOk returns a tuple with the ZonePool field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeGcpConfig) GetZonePoolOk() (*CreateNetworksRequestNetworkConfigAnyOf2ZonePool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZonePool, true
}

// SetZonePool sets field value
func (o *NetworkTypeGcpConfig) SetZonePool(v CreateNetworksRequestNetworkConfigAnyOf2ZonePool) {
	o.ZonePool = v
}

// GetAutoCreate returns the AutoCreate field value
func (o *NetworkTypeGcpConfig) GetAutoCreate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoCreate
}

// GetAutoCreateOk returns a tuple with the AutoCreate field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeGcpConfig) GetAutoCreateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCreate, true
}

// SetAutoCreate sets field value
func (o *NetworkTypeGcpConfig) SetAutoCreate(v bool) {
	o.AutoCreate = v
}

func (o NetworkTypeGcpConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkTypeGcpConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mtu"] = o.Mtu
	toSerialize["zonePool"] = o.ZonePool
	toSerialize["autoCreate"] = o.AutoCreate
	return toSerialize, nil
}

func (o *NetworkTypeGcpConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mtu",
		"zonePool",
		"autoCreate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkTypeGcpConfig := _NetworkTypeGcpConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkTypeGcpConfig)

	if err != nil {
		return err
	}

	*o = NetworkTypeGcpConfig(varNetworkTypeGcpConfig)

	return err
}

type NullableNetworkTypeGcpConfig struct {
	value *NetworkTypeGcpConfig
	isSet bool
}

func (v NullableNetworkTypeGcpConfig) Get() *NetworkTypeGcpConfig {
	return v.value
}

func (v *NullableNetworkTypeGcpConfig) Set(val *NetworkTypeGcpConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTypeGcpConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTypeGcpConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTypeGcpConfig(val *NetworkTypeGcpConfig) *NullableNetworkTypeGcpConfig {
	return &NullableNetworkTypeGcpConfig{value: val, isSet: true}
}

func (v NullableNetworkTypeGcpConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTypeGcpConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


