/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkTransportZoneRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkTransportZoneRequest{}

// UpdateNetworkTransportZoneRequest The parameters for update a Network Transport Zone is type dependent. The following lists the common parameters. Get a specific network type to list available options for the network relay type. 
type UpdateNetworkTransportZoneRequest struct {
	NetworkScope *CreateNetworkTransportZoneRequestNetworkScope `json:"networkScope,omitempty"`
}

// NewUpdateNetworkTransportZoneRequest instantiates a new UpdateNetworkTransportZoneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkTransportZoneRequest() *UpdateNetworkTransportZoneRequest {
	this := UpdateNetworkTransportZoneRequest{}
	return &this
}

// NewUpdateNetworkTransportZoneRequestWithDefaults instantiates a new UpdateNetworkTransportZoneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkTransportZoneRequestWithDefaults() *UpdateNetworkTransportZoneRequest {
	this := UpdateNetworkTransportZoneRequest{}
	return &this
}

// GetNetworkScope returns the NetworkScope field value if set, zero value otherwise.
func (o *UpdateNetworkTransportZoneRequest) GetNetworkScope() CreateNetworkTransportZoneRequestNetworkScope {
	if o == nil || IsNil(o.NetworkScope) {
		var ret CreateNetworkTransportZoneRequestNetworkScope
		return ret
	}
	return *o.NetworkScope
}

// GetNetworkScopeOk returns a tuple with the NetworkScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkTransportZoneRequest) GetNetworkScopeOk() (*CreateNetworkTransportZoneRequestNetworkScope, bool) {
	if o == nil || IsNil(o.NetworkScope) {
		return nil, false
	}
	return o.NetworkScope, true
}

// IsSetNetworkScope returns a boolean if a field has been set.
func (o *UpdateNetworkTransportZoneRequest) IsSetNetworkScope() bool {
	if o != nil && !IsNil(o.NetworkScope) {
		return true
	}

	return false
}

// SetNetworkScope gets a reference to the given CreateNetworkTransportZoneRequestNetworkScope and assigns it to the NetworkScope field.
func (o *UpdateNetworkTransportZoneRequest) SetNetworkScope(v CreateNetworkTransportZoneRequestNetworkScope) {
	o.NetworkScope = &v
}

func (o UpdateNetworkTransportZoneRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkTransportZoneRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkScope) {
		toSerialize["networkScope"] = o.NetworkScope
	}
	return toSerialize, nil
}

type NullableUpdateNetworkTransportZoneRequest struct {
	value *UpdateNetworkTransportZoneRequest
	isSet bool
}

func (v NullableUpdateNetworkTransportZoneRequest) Get() *UpdateNetworkTransportZoneRequest {
	return v.value
}

func (v *NullableUpdateNetworkTransportZoneRequest) Set(val *UpdateNetworkTransportZoneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkTransportZoneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkTransportZoneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkTransportZoneRequest(val *UpdateNetworkTransportZoneRequest) *NullableUpdateNetworkTransportZoneRequest {
	return &NullableUpdateNetworkTransportZoneRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkTransportZoneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkTransportZoneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


