/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetIdentitySources200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIdentitySources200Response{}

// GetIdentitySources200Response struct for GetIdentitySources200Response
type GetIdentitySources200Response struct {
	UserSource *ListIdentitySources200ResponseAllOfUserSourcesInner `json:"userSource,omitempty"`
}

// NewGetIdentitySources200Response instantiates a new GetIdentitySources200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdentitySources200Response() *GetIdentitySources200Response {
	this := GetIdentitySources200Response{}
	return &this
}

// NewGetIdentitySources200ResponseWithDefaults instantiates a new GetIdentitySources200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdentitySources200ResponseWithDefaults() *GetIdentitySources200Response {
	this := GetIdentitySources200Response{}
	return &this
}

// GetUserSource returns the UserSource field value if set, zero value otherwise.
func (o *GetIdentitySources200Response) GetUserSource() ListIdentitySources200ResponseAllOfUserSourcesInner {
	if o == nil || IsNil(o.UserSource) {
		var ret ListIdentitySources200ResponseAllOfUserSourcesInner
		return ret
	}
	return *o.UserSource
}

// GetUserSourceOk returns a tuple with the UserSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentitySources200Response) GetUserSourceOk() (*ListIdentitySources200ResponseAllOfUserSourcesInner, bool) {
	if o == nil || IsNil(o.UserSource) {
		return nil, false
	}
	return o.UserSource, true
}

// IsSetUserSource returns a boolean if a field has been set.
func (o *GetIdentitySources200Response) IsSetUserSource() bool {
	if o != nil && !IsNil(o.UserSource) {
		return true
	}

	return false
}

// SetUserSource gets a reference to the given ListIdentitySources200ResponseAllOfUserSourcesInner and assigns it to the UserSource field.
func (o *GetIdentitySources200Response) SetUserSource(v ListIdentitySources200ResponseAllOfUserSourcesInner) {
	o.UserSource = &v
}

func (o GetIdentitySources200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIdentitySources200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserSource) {
		toSerialize["userSource"] = o.UserSource
	}
	return toSerialize, nil
}

type NullableGetIdentitySources200Response struct {
	value *GetIdentitySources200Response
	isSet bool
}

func (v NullableGetIdentitySources200Response) Get() *GetIdentitySources200Response {
	return v.value
}

func (v *NullableGetIdentitySources200Response) Set(val *GetIdentitySources200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdentitySources200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdentitySources200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdentitySources200Response(val *GetIdentitySources200Response) *NullableGetIdentitySources200Response {
	return &NullableGetIdentitySources200Response{value: val, isSet: true}
}

func (v NullableGetIdentitySources200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdentitySources200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


