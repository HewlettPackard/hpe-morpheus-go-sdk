/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ZoneVcenterConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneVcenterConfig{}

// ZoneVcenterConfig struct for ZoneVcenterConfig
type ZoneVcenterConfig struct {
	ApiUrl *string `json:"apiUrl,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	Datacenter *string `json:"datacenter,omitempty"`
	Cluster *string `json:"cluster,omitempty"`
	ResourcePoolId *string `json:"resourcePoolId,omitempty"`
	ResourcePool *string `json:"resourcePool,omitempty"`
	RpcMode *string `json:"rpcMode,omitempty"`
	HideHostSelection *string `json:"hideHostSelection,omitempty"`
	ImportExisting *string `json:"importExisting,omitempty"`
	EnableVnc *string `json:"enableVnc,omitempty"`
	EnableDiskTypeSelection *string `json:"enableDiskTypeSelection,omitempty"`
	EnableNetworkTypeSelection *string `json:"enableNetworkTypeSelection,omitempty"`
	DiskStorageType *string `json:"diskStorageType,omitempty"`
	ApplianceUrl *string `json:"applianceUrl,omitempty"`
	DatacenterName *string `json:"datacenterName,omitempty"`
	NetworkServerId *string `json:"networkServer.id,omitempty"`
	NetworkServer *ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer `json:"networkServer,omitempty"`
	SecurityMode *string `json:"securityMode,omitempty"`
	CertificateProvider *string `json:"certificateProvider,omitempty"`
	BackupMode *string `json:"backupMode,omitempty"`
	ReplicationMode *string `json:"replicationMode,omitempty"`
	DnsIntegrationId *string `json:"dnsIntegrationId,omitempty"`
	ConfigCmdbId *string `json:"configCmdbId,omitempty"`
	ConfigManagementId *string `json:"configManagementId,omitempty"`
	ConfigCmId *string `json:"configCmId,omitempty"`
	SecurityServer *string `json:"securityServer,omitempty"`
	ServiceRegistryId *string `json:"serviceRegistryId,omitempty"`
	KubeUrl *string `json:"kubeUrl,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	DatacenterId *string `json:"datacenterId,omitempty"`
	ConfigCmdbDiscovery *bool `json:"configCmdbDiscovery,omitempty"`
	DistributedWorkerId *string `json:"distributedWorkerId,omitempty"`
	PasswordHash *string `json:"passwordHash,omitempty"`
}

// NewZoneVcenterConfig instantiates a new ZoneVcenterConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneVcenterConfig() *ZoneVcenterConfig {
	this := ZoneVcenterConfig{}
	return &this
}

// NewZoneVcenterConfigWithDefaults instantiates a new ZoneVcenterConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneVcenterConfigWithDefaults() *ZoneVcenterConfig {
	this := ZoneVcenterConfig{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// IsSetApiUrl returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *ZoneVcenterConfig) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ZoneVcenterConfig) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// IsSetPassword returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ZoneVcenterConfig) SetPassword(v string) {
	o.Password = &v
}

// GetDatacenter returns the Datacenter field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDatacenter() string {
	if o == nil || IsNil(o.Datacenter) {
		var ret string
		return ret
	}
	return *o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDatacenterOk() (*string, bool) {
	if o == nil || IsNil(o.Datacenter) {
		return nil, false
	}
	return o.Datacenter, true
}

// IsSetDatacenter returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDatacenter() bool {
	if o != nil && !IsNil(o.Datacenter) {
		return true
	}

	return false
}

// SetDatacenter gets a reference to the given string and assigns it to the Datacenter field.
func (o *ZoneVcenterConfig) SetDatacenter(v string) {
	o.Datacenter = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *ZoneVcenterConfig) SetCluster(v string) {
	o.Cluster = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetResourcePoolId() string {
	if o == nil || IsNil(o.ResourcePoolId) {
		var ret string
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetResourcePoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcePoolId) {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// IsSetResourcePoolId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetResourcePoolId() bool {
	if o != nil && !IsNil(o.ResourcePoolId) {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given string and assigns it to the ResourcePoolId field.
func (o *ZoneVcenterConfig) SetResourcePoolId(v string) {
	o.ResourcePoolId = &v
}

// GetResourcePool returns the ResourcePool field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetResourcePool() string {
	if o == nil || IsNil(o.ResourcePool) {
		var ret string
		return ret
	}
	return *o.ResourcePool
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetResourcePoolOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcePool) {
		return nil, false
	}
	return o.ResourcePool, true
}

// IsSetResourcePool returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetResourcePool() bool {
	if o != nil && !IsNil(o.ResourcePool) {
		return true
	}

	return false
}

// SetResourcePool gets a reference to the given string and assigns it to the ResourcePool field.
func (o *ZoneVcenterConfig) SetResourcePool(v string) {
	o.ResourcePool = &v
}

// GetRpcMode returns the RpcMode field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetRpcMode() string {
	if o == nil || IsNil(o.RpcMode) {
		var ret string
		return ret
	}
	return *o.RpcMode
}

// GetRpcModeOk returns a tuple with the RpcMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetRpcModeOk() (*string, bool) {
	if o == nil || IsNil(o.RpcMode) {
		return nil, false
	}
	return o.RpcMode, true
}

// IsSetRpcMode returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetRpcMode() bool {
	if o != nil && !IsNil(o.RpcMode) {
		return true
	}

	return false
}

// SetRpcMode gets a reference to the given string and assigns it to the RpcMode field.
func (o *ZoneVcenterConfig) SetRpcMode(v string) {
	o.RpcMode = &v
}

// GetHideHostSelection returns the HideHostSelection field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetHideHostSelection() string {
	if o == nil || IsNil(o.HideHostSelection) {
		var ret string
		return ret
	}
	return *o.HideHostSelection
}

// GetHideHostSelectionOk returns a tuple with the HideHostSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetHideHostSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.HideHostSelection) {
		return nil, false
	}
	return o.HideHostSelection, true
}

// IsSetHideHostSelection returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetHideHostSelection() bool {
	if o != nil && !IsNil(o.HideHostSelection) {
		return true
	}

	return false
}

// SetHideHostSelection gets a reference to the given string and assigns it to the HideHostSelection field.
func (o *ZoneVcenterConfig) SetHideHostSelection(v string) {
	o.HideHostSelection = &v
}

// GetImportExisting returns the ImportExisting field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetImportExisting() string {
	if o == nil || IsNil(o.ImportExisting) {
		var ret string
		return ret
	}
	return *o.ImportExisting
}

// GetImportExistingOk returns a tuple with the ImportExisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetImportExistingOk() (*string, bool) {
	if o == nil || IsNil(o.ImportExisting) {
		return nil, false
	}
	return o.ImportExisting, true
}

// IsSetImportExisting returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetImportExisting() bool {
	if o != nil && !IsNil(o.ImportExisting) {
		return true
	}

	return false
}

// SetImportExisting gets a reference to the given string and assigns it to the ImportExisting field.
func (o *ZoneVcenterConfig) SetImportExisting(v string) {
	o.ImportExisting = &v
}

// GetEnableVnc returns the EnableVnc field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetEnableVnc() string {
	if o == nil || IsNil(o.EnableVnc) {
		var ret string
		return ret
	}
	return *o.EnableVnc
}

// GetEnableVncOk returns a tuple with the EnableVnc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetEnableVncOk() (*string, bool) {
	if o == nil || IsNil(o.EnableVnc) {
		return nil, false
	}
	return o.EnableVnc, true
}

// IsSetEnableVnc returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetEnableVnc() bool {
	if o != nil && !IsNil(o.EnableVnc) {
		return true
	}

	return false
}

// SetEnableVnc gets a reference to the given string and assigns it to the EnableVnc field.
func (o *ZoneVcenterConfig) SetEnableVnc(v string) {
	o.EnableVnc = &v
}

// GetEnableDiskTypeSelection returns the EnableDiskTypeSelection field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetEnableDiskTypeSelection() string {
	if o == nil || IsNil(o.EnableDiskTypeSelection) {
		var ret string
		return ret
	}
	return *o.EnableDiskTypeSelection
}

// GetEnableDiskTypeSelectionOk returns a tuple with the EnableDiskTypeSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetEnableDiskTypeSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDiskTypeSelection) {
		return nil, false
	}
	return o.EnableDiskTypeSelection, true
}

// IsSetEnableDiskTypeSelection returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetEnableDiskTypeSelection() bool {
	if o != nil && !IsNil(o.EnableDiskTypeSelection) {
		return true
	}

	return false
}

// SetEnableDiskTypeSelection gets a reference to the given string and assigns it to the EnableDiskTypeSelection field.
func (o *ZoneVcenterConfig) SetEnableDiskTypeSelection(v string) {
	o.EnableDiskTypeSelection = &v
}

// GetEnableNetworkTypeSelection returns the EnableNetworkTypeSelection field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetEnableNetworkTypeSelection() string {
	if o == nil || IsNil(o.EnableNetworkTypeSelection) {
		var ret string
		return ret
	}
	return *o.EnableNetworkTypeSelection
}

// GetEnableNetworkTypeSelectionOk returns a tuple with the EnableNetworkTypeSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetEnableNetworkTypeSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.EnableNetworkTypeSelection) {
		return nil, false
	}
	return o.EnableNetworkTypeSelection, true
}

// IsSetEnableNetworkTypeSelection returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetEnableNetworkTypeSelection() bool {
	if o != nil && !IsNil(o.EnableNetworkTypeSelection) {
		return true
	}

	return false
}

// SetEnableNetworkTypeSelection gets a reference to the given string and assigns it to the EnableNetworkTypeSelection field.
func (o *ZoneVcenterConfig) SetEnableNetworkTypeSelection(v string) {
	o.EnableNetworkTypeSelection = &v
}

// GetDiskStorageType returns the DiskStorageType field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDiskStorageType() string {
	if o == nil || IsNil(o.DiskStorageType) {
		var ret string
		return ret
	}
	return *o.DiskStorageType
}

// GetDiskStorageTypeOk returns a tuple with the DiskStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDiskStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiskStorageType) {
		return nil, false
	}
	return o.DiskStorageType, true
}

// IsSetDiskStorageType returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDiskStorageType() bool {
	if o != nil && !IsNil(o.DiskStorageType) {
		return true
	}

	return false
}

// SetDiskStorageType gets a reference to the given string and assigns it to the DiskStorageType field.
func (o *ZoneVcenterConfig) SetDiskStorageType(v string) {
	o.DiskStorageType = &v
}

// GetApplianceUrl returns the ApplianceUrl field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetApplianceUrl() string {
	if o == nil || IsNil(o.ApplianceUrl) {
		var ret string
		return ret
	}
	return *o.ApplianceUrl
}

// GetApplianceUrlOk returns a tuple with the ApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceUrl) {
		return nil, false
	}
	return o.ApplianceUrl, true
}

// IsSetApplianceUrl returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetApplianceUrl() bool {
	if o != nil && !IsNil(o.ApplianceUrl) {
		return true
	}

	return false
}

// SetApplianceUrl gets a reference to the given string and assigns it to the ApplianceUrl field.
func (o *ZoneVcenterConfig) SetApplianceUrl(v string) {
	o.ApplianceUrl = &v
}

// GetDatacenterName returns the DatacenterName field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDatacenterName() string {
	if o == nil || IsNil(o.DatacenterName) {
		var ret string
		return ret
	}
	return *o.DatacenterName
}

// GetDatacenterNameOk returns a tuple with the DatacenterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDatacenterNameOk() (*string, bool) {
	if o == nil || IsNil(o.DatacenterName) {
		return nil, false
	}
	return o.DatacenterName, true
}

// IsSetDatacenterName returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDatacenterName() bool {
	if o != nil && !IsNil(o.DatacenterName) {
		return true
	}

	return false
}

// SetDatacenterName gets a reference to the given string and assigns it to the DatacenterName field.
func (o *ZoneVcenterConfig) SetDatacenterName(v string) {
	o.DatacenterName = &v
}

// GetNetworkServerId returns the NetworkServerId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetNetworkServerId() string {
	if o == nil || IsNil(o.NetworkServerId) {
		var ret string
		return ret
	}
	return *o.NetworkServerId
}

// GetNetworkServerIdOk returns a tuple with the NetworkServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetNetworkServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkServerId) {
		return nil, false
	}
	return o.NetworkServerId, true
}

// IsSetNetworkServerId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetNetworkServerId() bool {
	if o != nil && !IsNil(o.NetworkServerId) {
		return true
	}

	return false
}

// SetNetworkServerId gets a reference to the given string and assigns it to the NetworkServerId field.
func (o *ZoneVcenterConfig) SetNetworkServerId(v string) {
	o.NetworkServerId = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetNetworkServer() ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer {
	if o == nil || IsNil(o.NetworkServer) {
		var ret ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetNetworkServerOk() (*ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer and assigns it to the NetworkServer field.
func (o *ZoneVcenterConfig) SetNetworkServer(v ListClouds200ResponseAllOfZonesInnerConfigAnyOfNetworkServer) {
	o.NetworkServer = &v
}

// GetSecurityMode returns the SecurityMode field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetSecurityMode() string {
	if o == nil || IsNil(o.SecurityMode) {
		var ret string
		return ret
	}
	return *o.SecurityMode
}

// GetSecurityModeOk returns a tuple with the SecurityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetSecurityModeOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityMode) {
		return nil, false
	}
	return o.SecurityMode, true
}

// IsSetSecurityMode returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetSecurityMode() bool {
	if o != nil && !IsNil(o.SecurityMode) {
		return true
	}

	return false
}

// SetSecurityMode gets a reference to the given string and assigns it to the SecurityMode field.
func (o *ZoneVcenterConfig) SetSecurityMode(v string) {
	o.SecurityMode = &v
}

// GetCertificateProvider returns the CertificateProvider field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetCertificateProvider() string {
	if o == nil || IsNil(o.CertificateProvider) {
		var ret string
		return ret
	}
	return *o.CertificateProvider
}

// GetCertificateProviderOk returns a tuple with the CertificateProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetCertificateProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateProvider) {
		return nil, false
	}
	return o.CertificateProvider, true
}

// IsSetCertificateProvider returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetCertificateProvider() bool {
	if o != nil && !IsNil(o.CertificateProvider) {
		return true
	}

	return false
}

// SetCertificateProvider gets a reference to the given string and assigns it to the CertificateProvider field.
func (o *ZoneVcenterConfig) SetCertificateProvider(v string) {
	o.CertificateProvider = &v
}

// GetBackupMode returns the BackupMode field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetBackupMode() string {
	if o == nil || IsNil(o.BackupMode) {
		var ret string
		return ret
	}
	return *o.BackupMode
}

// GetBackupModeOk returns a tuple with the BackupMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetBackupModeOk() (*string, bool) {
	if o == nil || IsNil(o.BackupMode) {
		return nil, false
	}
	return o.BackupMode, true
}

// IsSetBackupMode returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetBackupMode() bool {
	if o != nil && !IsNil(o.BackupMode) {
		return true
	}

	return false
}

// SetBackupMode gets a reference to the given string and assigns it to the BackupMode field.
func (o *ZoneVcenterConfig) SetBackupMode(v string) {
	o.BackupMode = &v
}

// GetReplicationMode returns the ReplicationMode field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetReplicationMode() string {
	if o == nil || IsNil(o.ReplicationMode) {
		var ret string
		return ret
	}
	return *o.ReplicationMode
}

// GetReplicationModeOk returns a tuple with the ReplicationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetReplicationModeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationMode) {
		return nil, false
	}
	return o.ReplicationMode, true
}

// IsSetReplicationMode returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetReplicationMode() bool {
	if o != nil && !IsNil(o.ReplicationMode) {
		return true
	}

	return false
}

// SetReplicationMode gets a reference to the given string and assigns it to the ReplicationMode field.
func (o *ZoneVcenterConfig) SetReplicationMode(v string) {
	o.ReplicationMode = &v
}

// GetDnsIntegrationId returns the DnsIntegrationId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDnsIntegrationId() string {
	if o == nil || IsNil(o.DnsIntegrationId) {
		var ret string
		return ret
	}
	return *o.DnsIntegrationId
}

// GetDnsIntegrationIdOk returns a tuple with the DnsIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDnsIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.DnsIntegrationId) {
		return nil, false
	}
	return o.DnsIntegrationId, true
}

// IsSetDnsIntegrationId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDnsIntegrationId() bool {
	if o != nil && !IsNil(o.DnsIntegrationId) {
		return true
	}

	return false
}

// SetDnsIntegrationId gets a reference to the given string and assigns it to the DnsIntegrationId field.
func (o *ZoneVcenterConfig) SetDnsIntegrationId(v string) {
	o.DnsIntegrationId = &v
}

// GetConfigCmdbId returns the ConfigCmdbId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetConfigCmdbId() string {
	if o == nil || IsNil(o.ConfigCmdbId) {
		var ret string
		return ret
	}
	return *o.ConfigCmdbId
}

// GetConfigCmdbIdOk returns a tuple with the ConfigCmdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetConfigCmdbIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigCmdbId) {
		return nil, false
	}
	return o.ConfigCmdbId, true
}

// IsSetConfigCmdbId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetConfigCmdbId() bool {
	if o != nil && !IsNil(o.ConfigCmdbId) {
		return true
	}

	return false
}

// SetConfigCmdbId gets a reference to the given string and assigns it to the ConfigCmdbId field.
func (o *ZoneVcenterConfig) SetConfigCmdbId(v string) {
	o.ConfigCmdbId = &v
}

// GetConfigManagementId returns the ConfigManagementId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetConfigManagementId() string {
	if o == nil || IsNil(o.ConfigManagementId) {
		var ret string
		return ret
	}
	return *o.ConfigManagementId
}

// GetConfigManagementIdOk returns a tuple with the ConfigManagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetConfigManagementIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigManagementId) {
		return nil, false
	}
	return o.ConfigManagementId, true
}

// IsSetConfigManagementId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetConfigManagementId() bool {
	if o != nil && !IsNil(o.ConfigManagementId) {
		return true
	}

	return false
}

// SetConfigManagementId gets a reference to the given string and assigns it to the ConfigManagementId field.
func (o *ZoneVcenterConfig) SetConfigManagementId(v string) {
	o.ConfigManagementId = &v
}

// GetConfigCmId returns the ConfigCmId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetConfigCmId() string {
	if o == nil || IsNil(o.ConfigCmId) {
		var ret string
		return ret
	}
	return *o.ConfigCmId
}

// GetConfigCmIdOk returns a tuple with the ConfigCmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetConfigCmIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigCmId) {
		return nil, false
	}
	return o.ConfigCmId, true
}

// IsSetConfigCmId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetConfigCmId() bool {
	if o != nil && !IsNil(o.ConfigCmId) {
		return true
	}

	return false
}

// SetConfigCmId gets a reference to the given string and assigns it to the ConfigCmId field.
func (o *ZoneVcenterConfig) SetConfigCmId(v string) {
	o.ConfigCmId = &v
}

// GetSecurityServer returns the SecurityServer field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetSecurityServer() string {
	if o == nil || IsNil(o.SecurityServer) {
		var ret string
		return ret
	}
	return *o.SecurityServer
}

// GetSecurityServerOk returns a tuple with the SecurityServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetSecurityServerOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityServer) {
		return nil, false
	}
	return o.SecurityServer, true
}

// IsSetSecurityServer returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetSecurityServer() bool {
	if o != nil && !IsNil(o.SecurityServer) {
		return true
	}

	return false
}

// SetSecurityServer gets a reference to the given string and assigns it to the SecurityServer field.
func (o *ZoneVcenterConfig) SetSecurityServer(v string) {
	o.SecurityServer = &v
}

// GetServiceRegistryId returns the ServiceRegistryId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetServiceRegistryId() string {
	if o == nil || IsNil(o.ServiceRegistryId) {
		var ret string
		return ret
	}
	return *o.ServiceRegistryId
}

// GetServiceRegistryIdOk returns a tuple with the ServiceRegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetServiceRegistryIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceRegistryId) {
		return nil, false
	}
	return o.ServiceRegistryId, true
}

// IsSetServiceRegistryId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetServiceRegistryId() bool {
	if o != nil && !IsNil(o.ServiceRegistryId) {
		return true
	}

	return false
}

// SetServiceRegistryId gets a reference to the given string and assigns it to the ServiceRegistryId field.
func (o *ZoneVcenterConfig) SetServiceRegistryId(v string) {
	o.ServiceRegistryId = &v
}

// GetKubeUrl returns the KubeUrl field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetKubeUrl() string {
	if o == nil || IsNil(o.KubeUrl) {
		var ret string
		return ret
	}
	return *o.KubeUrl
}

// GetKubeUrlOk returns a tuple with the KubeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetKubeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.KubeUrl) {
		return nil, false
	}
	return o.KubeUrl, true
}

// IsSetKubeUrl returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetKubeUrl() bool {
	if o != nil && !IsNil(o.KubeUrl) {
		return true
	}

	return false
}

// SetKubeUrl gets a reference to the given string and assigns it to the KubeUrl field.
func (o *ZoneVcenterConfig) SetKubeUrl(v string) {
	o.KubeUrl = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// IsSetApiVersion returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *ZoneVcenterConfig) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetDatacenterId returns the DatacenterId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDatacenterId() string {
	if o == nil || IsNil(o.DatacenterId) {
		var ret string
		return ret
	}
	return *o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDatacenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.DatacenterId) {
		return nil, false
	}
	return o.DatacenterId, true
}

// IsSetDatacenterId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDatacenterId() bool {
	if o != nil && !IsNil(o.DatacenterId) {
		return true
	}

	return false
}

// SetDatacenterId gets a reference to the given string and assigns it to the DatacenterId field.
func (o *ZoneVcenterConfig) SetDatacenterId(v string) {
	o.DatacenterId = &v
}

// GetConfigCmdbDiscovery returns the ConfigCmdbDiscovery field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetConfigCmdbDiscovery() bool {
	if o == nil || IsNil(o.ConfigCmdbDiscovery) {
		var ret bool
		return ret
	}
	return *o.ConfigCmdbDiscovery
}

// GetConfigCmdbDiscoveryOk returns a tuple with the ConfigCmdbDiscovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetConfigCmdbDiscoveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfigCmdbDiscovery) {
		return nil, false
	}
	return o.ConfigCmdbDiscovery, true
}

// IsSetConfigCmdbDiscovery returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetConfigCmdbDiscovery() bool {
	if o != nil && !IsNil(o.ConfigCmdbDiscovery) {
		return true
	}

	return false
}

// SetConfigCmdbDiscovery gets a reference to the given bool and assigns it to the ConfigCmdbDiscovery field.
func (o *ZoneVcenterConfig) SetConfigCmdbDiscovery(v bool) {
	o.ConfigCmdbDiscovery = &v
}

// GetDistributedWorkerId returns the DistributedWorkerId field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetDistributedWorkerId() string {
	if o == nil || IsNil(o.DistributedWorkerId) {
		var ret string
		return ret
	}
	return *o.DistributedWorkerId
}

// GetDistributedWorkerIdOk returns a tuple with the DistributedWorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetDistributedWorkerIdOk() (*string, bool) {
	if o == nil || IsNil(o.DistributedWorkerId) {
		return nil, false
	}
	return o.DistributedWorkerId, true
}

// IsSetDistributedWorkerId returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetDistributedWorkerId() bool {
	if o != nil && !IsNil(o.DistributedWorkerId) {
		return true
	}

	return false
}

// SetDistributedWorkerId gets a reference to the given string and assigns it to the DistributedWorkerId field.
func (o *ZoneVcenterConfig) SetDistributedWorkerId(v string) {
	o.DistributedWorkerId = &v
}

// GetPasswordHash returns the PasswordHash field value if set, zero value otherwise.
func (o *ZoneVcenterConfig) GetPasswordHash() string {
	if o == nil || IsNil(o.PasswordHash) {
		var ret string
		return ret
	}
	return *o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneVcenterConfig) GetPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHash) {
		return nil, false
	}
	return o.PasswordHash, true
}

// IsSetPasswordHash returns a boolean if a field has been set.
func (o *ZoneVcenterConfig) IsSetPasswordHash() bool {
	if o != nil && !IsNil(o.PasswordHash) {
		return true
	}

	return false
}

// SetPasswordHash gets a reference to the given string and assigns it to the PasswordHash field.
func (o *ZoneVcenterConfig) SetPasswordHash(v string) {
	o.PasswordHash = &v
}

func (o ZoneVcenterConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneVcenterConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiUrl) {
		toSerialize["apiUrl"] = o.ApiUrl
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Datacenter) {
		toSerialize["datacenter"] = o.Datacenter
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.ResourcePoolId) {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if !IsNil(o.ResourcePool) {
		toSerialize["resourcePool"] = o.ResourcePool
	}
	if !IsNil(o.RpcMode) {
		toSerialize["rpcMode"] = o.RpcMode
	}
	if !IsNil(o.HideHostSelection) {
		toSerialize["hideHostSelection"] = o.HideHostSelection
	}
	if !IsNil(o.ImportExisting) {
		toSerialize["importExisting"] = o.ImportExisting
	}
	if !IsNil(o.EnableVnc) {
		toSerialize["enableVnc"] = o.EnableVnc
	}
	if !IsNil(o.EnableDiskTypeSelection) {
		toSerialize["enableDiskTypeSelection"] = o.EnableDiskTypeSelection
	}
	if !IsNil(o.EnableNetworkTypeSelection) {
		toSerialize["enableNetworkTypeSelection"] = o.EnableNetworkTypeSelection
	}
	if !IsNil(o.DiskStorageType) {
		toSerialize["diskStorageType"] = o.DiskStorageType
	}
	if !IsNil(o.ApplianceUrl) {
		toSerialize["applianceUrl"] = o.ApplianceUrl
	}
	if !IsNil(o.DatacenterName) {
		toSerialize["datacenterName"] = o.DatacenterName
	}
	if !IsNil(o.NetworkServerId) {
		toSerialize["networkServer.id"] = o.NetworkServerId
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	if !IsNil(o.SecurityMode) {
		toSerialize["securityMode"] = o.SecurityMode
	}
	if !IsNil(o.CertificateProvider) {
		toSerialize["certificateProvider"] = o.CertificateProvider
	}
	if !IsNil(o.BackupMode) {
		toSerialize["backupMode"] = o.BackupMode
	}
	if !IsNil(o.ReplicationMode) {
		toSerialize["replicationMode"] = o.ReplicationMode
	}
	if !IsNil(o.DnsIntegrationId) {
		toSerialize["dnsIntegrationId"] = o.DnsIntegrationId
	}
	if !IsNil(o.ConfigCmdbId) {
		toSerialize["configCmdbId"] = o.ConfigCmdbId
	}
	if !IsNil(o.ConfigManagementId) {
		toSerialize["configManagementId"] = o.ConfigManagementId
	}
	if !IsNil(o.ConfigCmId) {
		toSerialize["configCmId"] = o.ConfigCmId
	}
	if !IsNil(o.SecurityServer) {
		toSerialize["securityServer"] = o.SecurityServer
	}
	if !IsNil(o.ServiceRegistryId) {
		toSerialize["serviceRegistryId"] = o.ServiceRegistryId
	}
	if !IsNil(o.KubeUrl) {
		toSerialize["kubeUrl"] = o.KubeUrl
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.DatacenterId) {
		toSerialize["datacenterId"] = o.DatacenterId
	}
	if !IsNil(o.ConfigCmdbDiscovery) {
		toSerialize["configCmdbDiscovery"] = o.ConfigCmdbDiscovery
	}
	if !IsNil(o.DistributedWorkerId) {
		toSerialize["distributedWorkerId"] = o.DistributedWorkerId
	}
	if !IsNil(o.PasswordHash) {
		toSerialize["passwordHash"] = o.PasswordHash
	}
	return toSerialize, nil
}

type NullableZoneVcenterConfig struct {
	value *ZoneVcenterConfig
	isSet bool
}

func (v NullableZoneVcenterConfig) Get() *ZoneVcenterConfig {
	return v.value
}

func (v *NullableZoneVcenterConfig) Set(val *ZoneVcenterConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneVcenterConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneVcenterConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneVcenterConfig(val *ZoneVcenterConfig) *NullableZoneVcenterConfig {
	return &NullableZoneVcenterConfig{value: val, isSet: true}
}

func (v NullableZoneVcenterConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneVcenterConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


