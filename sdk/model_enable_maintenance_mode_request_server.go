/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the EnableMaintenanceModeRequestServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableMaintenanceModeRequestServer{}

// EnableMaintenanceModeRequestServer struct for EnableMaintenanceModeRequestServer
type EnableMaintenanceModeRequestServer struct {
	// option relevant to kubernetes nodes
	IgnoreDaemonsets *bool `json:"ignoreDaemonsets,omitempty"`
	// option relevant to kubernetes nodes
	Force *bool `json:"force,omitempty"`
	// option relevant to kubernetes nodes
	DeleteEmptyDir *bool `json:"deleteEmptyDir,omitempty"`
	// option relevant to kubernetes nodes
	DeleteLocalData *bool `json:"deleteLocalData,omitempty"`
}

// NewEnableMaintenanceModeRequestServer instantiates a new EnableMaintenanceModeRequestServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableMaintenanceModeRequestServer() *EnableMaintenanceModeRequestServer {
	this := EnableMaintenanceModeRequestServer{}
	return &this
}

// NewEnableMaintenanceModeRequestServerWithDefaults instantiates a new EnableMaintenanceModeRequestServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableMaintenanceModeRequestServerWithDefaults() *EnableMaintenanceModeRequestServer {
	this := EnableMaintenanceModeRequestServer{}
	return &this
}

// GetIgnoreDaemonsets returns the IgnoreDaemonsets field value if set, zero value otherwise.
func (o *EnableMaintenanceModeRequestServer) GetIgnoreDaemonsets() bool {
	if o == nil || IsNil(o.IgnoreDaemonsets) {
		var ret bool
		return ret
	}
	return *o.IgnoreDaemonsets
}

// GetIgnoreDaemonsetsOk returns a tuple with the IgnoreDaemonsets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableMaintenanceModeRequestServer) GetIgnoreDaemonsetsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreDaemonsets) {
		return nil, false
	}
	return o.IgnoreDaemonsets, true
}

// IsSetIgnoreDaemonsets returns a boolean if a field has been set.
func (o *EnableMaintenanceModeRequestServer) IsSetIgnoreDaemonsets() bool {
	if o != nil && !IsNil(o.IgnoreDaemonsets) {
		return true
	}

	return false
}

// SetIgnoreDaemonsets gets a reference to the given bool and assigns it to the IgnoreDaemonsets field.
func (o *EnableMaintenanceModeRequestServer) SetIgnoreDaemonsets(v bool) {
	o.IgnoreDaemonsets = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *EnableMaintenanceModeRequestServer) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableMaintenanceModeRequestServer) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// IsSetForce returns a boolean if a field has been set.
func (o *EnableMaintenanceModeRequestServer) IsSetForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *EnableMaintenanceModeRequestServer) SetForce(v bool) {
	o.Force = &v
}

// GetDeleteEmptyDir returns the DeleteEmptyDir field value if set, zero value otherwise.
func (o *EnableMaintenanceModeRequestServer) GetDeleteEmptyDir() bool {
	if o == nil || IsNil(o.DeleteEmptyDir) {
		var ret bool
		return ret
	}
	return *o.DeleteEmptyDir
}

// GetDeleteEmptyDirOk returns a tuple with the DeleteEmptyDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableMaintenanceModeRequestServer) GetDeleteEmptyDirOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteEmptyDir) {
		return nil, false
	}
	return o.DeleteEmptyDir, true
}

// IsSetDeleteEmptyDir returns a boolean if a field has been set.
func (o *EnableMaintenanceModeRequestServer) IsSetDeleteEmptyDir() bool {
	if o != nil && !IsNil(o.DeleteEmptyDir) {
		return true
	}

	return false
}

// SetDeleteEmptyDir gets a reference to the given bool and assigns it to the DeleteEmptyDir field.
func (o *EnableMaintenanceModeRequestServer) SetDeleteEmptyDir(v bool) {
	o.DeleteEmptyDir = &v
}

// GetDeleteLocalData returns the DeleteLocalData field value if set, zero value otherwise.
func (o *EnableMaintenanceModeRequestServer) GetDeleteLocalData() bool {
	if o == nil || IsNil(o.DeleteLocalData) {
		var ret bool
		return ret
	}
	return *o.DeleteLocalData
}

// GetDeleteLocalDataOk returns a tuple with the DeleteLocalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableMaintenanceModeRequestServer) GetDeleteLocalDataOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteLocalData) {
		return nil, false
	}
	return o.DeleteLocalData, true
}

// IsSetDeleteLocalData returns a boolean if a field has been set.
func (o *EnableMaintenanceModeRequestServer) IsSetDeleteLocalData() bool {
	if o != nil && !IsNil(o.DeleteLocalData) {
		return true
	}

	return false
}

// SetDeleteLocalData gets a reference to the given bool and assigns it to the DeleteLocalData field.
func (o *EnableMaintenanceModeRequestServer) SetDeleteLocalData(v bool) {
	o.DeleteLocalData = &v
}

func (o EnableMaintenanceModeRequestServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableMaintenanceModeRequestServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IgnoreDaemonsets) {
		toSerialize["ignoreDaemonsets"] = o.IgnoreDaemonsets
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.DeleteEmptyDir) {
		toSerialize["deleteEmptyDir"] = o.DeleteEmptyDir
	}
	if !IsNil(o.DeleteLocalData) {
		toSerialize["deleteLocalData"] = o.DeleteLocalData
	}
	return toSerialize, nil
}

type NullableEnableMaintenanceModeRequestServer struct {
	value *EnableMaintenanceModeRequestServer
	isSet bool
}

func (v NullableEnableMaintenanceModeRequestServer) Get() *EnableMaintenanceModeRequestServer {
	return v.value
}

func (v *NullableEnableMaintenanceModeRequestServer) Set(val *EnableMaintenanceModeRequestServer) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableMaintenanceModeRequestServer) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableMaintenanceModeRequestServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableMaintenanceModeRequestServer(val *EnableMaintenanceModeRequestServer) *NullableEnableMaintenanceModeRequestServer {
	return &NullableEnableMaintenanceModeRequestServer{value: val, isSet: true}
}

func (v NullableEnableMaintenanceModeRequestServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableMaintenanceModeRequestServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


