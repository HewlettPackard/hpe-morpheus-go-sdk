/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterConfigmaps200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterConfigmaps200Response{}

// ListClusterConfigmaps200Response struct for ListClusterConfigmaps200Response
type ListClusterConfigmaps200Response struct {
	Configmaps []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner `json:"configmaps,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterConfigmaps200Response instantiates a new ListClusterConfigmaps200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterConfigmaps200Response() *ListClusterConfigmaps200Response {
	this := ListClusterConfigmaps200Response{}
	return &this
}

// NewListClusterConfigmaps200ResponseWithDefaults instantiates a new ListClusterConfigmaps200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterConfigmaps200ResponseWithDefaults() *ListClusterConfigmaps200Response {
	this := ListClusterConfigmaps200Response{}
	return &this
}

// GetConfigmaps returns the Configmaps field value if set, zero value otherwise.
func (o *ListClusterConfigmaps200Response) GetConfigmaps() []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner {
	if o == nil || IsNil(o.Configmaps) {
		var ret []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner
		return ret
	}
	return o.Configmaps
}

// GetConfigmapsOk returns a tuple with the Configmaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterConfigmaps200Response) GetConfigmapsOk() ([]ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner, bool) {
	if o == nil || IsNil(o.Configmaps) {
		return nil, false
	}
	return o.Configmaps, true
}

// IsSetConfigmaps returns a boolean if a field has been set.
func (o *ListClusterConfigmaps200Response) IsSetConfigmaps() bool {
	if o != nil && !IsNil(o.Configmaps) {
		return true
	}

	return false
}

// SetConfigmaps gets a reference to the given []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner and assigns it to the Configmaps field.
func (o *ListClusterConfigmaps200Response) SetConfigmaps(v []ListClusterNetworkEndpoints200ResponseAllOfEndpointsInner) {
	o.Configmaps = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterConfigmaps200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterConfigmaps200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterConfigmaps200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterConfigmaps200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterConfigmaps200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterConfigmaps200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configmaps) {
		toSerialize["configmaps"] = o.Configmaps
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterConfigmaps200Response struct {
	value *ListClusterConfigmaps200Response
	isSet bool
}

func (v NullableListClusterConfigmaps200Response) Get() *ListClusterConfigmaps200Response {
	return v.value
}

func (v *NullableListClusterConfigmaps200Response) Set(val *ListClusterConfigmaps200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterConfigmaps200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterConfigmaps200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterConfigmaps200Response(val *ListClusterConfigmaps200Response) *NullableListClusterConfigmaps200Response {
	return &NullableListClusterConfigmaps200Response{value: val, isSet: true}
}

func (v NullableListClusterConfigmaps200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterConfigmaps200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


