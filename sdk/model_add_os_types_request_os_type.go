/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddOsTypesRequestOsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOsTypesRequestOsType{}

// AddOsTypesRequestOsType struct for AddOsTypesRequestOsType
type AddOsTypesRequestOsType struct {
	// The name of the osType. 
	Name string `json:"name"`
	// The description of the osType.  
	Description *string `json:"description,omitempty"`
	// The platform of the osType.  
	Platform string `json:"platform"`
	// The code morph uses as an identifier 
	Code string `json:"code"`
	// The category of the osType. 
	Category *string `json:"category,omitempty"`
	// The vendor of the osType. 
	Vendor *string `json:"vendor,omitempty"`
	// The osName of the osType. 
	OsName *string `json:"osName,omitempty"`
	// The osVersion of the osType. 
	OsVersion *string `json:"osVersion,omitempty"`
	// The osCodename of the osType. 
	OsCodename *string `json:"osCodename,omitempty"`
	// The family of the osType. 
	OsFamily *string `json:"osFamily,omitempty"`
	// The bitCount/architecture of the osType. 
	BitCount int64 `json:"bitCount"`
	// The version of CloudInit being used. 
	CloudInitVersion *string `json:"cloudInitVersion,omitempty"`
	// Whether the morpheus agent is installed. 
	InstallAgent *bool `json:"installAgent,omitempty"`
}

type _AddOsTypesRequestOsType AddOsTypesRequestOsType

// NewAddOsTypesRequestOsType instantiates a new AddOsTypesRequestOsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOsTypesRequestOsType(name string, platform string, code string, bitCount int64) *AddOsTypesRequestOsType {
	this := AddOsTypesRequestOsType{}
	this.Name = name
	this.Platform = platform
	this.Code = code
	this.BitCount = bitCount
	return &this
}

// NewAddOsTypesRequestOsTypeWithDefaults instantiates a new AddOsTypesRequestOsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOsTypesRequestOsTypeWithDefaults() *AddOsTypesRequestOsType {
	this := AddOsTypesRequestOsType{}
	return &this
}

// GetName returns the Name field value
func (o *AddOsTypesRequestOsType) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddOsTypesRequestOsType) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddOsTypesRequestOsType) SetDescription(v string) {
	o.Description = &v
}

// GetPlatform returns the Platform field value
func (o *AddOsTypesRequestOsType) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *AddOsTypesRequestOsType) SetPlatform(v string) {
	o.Platform = v
}

// GetCode returns the Code field value
func (o *AddOsTypesRequestOsType) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AddOsTypesRequestOsType) SetCode(v string) {
	o.Code = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AddOsTypesRequestOsType) SetCategory(v string) {
	o.Category = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// IsSetVendor returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *AddOsTypesRequestOsType) SetVendor(v string) {
	o.Vendor = &v
}

// GetOsName returns the OsName field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetOsName() string {
	if o == nil || IsNil(o.OsName) {
		var ret string
		return ret
	}
	return *o.OsName
}

// GetOsNameOk returns a tuple with the OsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetOsNameOk() (*string, bool) {
	if o == nil || IsNil(o.OsName) {
		return nil, false
	}
	return o.OsName, true
}

// IsSetOsName returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetOsName() bool {
	if o != nil && !IsNil(o.OsName) {
		return true
	}

	return false
}

// SetOsName gets a reference to the given string and assigns it to the OsName field.
func (o *AddOsTypesRequestOsType) SetOsName(v string) {
	o.OsName = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// IsSetOsVersion returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *AddOsTypesRequestOsType) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetOsCodename returns the OsCodename field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetOsCodename() string {
	if o == nil || IsNil(o.OsCodename) {
		var ret string
		return ret
	}
	return *o.OsCodename
}

// GetOsCodenameOk returns a tuple with the OsCodename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetOsCodenameOk() (*string, bool) {
	if o == nil || IsNil(o.OsCodename) {
		return nil, false
	}
	return o.OsCodename, true
}

// IsSetOsCodename returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetOsCodename() bool {
	if o != nil && !IsNil(o.OsCodename) {
		return true
	}

	return false
}

// SetOsCodename gets a reference to the given string and assigns it to the OsCodename field.
func (o *AddOsTypesRequestOsType) SetOsCodename(v string) {
	o.OsCodename = &v
}

// GetOsFamily returns the OsFamily field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetOsFamily() string {
	if o == nil || IsNil(o.OsFamily) {
		var ret string
		return ret
	}
	return *o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetOsFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.OsFamily) {
		return nil, false
	}
	return o.OsFamily, true
}

// IsSetOsFamily returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetOsFamily() bool {
	if o != nil && !IsNil(o.OsFamily) {
		return true
	}

	return false
}

// SetOsFamily gets a reference to the given string and assigns it to the OsFamily field.
func (o *AddOsTypesRequestOsType) SetOsFamily(v string) {
	o.OsFamily = &v
}

// GetBitCount returns the BitCount field value
func (o *AddOsTypesRequestOsType) GetBitCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BitCount
}

// GetBitCountOk returns a tuple with the BitCount field value
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetBitCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BitCount, true
}

// SetBitCount sets field value
func (o *AddOsTypesRequestOsType) SetBitCount(v int64) {
	o.BitCount = v
}

// GetCloudInitVersion returns the CloudInitVersion field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetCloudInitVersion() string {
	if o == nil || IsNil(o.CloudInitVersion) {
		var ret string
		return ret
	}
	return *o.CloudInitVersion
}

// GetCloudInitVersionOk returns a tuple with the CloudInitVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetCloudInitVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudInitVersion) {
		return nil, false
	}
	return o.CloudInitVersion, true
}

// IsSetCloudInitVersion returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetCloudInitVersion() bool {
	if o != nil && !IsNil(o.CloudInitVersion) {
		return true
	}

	return false
}

// SetCloudInitVersion gets a reference to the given string and assigns it to the CloudInitVersion field.
func (o *AddOsTypesRequestOsType) SetCloudInitVersion(v string) {
	o.CloudInitVersion = &v
}

// GetInstallAgent returns the InstallAgent field value if set, zero value otherwise.
func (o *AddOsTypesRequestOsType) GetInstallAgent() bool {
	if o == nil || IsNil(o.InstallAgent) {
		var ret bool
		return ret
	}
	return *o.InstallAgent
}

// GetInstallAgentOk returns a tuple with the InstallAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypesRequestOsType) GetInstallAgentOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallAgent) {
		return nil, false
	}
	return o.InstallAgent, true
}

// IsSetInstallAgent returns a boolean if a field has been set.
func (o *AddOsTypesRequestOsType) IsSetInstallAgent() bool {
	if o != nil && !IsNil(o.InstallAgent) {
		return true
	}

	return false
}

// SetInstallAgent gets a reference to the given bool and assigns it to the InstallAgent field.
func (o *AddOsTypesRequestOsType) SetInstallAgent(v bool) {
	o.InstallAgent = &v
}

func (o AddOsTypesRequestOsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOsTypesRequestOsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["platform"] = o.Platform
	toSerialize["code"] = o.Code
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.OsName) {
		toSerialize["osName"] = o.OsName
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.OsCodename) {
		toSerialize["osCodename"] = o.OsCodename
	}
	if !IsNil(o.OsFamily) {
		toSerialize["osFamily"] = o.OsFamily
	}
	toSerialize["bitCount"] = o.BitCount
	if !IsNil(o.CloudInitVersion) {
		toSerialize["cloudInitVersion"] = o.CloudInitVersion
	}
	if !IsNil(o.InstallAgent) {
		toSerialize["installAgent"] = o.InstallAgent
	}
	return toSerialize, nil
}

func (o *AddOsTypesRequestOsType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"platform",
		"code",
		"bitCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddOsTypesRequestOsType := _AddOsTypesRequestOsType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddOsTypesRequestOsType)

	if err != nil {
		return err
	}

	*o = AddOsTypesRequestOsType(varAddOsTypesRequestOsType)

	return err
}

type NullableAddOsTypesRequestOsType struct {
	value *AddOsTypesRequestOsType
	isSet bool
}

func (v NullableAddOsTypesRequestOsType) Get() *AddOsTypesRequestOsType {
	return v.value
}

func (v *NullableAddOsTypesRequestOsType) Set(val *AddOsTypesRequestOsType) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOsTypesRequestOsType) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOsTypesRequestOsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOsTypesRequestOsType(val *AddOsTypesRequestOsType) *NullableAddOsTypesRequestOsType {
	return &NullableAddOsTypesRequestOsType{value: val, isSet: true}
}

func (v NullableAddOsTypesRequestOsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOsTypesRequestOsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


