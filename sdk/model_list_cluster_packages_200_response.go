/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterPackages200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterPackages200Response{}

// ListClusterPackages200Response struct for ListClusterPackages200Response
type ListClusterPackages200Response struct {
	ClusterPackages []ListClusterPackages200ResponseAllOfClusterPackagesInner `json:"clusterPackages,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterPackages200Response instantiates a new ListClusterPackages200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterPackages200Response() *ListClusterPackages200Response {
	this := ListClusterPackages200Response{}
	return &this
}

// NewListClusterPackages200ResponseWithDefaults instantiates a new ListClusterPackages200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterPackages200ResponseWithDefaults() *ListClusterPackages200Response {
	this := ListClusterPackages200Response{}
	return &this
}

// GetClusterPackages returns the ClusterPackages field value if set, zero value otherwise.
func (o *ListClusterPackages200Response) GetClusterPackages() []ListClusterPackages200ResponseAllOfClusterPackagesInner {
	if o == nil || IsNil(o.ClusterPackages) {
		var ret []ListClusterPackages200ResponseAllOfClusterPackagesInner
		return ret
	}
	return o.ClusterPackages
}

// GetClusterPackagesOk returns a tuple with the ClusterPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterPackages200Response) GetClusterPackagesOk() ([]ListClusterPackages200ResponseAllOfClusterPackagesInner, bool) {
	if o == nil || IsNil(o.ClusterPackages) {
		return nil, false
	}
	return o.ClusterPackages, true
}

// IsSetClusterPackages returns a boolean if a field has been set.
func (o *ListClusterPackages200Response) IsSetClusterPackages() bool {
	if o != nil && !IsNil(o.ClusterPackages) {
		return true
	}

	return false
}

// SetClusterPackages gets a reference to the given []ListClusterPackages200ResponseAllOfClusterPackagesInner and assigns it to the ClusterPackages field.
func (o *ListClusterPackages200Response) SetClusterPackages(v []ListClusterPackages200ResponseAllOfClusterPackagesInner) {
	o.ClusterPackages = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterPackages200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterPackages200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterPackages200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterPackages200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterPackages200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterPackages200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterPackages) {
		toSerialize["clusterPackages"] = o.ClusterPackages
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterPackages200Response struct {
	value *ListClusterPackages200Response
	isSet bool
}

func (v NullableListClusterPackages200Response) Get() *ListClusterPackages200Response {
	return v.value
}

func (v *NullableListClusterPackages200Response) Set(val *ListClusterPackages200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterPackages200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterPackages200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterPackages200Response(val *ListClusterPackages200Response) *NullableListClusterPackages200Response {
	return &NullableListClusterPackages200Response{value: val, isSet: true}
}

func (v NullableListClusterPackages200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterPackages200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


