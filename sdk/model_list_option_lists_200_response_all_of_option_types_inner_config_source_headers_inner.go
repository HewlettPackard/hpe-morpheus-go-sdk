/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner{}

// ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner struct for ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner
type ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
	Masked *string `json:"masked,omitempty"`
}

// NewListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner instantiates a new ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner() *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner {
	this := ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner{}
	return &this
}

// NewListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInnerWithDefaults instantiates a new ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInnerWithDefaults() *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner {
	this := ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// IsSetValue returns a boolean if a field has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) IsSetValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) SetValue(v string) {
	o.Value = &v
}

// GetMasked returns the Masked field value if set, zero value otherwise.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetMasked() string {
	if o == nil || IsNil(o.Masked) {
		var ret string
		return ret
	}
	return *o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) GetMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.Masked) {
		return nil, false
	}
	return o.Masked, true
}

// IsSetMasked returns a boolean if a field has been set.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) IsSetMasked() bool {
	if o != nil && !IsNil(o.Masked) {
		return true
	}

	return false
}

// SetMasked gets a reference to the given string and assigns it to the Masked field.
func (o *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) SetMasked(v string) {
	o.Masked = &v
}

func (o ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Masked) {
		toSerialize["masked"] = o.Masked
	}
	return toSerialize, nil
}

type NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner struct {
	value *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner
	isSet bool
}

func (v NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) Get() *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner {
	return v.value
}

func (v *NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) Set(val *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner(val *ListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) *NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner {
	return &NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner{value: val, isSet: true}
}

func (v NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOptionLists200ResponseAllOfOptionTypesInnerConfigSourceHeadersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


