/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetCheckGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCheckGroups200Response{}

// GetCheckGroups200Response struct for GetCheckGroups200Response
type GetCheckGroups200Response struct {
	CheckGroup *GetAlerts200ResponseAllOfCheckGroupsInner `json:"checkGroup,omitempty"`
	Checks []GetAlerts200ResponseAllOfChecksInner `json:"checks,omitempty"`
}

// NewGetCheckGroups200Response instantiates a new GetCheckGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCheckGroups200Response() *GetCheckGroups200Response {
	this := GetCheckGroups200Response{}
	return &this
}

// NewGetCheckGroups200ResponseWithDefaults instantiates a new GetCheckGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCheckGroups200ResponseWithDefaults() *GetCheckGroups200Response {
	this := GetCheckGroups200Response{}
	return &this
}

// GetCheckGroup returns the CheckGroup field value if set, zero value otherwise.
func (o *GetCheckGroups200Response) GetCheckGroup() GetAlerts200ResponseAllOfCheckGroupsInner {
	if o == nil || IsNil(o.CheckGroup) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInner
		return ret
	}
	return *o.CheckGroup
}

// GetCheckGroupOk returns a tuple with the CheckGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCheckGroups200Response) GetCheckGroupOk() (*GetAlerts200ResponseAllOfCheckGroupsInner, bool) {
	if o == nil || IsNil(o.CheckGroup) {
		return nil, false
	}
	return o.CheckGroup, true
}

// IsSetCheckGroup returns a boolean if a field has been set.
func (o *GetCheckGroups200Response) IsSetCheckGroup() bool {
	if o != nil && !IsNil(o.CheckGroup) {
		return true
	}

	return false
}

// SetCheckGroup gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInner and assigns it to the CheckGroup field.
func (o *GetCheckGroups200Response) SetCheckGroup(v GetAlerts200ResponseAllOfCheckGroupsInner) {
	o.CheckGroup = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *GetCheckGroups200Response) GetChecks() []GetAlerts200ResponseAllOfChecksInner {
	if o == nil || IsNil(o.Checks) {
		var ret []GetAlerts200ResponseAllOfChecksInner
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCheckGroups200Response) GetChecksOk() ([]GetAlerts200ResponseAllOfChecksInner, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// IsSetChecks returns a boolean if a field has been set.
func (o *GetCheckGroups200Response) IsSetChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []GetAlerts200ResponseAllOfChecksInner and assigns it to the Checks field.
func (o *GetCheckGroups200Response) SetChecks(v []GetAlerts200ResponseAllOfChecksInner) {
	o.Checks = v
}

func (o GetCheckGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCheckGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckGroup) {
		toSerialize["checkGroup"] = o.CheckGroup
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	return toSerialize, nil
}

type NullableGetCheckGroups200Response struct {
	value *GetCheckGroups200Response
	isSet bool
}

func (v NullableGetCheckGroups200Response) Get() *GetCheckGroups200Response {
	return v.value
}

func (v *NullableGetCheckGroups200Response) Set(val *GetCheckGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCheckGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCheckGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCheckGroups200Response(val *GetCheckGroups200Response) *NullableGetCheckGroups200Response {
	return &NullableGetCheckGroups200Response{value: val, isSet: true}
}

func (v NullableGetCheckGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCheckGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


