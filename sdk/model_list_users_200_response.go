/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListUsers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsers200Response{}

// ListUsers200Response struct for ListUsers200Response
type ListUsers200Response struct {
	Users []AddUserTenant200ResponseAllOfUser `json:"users,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
	// Global (All Tenants), load users from all tenants. The default is to only see your own tenant. This is only available to master tenant users with permission to manage tenants and users.
	Global *bool `json:"global,omitempty"`
}

// NewListUsers200Response instantiates a new ListUsers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsers200Response() *ListUsers200Response {
	this := ListUsers200Response{}
	var global bool = false
	this.Global = &global
	return &this
}

// NewListUsers200ResponseWithDefaults instantiates a new ListUsers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsers200ResponseWithDefaults() *ListUsers200Response {
	this := ListUsers200Response{}
	var global bool = false
	this.Global = &global
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ListUsers200Response) GetUsers() []AddUserTenant200ResponseAllOfUser {
	if o == nil || IsNil(o.Users) {
		var ret []AddUserTenant200ResponseAllOfUser
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetUsersOk() ([]AddUserTenant200ResponseAllOfUser, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// IsSetUsers returns a boolean if a field has been set.
func (o *ListUsers200Response) IsSetUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []AddUserTenant200ResponseAllOfUser and assigns it to the Users field.
func (o *ListUsers200Response) SetUsers(v []AddUserTenant200ResponseAllOfUser) {
	o.Users = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListUsers200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListUsers200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListUsers200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *ListUsers200Response) GetGlobal() bool {
	if o == nil || IsNil(o.Global) {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsers200Response) GetGlobalOk() (*bool, bool) {
	if o == nil || IsNil(o.Global) {
		return nil, false
	}
	return o.Global, true
}

// IsSetGlobal returns a boolean if a field has been set.
func (o *ListUsers200Response) IsSetGlobal() bool {
	if o != nil && !IsNil(o.Global) {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *ListUsers200Response) SetGlobal(v bool) {
	o.Global = &v
}

func (o ListUsers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUsers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Global) {
		toSerialize["global"] = o.Global
	}
	return toSerialize, nil
}

type NullableListUsers200Response struct {
	value *ListUsers200Response
	isSet bool
}

func (v NullableListUsers200Response) Get() *ListUsers200Response {
	return v.value
}

func (v *NullableListUsers200Response) Set(val *ListUsers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsers200Response(val *ListUsers200Response) *NullableListUsers200Response {
	return &NullableListUsers200Response{value: val, isSet: true}
}

func (v NullableListUsers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


