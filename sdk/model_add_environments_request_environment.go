/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddEnvironmentsRequestEnvironment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddEnvironmentsRequestEnvironment{}

// AddEnvironmentsRequestEnvironment Payload for creating a new environment
type AddEnvironmentsRequestEnvironment struct {
	// A unique name for the environment
	Name string `json:"name"`
	// A unique code for the environment
	Code string `json:"code"`
	// A description of the environment
	Description *string `json:"description,omitempty"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Sort order
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

type _AddEnvironmentsRequestEnvironment AddEnvironmentsRequestEnvironment

// NewAddEnvironmentsRequestEnvironment instantiates a new AddEnvironmentsRequestEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddEnvironmentsRequestEnvironment(name string, code string) *AddEnvironmentsRequestEnvironment {
	this := AddEnvironmentsRequestEnvironment{}
	this.Name = name
	this.Code = code
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// NewAddEnvironmentsRequestEnvironmentWithDefaults instantiates a new AddEnvironmentsRequestEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddEnvironmentsRequestEnvironmentWithDefaults() *AddEnvironmentsRequestEnvironment {
	this := AddEnvironmentsRequestEnvironment{}
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// GetName returns the Name field value
func (o *AddEnvironmentsRequestEnvironment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddEnvironmentsRequestEnvironment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddEnvironmentsRequestEnvironment) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value
func (o *AddEnvironmentsRequestEnvironment) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AddEnvironmentsRequestEnvironment) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AddEnvironmentsRequestEnvironment) SetCode(v string) {
	o.Code = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddEnvironmentsRequestEnvironment) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEnvironmentsRequestEnvironment) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddEnvironmentsRequestEnvironment) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddEnvironmentsRequestEnvironment) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AddEnvironmentsRequestEnvironment) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEnvironmentsRequestEnvironment) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *AddEnvironmentsRequestEnvironment) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AddEnvironmentsRequestEnvironment) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *AddEnvironmentsRequestEnvironment) GetSortOrder() int64 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int64
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEnvironmentsRequestEnvironment) GetSortOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// IsSetSortOrder returns a boolean if a field has been set.
func (o *AddEnvironmentsRequestEnvironment) IsSetSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int64 and assigns it to the SortOrder field.
func (o *AddEnvironmentsRequestEnvironment) SetSortOrder(v int64) {
	o.SortOrder = &v
}

func (o AddEnvironmentsRequestEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddEnvironmentsRequestEnvironment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["code"] = o.Code
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	return toSerialize, nil
}

func (o *AddEnvironmentsRequestEnvironment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddEnvironmentsRequestEnvironment := _AddEnvironmentsRequestEnvironment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddEnvironmentsRequestEnvironment)

	if err != nil {
		return err
	}

	*o = AddEnvironmentsRequestEnvironment(varAddEnvironmentsRequestEnvironment)

	return err
}

type NullableAddEnvironmentsRequestEnvironment struct {
	value *AddEnvironmentsRequestEnvironment
	isSet bool
}

func (v NullableAddEnvironmentsRequestEnvironment) Get() *AddEnvironmentsRequestEnvironment {
	return v.value
}

func (v *NullableAddEnvironmentsRequestEnvironment) Set(val *AddEnvironmentsRequestEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableAddEnvironmentsRequestEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableAddEnvironmentsRequestEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddEnvironmentsRequestEnvironment(val *AddEnvironmentsRequestEnvironment) *NullableAddEnvironmentsRequestEnvironment {
	return &NullableAddEnvironmentsRequestEnvironment{value: val, isSet: true}
}

func (v NullableAddEnvironmentsRequestEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddEnvironmentsRequestEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


