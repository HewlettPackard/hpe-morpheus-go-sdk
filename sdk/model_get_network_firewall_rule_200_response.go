/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkFirewallRule200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkFirewallRule200Response{}

// GetNetworkFirewallRule200Response struct for GetNetworkFirewallRule200Response
type GetNetworkFirewallRule200Response struct {
	Rule *GetNetworkFirewallRule200ResponseRule `json:"rule,omitempty"`
}

// NewGetNetworkFirewallRule200Response instantiates a new GetNetworkFirewallRule200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkFirewallRule200Response() *GetNetworkFirewallRule200Response {
	this := GetNetworkFirewallRule200Response{}
	return &this
}

// NewGetNetworkFirewallRule200ResponseWithDefaults instantiates a new GetNetworkFirewallRule200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkFirewallRule200ResponseWithDefaults() *GetNetworkFirewallRule200Response {
	this := GetNetworkFirewallRule200Response{}
	return &this
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *GetNetworkFirewallRule200Response) GetRule() GetNetworkFirewallRule200ResponseRule {
	if o == nil || IsNil(o.Rule) {
		var ret GetNetworkFirewallRule200ResponseRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkFirewallRule200Response) GetRuleOk() (*GetNetworkFirewallRule200ResponseRule, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// IsSetRule returns a boolean if a field has been set.
func (o *GetNetworkFirewallRule200Response) IsSetRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given GetNetworkFirewallRule200ResponseRule and assigns it to the Rule field.
func (o *GetNetworkFirewallRule200Response) SetRule(v GetNetworkFirewallRule200ResponseRule) {
	o.Rule = &v
}

func (o GetNetworkFirewallRule200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkFirewallRule200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullableGetNetworkFirewallRule200Response struct {
	value *GetNetworkFirewallRule200Response
	isSet bool
}

func (v NullableGetNetworkFirewallRule200Response) Get() *GetNetworkFirewallRule200Response {
	return v.value
}

func (v *NullableGetNetworkFirewallRule200Response) Set(val *GetNetworkFirewallRule200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkFirewallRule200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkFirewallRule200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkFirewallRule200Response(val *GetNetworkFirewallRule200Response) *NullableGetNetworkFirewallRule200Response {
	return &NullableGetNetworkFirewallRule200Response{value: val, isSet: true}
}

func (v NullableGetNetworkFirewallRule200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkFirewallRule200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


