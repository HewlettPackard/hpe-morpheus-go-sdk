/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateLoadBalancerVirtualServerRequestLoadBalancerInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLoadBalancerVirtualServerRequestLoadBalancerInstance{}

// CreateLoadBalancerVirtualServerRequestLoadBalancerInstance struct for CreateLoadBalancerVirtualServerRequestLoadBalancerInstance
type CreateLoadBalancerVirtualServerRequestLoadBalancerInstance struct {
	// VIP Name
	VipName *string `json:"vipName,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// VIP Address
	VipAddress *string `json:"vipAddress,omitempty"`
	// VIP Port
	VipPort *int64 `json:"vipPort,omitempty"`
	// VIP Protocol
	VipProtocol *string `json:"vipProtocol,omitempty"`
	// VIP Hostname
	VipHostname *string `json:"vipHostname,omitempty"`
	// SSL Client Certificate ID
	SslCert *int64 `json:"sslCert,omitempty"`
	// SSL Server Certificate ID
	SslServerCert *int64 `json:"sslServerCert,omitempty"`
	Config *CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig `json:"config,omitempty"`
}

// NewCreateLoadBalancerVirtualServerRequestLoadBalancerInstance instantiates a new CreateLoadBalancerVirtualServerRequestLoadBalancerInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerVirtualServerRequestLoadBalancerInstance() *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance {
	this := CreateLoadBalancerVirtualServerRequestLoadBalancerInstance{}
	return &this
}

// NewCreateLoadBalancerVirtualServerRequestLoadBalancerInstanceWithDefaults instantiates a new CreateLoadBalancerVirtualServerRequestLoadBalancerInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerVirtualServerRequestLoadBalancerInstanceWithDefaults() *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance {
	this := CreateLoadBalancerVirtualServerRequestLoadBalancerInstance{}
	return &this
}

// GetVipName returns the VipName field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipName() string {
	if o == nil || IsNil(o.VipName) {
		var ret string
		return ret
	}
	return *o.VipName
}

// GetVipNameOk returns a tuple with the VipName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipNameOk() (*string, bool) {
	if o == nil || IsNil(o.VipName) {
		return nil, false
	}
	return o.VipName, true
}

// IsSetVipName returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetVipName() bool {
	if o != nil && !IsNil(o.VipName) {
		return true
	}

	return false
}

// SetVipName gets a reference to the given string and assigns it to the VipName field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetVipName(v string) {
	o.VipName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetDescription(v string) {
	o.Description = &v
}

// GetVipAddress returns the VipAddress field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipAddress() string {
	if o == nil || IsNil(o.VipAddress) {
		var ret string
		return ret
	}
	return *o.VipAddress
}

// GetVipAddressOk returns a tuple with the VipAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipAddressOk() (*string, bool) {
	if o == nil || IsNil(o.VipAddress) {
		return nil, false
	}
	return o.VipAddress, true
}

// IsSetVipAddress returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetVipAddress() bool {
	if o != nil && !IsNil(o.VipAddress) {
		return true
	}

	return false
}

// SetVipAddress gets a reference to the given string and assigns it to the VipAddress field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetVipAddress(v string) {
	o.VipAddress = &v
}

// GetVipPort returns the VipPort field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipPort() int64 {
	if o == nil || IsNil(o.VipPort) {
		var ret int64
		return ret
	}
	return *o.VipPort
}

// GetVipPortOk returns a tuple with the VipPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipPortOk() (*int64, bool) {
	if o == nil || IsNil(o.VipPort) {
		return nil, false
	}
	return o.VipPort, true
}

// IsSetVipPort returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetVipPort() bool {
	if o != nil && !IsNil(o.VipPort) {
		return true
	}

	return false
}

// SetVipPort gets a reference to the given int64 and assigns it to the VipPort field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetVipPort(v int64) {
	o.VipPort = &v
}

// GetVipProtocol returns the VipProtocol field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipProtocol() string {
	if o == nil || IsNil(o.VipProtocol) {
		var ret string
		return ret
	}
	return *o.VipProtocol
}

// GetVipProtocolOk returns a tuple with the VipProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.VipProtocol) {
		return nil, false
	}
	return o.VipProtocol, true
}

// IsSetVipProtocol returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetVipProtocol() bool {
	if o != nil && !IsNil(o.VipProtocol) {
		return true
	}

	return false
}

// SetVipProtocol gets a reference to the given string and assigns it to the VipProtocol field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetVipProtocol(v string) {
	o.VipProtocol = &v
}

// GetVipHostname returns the VipHostname field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipHostname() string {
	if o == nil || IsNil(o.VipHostname) {
		var ret string
		return ret
	}
	return *o.VipHostname
}

// GetVipHostnameOk returns a tuple with the VipHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetVipHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.VipHostname) {
		return nil, false
	}
	return o.VipHostname, true
}

// IsSetVipHostname returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetVipHostname() bool {
	if o != nil && !IsNil(o.VipHostname) {
		return true
	}

	return false
}

// SetVipHostname gets a reference to the given string and assigns it to the VipHostname field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetVipHostname(v string) {
	o.VipHostname = &v
}

// GetSslCert returns the SslCert field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetSslCert() int64 {
	if o == nil || IsNil(o.SslCert) {
		var ret int64
		return ret
	}
	return *o.SslCert
}

// GetSslCertOk returns a tuple with the SslCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetSslCertOk() (*int64, bool) {
	if o == nil || IsNil(o.SslCert) {
		return nil, false
	}
	return o.SslCert, true
}

// IsSetSslCert returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetSslCert() bool {
	if o != nil && !IsNil(o.SslCert) {
		return true
	}

	return false
}

// SetSslCert gets a reference to the given int64 and assigns it to the SslCert field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetSslCert(v int64) {
	o.SslCert = &v
}

// GetSslServerCert returns the SslServerCert field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetSslServerCert() int64 {
	if o == nil || IsNil(o.SslServerCert) {
		var ret int64
		return ret
	}
	return *o.SslServerCert
}

// GetSslServerCertOk returns a tuple with the SslServerCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetSslServerCertOk() (*int64, bool) {
	if o == nil || IsNil(o.SslServerCert) {
		return nil, false
	}
	return o.SslServerCert, true
}

// IsSetSslServerCert returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetSslServerCert() bool {
	if o != nil && !IsNil(o.SslServerCert) {
		return true
	}

	return false
}

// SetSslServerCert gets a reference to the given int64 and assigns it to the SslServerCert field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetSslServerCert(v int64) {
	o.SslServerCert = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetConfig() CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig {
	if o == nil || IsNil(o.Config) {
		var ret CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) GetConfigOk() (*CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig and assigns it to the Config field.
func (o *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) SetConfig(v CreateLoadBalancerVirtualServerRequestLoadBalancerInstanceConfig) {
	o.Config = &v
}

func (o CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VipName) {
		toSerialize["vipName"] = o.VipName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.VipAddress) {
		toSerialize["vipAddress"] = o.VipAddress
	}
	if !IsNil(o.VipPort) {
		toSerialize["vipPort"] = o.VipPort
	}
	if !IsNil(o.VipProtocol) {
		toSerialize["vipProtocol"] = o.VipProtocol
	}
	if !IsNil(o.VipHostname) {
		toSerialize["vipHostname"] = o.VipHostname
	}
	if !IsNil(o.SslCert) {
		toSerialize["sslCert"] = o.SslCert
	}
	if !IsNil(o.SslServerCert) {
		toSerialize["sslServerCert"] = o.SslServerCert
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance struct {
	value *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance
	isSet bool
}

func (v NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) Get() *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance {
	return v.value
}

func (v *NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) Set(val *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance(val *CreateLoadBalancerVirtualServerRequestLoadBalancerInstance) *NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance {
	return &NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerVirtualServerRequestLoadBalancerInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


