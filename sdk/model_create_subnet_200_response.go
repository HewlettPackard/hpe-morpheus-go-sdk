/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateSubnet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubnet200Response{}

// CreateSubnet200Response struct for CreateSubnet200Response
type CreateSubnet200Response struct {
	Subnet               *GetNetworkSubnets200ResponseAllOfSubnetsInner `json:"subnet,omitempty"`
	AdditionalProperties map[string]interface{}                         `json:",remain"`
}

type _CreateSubnet200Response CreateSubnet200Response

// NewCreateSubnet200Response instantiates a new CreateSubnet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubnet200Response() *CreateSubnet200Response {
	this := CreateSubnet200Response{}
	return &this
}

// NewCreateSubnet200ResponseWithDefaults instantiates a new CreateSubnet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubnet200ResponseWithDefaults() *CreateSubnet200Response {
	this := CreateSubnet200Response{}
	return &this
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *CreateSubnet200Response) GetSubnet() GetNetworkSubnets200ResponseAllOfSubnetsInner {
	if o == nil || IsNil(o.Subnet) {
		var ret GetNetworkSubnets200ResponseAllOfSubnetsInner
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnet200Response) GetSubnetOk() (*GetNetworkSubnets200ResponseAllOfSubnetsInner, bool) {
	if o == nil || IsNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// IsSetSubnet returns a boolean if a field has been set.
func (o *CreateSubnet200Response) IsSetSubnet() bool {
	if o != nil && !IsNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given GetNetworkSubnets200ResponseAllOfSubnetsInner and assigns it to the Subnet field.
func (o *CreateSubnet200Response) SetSubnet(v GetNetworkSubnets200ResponseAllOfSubnetsInner) {
	o.Subnet = &v
}

func (o CreateSubnet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubnet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *CreateSubnet200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
