/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the UpdateJobsRequestJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateJobsRequestJob{}

// UpdateJobsRequestJob struct for UpdateJobsRequestJob
type UpdateJobsRequestJob struct {
	// A name for the Job
	Name *string `json:"name,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Use this to set enabled state
	Enabled *bool `json:"enabled,omitempty"`
	Task *WorkflowJobPayloadTask `json:"task,omitempty"`
	Workflow *WorkflowJobPayloadTask `json:"workflow,omitempty"`
	// Scan Checklist. Only applies to type scap-package.
	ScanPath *string `json:"scanPath,omitempty"`
	// Security Profile. Only applies to type scap-package.
	SecurityProfile *string `json:"securityProfile,omitempty"`
	// Target type where job will execute
	TargetType *string `json:"targetType,omitempty"`
	Targets []WorkflowJobPayloadTargetsInner `json:"targets,omitempty"`
	// Instance Label. Only applicable if `targetType` is `instance-label`.
	InstanceLabel *string `json:"instanceLabel,omitempty"`
	// Server Label. Only applicable if `targetType` is `server-label`.
	ServerLabel *string `json:"serverLabel,omitempty"`
	ScheduleMode *WorkflowJobPayloadScheduleMode `json:"scheduleMode,omitempty"`
	// Map of options to be used as values in the workflow tasks. These correspond to option types.
	CustomOptions map[string]interface{} `json:"customOptions,omitempty"`
	// Job custom configuration (String in JSON format)
	CustomConfig *string `json:"customConfig,omitempty"`
	// Date and Time to execute the job. Use UTC time in the format 2020-02-15T05:00:00Z. Required when scheduleMode is 'dateTime'.
	DateTime *time.Time `json:"dateTime,omitempty"`
	// If true, executes job
	Run *bool `json:"run,omitempty"`
}

// NewUpdateJobsRequestJob instantiates a new UpdateJobsRequestJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateJobsRequestJob() *UpdateJobsRequestJob {
	this := UpdateJobsRequestJob{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewUpdateJobsRequestJobWithDefaults instantiates a new UpdateJobsRequestJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateJobsRequestJobWithDefaults() *UpdateJobsRequestJob {
	this := UpdateJobsRequestJob{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateJobsRequestJob) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateJobsRequestJob) SetLabels(v []string) {
	o.Labels = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateJobsRequestJob) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetTask() WorkflowJobPayloadTask {
	if o == nil || IsNil(o.Task) {
		var ret WorkflowJobPayloadTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetTaskOk() (*WorkflowJobPayloadTask, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// IsSetTask returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given WorkflowJobPayloadTask and assigns it to the Task field.
func (o *UpdateJobsRequestJob) SetTask(v WorkflowJobPayloadTask) {
	o.Task = &v
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetWorkflow() WorkflowJobPayloadTask {
	if o == nil || IsNil(o.Workflow) {
		var ret WorkflowJobPayloadTask
		return ret
	}
	return *o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetWorkflowOk() (*WorkflowJobPayloadTask, bool) {
	if o == nil || IsNil(o.Workflow) {
		return nil, false
	}
	return o.Workflow, true
}

// IsSetWorkflow returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetWorkflow() bool {
	if o != nil && !IsNil(o.Workflow) {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given WorkflowJobPayloadTask and assigns it to the Workflow field.
func (o *UpdateJobsRequestJob) SetWorkflow(v WorkflowJobPayloadTask) {
	o.Workflow = &v
}

// GetScanPath returns the ScanPath field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetScanPath() string {
	if o == nil || IsNil(o.ScanPath) {
		var ret string
		return ret
	}
	return *o.ScanPath
}

// GetScanPathOk returns a tuple with the ScanPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetScanPathOk() (*string, bool) {
	if o == nil || IsNil(o.ScanPath) {
		return nil, false
	}
	return o.ScanPath, true
}

// IsSetScanPath returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetScanPath() bool {
	if o != nil && !IsNil(o.ScanPath) {
		return true
	}

	return false
}

// SetScanPath gets a reference to the given string and assigns it to the ScanPath field.
func (o *UpdateJobsRequestJob) SetScanPath(v string) {
	o.ScanPath = &v
}

// GetSecurityProfile returns the SecurityProfile field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetSecurityProfile() string {
	if o == nil || IsNil(o.SecurityProfile) {
		var ret string
		return ret
	}
	return *o.SecurityProfile
}

// GetSecurityProfileOk returns a tuple with the SecurityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetSecurityProfileOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityProfile) {
		return nil, false
	}
	return o.SecurityProfile, true
}

// IsSetSecurityProfile returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetSecurityProfile() bool {
	if o != nil && !IsNil(o.SecurityProfile) {
		return true
	}

	return false
}

// SetSecurityProfile gets a reference to the given string and assigns it to the SecurityProfile field.
func (o *UpdateJobsRequestJob) SetSecurityProfile(v string) {
	o.SecurityProfile = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetTargetType() string {
	if o == nil || IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// IsSetTargetType returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetTargetType() bool {
	if o != nil && !IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *UpdateJobsRequestJob) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetTargets() []WorkflowJobPayloadTargetsInner {
	if o == nil || IsNil(o.Targets) {
		var ret []WorkflowJobPayloadTargetsInner
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetTargetsOk() ([]WorkflowJobPayloadTargetsInner, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// IsSetTargets returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []WorkflowJobPayloadTargetsInner and assigns it to the Targets field.
func (o *UpdateJobsRequestJob) SetTargets(v []WorkflowJobPayloadTargetsInner) {
	o.Targets = v
}

// GetInstanceLabel returns the InstanceLabel field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetInstanceLabel() string {
	if o == nil || IsNil(o.InstanceLabel) {
		var ret string
		return ret
	}
	return *o.InstanceLabel
}

// GetInstanceLabelOk returns a tuple with the InstanceLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetInstanceLabelOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceLabel) {
		return nil, false
	}
	return o.InstanceLabel, true
}

// IsSetInstanceLabel returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetInstanceLabel() bool {
	if o != nil && !IsNil(o.InstanceLabel) {
		return true
	}

	return false
}

// SetInstanceLabel gets a reference to the given string and assigns it to the InstanceLabel field.
func (o *UpdateJobsRequestJob) SetInstanceLabel(v string) {
	o.InstanceLabel = &v
}

// GetServerLabel returns the ServerLabel field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetServerLabel() string {
	if o == nil || IsNil(o.ServerLabel) {
		var ret string
		return ret
	}
	return *o.ServerLabel
}

// GetServerLabelOk returns a tuple with the ServerLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetServerLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ServerLabel) {
		return nil, false
	}
	return o.ServerLabel, true
}

// IsSetServerLabel returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetServerLabel() bool {
	if o != nil && !IsNil(o.ServerLabel) {
		return true
	}

	return false
}

// SetServerLabel gets a reference to the given string and assigns it to the ServerLabel field.
func (o *UpdateJobsRequestJob) SetServerLabel(v string) {
	o.ServerLabel = &v
}

// GetScheduleMode returns the ScheduleMode field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetScheduleMode() WorkflowJobPayloadScheduleMode {
	if o == nil || IsNil(o.ScheduleMode) {
		var ret WorkflowJobPayloadScheduleMode
		return ret
	}
	return *o.ScheduleMode
}

// GetScheduleModeOk returns a tuple with the ScheduleMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetScheduleModeOk() (*WorkflowJobPayloadScheduleMode, bool) {
	if o == nil || IsNil(o.ScheduleMode) {
		return nil, false
	}
	return o.ScheduleMode, true
}

// IsSetScheduleMode returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetScheduleMode() bool {
	if o != nil && !IsNil(o.ScheduleMode) {
		return true
	}

	return false
}

// SetScheduleMode gets a reference to the given WorkflowJobPayloadScheduleMode and assigns it to the ScheduleMode field.
func (o *UpdateJobsRequestJob) SetScheduleMode(v WorkflowJobPayloadScheduleMode) {
	o.ScheduleMode = &v
}

// GetCustomOptions returns the CustomOptions field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetCustomOptions() map[string]interface{} {
	if o == nil || IsNil(o.CustomOptions) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomOptions
}

// GetCustomOptionsOk returns a tuple with the CustomOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetCustomOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomOptions) {
		return map[string]interface{}{}, false
	}
	return o.CustomOptions, true
}

// IsSetCustomOptions returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetCustomOptions() bool {
	if o != nil && !IsNil(o.CustomOptions) {
		return true
	}

	return false
}

// SetCustomOptions gets a reference to the given map[string]interface{} and assigns it to the CustomOptions field.
func (o *UpdateJobsRequestJob) SetCustomOptions(v map[string]interface{}) {
	o.CustomOptions = v
}

// GetCustomConfig returns the CustomConfig field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetCustomConfig() string {
	if o == nil || IsNil(o.CustomConfig) {
		var ret string
		return ret
	}
	return *o.CustomConfig
}

// GetCustomConfigOk returns a tuple with the CustomConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetCustomConfigOk() (*string, bool) {
	if o == nil || IsNil(o.CustomConfig) {
		return nil, false
	}
	return o.CustomConfig, true
}

// IsSetCustomConfig returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetCustomConfig() bool {
	if o != nil && !IsNil(o.CustomConfig) {
		return true
	}

	return false
}

// SetCustomConfig gets a reference to the given string and assigns it to the CustomConfig field.
func (o *UpdateJobsRequestJob) SetCustomConfig(v string) {
	o.CustomConfig = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetDateTime() time.Time {
	if o == nil || IsNil(o.DateTime) {
		var ret time.Time
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateTime) {
		return nil, false
	}
	return o.DateTime, true
}

// IsSetDateTime returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetDateTime() bool {
	if o != nil && !IsNil(o.DateTime) {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given time.Time and assigns it to the DateTime field.
func (o *UpdateJobsRequestJob) SetDateTime(v time.Time) {
	o.DateTime = &v
}

// GetRun returns the Run field value if set, zero value otherwise.
func (o *UpdateJobsRequestJob) GetRun() bool {
	if o == nil || IsNil(o.Run) {
		var ret bool
		return ret
	}
	return *o.Run
}

// GetRunOk returns a tuple with the Run field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateJobsRequestJob) GetRunOk() (*bool, bool) {
	if o == nil || IsNil(o.Run) {
		return nil, false
	}
	return o.Run, true
}

// IsSetRun returns a boolean if a field has been set.
func (o *UpdateJobsRequestJob) IsSetRun() bool {
	if o != nil && !IsNil(o.Run) {
		return true
	}

	return false
}

// SetRun gets a reference to the given bool and assigns it to the Run field.
func (o *UpdateJobsRequestJob) SetRun(v bool) {
	o.Run = &v
}

func (o UpdateJobsRequestJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateJobsRequestJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !IsNil(o.Workflow) {
		toSerialize["workflow"] = o.Workflow
	}
	if !IsNil(o.ScanPath) {
		toSerialize["scanPath"] = o.ScanPath
	}
	if !IsNil(o.SecurityProfile) {
		toSerialize["securityProfile"] = o.SecurityProfile
	}
	if !IsNil(o.TargetType) {
		toSerialize["targetType"] = o.TargetType
	}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	if !IsNil(o.InstanceLabel) {
		toSerialize["instanceLabel"] = o.InstanceLabel
	}
	if !IsNil(o.ServerLabel) {
		toSerialize["serverLabel"] = o.ServerLabel
	}
	if !IsNil(o.ScheduleMode) {
		toSerialize["scheduleMode"] = o.ScheduleMode
	}
	if !IsNil(o.CustomOptions) {
		toSerialize["customOptions"] = o.CustomOptions
	}
	if !IsNil(o.CustomConfig) {
		toSerialize["customConfig"] = o.CustomConfig
	}
	if !IsNil(o.DateTime) {
		toSerialize["dateTime"] = o.DateTime
	}
	if !IsNil(o.Run) {
		toSerialize["run"] = o.Run
	}
	return toSerialize, nil
}

type NullableUpdateJobsRequestJob struct {
	value *UpdateJobsRequestJob
	isSet bool
}

func (v NullableUpdateJobsRequestJob) Get() *UpdateJobsRequestJob {
	return v.value
}

func (v *NullableUpdateJobsRequestJob) Set(val *UpdateJobsRequestJob) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateJobsRequestJob) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateJobsRequestJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateJobsRequestJob(val *UpdateJobsRequestJob) *NullableUpdateJobsRequestJob {
	return &NullableUpdateJobsRequestJob{value: val, isSet: true}
}

func (v NullableUpdateJobsRequestJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateJobsRequestJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


