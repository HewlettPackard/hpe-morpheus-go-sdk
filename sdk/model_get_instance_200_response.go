/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetInstance200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstance200Response{}

// GetInstance200Response struct for GetInstance200Response
type GetInstance200Response struct {
	Instance *GetInstance200ResponseInstance `json:"instance,omitempty"`
}

// NewGetInstance200Response instantiates a new GetInstance200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstance200Response() *GetInstance200Response {
	this := GetInstance200Response{}
	return &this
}

// NewGetInstance200ResponseWithDefaults instantiates a new GetInstance200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstance200ResponseWithDefaults() *GetInstance200Response {
	this := GetInstance200Response{}
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *GetInstance200Response) GetInstance() GetInstance200ResponseInstance {
	if o == nil || IsNil(o.Instance) {
		var ret GetInstance200ResponseInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstance200Response) GetInstanceOk() (*GetInstance200ResponseInstance, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *GetInstance200Response) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given GetInstance200ResponseInstance and assigns it to the Instance field.
func (o *GetInstance200Response) SetInstance(v GetInstance200ResponseInstance) {
	o.Instance = &v
}

func (o GetInstance200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstance200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	return toSerialize, nil
}

type NullableGetInstance200Response struct {
	value *GetInstance200Response
	isSet bool
}

func (v NullableGetInstance200Response) Get() *GetInstance200Response {
	return v.value
}

func (v *NullableGetInstance200Response) Set(val *GetInstance200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstance200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstance200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstance200Response(val *GetInstance200Response) *NullableGetInstance200Response {
	return &NullableGetInstance200Response{value: val, isSet: true}
}

func (v NullableGetInstance200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstance200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


