/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIdentitySourcesRequestUserSourceConfigOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIdentitySourcesRequestUserSourceConfigOneOf{}

// AddIdentitySourcesRequestUserSourceConfigOneOf LDAP Configuration
type AddIdentitySourcesRequestUserSourceConfigOneOf struct {
	// URL of Endpoint
	Url *string `json:"url,omitempty"`
	// Binding Username
	BindingUsername *string `json:"bindingUsername,omitempty"`
	// Binding Password
	BindingPassword *string `json:"bindingPassword,omitempty"`
	// User DN Expression
	RequiredGroup *string `json:"requiredGroup,omitempty"`
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIdentitySourcesRequestUserSourceConfigOneOf() *AddIdentitySourcesRequestUserSourceConfigOneOf {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf{}
	return &this
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOfWithDefaults instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIdentitySourcesRequestUserSourceConfigOneOfWithDefaults() *AddIdentitySourcesRequestUserSourceConfigOneOf {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// IsSetUrl returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) IsSetUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) SetUrl(v string) {
	o.Url = &v
}

// GetBindingUsername returns the BindingUsername field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetBindingUsername() string {
	if o == nil || IsNil(o.BindingUsername) {
		var ret string
		return ret
	}
	return *o.BindingUsername
}

// GetBindingUsernameOk returns a tuple with the BindingUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetBindingUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.BindingUsername) {
		return nil, false
	}
	return o.BindingUsername, true
}

// IsSetBindingUsername returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) IsSetBindingUsername() bool {
	if o != nil && !IsNil(o.BindingUsername) {
		return true
	}

	return false
}

// SetBindingUsername gets a reference to the given string and assigns it to the BindingUsername field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) SetBindingUsername(v string) {
	o.BindingUsername = &v
}

// GetBindingPassword returns the BindingPassword field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetBindingPassword() string {
	if o == nil || IsNil(o.BindingPassword) {
		var ret string
		return ret
	}
	return *o.BindingPassword
}

// GetBindingPasswordOk returns a tuple with the BindingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetBindingPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPassword) {
		return nil, false
	}
	return o.BindingPassword, true
}

// IsSetBindingPassword returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) IsSetBindingPassword() bool {
	if o != nil && !IsNil(o.BindingPassword) {
		return true
	}

	return false
}

// SetBindingPassword gets a reference to the given string and assigns it to the BindingPassword field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) SetBindingPassword(v string) {
	o.BindingPassword = &v
}

// GetRequiredGroup returns the RequiredGroup field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetRequiredGroup() string {
	if o == nil || IsNil(o.RequiredGroup) {
		var ret string
		return ret
	}
	return *o.RequiredGroup
}

// GetRequiredGroupOk returns a tuple with the RequiredGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) GetRequiredGroupOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredGroup) {
		return nil, false
	}
	return o.RequiredGroup, true
}

// IsSetRequiredGroup returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) IsSetRequiredGroup() bool {
	if o != nil && !IsNil(o.RequiredGroup) {
		return true
	}

	return false
}

// SetRequiredGroup gets a reference to the given string and assigns it to the RequiredGroup field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf) SetRequiredGroup(v string) {
	o.RequiredGroup = &v
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.BindingUsername) {
		toSerialize["bindingUsername"] = o.BindingUsername
	}
	if !IsNil(o.BindingPassword) {
		toSerialize["bindingPassword"] = o.BindingPassword
	}
	if !IsNil(o.RequiredGroup) {
		toSerialize["requiredGroup"] = o.RequiredGroup
	}
	return toSerialize, nil
}

type NullableAddIdentitySourcesRequestUserSourceConfigOneOf struct {
	value *AddIdentitySourcesRequestUserSourceConfigOneOf
	isSet bool
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf) Get() *AddIdentitySourcesRequestUserSourceConfigOneOf {
	return v.value
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf) Set(val *AddIdentitySourcesRequestUserSourceConfigOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentitySourcesRequestUserSourceConfigOneOf(val *AddIdentitySourcesRequestUserSourceConfigOneOf) *NullableAddIdentitySourcesRequestUserSourceConfigOneOf {
	return &NullableAddIdentitySourcesRequestUserSourceConfigOneOf{value: val, isSet: true}
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


