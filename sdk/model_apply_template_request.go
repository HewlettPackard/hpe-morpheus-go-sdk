/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ApplyTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplyTemplateRequest{}

// ApplyTemplateRequest struct for ApplyTemplateRequest
type ApplyTemplateRequest struct {
	// Url of desired template to apply to cluster
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Name or ID of desired Spec Template to apply to cluster
	SpecTemplate *string `json:"specTemplate,omitempty"`
	// Yaml of template to apply to cluster
	SpecYaml *string `json:"specYaml,omitempty"`
}

// NewApplyTemplateRequest instantiates a new ApplyTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyTemplateRequest() *ApplyTemplateRequest {
	this := ApplyTemplateRequest{}
	return &this
}

// NewApplyTemplateRequestWithDefaults instantiates a new ApplyTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyTemplateRequestWithDefaults() *ApplyTemplateRequest {
	this := ApplyTemplateRequest{}
	return &this
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *ApplyTemplateRequest) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyTemplateRequest) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *ApplyTemplateRequest) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *ApplyTemplateRequest) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetSpecTemplate returns the SpecTemplate field value if set, zero value otherwise.
func (o *ApplyTemplateRequest) GetSpecTemplate() string {
	if o == nil || IsNil(o.SpecTemplate) {
		var ret string
		return ret
	}
	return *o.SpecTemplate
}

// GetSpecTemplateOk returns a tuple with the SpecTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyTemplateRequest) GetSpecTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SpecTemplate) {
		return nil, false
	}
	return o.SpecTemplate, true
}

// IsSetSpecTemplate returns a boolean if a field has been set.
func (o *ApplyTemplateRequest) IsSetSpecTemplate() bool {
	if o != nil && !IsNil(o.SpecTemplate) {
		return true
	}

	return false
}

// SetSpecTemplate gets a reference to the given string and assigns it to the SpecTemplate field.
func (o *ApplyTemplateRequest) SetSpecTemplate(v string) {
	o.SpecTemplate = &v
}

// GetSpecYaml returns the SpecYaml field value if set, zero value otherwise.
func (o *ApplyTemplateRequest) GetSpecYaml() string {
	if o == nil || IsNil(o.SpecYaml) {
		var ret string
		return ret
	}
	return *o.SpecYaml
}

// GetSpecYamlOk returns a tuple with the SpecYaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyTemplateRequest) GetSpecYamlOk() (*string, bool) {
	if o == nil || IsNil(o.SpecYaml) {
		return nil, false
	}
	return o.SpecYaml, true
}

// IsSetSpecYaml returns a boolean if a field has been set.
func (o *ApplyTemplateRequest) IsSetSpecYaml() bool {
	if o != nil && !IsNil(o.SpecYaml) {
		return true
	}

	return false
}

// SetSpecYaml gets a reference to the given string and assigns it to the SpecYaml field.
func (o *ApplyTemplateRequest) SetSpecYaml(v string) {
	o.SpecYaml = &v
}

func (o ApplyTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.SpecTemplate) {
		toSerialize["specTemplate"] = o.SpecTemplate
	}
	if !IsNil(o.SpecYaml) {
		toSerialize["specYaml"] = o.SpecYaml
	}
	return toSerialize, nil
}

type NullableApplyTemplateRequest struct {
	value *ApplyTemplateRequest
	isSet bool
}

func (v NullableApplyTemplateRequest) Get() *ApplyTemplateRequest {
	return v.value
}

func (v *NullableApplyTemplateRequest) Set(val *ApplyTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyTemplateRequest(val *ApplyTemplateRequest) *NullableApplyTemplateRequest {
	return &NullableApplyTemplateRequest{value: val, isSet: true}
}

func (v NullableApplyTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


