/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListVDIAllocations200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVDIAllocations200Response{}

// ListVDIAllocations200Response struct for ListVDIAllocations200Response
type ListVDIAllocations200Response struct {
	VdiAllocations []ListVDIAllocations200ResponseAllOfVdiAllocationsInner `json:"vdiAllocations,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListVDIAllocations200Response instantiates a new ListVDIAllocations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVDIAllocations200Response() *ListVDIAllocations200Response {
	this := ListVDIAllocations200Response{}
	return &this
}

// NewListVDIAllocations200ResponseWithDefaults instantiates a new ListVDIAllocations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVDIAllocations200ResponseWithDefaults() *ListVDIAllocations200Response {
	this := ListVDIAllocations200Response{}
	return &this
}

// GetVdiAllocations returns the VdiAllocations field value if set, zero value otherwise.
func (o *ListVDIAllocations200Response) GetVdiAllocations() []ListVDIAllocations200ResponseAllOfVdiAllocationsInner {
	if o == nil || IsNil(o.VdiAllocations) {
		var ret []ListVDIAllocations200ResponseAllOfVdiAllocationsInner
		return ret
	}
	return o.VdiAllocations
}

// GetVdiAllocationsOk returns a tuple with the VdiAllocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIAllocations200Response) GetVdiAllocationsOk() ([]ListVDIAllocations200ResponseAllOfVdiAllocationsInner, bool) {
	if o == nil || IsNil(o.VdiAllocations) {
		return nil, false
	}
	return o.VdiAllocations, true
}

// IsSetVdiAllocations returns a boolean if a field has been set.
func (o *ListVDIAllocations200Response) IsSetVdiAllocations() bool {
	if o != nil && !IsNil(o.VdiAllocations) {
		return true
	}

	return false
}

// SetVdiAllocations gets a reference to the given []ListVDIAllocations200ResponseAllOfVdiAllocationsInner and assigns it to the VdiAllocations field.
func (o *ListVDIAllocations200Response) SetVdiAllocations(v []ListVDIAllocations200ResponseAllOfVdiAllocationsInner) {
	o.VdiAllocations = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListVDIAllocations200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIAllocations200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListVDIAllocations200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListVDIAllocations200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListVDIAllocations200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVDIAllocations200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VdiAllocations) {
		toSerialize["vdiAllocations"] = o.VdiAllocations
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListVDIAllocations200Response struct {
	value *ListVDIAllocations200Response
	isSet bool
}

func (v NullableListVDIAllocations200Response) Get() *ListVDIAllocations200Response {
	return v.value
}

func (v *NullableListVDIAllocations200Response) Set(val *ListVDIAllocations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListVDIAllocations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListVDIAllocations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVDIAllocations200Response(val *ListVDIAllocations200Response) *NullableListVDIAllocations200Response {
	return &NullableListVDIAllocations200Response{value: val, isSet: true}
}

func (v NullableListVDIAllocations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVDIAllocations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


