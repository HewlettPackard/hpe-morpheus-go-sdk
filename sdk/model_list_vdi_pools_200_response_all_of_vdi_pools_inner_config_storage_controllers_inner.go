/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner{}

// ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner struct for ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner
type ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Active *bool `json:"active,omitempty"`
	TypeId *int64 `json:"typeId,omitempty"`
	TypeName *string `json:"typeName,omitempty"`
	UnitNumber *string `json:"unitNumber,omitempty"`
	BusNumber *string `json:"busNumber,omitempty"`
	MaxDevices *float32 `json:"maxDevices,omitempty"`
	Removable *bool `json:"removable,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	ReservedUnitNumber *float32 `json:"reservedUnitNumber,omitempty"`
	Category *string `json:"category,omitempty"`
	DisplayOrder *float32 `json:"displayOrder,omitempty"`
}

// NewListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner instantiates a new ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner() *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner {
	this := ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner{}
	return &this
}

// NewListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInnerWithDefaults instantiates a new ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInnerWithDefaults() *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner {
	this := ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetName(v string) {
	o.Name = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetActive(v bool) {
	o.Active = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetTypeId() int64 {
	if o == nil || IsNil(o.TypeId) {
		var ret int64
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetTypeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// IsSetTypeId returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetTypeId() bool {
	if o != nil && !IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given int64 and assigns it to the TypeId field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetTypeId(v int64) {
	o.TypeId = &v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetTypeName() string {
	if o == nil || IsNil(o.TypeName) {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.TypeName) {
		return nil, false
	}
	return o.TypeName, true
}

// IsSetTypeName returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetTypeName() bool {
	if o != nil && !IsNil(o.TypeName) {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetTypeName(v string) {
	o.TypeName = &v
}

// GetUnitNumber returns the UnitNumber field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetUnitNumber() string {
	if o == nil || IsNil(o.UnitNumber) {
		var ret string
		return ret
	}
	return *o.UnitNumber
}

// GetUnitNumberOk returns a tuple with the UnitNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetUnitNumberOk() (*string, bool) {
	if o == nil || IsNil(o.UnitNumber) {
		return nil, false
	}
	return o.UnitNumber, true
}

// IsSetUnitNumber returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetUnitNumber() bool {
	if o != nil && !IsNil(o.UnitNumber) {
		return true
	}

	return false
}

// SetUnitNumber gets a reference to the given string and assigns it to the UnitNumber field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetUnitNumber(v string) {
	o.UnitNumber = &v
}

// GetBusNumber returns the BusNumber field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetBusNumber() string {
	if o == nil || IsNil(o.BusNumber) {
		var ret string
		return ret
	}
	return *o.BusNumber
}

// GetBusNumberOk returns a tuple with the BusNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetBusNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BusNumber) {
		return nil, false
	}
	return o.BusNumber, true
}

// IsSetBusNumber returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetBusNumber() bool {
	if o != nil && !IsNil(o.BusNumber) {
		return true
	}

	return false
}

// SetBusNumber gets a reference to the given string and assigns it to the BusNumber field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetBusNumber(v string) {
	o.BusNumber = &v
}

// GetMaxDevices returns the MaxDevices field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetMaxDevices() float32 {
	if o == nil || IsNil(o.MaxDevices) {
		var ret float32
		return ret
	}
	return *o.MaxDevices
}

// GetMaxDevicesOk returns a tuple with the MaxDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetMaxDevicesOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDevices) {
		return nil, false
	}
	return o.MaxDevices, true
}

// IsSetMaxDevices returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetMaxDevices() bool {
	if o != nil && !IsNil(o.MaxDevices) {
		return true
	}

	return false
}

// SetMaxDevices gets a reference to the given float32 and assigns it to the MaxDevices field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetMaxDevices(v float32) {
	o.MaxDevices = &v
}

// GetRemovable returns the Removable field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetRemovable() bool {
	if o == nil || IsNil(o.Removable) {
		var ret bool
		return ret
	}
	return *o.Removable
}

// GetRemovableOk returns a tuple with the Removable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetRemovableOk() (*bool, bool) {
	if o == nil || IsNil(o.Removable) {
		return nil, false
	}
	return o.Removable, true
}

// IsSetRemovable returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetRemovable() bool {
	if o != nil && !IsNil(o.Removable) {
		return true
	}

	return false
}

// SetRemovable gets a reference to the given bool and assigns it to the Removable field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetRemovable(v bool) {
	o.Removable = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetEditable() bool {
	if o == nil || IsNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.Editable) {
		return nil, false
	}
	return o.Editable, true
}

// IsSetEditable returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetEditable() bool {
	if o != nil && !IsNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetEditable(v bool) {
	o.Editable = &v
}

// GetReservedUnitNumber returns the ReservedUnitNumber field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetReservedUnitNumber() float32 {
	if o == nil || IsNil(o.ReservedUnitNumber) {
		var ret float32
		return ret
	}
	return *o.ReservedUnitNumber
}

// GetReservedUnitNumberOk returns a tuple with the ReservedUnitNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetReservedUnitNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.ReservedUnitNumber) {
		return nil, false
	}
	return o.ReservedUnitNumber, true
}

// IsSetReservedUnitNumber returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetReservedUnitNumber() bool {
	if o != nil && !IsNil(o.ReservedUnitNumber) {
		return true
	}

	return false
}

// SetReservedUnitNumber gets a reference to the given float32 and assigns it to the ReservedUnitNumber field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetReservedUnitNumber(v float32) {
	o.ReservedUnitNumber = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetCategory(v string) {
	o.Category = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetDisplayOrder() float32 {
	if o == nil || IsNil(o.DisplayOrder) {
		var ret float32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) GetDisplayOrderOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// IsSetDisplayOrder returns a boolean if a field has been set.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSetDisplayOrder() bool {
	if o != nil && !IsNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given float32 and assigns it to the DisplayOrder field.
func (o *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) SetDisplayOrder(v float32) {
	o.DisplayOrder = &v
}

func (o ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.TypeId) {
		toSerialize["typeId"] = o.TypeId
	}
	if !IsNil(o.TypeName) {
		toSerialize["typeName"] = o.TypeName
	}
	if !IsNil(o.UnitNumber) {
		toSerialize["unitNumber"] = o.UnitNumber
	}
	if !IsNil(o.BusNumber) {
		toSerialize["busNumber"] = o.BusNumber
	}
	if !IsNil(o.MaxDevices) {
		toSerialize["maxDevices"] = o.MaxDevices
	}
	if !IsNil(o.Removable) {
		toSerialize["removable"] = o.Removable
	}
	if !IsNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	if !IsNil(o.ReservedUnitNumber) {
		toSerialize["reservedUnitNumber"] = o.ReservedUnitNumber
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.DisplayOrder) {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	return toSerialize, nil
}

type NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner struct {
	value *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner
	isSet bool
}

func (v NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) Get() *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner {
	return v.value
}

func (v *NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) Set(val *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner(val *ListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) *NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner {
	return &NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner{value: val, isSet: true}
}

func (v NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVDIPools200ResponseAllOfVdiPoolsInnerConfigStorageControllersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


