/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ZoneNetworkOptionsNetworkSubnetsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneNetworkOptionsNetworkSubnetsInner{}

// ZoneNetworkOptionsNetworkSubnetsInner struct for ZoneNetworkOptionsNetworkSubnetsInner
type ZoneNetworkOptionsNetworkSubnetsInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	Active *bool `json:"active,omitempty"`
	DhcpServer *bool `json:"dhcpServer,omitempty"`
	AllowStaticOverride *bool `json:"allowStaticOverride,omitempty"`
}

// NewZoneNetworkOptionsNetworkSubnetsInner instantiates a new ZoneNetworkOptionsNetworkSubnetsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneNetworkOptionsNetworkSubnetsInner() *ZoneNetworkOptionsNetworkSubnetsInner {
	this := ZoneNetworkOptionsNetworkSubnetsInner{}
	return &this
}

// NewZoneNetworkOptionsNetworkSubnetsInnerWithDefaults instantiates a new ZoneNetworkOptionsNetworkSubnetsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneNetworkOptionsNetworkSubnetsInnerWithDefaults() *ZoneNetworkOptionsNetworkSubnetsInner {
	this := ZoneNetworkOptionsNetworkSubnetsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetCode(v string) {
	o.Code = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetActive(v bool) {
	o.Active = &v
}

// GetDhcpServer returns the DhcpServer field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetDhcpServer() bool {
	if o == nil || IsNil(o.DhcpServer) {
		var ret bool
		return ret
	}
	return *o.DhcpServer
}

// GetDhcpServerOk returns a tuple with the DhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetDhcpServerOk() (*bool, bool) {
	if o == nil || IsNil(o.DhcpServer) {
		return nil, false
	}
	return o.DhcpServer, true
}

// IsSetDhcpServer returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetDhcpServer() bool {
	if o != nil && !IsNil(o.DhcpServer) {
		return true
	}

	return false
}

// SetDhcpServer gets a reference to the given bool and assigns it to the DhcpServer field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetDhcpServer(v bool) {
	o.DhcpServer = &v
}

// GetAllowStaticOverride returns the AllowStaticOverride field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetAllowStaticOverride() bool {
	if o == nil || IsNil(o.AllowStaticOverride) {
		var ret bool
		return ret
	}
	return *o.AllowStaticOverride
}

// GetAllowStaticOverrideOk returns a tuple with the AllowStaticOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) GetAllowStaticOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowStaticOverride) {
		return nil, false
	}
	return o.AllowStaticOverride, true
}

// IsSetAllowStaticOverride returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) IsSetAllowStaticOverride() bool {
	if o != nil && !IsNil(o.AllowStaticOverride) {
		return true
	}

	return false
}

// SetAllowStaticOverride gets a reference to the given bool and assigns it to the AllowStaticOverride field.
func (o *ZoneNetworkOptionsNetworkSubnetsInner) SetAllowStaticOverride(v bool) {
	o.AllowStaticOverride = &v
}

func (o ZoneNetworkOptionsNetworkSubnetsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneNetworkOptionsNetworkSubnetsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.DhcpServer) {
		toSerialize["dhcpServer"] = o.DhcpServer
	}
	if !IsNil(o.AllowStaticOverride) {
		toSerialize["allowStaticOverride"] = o.AllowStaticOverride
	}
	return toSerialize, nil
}

type NullableZoneNetworkOptionsNetworkSubnetsInner struct {
	value *ZoneNetworkOptionsNetworkSubnetsInner
	isSet bool
}

func (v NullableZoneNetworkOptionsNetworkSubnetsInner) Get() *ZoneNetworkOptionsNetworkSubnetsInner {
	return v.value
}

func (v *NullableZoneNetworkOptionsNetworkSubnetsInner) Set(val *ZoneNetworkOptionsNetworkSubnetsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneNetworkOptionsNetworkSubnetsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneNetworkOptionsNetworkSubnetsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneNetworkOptionsNetworkSubnetsInner(val *ZoneNetworkOptionsNetworkSubnetsInner) *NullableZoneNetworkOptionsNetworkSubnetsInner {
	return &NullableZoneNetworkOptionsNetworkSubnetsInner{value: val, isSet: true}
}

func (v NullableZoneNetworkOptionsNetworkSubnetsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneNetworkOptionsNetworkSubnetsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


