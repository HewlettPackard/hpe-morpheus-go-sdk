/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostCloud200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostCloud200Response{}

// UpdateHostCloud200Response struct for UpdateHostCloud200Response
type UpdateHostCloud200Response struct {
	Msg *string `json:"msg,omitempty"`
	Errors *string `json:"errors,omitempty"`
	ErrorCode *string `json:"errorCode,omitempty"`
	Data *string `json:"data,omitempty"`
	InProgress *bool `json:"inProgress,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewUpdateHostCloud200Response instantiates a new UpdateHostCloud200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostCloud200Response() *UpdateHostCloud200Response {
	this := UpdateHostCloud200Response{}
	return &this
}

// NewUpdateHostCloud200ResponseWithDefaults instantiates a new UpdateHostCloud200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostCloud200ResponseWithDefaults() *UpdateHostCloud200Response {
	this := UpdateHostCloud200Response{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// IsSetMsg returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *UpdateHostCloud200Response) SetMsg(v string) {
	o.Msg = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetErrors() string {
	if o == nil || IsNil(o.Errors) {
		var ret string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetErrorsOk() (*string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// IsSetErrors returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given string and assigns it to the Errors field.
func (o *UpdateHostCloud200Response) SetErrors(v string) {
	o.Errors = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// IsSetErrorCode returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *UpdateHostCloud200Response) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// IsSetData returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *UpdateHostCloud200Response) SetData(v string) {
	o.Data = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetInProgress() bool {
	if o == nil || IsNil(o.InProgress) {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// IsSetInProgress returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *UpdateHostCloud200Response) SetInProgress(v bool) {
	o.InProgress = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateHostCloud200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostCloud200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *UpdateHostCloud200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateHostCloud200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o UpdateHostCloud200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostCloud200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.InProgress) {
		toSerialize["inProgress"] = o.InProgress
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableUpdateHostCloud200Response struct {
	value *UpdateHostCloud200Response
	isSet bool
}

func (v NullableUpdateHostCloud200Response) Get() *UpdateHostCloud200Response {
	return v.value
}

func (v *NullableUpdateHostCloud200Response) Set(val *UpdateHostCloud200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostCloud200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostCloud200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostCloud200Response(val *UpdateHostCloud200Response) *NullableUpdateHostCloud200Response {
	return &NullableUpdateHostCloud200Response{value: val, isSet: true}
}

func (v NullableUpdateHostCloud200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostCloud200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


