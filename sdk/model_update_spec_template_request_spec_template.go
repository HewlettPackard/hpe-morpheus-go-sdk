/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateSpecTemplateRequestSpecTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSpecTemplateRequestSpecTemplate{}

// UpdateSpecTemplateRequestSpecTemplate struct for UpdateSpecTemplateRequestSpecTemplate
type UpdateSpecTemplateRequestSpecTemplate struct {
	// Spec template name
	Name *string `json:"name,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	Type *UpdateSpecTemplateRequestSpecTemplateType `json:"type,omitempty"`
	File *UpdateSpecTemplateRequestSpecTemplateFile `json:"file,omitempty"`
	Config *UpdateSpecTemplateRequestSpecTemplateConfig `json:"config,omitempty"`
}

// NewUpdateSpecTemplateRequestSpecTemplate instantiates a new UpdateSpecTemplateRequestSpecTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSpecTemplateRequestSpecTemplate() *UpdateSpecTemplateRequestSpecTemplate {
	this := UpdateSpecTemplateRequestSpecTemplate{}
	return &this
}

// NewUpdateSpecTemplateRequestSpecTemplateWithDefaults instantiates a new UpdateSpecTemplateRequestSpecTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSpecTemplateRequestSpecTemplateWithDefaults() *UpdateSpecTemplateRequestSpecTemplate {
	this := UpdateSpecTemplateRequestSpecTemplate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateSpecTemplateRequestSpecTemplate) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateSpecTemplateRequestSpecTemplate) SetLabels(v []string) {
	o.Labels = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetType() UpdateSpecTemplateRequestSpecTemplateType {
	if o == nil || IsNil(o.Type) {
		var ret UpdateSpecTemplateRequestSpecTemplateType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetTypeOk() (*UpdateSpecTemplateRequestSpecTemplateType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given UpdateSpecTemplateRequestSpecTemplateType and assigns it to the Type field.
func (o *UpdateSpecTemplateRequestSpecTemplate) SetType(v UpdateSpecTemplateRequestSpecTemplateType) {
	o.Type = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetFile() UpdateSpecTemplateRequestSpecTemplateFile {
	if o == nil || IsNil(o.File) {
		var ret UpdateSpecTemplateRequestSpecTemplateFile
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetFileOk() (*UpdateSpecTemplateRequestSpecTemplateFile, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// IsSetFile returns a boolean if a field has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) IsSetFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given UpdateSpecTemplateRequestSpecTemplateFile and assigns it to the File field.
func (o *UpdateSpecTemplateRequestSpecTemplate) SetFile(v UpdateSpecTemplateRequestSpecTemplateFile) {
	o.File = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetConfig() UpdateSpecTemplateRequestSpecTemplateConfig {
	if o == nil || IsNil(o.Config) {
		var ret UpdateSpecTemplateRequestSpecTemplateConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) GetConfigOk() (*UpdateSpecTemplateRequestSpecTemplateConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdateSpecTemplateRequestSpecTemplate) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given UpdateSpecTemplateRequestSpecTemplateConfig and assigns it to the Config field.
func (o *UpdateSpecTemplateRequestSpecTemplate) SetConfig(v UpdateSpecTemplateRequestSpecTemplateConfig) {
	o.Config = &v
}

func (o UpdateSpecTemplateRequestSpecTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSpecTemplateRequestSpecTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableUpdateSpecTemplateRequestSpecTemplate struct {
	value *UpdateSpecTemplateRequestSpecTemplate
	isSet bool
}

func (v NullableUpdateSpecTemplateRequestSpecTemplate) Get() *UpdateSpecTemplateRequestSpecTemplate {
	return v.value
}

func (v *NullableUpdateSpecTemplateRequestSpecTemplate) Set(val *UpdateSpecTemplateRequestSpecTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSpecTemplateRequestSpecTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSpecTemplateRequestSpecTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSpecTemplateRequestSpecTemplate(val *UpdateSpecTemplateRequestSpecTemplate) *NullableUpdateSpecTemplateRequestSpecTemplate {
	return &NullableUpdateSpecTemplateRequestSpecTemplate{value: val, isSet: true}
}

func (v NullableUpdateSpecTemplateRequestSpecTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSpecTemplateRequestSpecTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


