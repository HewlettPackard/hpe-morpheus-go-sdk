/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the UpdateIncidentsRequestIncident type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIncidentsRequestIncident{}

// UpdateIncidentsRequestIncident Payload for update an incident
type UpdateIncidentsRequestIncident struct {
	// Description of the resolution to this incident
	Resolution *string `json:"resolution,omitempty"`
	// Comment on this incident, updates summary field
	Comment *string `json:"comment,omitempty"`
	// Set status
	Status *string `json:"status,omitempty"`
	// Set severity
	Severity *string `json:"severity,omitempty"`
	// Set display name
	Name *string `json:"name,omitempty"`
	// Set start time
	StartDate *time.Time `json:"startDate,omitempty"`
	// Set start time
	EndDate *time.Time `json:"endDate,omitempty"`
	// Set 'In Availability'
	InUptime *bool `json:"inUptime,omitempty"`
}

// NewUpdateIncidentsRequestIncident instantiates a new UpdateIncidentsRequestIncident object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIncidentsRequestIncident() *UpdateIncidentsRequestIncident {
	this := UpdateIncidentsRequestIncident{}
	return &this
}

// NewUpdateIncidentsRequestIncidentWithDefaults instantiates a new UpdateIncidentsRequestIncident object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIncidentsRequestIncidentWithDefaults() *UpdateIncidentsRequestIncident {
	this := UpdateIncidentsRequestIncident{}
	return &this
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetResolution() string {
	if o == nil || IsNil(o.Resolution) {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// IsSetResolution returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *UpdateIncidentsRequestIncident) SetResolution(v string) {
	o.Resolution = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// IsSetComment returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *UpdateIncidentsRequestIncident) SetComment(v string) {
	o.Comment = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateIncidentsRequestIncident) SetStatus(v string) {
	o.Status = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// IsSetSeverity returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *UpdateIncidentsRequestIncident) SetSeverity(v string) {
	o.Severity = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateIncidentsRequestIncident) SetName(v string) {
	o.Name = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// IsSetStartDate returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *UpdateIncidentsRequestIncident) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// IsSetEndDate returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *UpdateIncidentsRequestIncident) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetInUptime returns the InUptime field value if set, zero value otherwise.
func (o *UpdateIncidentsRequestIncident) GetInUptime() bool {
	if o == nil || IsNil(o.InUptime) {
		var ret bool
		return ret
	}
	return *o.InUptime
}

// GetInUptimeOk returns a tuple with the InUptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIncidentsRequestIncident) GetInUptimeOk() (*bool, bool) {
	if o == nil || IsNil(o.InUptime) {
		return nil, false
	}
	return o.InUptime, true
}

// IsSetInUptime returns a boolean if a field has been set.
func (o *UpdateIncidentsRequestIncident) IsSetInUptime() bool {
	if o != nil && !IsNil(o.InUptime) {
		return true
	}

	return false
}

// SetInUptime gets a reference to the given bool and assigns it to the InUptime field.
func (o *UpdateIncidentsRequestIncident) SetInUptime(v bool) {
	o.InUptime = &v
}

func (o UpdateIncidentsRequestIncident) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIncidentsRequestIncident) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.InUptime) {
		toSerialize["inUptime"] = o.InUptime
	}
	return toSerialize, nil
}

type NullableUpdateIncidentsRequestIncident struct {
	value *UpdateIncidentsRequestIncident
	isSet bool
}

func (v NullableUpdateIncidentsRequestIncident) Get() *UpdateIncidentsRequestIncident {
	return v.value
}

func (v *NullableUpdateIncidentsRequestIncident) Set(val *UpdateIncidentsRequestIncident) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIncidentsRequestIncident) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIncidentsRequestIncident) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIncidentsRequestIncident(val *UpdateIncidentsRequestIncident) *NullableUpdateIncidentsRequestIncident {
	return &NullableUpdateIncidentsRequestIncident{value: val, isSet: true}
}

func (v NullableUpdateIncidentsRequestIncident) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIncidentsRequestIncident) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


