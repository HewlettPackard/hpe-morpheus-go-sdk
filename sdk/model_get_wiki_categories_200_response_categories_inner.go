/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetWikiCategories200ResponseCategoriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWikiCategories200ResponseCategoriesInner{}

// GetWikiCategories200ResponseCategoriesInner struct for GetWikiCategories200ResponseCategoriesInner
type GetWikiCategories200ResponseCategoriesInner struct {
	Name *string `json:"name,omitempty"`
	PageCount *int64 `json:"pageCount,omitempty"`
}

// NewGetWikiCategories200ResponseCategoriesInner instantiates a new GetWikiCategories200ResponseCategoriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWikiCategories200ResponseCategoriesInner() *GetWikiCategories200ResponseCategoriesInner {
	this := GetWikiCategories200ResponseCategoriesInner{}
	return &this
}

// NewGetWikiCategories200ResponseCategoriesInnerWithDefaults instantiates a new GetWikiCategories200ResponseCategoriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWikiCategories200ResponseCategoriesInnerWithDefaults() *GetWikiCategories200ResponseCategoriesInner {
	this := GetWikiCategories200ResponseCategoriesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetWikiCategories200ResponseCategoriesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWikiCategories200ResponseCategoriesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *GetWikiCategories200ResponseCategoriesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetWikiCategories200ResponseCategoriesInner) SetName(v string) {
	o.Name = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *GetWikiCategories200ResponseCategoriesInner) GetPageCount() int64 {
	if o == nil || IsNil(o.PageCount) {
		var ret int64
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWikiCategories200ResponseCategoriesInner) GetPageCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// IsSetPageCount returns a boolean if a field has been set.
func (o *GetWikiCategories200ResponseCategoriesInner) IsSetPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int64 and assigns it to the PageCount field.
func (o *GetWikiCategories200ResponseCategoriesInner) SetPageCount(v int64) {
	o.PageCount = &v
}

func (o GetWikiCategories200ResponseCategoriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWikiCategories200ResponseCategoriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PageCount) {
		toSerialize["pageCount"] = o.PageCount
	}
	return toSerialize, nil
}

type NullableGetWikiCategories200ResponseCategoriesInner struct {
	value *GetWikiCategories200ResponseCategoriesInner
	isSet bool
}

func (v NullableGetWikiCategories200ResponseCategoriesInner) Get() *GetWikiCategories200ResponseCategoriesInner {
	return v.value
}

func (v *NullableGetWikiCategories200ResponseCategoriesInner) Set(val *GetWikiCategories200ResponseCategoriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWikiCategories200ResponseCategoriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWikiCategories200ResponseCategoriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWikiCategories200ResponseCategoriesInner(val *GetWikiCategories200ResponseCategoriesInner) *NullableGetWikiCategories200ResponseCategoriesInner {
	return &NullableGetWikiCategories200ResponseCategoriesInner{value: val, isSet: true}
}

func (v NullableGetWikiCategories200ResponseCategoriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWikiCategories200ResponseCategoriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


