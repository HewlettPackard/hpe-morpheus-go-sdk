/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the AddCredentials200ResponseAllOfCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCredentials200ResponseAllOfCredential{}

// AddCredentials200ResponseAllOfCredential struct for AddCredentials200ResponseAllOfCredential
type AddCredentials200ResponseAllOfCredential struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"type,omitempty"`
	Integration *string `json:"integration,omitempty"`
	Description *string `json:"description,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	PasswordHash *string `json:"passwordHash,omitempty"`
	AuthKey *GetAlerts200ResponseAllOfCheckGroupsInnerInstance `json:"authKey,omitempty"`
	AuthPath *string `json:"authPath,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *string `json:"refId,omitempty"`
	Category *string `json:"category,omitempty"`
	Scope *string `json:"scope,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
	StatusDate *time.Time `json:"statusDate,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
	User *ListCredentials200ResponseAllOfCredentialsInnerUser `json:"user,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Config *AddCredentials200ResponseAllOfCredentialConfig `json:"config,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AddCredentials200ResponseAllOfCredential AddCredentials200ResponseAllOfCredential

// NewAddCredentials200ResponseAllOfCredential instantiates a new AddCredentials200ResponseAllOfCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCredentials200ResponseAllOfCredential() *AddCredentials200ResponseAllOfCredential {
	this := AddCredentials200ResponseAllOfCredential{}
	return &this
}

// NewAddCredentials200ResponseAllOfCredentialWithDefaults instantiates a new AddCredentials200ResponseAllOfCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCredentials200ResponseAllOfCredentialWithDefaults() *AddCredentials200ResponseAllOfCredential {
	this := AddCredentials200ResponseAllOfCredential{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddCredentials200ResponseAllOfCredential) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddCredentials200ResponseAllOfCredential) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.Type) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the Type field.
func (o *AddCredentials200ResponseAllOfCredential) SetType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.Type = &v
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetIntegration() string {
	if o == nil || IsNil(o.Integration) {
		var ret string
		return ret
	}
	return *o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetIntegrationOk() (*string, bool) {
	if o == nil || IsNil(o.Integration) {
		return nil, false
	}
	return o.Integration, true
}

// IsSetIntegration returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetIntegration() bool {
	if o != nil && !IsNil(o.Integration) {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given string and assigns it to the Integration field.
func (o *AddCredentials200ResponseAllOfCredential) SetIntegration(v string) {
	o.Integration = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddCredentials200ResponseAllOfCredential) SetDescription(v string) {
	o.Description = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AddCredentials200ResponseAllOfCredential) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// IsSetPassword returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AddCredentials200ResponseAllOfCredential) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordHash returns the PasswordHash field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetPasswordHash() string {
	if o == nil || IsNil(o.PasswordHash) {
		var ret string
		return ret
	}
	return *o.PasswordHash
}

// GetPasswordHashOk returns a tuple with the PasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordHash) {
		return nil, false
	}
	return o.PasswordHash, true
}

// IsSetPasswordHash returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetPasswordHash() bool {
	if o != nil && !IsNil(o.PasswordHash) {
		return true
	}

	return false
}

// SetPasswordHash gets a reference to the given string and assigns it to the PasswordHash field.
func (o *AddCredentials200ResponseAllOfCredential) SetPasswordHash(v string) {
	o.PasswordHash = &v
}

// GetAuthKey returns the AuthKey field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetAuthKey() GetAlerts200ResponseAllOfCheckGroupsInnerInstance {
	if o == nil || IsNil(o.AuthKey) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInnerInstance
		return ret
	}
	return *o.AuthKey
}

// GetAuthKeyOk returns a tuple with the AuthKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetAuthKeyOk() (*GetAlerts200ResponseAllOfCheckGroupsInnerInstance, bool) {
	if o == nil || IsNil(o.AuthKey) {
		return nil, false
	}
	return o.AuthKey, true
}

// IsSetAuthKey returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetAuthKey() bool {
	if o != nil && !IsNil(o.AuthKey) {
		return true
	}

	return false
}

// SetAuthKey gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInnerInstance and assigns it to the AuthKey field.
func (o *AddCredentials200ResponseAllOfCredential) SetAuthKey(v GetAlerts200ResponseAllOfCheckGroupsInnerInstance) {
	o.AuthKey = &v
}

// GetAuthPath returns the AuthPath field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetAuthPath() string {
	if o == nil || IsNil(o.AuthPath) {
		var ret string
		return ret
	}
	return *o.AuthPath
}

// GetAuthPathOk returns a tuple with the AuthPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetAuthPathOk() (*string, bool) {
	if o == nil || IsNil(o.AuthPath) {
		return nil, false
	}
	return o.AuthPath, true
}

// IsSetAuthPath returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetAuthPath() bool {
	if o != nil && !IsNil(o.AuthPath) {
		return true
	}

	return false
}

// SetAuthPath gets a reference to the given string and assigns it to the AuthPath field.
func (o *AddCredentials200ResponseAllOfCredential) SetAuthPath(v string) {
	o.AuthPath = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *AddCredentials200ResponseAllOfCredential) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *AddCredentials200ResponseAllOfCredential) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetRefId() string {
	if o == nil || IsNil(o.RefId) {
		var ret string
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given string and assigns it to the RefId field.
func (o *AddCredentials200ResponseAllOfCredential) SetRefId(v string) {
	o.RefId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AddCredentials200ResponseAllOfCredential) SetCategory(v string) {
	o.Category = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// IsSetScope returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *AddCredentials200ResponseAllOfCredential) SetScope(v string) {
	o.Scope = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AddCredentials200ResponseAllOfCredential) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// IsSetStatusMessage returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *AddCredentials200ResponseAllOfCredential) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetStatusDate() time.Time {
	if o == nil || IsNil(o.StatusDate) {
		var ret time.Time
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetStatusDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StatusDate) {
		return nil, false
	}
	return o.StatusDate, true
}

// IsSetStatusDate returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetStatusDate() bool {
	if o != nil && !IsNil(o.StatusDate) {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given time.Time and assigns it to the StatusDate field.
func (o *AddCredentials200ResponseAllOfCredential) SetStatusDate(v time.Time) {
	o.StatusDate = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddCredentials200ResponseAllOfCredential) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *AddCredentials200ResponseAllOfCredential) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetUser() ListCredentials200ResponseAllOfCredentialsInnerUser {
	if o == nil || IsNil(o.User) {
		var ret ListCredentials200ResponseAllOfCredentialsInnerUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetUserOk() (*ListCredentials200ResponseAllOfCredentialsInnerUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given ListCredentials200ResponseAllOfCredentialsInnerUser and assigns it to the User field.
func (o *AddCredentials200ResponseAllOfCredential) SetUser(v ListCredentials200ResponseAllOfCredentialsInnerUser) {
	o.User = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *AddCredentials200ResponseAllOfCredential) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *AddCredentials200ResponseAllOfCredential) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddCredentials200ResponseAllOfCredential) GetConfig() AddCredentials200ResponseAllOfCredentialConfig {
	if o == nil || IsNil(o.Config) {
		var ret AddCredentials200ResponseAllOfCredentialConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentials200ResponseAllOfCredential) GetConfigOk() (*AddCredentials200ResponseAllOfCredentialConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddCredentials200ResponseAllOfCredential) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddCredentials200ResponseAllOfCredentialConfig and assigns it to the Config field.
func (o *AddCredentials200ResponseAllOfCredential) SetConfig(v AddCredentials200ResponseAllOfCredentialConfig) {
	o.Config = &v
}

func (o AddCredentials200ResponseAllOfCredential) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCredentials200ResponseAllOfCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Integration) {
		toSerialize["integration"] = o.Integration
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PasswordHash) {
		toSerialize["passwordHash"] = o.PasswordHash
	}
	if !IsNil(o.AuthKey) {
		toSerialize["authKey"] = o.AuthKey
	}
	if !IsNil(o.AuthPath) {
		toSerialize["authPath"] = o.AuthPath
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.StatusDate) {
		toSerialize["statusDate"] = o.StatusDate
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddCredentials200ResponseAllOfCredential) UnmarshalJSON(data []byte) (err error) {
	varAddCredentials200ResponseAllOfCredential := _AddCredentials200ResponseAllOfCredential{}

	err = json.Unmarshal(data, &varAddCredentials200ResponseAllOfCredential)

	if err != nil {
		return err
	}

	*o = AddCredentials200ResponseAllOfCredential(varAddCredentials200ResponseAllOfCredential)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "integration")
		delete(additionalProperties, "description")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "passwordHash")
		delete(additionalProperties, "authKey")
		delete(additionalProperties, "authPath")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "refType")
		delete(additionalProperties, "refId")
		delete(additionalProperties, "category")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "status")
		delete(additionalProperties, "statusMessage")
		delete(additionalProperties, "statusDate")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "account")
		delete(additionalProperties, "user")
		delete(additionalProperties, "dateCreated")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddCredentials200ResponseAllOfCredential struct {
	value *AddCredentials200ResponseAllOfCredential
	isSet bool
}

func (v NullableAddCredentials200ResponseAllOfCredential) Get() *AddCredentials200ResponseAllOfCredential {
	return v.value
}

func (v *NullableAddCredentials200ResponseAllOfCredential) Set(val *AddCredentials200ResponseAllOfCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCredentials200ResponseAllOfCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCredentials200ResponseAllOfCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCredentials200ResponseAllOfCredential(val *AddCredentials200ResponseAllOfCredential) *NullableAddCredentials200ResponseAllOfCredential {
	return &NullableAddCredentials200ResponseAllOfCredential{value: val, isSet: true}
}

func (v NullableAddCredentials200ResponseAllOfCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCredentials200ResponseAllOfCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


