/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the ClusterLayout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterLayout{}

// ClusterLayout struct for ClusterLayout
type ClusterLayout struct {
	Id *int64 `json:"id,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ServerCount *int64 `json:"serverCount,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	Code *string `json:"code,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	MemoryRequirement *int64 `json:"memoryRequirement,omitempty"`
	ClusterVersion *string `json:"clusterVersion,omitempty"`
	ComputeVersion *string `json:"computeVersion,omitempty"`
	HasSettings *bool `json:"hasSettings,omitempty"`
	SortOrder *int64 `json:"sortOrder,omitempty"`
	HasConfig *bool `json:"hasConfig,omitempty"`
	Name *string `json:"name,omitempty"`
	Creatable *bool `json:"creatable,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Description *string `json:"description,omitempty"`
	GroupType *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"groupType,omitempty"`
	Labels []string `json:"labels,omitempty"`
	EnvironmentVariables []map[string]interface{} `json:"environmentVariables,omitempty"`
	OptionTypes []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner `json:"optionTypes,omitempty"`
	Actions []map[string]interface{} `json:"actions,omitempty"`
	ComputeServers []ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner `json:"computeServers,omitempty"`
	InstallContainerRuntime *bool `json:"installContainerRuntime,omitempty"`
	ProvisionType *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"provisionType,omitempty"`
	SpecTemplates []ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner `json:"specTemplates,omitempty"`
	TaskSets []map[string]interface{} `json:"taskSets,omitempty"`
	Type *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"type,omitempty"`
}

// NewClusterLayout instantiates a new ClusterLayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLayout() *ClusterLayout {
	this := ClusterLayout{}
	return &this
}

// NewClusterLayoutWithDefaults instantiates a new ClusterLayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLayoutWithDefaults() *ClusterLayout {
	this := ClusterLayout{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterLayout) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterLayout) SetId(v int64) {
	o.Id = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *ClusterLayout) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// IsSetInternalId returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *ClusterLayout) SetInternalId(v string) {
	o.InternalId = &v
}

// GetServerCount returns the ServerCount field value if set, zero value otherwise.
func (o *ClusterLayout) GetServerCount() int64 {
	if o == nil || IsNil(o.ServerCount) {
		var ret int64
		return ret
	}
	return *o.ServerCount
}

// GetServerCountOk returns a tuple with the ServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetServerCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ServerCount) {
		return nil, false
	}
	return o.ServerCount, true
}

// IsSetServerCount returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetServerCount() bool {
	if o != nil && !IsNil(o.ServerCount) {
		return true
	}

	return false
}

// SetServerCount gets a reference to the given int64 and assigns it to the ServerCount field.
func (o *ClusterLayout) SetServerCount(v int64) {
	o.ServerCount = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ClusterLayout) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ClusterLayout) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClusterLayout) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ClusterLayout) SetCode(v string) {
	o.Code = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ClusterLayout) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ClusterLayout) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *ClusterLayout) GetHasAutoScale() bool {
	if o == nil || IsNil(o.HasAutoScale) {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAutoScale) {
		return nil, false
	}
	return o.HasAutoScale, true
}

// IsSetHasAutoScale returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetHasAutoScale() bool {
	if o != nil && !IsNil(o.HasAutoScale) {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *ClusterLayout) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetMemoryRequirement returns the MemoryRequirement field value if set, zero value otherwise.
func (o *ClusterLayout) GetMemoryRequirement() int64 {
	if o == nil || IsNil(o.MemoryRequirement) {
		var ret int64
		return ret
	}
	return *o.MemoryRequirement
}

// GetMemoryRequirementOk returns a tuple with the MemoryRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetMemoryRequirementOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryRequirement) {
		return nil, false
	}
	return o.MemoryRequirement, true
}

// IsSetMemoryRequirement returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetMemoryRequirement() bool {
	if o != nil && !IsNil(o.MemoryRequirement) {
		return true
	}

	return false
}

// SetMemoryRequirement gets a reference to the given int64 and assigns it to the MemoryRequirement field.
func (o *ClusterLayout) SetMemoryRequirement(v int64) {
	o.MemoryRequirement = &v
}

// GetClusterVersion returns the ClusterVersion field value if set, zero value otherwise.
func (o *ClusterLayout) GetClusterVersion() string {
	if o == nil || IsNil(o.ClusterVersion) {
		var ret string
		return ret
	}
	return *o.ClusterVersion
}

// GetClusterVersionOk returns a tuple with the ClusterVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetClusterVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterVersion) {
		return nil, false
	}
	return o.ClusterVersion, true
}

// IsSetClusterVersion returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetClusterVersion() bool {
	if o != nil && !IsNil(o.ClusterVersion) {
		return true
	}

	return false
}

// SetClusterVersion gets a reference to the given string and assigns it to the ClusterVersion field.
func (o *ClusterLayout) SetClusterVersion(v string) {
	o.ClusterVersion = &v
}

// GetComputeVersion returns the ComputeVersion field value if set, zero value otherwise.
func (o *ClusterLayout) GetComputeVersion() string {
	if o == nil || IsNil(o.ComputeVersion) {
		var ret string
		return ret
	}
	return *o.ComputeVersion
}

// GetComputeVersionOk returns a tuple with the ComputeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetComputeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ComputeVersion) {
		return nil, false
	}
	return o.ComputeVersion, true
}

// IsSetComputeVersion returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetComputeVersion() bool {
	if o != nil && !IsNil(o.ComputeVersion) {
		return true
	}

	return false
}

// SetComputeVersion gets a reference to the given string and assigns it to the ComputeVersion field.
func (o *ClusterLayout) SetComputeVersion(v string) {
	o.ComputeVersion = &v
}

// GetHasSettings returns the HasSettings field value if set, zero value otherwise.
func (o *ClusterLayout) GetHasSettings() bool {
	if o == nil || IsNil(o.HasSettings) {
		var ret bool
		return ret
	}
	return *o.HasSettings
}

// GetHasSettingsOk returns a tuple with the HasSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetHasSettingsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSettings) {
		return nil, false
	}
	return o.HasSettings, true
}

// IsSetHasSettings returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetHasSettings() bool {
	if o != nil && !IsNil(o.HasSettings) {
		return true
	}

	return false
}

// SetHasSettings gets a reference to the given bool and assigns it to the HasSettings field.
func (o *ClusterLayout) SetHasSettings(v bool) {
	o.HasSettings = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ClusterLayout) GetSortOrder() int64 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int64
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetSortOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// IsSetSortOrder returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int64 and assigns it to the SortOrder field.
func (o *ClusterLayout) SetSortOrder(v int64) {
	o.SortOrder = &v
}

// GetHasConfig returns the HasConfig field value if set, zero value otherwise.
func (o *ClusterLayout) GetHasConfig() bool {
	if o == nil || IsNil(o.HasConfig) {
		var ret bool
		return ret
	}
	return *o.HasConfig
}

// GetHasConfigOk returns a tuple with the HasConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetHasConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.HasConfig) {
		return nil, false
	}
	return o.HasConfig, true
}

// IsSetHasConfig returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetHasConfig() bool {
	if o != nil && !IsNil(o.HasConfig) {
		return true
	}

	return false
}

// SetHasConfig gets a reference to the given bool and assigns it to the HasConfig field.
func (o *ClusterLayout) SetHasConfig(v bool) {
	o.HasConfig = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterLayout) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterLayout) SetName(v string) {
	o.Name = &v
}

// GetCreatable returns the Creatable field value if set, zero value otherwise.
func (o *ClusterLayout) GetCreatable() bool {
	if o == nil || IsNil(o.Creatable) {
		var ret bool
		return ret
	}
	return *o.Creatable
}

// GetCreatableOk returns a tuple with the Creatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetCreatableOk() (*bool, bool) {
	if o == nil || IsNil(o.Creatable) {
		return nil, false
	}
	return o.Creatable, true
}

// IsSetCreatable returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetCreatable() bool {
	if o != nil && !IsNil(o.Creatable) {
		return true
	}

	return false
}

// SetCreatable gets a reference to the given bool and assigns it to the Creatable field.
func (o *ClusterLayout) SetCreatable(v bool) {
	o.Creatable = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClusterLayout) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClusterLayout) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterLayout) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterLayout) SetDescription(v string) {
	o.Description = &v
}

// GetGroupType returns the GroupType field value if set, zero value otherwise.
func (o *ClusterLayout) GetGroupType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.GroupType) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetGroupTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.GroupType) {
		return nil, false
	}
	return o.GroupType, true
}

// IsSetGroupType returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetGroupType() bool {
	if o != nil && !IsNil(o.GroupType) {
		return true
	}

	return false
}

// SetGroupType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the GroupType field.
func (o *ClusterLayout) SetGroupType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.GroupType = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterLayout) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterLayout) SetLabels(v []string) {
	o.Labels = v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *ClusterLayout) GetEnvironmentVariables() []map[string]interface{} {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []map[string]interface{}
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetEnvironmentVariablesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// IsSetEnvironmentVariables returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []map[string]interface{} and assigns it to the EnvironmentVariables field.
func (o *ClusterLayout) SetEnvironmentVariables(v []map[string]interface{}) {
	o.EnvironmentVariables = v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *ClusterLayout) GetOptionTypes() []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetOptionTypesOk() ([]ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner and assigns it to the OptionTypes field.
func (o *ClusterLayout) SetOptionTypes(v []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner) {
	o.OptionTypes = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ClusterLayout) GetActions() []map[string]interface{} {
	if o == nil || IsNil(o.Actions) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetActionsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// IsSetActions returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []map[string]interface{} and assigns it to the Actions field.
func (o *ClusterLayout) SetActions(v []map[string]interface{}) {
	o.Actions = v
}

// GetComputeServers returns the ComputeServers field value if set, zero value otherwise.
func (o *ClusterLayout) GetComputeServers() []ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner {
	if o == nil || IsNil(o.ComputeServers) {
		var ret []ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner
		return ret
	}
	return o.ComputeServers
}

// GetComputeServersOk returns a tuple with the ComputeServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetComputeServersOk() ([]ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner, bool) {
	if o == nil || IsNil(o.ComputeServers) {
		return nil, false
	}
	return o.ComputeServers, true
}

// IsSetComputeServers returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetComputeServers() bool {
	if o != nil && !IsNil(o.ComputeServers) {
		return true
	}

	return false
}

// SetComputeServers gets a reference to the given []ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner and assigns it to the ComputeServers field.
func (o *ClusterLayout) SetComputeServers(v []ListClusterLayouts200ResponseAllOfLayoutsInnerComputeServersInner) {
	o.ComputeServers = v
}

// GetInstallContainerRuntime returns the InstallContainerRuntime field value if set, zero value otherwise.
func (o *ClusterLayout) GetInstallContainerRuntime() bool {
	if o == nil || IsNil(o.InstallContainerRuntime) {
		var ret bool
		return ret
	}
	return *o.InstallContainerRuntime
}

// GetInstallContainerRuntimeOk returns a tuple with the InstallContainerRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetInstallContainerRuntimeOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallContainerRuntime) {
		return nil, false
	}
	return o.InstallContainerRuntime, true
}

// IsSetInstallContainerRuntime returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetInstallContainerRuntime() bool {
	if o != nil && !IsNil(o.InstallContainerRuntime) {
		return true
	}

	return false
}

// SetInstallContainerRuntime gets a reference to the given bool and assigns it to the InstallContainerRuntime field.
func (o *ClusterLayout) SetInstallContainerRuntime(v bool) {
	o.InstallContainerRuntime = &v
}

// GetProvisionType returns the ProvisionType field value if set, zero value otherwise.
func (o *ClusterLayout) GetProvisionType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.ProvisionType) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetProvisionTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.ProvisionType) {
		return nil, false
	}
	return o.ProvisionType, true
}

// IsSetProvisionType returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetProvisionType() bool {
	if o != nil && !IsNil(o.ProvisionType) {
		return true
	}

	return false
}

// SetProvisionType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the ProvisionType field.
func (o *ClusterLayout) SetProvisionType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.ProvisionType = &v
}

// GetSpecTemplates returns the SpecTemplates field value if set, zero value otherwise.
func (o *ClusterLayout) GetSpecTemplates() []ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner {
	if o == nil || IsNil(o.SpecTemplates) {
		var ret []ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner
		return ret
	}
	return o.SpecTemplates
}

// GetSpecTemplatesOk returns a tuple with the SpecTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetSpecTemplatesOk() ([]ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner, bool) {
	if o == nil || IsNil(o.SpecTemplates) {
		return nil, false
	}
	return o.SpecTemplates, true
}

// IsSetSpecTemplates returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetSpecTemplates() bool {
	if o != nil && !IsNil(o.SpecTemplates) {
		return true
	}

	return false
}

// SetSpecTemplates gets a reference to the given []ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner and assigns it to the SpecTemplates field.
func (o *ClusterLayout) SetSpecTemplates(v []ListClusterLayouts200ResponseAllOfLayoutsInnerSpecTemplatesInner) {
	o.SpecTemplates = v
}

// GetTaskSets returns the TaskSets field value if set, zero value otherwise.
func (o *ClusterLayout) GetTaskSets() []map[string]interface{} {
	if o == nil || IsNil(o.TaskSets) {
		var ret []map[string]interface{}
		return ret
	}
	return o.TaskSets
}

// GetTaskSetsOk returns a tuple with the TaskSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetTaskSetsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.TaskSets) {
		return nil, false
	}
	return o.TaskSets, true
}

// IsSetTaskSets returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetTaskSets() bool {
	if o != nil && !IsNil(o.TaskSets) {
		return true
	}

	return false
}

// SetTaskSets gets a reference to the given []map[string]interface{} and assigns it to the TaskSets field.
func (o *ClusterLayout) SetTaskSets(v []map[string]interface{}) {
	o.TaskSets = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterLayout) GetType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.Type) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayout) GetTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *ClusterLayout) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the Type field.
func (o *ClusterLayout) SetType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.Type = &v
}

func (o ClusterLayout) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterLayout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.ServerCount) {
		toSerialize["serverCount"] = o.ServerCount
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.HasAutoScale) {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if !IsNil(o.MemoryRequirement) {
		toSerialize["memoryRequirement"] = o.MemoryRequirement
	}
	if !IsNil(o.ClusterVersion) {
		toSerialize["clusterVersion"] = o.ClusterVersion
	}
	if !IsNil(o.ComputeVersion) {
		toSerialize["computeVersion"] = o.ComputeVersion
	}
	if !IsNil(o.HasSettings) {
		toSerialize["hasSettings"] = o.HasSettings
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.HasConfig) {
		toSerialize["hasConfig"] = o.HasConfig
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Creatable) {
		toSerialize["creatable"] = o.Creatable
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GroupType) {
		toSerialize["groupType"] = o.GroupType
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.ComputeServers) {
		toSerialize["computeServers"] = o.ComputeServers
	}
	if !IsNil(o.InstallContainerRuntime) {
		toSerialize["installContainerRuntime"] = o.InstallContainerRuntime
	}
	if !IsNil(o.ProvisionType) {
		toSerialize["provisionType"] = o.ProvisionType
	}
	if !IsNil(o.SpecTemplates) {
		toSerialize["specTemplates"] = o.SpecTemplates
	}
	if !IsNil(o.TaskSets) {
		toSerialize["taskSets"] = o.TaskSets
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableClusterLayout struct {
	value *ClusterLayout
	isSet bool
}

func (v NullableClusterLayout) Get() *ClusterLayout {
	return v.value
}

func (v *NullableClusterLayout) Set(val *ClusterLayout) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLayout(val *ClusterLayout) *NullableClusterLayout {
	return &NullableClusterLayout{value: val, isSet: true}
}

func (v NullableClusterLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


