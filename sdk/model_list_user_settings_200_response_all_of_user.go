/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListUserSettings200ResponseAllOfUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUserSettings200ResponseAllOfUser{}

// ListUserSettings200ResponseAllOfUser struct for ListUserSettings200ResponseAllOfUser
type ListUserSettings200ResponseAllOfUser struct {
	Id *int64 `json:"id,omitempty"`
	Username *string `json:"username,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Email *string `json:"email,omitempty"`
	LinuxUsername *string `json:"linuxUsername,omitempty"`
	LinuxPassword *string `json:"linuxPassword,omitempty"`
	LinuxKeyPairId *int64 `json:"linuxKeyPairId,omitempty"`
	WindowsUsername *string `json:"windowsUsername,omitempty"`
	WindowsPassword *string `json:"windowsPassword,omitempty"`
	Avatar *string `json:"avatar,omitempty"`
	DesktopBackground *string `json:"desktopBackground,omitempty"`
	ReceiveNotifications *bool `json:"receiveNotifications,omitempty"`
	DefaultGroup *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"defaultGroup,omitempty"`
	DefaultCloud *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"defaultCloud,omitempty"`
	DefaultPersona *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"defaultPersona,omitempty"`
	IsUsing2FA *bool `json:"isUsing2FA,omitempty"`
	Tenant *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"tenant,omitempty"`
}

// NewListUserSettings200ResponseAllOfUser instantiates a new ListUserSettings200ResponseAllOfUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserSettings200ResponseAllOfUser() *ListUserSettings200ResponseAllOfUser {
	this := ListUserSettings200ResponseAllOfUser{}
	return &this
}

// NewListUserSettings200ResponseAllOfUserWithDefaults instantiates a new ListUserSettings200ResponseAllOfUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserSettings200ResponseAllOfUserWithDefaults() *ListUserSettings200ResponseAllOfUser {
	this := ListUserSettings200ResponseAllOfUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListUserSettings200ResponseAllOfUser) SetId(v int64) {
	o.Id = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// IsSetUsername returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ListUserSettings200ResponseAllOfUser) SetUsername(v string) {
	o.Username = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// IsSetFirstName returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ListUserSettings200ResponseAllOfUser) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// IsSetLastName returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ListUserSettings200ResponseAllOfUser) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// IsSetEmail returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ListUserSettings200ResponseAllOfUser) SetEmail(v string) {
	o.Email = &v
}

// GetLinuxUsername returns the LinuxUsername field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxUsername() string {
	if o == nil || IsNil(o.LinuxUsername) {
		var ret string
		return ret
	}
	return *o.LinuxUsername
}

// GetLinuxUsernameOk returns a tuple with the LinuxUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.LinuxUsername) {
		return nil, false
	}
	return o.LinuxUsername, true
}

// IsSetLinuxUsername returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetLinuxUsername() bool {
	if o != nil && !IsNil(o.LinuxUsername) {
		return true
	}

	return false
}

// SetLinuxUsername gets a reference to the given string and assigns it to the LinuxUsername field.
func (o *ListUserSettings200ResponseAllOfUser) SetLinuxUsername(v string) {
	o.LinuxUsername = &v
}

// GetLinuxPassword returns the LinuxPassword field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxPassword() string {
	if o == nil || IsNil(o.LinuxPassword) {
		var ret string
		return ret
	}
	return *o.LinuxPassword
}

// GetLinuxPasswordOk returns a tuple with the LinuxPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.LinuxPassword) {
		return nil, false
	}
	return o.LinuxPassword, true
}

// IsSetLinuxPassword returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetLinuxPassword() bool {
	if o != nil && !IsNil(o.LinuxPassword) {
		return true
	}

	return false
}

// SetLinuxPassword gets a reference to the given string and assigns it to the LinuxPassword field.
func (o *ListUserSettings200ResponseAllOfUser) SetLinuxPassword(v string) {
	o.LinuxPassword = &v
}

// GetLinuxKeyPairId returns the LinuxKeyPairId field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxKeyPairId() int64 {
	if o == nil || IsNil(o.LinuxKeyPairId) {
		var ret int64
		return ret
	}
	return *o.LinuxKeyPairId
}

// GetLinuxKeyPairIdOk returns a tuple with the LinuxKeyPairId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetLinuxKeyPairIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LinuxKeyPairId) {
		return nil, false
	}
	return o.LinuxKeyPairId, true
}

// IsSetLinuxKeyPairId returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetLinuxKeyPairId() bool {
	if o != nil && !IsNil(o.LinuxKeyPairId) {
		return true
	}

	return false
}

// SetLinuxKeyPairId gets a reference to the given int64 and assigns it to the LinuxKeyPairId field.
func (o *ListUserSettings200ResponseAllOfUser) SetLinuxKeyPairId(v int64) {
	o.LinuxKeyPairId = &v
}

// GetWindowsUsername returns the WindowsUsername field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetWindowsUsername() string {
	if o == nil || IsNil(o.WindowsUsername) {
		var ret string
		return ret
	}
	return *o.WindowsUsername
}

// GetWindowsUsernameOk returns a tuple with the WindowsUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetWindowsUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsUsername) {
		return nil, false
	}
	return o.WindowsUsername, true
}

// IsSetWindowsUsername returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetWindowsUsername() bool {
	if o != nil && !IsNil(o.WindowsUsername) {
		return true
	}

	return false
}

// SetWindowsUsername gets a reference to the given string and assigns it to the WindowsUsername field.
func (o *ListUserSettings200ResponseAllOfUser) SetWindowsUsername(v string) {
	o.WindowsUsername = &v
}

// GetWindowsPassword returns the WindowsPassword field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetWindowsPassword() string {
	if o == nil || IsNil(o.WindowsPassword) {
		var ret string
		return ret
	}
	return *o.WindowsPassword
}

// GetWindowsPasswordOk returns a tuple with the WindowsPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetWindowsPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsPassword) {
		return nil, false
	}
	return o.WindowsPassword, true
}

// IsSetWindowsPassword returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetWindowsPassword() bool {
	if o != nil && !IsNil(o.WindowsPassword) {
		return true
	}

	return false
}

// SetWindowsPassword gets a reference to the given string and assigns it to the WindowsPassword field.
func (o *ListUserSettings200ResponseAllOfUser) SetWindowsPassword(v string) {
	o.WindowsPassword = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetAvatar() string {
	if o == nil || IsNil(o.Avatar) {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetAvatarOk() (*string, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// IsSetAvatar returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *ListUserSettings200ResponseAllOfUser) SetAvatar(v string) {
	o.Avatar = &v
}

// GetDesktopBackground returns the DesktopBackground field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetDesktopBackground() string {
	if o == nil || IsNil(o.DesktopBackground) {
		var ret string
		return ret
	}
	return *o.DesktopBackground
}

// GetDesktopBackgroundOk returns a tuple with the DesktopBackground field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetDesktopBackgroundOk() (*string, bool) {
	if o == nil || IsNil(o.DesktopBackground) {
		return nil, false
	}
	return o.DesktopBackground, true
}

// IsSetDesktopBackground returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetDesktopBackground() bool {
	if o != nil && !IsNil(o.DesktopBackground) {
		return true
	}

	return false
}

// SetDesktopBackground gets a reference to the given string and assigns it to the DesktopBackground field.
func (o *ListUserSettings200ResponseAllOfUser) SetDesktopBackground(v string) {
	o.DesktopBackground = &v
}

// GetReceiveNotifications returns the ReceiveNotifications field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetReceiveNotifications() bool {
	if o == nil || IsNil(o.ReceiveNotifications) {
		var ret bool
		return ret
	}
	return *o.ReceiveNotifications
}

// GetReceiveNotificationsOk returns a tuple with the ReceiveNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetReceiveNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReceiveNotifications) {
		return nil, false
	}
	return o.ReceiveNotifications, true
}

// IsSetReceiveNotifications returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetReceiveNotifications() bool {
	if o != nil && !IsNil(o.ReceiveNotifications) {
		return true
	}

	return false
}

// SetReceiveNotifications gets a reference to the given bool and assigns it to the ReceiveNotifications field.
func (o *ListUserSettings200ResponseAllOfUser) SetReceiveNotifications(v bool) {
	o.ReceiveNotifications = &v
}

// GetDefaultGroup returns the DefaultGroup field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultGroup() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.DefaultGroup) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.DefaultGroup
}

// GetDefaultGroupOk returns a tuple with the DefaultGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultGroupOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.DefaultGroup) {
		return nil, false
	}
	return o.DefaultGroup, true
}

// IsSetDefaultGroup returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetDefaultGroup() bool {
	if o != nil && !IsNil(o.DefaultGroup) {
		return true
	}

	return false
}

// SetDefaultGroup gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the DefaultGroup field.
func (o *ListUserSettings200ResponseAllOfUser) SetDefaultGroup(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.DefaultGroup = &v
}

// GetDefaultCloud returns the DefaultCloud field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultCloud() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.DefaultCloud) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.DefaultCloud
}

// GetDefaultCloudOk returns a tuple with the DefaultCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultCloudOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.DefaultCloud) {
		return nil, false
	}
	return o.DefaultCloud, true
}

// IsSetDefaultCloud returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetDefaultCloud() bool {
	if o != nil && !IsNil(o.DefaultCloud) {
		return true
	}

	return false
}

// SetDefaultCloud gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the DefaultCloud field.
func (o *ListUserSettings200ResponseAllOfUser) SetDefaultCloud(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.DefaultCloud = &v
}

// GetDefaultPersona returns the DefaultPersona field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultPersona() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.DefaultPersona) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.DefaultPersona
}

// GetDefaultPersonaOk returns a tuple with the DefaultPersona field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetDefaultPersonaOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.DefaultPersona) {
		return nil, false
	}
	return o.DefaultPersona, true
}

// IsSetDefaultPersona returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetDefaultPersona() bool {
	if o != nil && !IsNil(o.DefaultPersona) {
		return true
	}

	return false
}

// SetDefaultPersona gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the DefaultPersona field.
func (o *ListUserSettings200ResponseAllOfUser) SetDefaultPersona(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.DefaultPersona = &v
}

// GetIsUsing2FA returns the IsUsing2FA field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetIsUsing2FA() bool {
	if o == nil || IsNil(o.IsUsing2FA) {
		var ret bool
		return ret
	}
	return *o.IsUsing2FA
}

// GetIsUsing2FAOk returns a tuple with the IsUsing2FA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetIsUsing2FAOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsing2FA) {
		return nil, false
	}
	return o.IsUsing2FA, true
}

// IsSetIsUsing2FA returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetIsUsing2FA() bool {
	if o != nil && !IsNil(o.IsUsing2FA) {
		return true
	}

	return false
}

// SetIsUsing2FA gets a reference to the given bool and assigns it to the IsUsing2FA field.
func (o *ListUserSettings200ResponseAllOfUser) SetIsUsing2FA(v bool) {
	o.IsUsing2FA = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ListUserSettings200ResponseAllOfUser) GetTenant() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Tenant) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserSettings200ResponseAllOfUser) GetTenantOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// IsSetTenant returns a boolean if a field has been set.
func (o *ListUserSettings200ResponseAllOfUser) IsSetTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Tenant field.
func (o *ListUserSettings200ResponseAllOfUser) SetTenant(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Tenant = &v
}

func (o ListUserSettings200ResponseAllOfUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUserSettings200ResponseAllOfUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.LinuxUsername) {
		toSerialize["linuxUsername"] = o.LinuxUsername
	}
	if !IsNil(o.LinuxPassword) {
		toSerialize["linuxPassword"] = o.LinuxPassword
	}
	if !IsNil(o.LinuxKeyPairId) {
		toSerialize["linuxKeyPairId"] = o.LinuxKeyPairId
	}
	if !IsNil(o.WindowsUsername) {
		toSerialize["windowsUsername"] = o.WindowsUsername
	}
	if !IsNil(o.WindowsPassword) {
		toSerialize["windowsPassword"] = o.WindowsPassword
	}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.DesktopBackground) {
		toSerialize["desktopBackground"] = o.DesktopBackground
	}
	if !IsNil(o.ReceiveNotifications) {
		toSerialize["receiveNotifications"] = o.ReceiveNotifications
	}
	if !IsNil(o.DefaultGroup) {
		toSerialize["defaultGroup"] = o.DefaultGroup
	}
	if !IsNil(o.DefaultCloud) {
		toSerialize["defaultCloud"] = o.DefaultCloud
	}
	if !IsNil(o.DefaultPersona) {
		toSerialize["defaultPersona"] = o.DefaultPersona
	}
	if !IsNil(o.IsUsing2FA) {
		toSerialize["isUsing2FA"] = o.IsUsing2FA
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	return toSerialize, nil
}

type NullableListUserSettings200ResponseAllOfUser struct {
	value *ListUserSettings200ResponseAllOfUser
	isSet bool
}

func (v NullableListUserSettings200ResponseAllOfUser) Get() *ListUserSettings200ResponseAllOfUser {
	return v.value
}

func (v *NullableListUserSettings200ResponseAllOfUser) Set(val *ListUserSettings200ResponseAllOfUser) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserSettings200ResponseAllOfUser) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserSettings200ResponseAllOfUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserSettings200ResponseAllOfUser(val *ListUserSettings200ResponseAllOfUser) *NullableListUserSettings200ResponseAllOfUser {
	return &NullableListUserSettings200ResponseAllOfUser{value: val, isSet: true}
}

func (v NullableListUserSettings200ResponseAllOfUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserSettings200ResponseAllOfUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


