/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// very silly way of avoiding `"fmt" imported and not used` errors
var _ fmt.Stringer

// ListInstances200ResponseAllOfInstancesInnerConfigNoAgent struct for ListInstances200ResponseAllOfInstancesInnerConfigNoAgent
type ListInstances200ResponseAllOfInstancesInnerConfigNoAgent struct {
	Bool   *bool
	String *string
}

func (dst *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent) UnmarshalMapstructure(data any) (any, error) {
	if dst == nil {
		dst = &ListInstances200ResponseAllOfInstancesInnerConfigNoAgent{}
	}

	if out, ok := data.(bool); ok {
		dst.Bool = &out
	}

	if out, ok := data.(string); ok {
		dst.String = &out
	}

	return dst, nil
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into Bool
	err = json.Unmarshal(data, &dst.Bool)
	if err == nil {
		jsonBool, _ := json.Marshal(dst.Bool)
		if string(jsonBool) == "{}" { // empty struct
			dst.Bool = nil
		} else {
			return nil // data stored in dst.Bool, return on the first match
		}
	} else {
		dst.Bool = nil
	}

	// try to unmarshal JSON data into String
	err = json.Unmarshal(data, &dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return NewResponseValidationError("data failed to match schemas in anyOf(ListInstances200ResponseAllOfInstancesInnerConfigNoAgent)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListInstances200ResponseAllOfInstancesInnerConfigNoAgent) MarshalJSON() ([]byte, error) {
	if src.Bool != nil {
		return json.Marshal(&src.Bool)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent struct {
	value *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent
	isSet bool
}

func (v NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) Get() *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent {
	return v.value
}

func (v *NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) Set(val *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent(val *ListInstances200ResponseAllOfInstancesInnerConfigNoAgent) *NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent {
	return &NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent{value: val, isSet: true}
}

func (v NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstances200ResponseAllOfInstancesInnerConfigNoAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
