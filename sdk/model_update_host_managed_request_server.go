/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostManagedRequestServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostManagedRequestServer{}

// UpdateHostManagedRequestServer Object containing server configuration parameters
type UpdateHostManagedRequestServer struct {
	// SSH username to use when provisioning
	SshUsername *string `json:"sshUsername,omitempty"`
	// SSH password to use, if not specified the account public key can be used
	SshPassword *string `json:"sshPassword,omitempty"`
	ServerOs *UpdateHostInstallAgentRequestServerServerOs `json:"serverOs,omitempty"`
	Plan *UpdateHostManagedRequestServerPlan `json:"plan,omitempty"`
	Account *UpdateHostManagedRequestServerAccount `json:"account,omitempty"`
	// Specific group to assign the server
	ProvisionSiteId *int64 `json:"provisionSiteId,omitempty"`
	// Metadata tags, Array of objects having a name and value, this adds or updates the specified tags and removes any tags not specified.
	Tags []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner `json:"tags,omitempty"`
	Config *UpdateHostManagedRequestServerConfig `json:"config,omitempty"`
}

// NewUpdateHostManagedRequestServer instantiates a new UpdateHostManagedRequestServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostManagedRequestServer() *UpdateHostManagedRequestServer {
	this := UpdateHostManagedRequestServer{}
	return &this
}

// NewUpdateHostManagedRequestServerWithDefaults instantiates a new UpdateHostManagedRequestServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostManagedRequestServerWithDefaults() *UpdateHostManagedRequestServer {
	this := UpdateHostManagedRequestServer{}
	return &this
}

// GetSshUsername returns the SshUsername field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetSshUsername() string {
	if o == nil || IsNil(o.SshUsername) {
		var ret string
		return ret
	}
	return *o.SshUsername
}

// GetSshUsernameOk returns a tuple with the SshUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetSshUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SshUsername) {
		return nil, false
	}
	return o.SshUsername, true
}

// IsSetSshUsername returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetSshUsername() bool {
	if o != nil && !IsNil(o.SshUsername) {
		return true
	}

	return false
}

// SetSshUsername gets a reference to the given string and assigns it to the SshUsername field.
func (o *UpdateHostManagedRequestServer) SetSshUsername(v string) {
	o.SshUsername = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetSshPassword() string {
	if o == nil || IsNil(o.SshPassword) {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetSshPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SshPassword) {
		return nil, false
	}
	return o.SshPassword, true
}

// IsSetSshPassword returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetSshPassword() bool {
	if o != nil && !IsNil(o.SshPassword) {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *UpdateHostManagedRequestServer) SetSshPassword(v string) {
	o.SshPassword = &v
}

// GetServerOs returns the ServerOs field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetServerOs() UpdateHostInstallAgentRequestServerServerOs {
	if o == nil || IsNil(o.ServerOs) {
		var ret UpdateHostInstallAgentRequestServerServerOs
		return ret
	}
	return *o.ServerOs
}

// GetServerOsOk returns a tuple with the ServerOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetServerOsOk() (*UpdateHostInstallAgentRequestServerServerOs, bool) {
	if o == nil || IsNil(o.ServerOs) {
		return nil, false
	}
	return o.ServerOs, true
}

// IsSetServerOs returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetServerOs() bool {
	if o != nil && !IsNil(o.ServerOs) {
		return true
	}

	return false
}

// SetServerOs gets a reference to the given UpdateHostInstallAgentRequestServerServerOs and assigns it to the ServerOs field.
func (o *UpdateHostManagedRequestServer) SetServerOs(v UpdateHostInstallAgentRequestServerServerOs) {
	o.ServerOs = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetPlan() UpdateHostManagedRequestServerPlan {
	if o == nil || IsNil(o.Plan) {
		var ret UpdateHostManagedRequestServerPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetPlanOk() (*UpdateHostManagedRequestServerPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// IsSetPlan returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given UpdateHostManagedRequestServerPlan and assigns it to the Plan field.
func (o *UpdateHostManagedRequestServer) SetPlan(v UpdateHostManagedRequestServerPlan) {
	o.Plan = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetAccount() UpdateHostManagedRequestServerAccount {
	if o == nil || IsNil(o.Account) {
		var ret UpdateHostManagedRequestServerAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetAccountOk() (*UpdateHostManagedRequestServerAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given UpdateHostManagedRequestServerAccount and assigns it to the Account field.
func (o *UpdateHostManagedRequestServer) SetAccount(v UpdateHostManagedRequestServerAccount) {
	o.Account = &v
}

// GetProvisionSiteId returns the ProvisionSiteId field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetProvisionSiteId() int64 {
	if o == nil || IsNil(o.ProvisionSiteId) {
		var ret int64
		return ret
	}
	return *o.ProvisionSiteId
}

// GetProvisionSiteIdOk returns a tuple with the ProvisionSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetProvisionSiteIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProvisionSiteId) {
		return nil, false
	}
	return o.ProvisionSiteId, true
}

// IsSetProvisionSiteId returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetProvisionSiteId() bool {
	if o != nil && !IsNil(o.ProvisionSiteId) {
		return true
	}

	return false
}

// SetProvisionSiteId gets a reference to the given int64 and assigns it to the ProvisionSiteId field.
func (o *UpdateHostManagedRequestServer) SetProvisionSiteId(v int64) {
	o.ProvisionSiteId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetTags() []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetTagsOk() ([]AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner and assigns it to the Tags field.
func (o *UpdateHostManagedRequestServer) SetTags(v []AddCatalogItemTypeRequestCatalogItemTypeOneOfConfigEvarsInner) {
	o.Tags = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServer) GetConfig() UpdateHostManagedRequestServerConfig {
	if o == nil || IsNil(o.Config) {
		var ret UpdateHostManagedRequestServerConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServer) GetConfigOk() (*UpdateHostManagedRequestServerConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServer) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given UpdateHostManagedRequestServerConfig and assigns it to the Config field.
func (o *UpdateHostManagedRequestServer) SetConfig(v UpdateHostManagedRequestServerConfig) {
	o.Config = &v
}

func (o UpdateHostManagedRequestServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostManagedRequestServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SshUsername) {
		toSerialize["sshUsername"] = o.SshUsername
	}
	if !IsNil(o.SshPassword) {
		toSerialize["sshPassword"] = o.SshPassword
	}
	if !IsNil(o.ServerOs) {
		toSerialize["serverOs"] = o.ServerOs
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.ProvisionSiteId) {
		toSerialize["provisionSiteId"] = o.ProvisionSiteId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableUpdateHostManagedRequestServer struct {
	value *UpdateHostManagedRequestServer
	isSet bool
}

func (v NullableUpdateHostManagedRequestServer) Get() *UpdateHostManagedRequestServer {
	return v.value
}

func (v *NullableUpdateHostManagedRequestServer) Set(val *UpdateHostManagedRequestServer) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostManagedRequestServer) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostManagedRequestServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostManagedRequestServer(val *UpdateHostManagedRequestServer) *NullableUpdateHostManagedRequestServer {
	return &NullableUpdateHostManagedRequestServer{value: val, isSet: true}
}

func (v NullableUpdateHostManagedRequestServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostManagedRequestServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


