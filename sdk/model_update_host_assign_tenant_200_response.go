/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostAssignTenant200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostAssignTenant200Response{}

// UpdateHostAssignTenant200Response struct for UpdateHostAssignTenant200Response
type UpdateHostAssignTenant200Response struct {
	Server *ListHosts200ResponseAllOfServersInner `json:"server,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewUpdateHostAssignTenant200Response instantiates a new UpdateHostAssignTenant200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostAssignTenant200Response() *UpdateHostAssignTenant200Response {
	this := UpdateHostAssignTenant200Response{}
	return &this
}

// NewUpdateHostAssignTenant200ResponseWithDefaults instantiates a new UpdateHostAssignTenant200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostAssignTenant200ResponseWithDefaults() *UpdateHostAssignTenant200Response {
	this := UpdateHostAssignTenant200Response{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *UpdateHostAssignTenant200Response) GetServer() ListHosts200ResponseAllOfServersInner {
	if o == nil || IsNil(o.Server) {
		var ret ListHosts200ResponseAllOfServersInner
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostAssignTenant200Response) GetServerOk() (*ListHosts200ResponseAllOfServersInner, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// IsSetServer returns a boolean if a field has been set.
func (o *UpdateHostAssignTenant200Response) IsSetServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ListHosts200ResponseAllOfServersInner and assigns it to the Server field.
func (o *UpdateHostAssignTenant200Response) SetServer(v ListHosts200ResponseAllOfServersInner) {
	o.Server = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateHostAssignTenant200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostAssignTenant200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *UpdateHostAssignTenant200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateHostAssignTenant200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o UpdateHostAssignTenant200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostAssignTenant200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableUpdateHostAssignTenant200Response struct {
	value *UpdateHostAssignTenant200Response
	isSet bool
}

func (v NullableUpdateHostAssignTenant200Response) Get() *UpdateHostAssignTenant200Response {
	return v.value
}

func (v *NullableUpdateHostAssignTenant200Response) Set(val *UpdateHostAssignTenant200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostAssignTenant200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostAssignTenant200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostAssignTenant200Response(val *UpdateHostAssignTenant200Response) *NullableUpdateHostAssignTenant200Response {
	return &NullableUpdateHostAssignTenant200Response{value: val, isSet: true}
}

func (v NullableUpdateHostAssignTenant200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostAssignTenant200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


