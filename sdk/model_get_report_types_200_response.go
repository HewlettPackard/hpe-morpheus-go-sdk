/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetReportTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReportTypes200Response{}

// GetReportTypes200Response struct for GetReportTypes200Response
type GetReportTypes200Response struct {
	ReportTypes []GetReportTypes200ResponseReportTypesInner `json:"reportTypes,omitempty"`
}

// NewGetReportTypes200Response instantiates a new GetReportTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReportTypes200Response() *GetReportTypes200Response {
	this := GetReportTypes200Response{}
	return &this
}

// NewGetReportTypes200ResponseWithDefaults instantiates a new GetReportTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReportTypes200ResponseWithDefaults() *GetReportTypes200Response {
	this := GetReportTypes200Response{}
	return &this
}

// GetReportTypes returns the ReportTypes field value if set, zero value otherwise.
func (o *GetReportTypes200Response) GetReportTypes() []GetReportTypes200ResponseReportTypesInner {
	if o == nil || IsNil(o.ReportTypes) {
		var ret []GetReportTypes200ResponseReportTypesInner
		return ret
	}
	return o.ReportTypes
}

// GetReportTypesOk returns a tuple with the ReportTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200Response) GetReportTypesOk() ([]GetReportTypes200ResponseReportTypesInner, bool) {
	if o == nil || IsNil(o.ReportTypes) {
		return nil, false
	}
	return o.ReportTypes, true
}

// IsSetReportTypes returns a boolean if a field has been set.
func (o *GetReportTypes200Response) IsSetReportTypes() bool {
	if o != nil && !IsNil(o.ReportTypes) {
		return true
	}

	return false
}

// SetReportTypes gets a reference to the given []GetReportTypes200ResponseReportTypesInner and assigns it to the ReportTypes field.
func (o *GetReportTypes200Response) SetReportTypes(v []GetReportTypes200ResponseReportTypesInner) {
	o.ReportTypes = v
}

func (o GetReportTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReportTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportTypes) {
		toSerialize["reportTypes"] = o.ReportTypes
	}
	return toSerialize, nil
}

type NullableGetReportTypes200Response struct {
	value *GetReportTypes200Response
	isSet bool
}

func (v NullableGetReportTypes200Response) Get() *GetReportTypes200Response {
	return v.value
}

func (v *NullableGetReportTypes200Response) Set(val *GetReportTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReportTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReportTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReportTypes200Response(val *GetReportTypes200Response) *NullableGetReportTypes200Response {
	return &NullableGetReportTypes200Response{value: val, isSet: true}
}

func (v NullableGetReportTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReportTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


