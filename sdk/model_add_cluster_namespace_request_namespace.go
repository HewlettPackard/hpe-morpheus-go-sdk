/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddClusterNamespaceRequestNamespace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClusterNamespaceRequestNamespace{}

// AddClusterNamespaceRequestNamespace struct for AddClusterNamespaceRequestNamespace
type AddClusterNamespaceRequestNamespace struct {
	// Namespace name
	Name string `json:"name"`
	// Namespace description
	Description *string `json:"description,omitempty"`
	// Namespace active
	Active               *bool                                                   `json:"active,omitempty"`
	ResourcePermissions  *AddClusterNamespaceRequestNamespaceResourcePermissions `json:"resourcePermissions,omitempty"`
	AdditionalProperties map[string]interface{}                                  `json:",remain"`
}

type _AddClusterNamespaceRequestNamespace AddClusterNamespaceRequestNamespace

// NewAddClusterNamespaceRequestNamespace instantiates a new AddClusterNamespaceRequestNamespace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClusterNamespaceRequestNamespace(name string) *AddClusterNamespaceRequestNamespace {
	this := AddClusterNamespaceRequestNamespace{}
	this.Name = name
	var active bool = false
	this.Active = &active
	return &this
}

// NewAddClusterNamespaceRequestNamespaceWithDefaults instantiates a new AddClusterNamespaceRequestNamespace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClusterNamespaceRequestNamespaceWithDefaults() *AddClusterNamespaceRequestNamespace {
	this := AddClusterNamespaceRequestNamespace{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetName returns the Name field value
func (o *AddClusterNamespaceRequestNamespace) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddClusterNamespaceRequestNamespace) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddClusterNamespaceRequestNamespace) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddClusterNamespaceRequestNamespace) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterNamespaceRequestNamespace) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddClusterNamespaceRequestNamespace) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddClusterNamespaceRequestNamespace) SetDescription(v string) {
	o.Description = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AddClusterNamespaceRequestNamespace) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterNamespaceRequestNamespace) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *AddClusterNamespaceRequestNamespace) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AddClusterNamespaceRequestNamespace) SetActive(v bool) {
	o.Active = &v
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *AddClusterNamespaceRequestNamespace) GetResourcePermissions() AddClusterNamespaceRequestNamespaceResourcePermissions {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret AddClusterNamespaceRequestNamespaceResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterNamespaceRequestNamespace) GetResourcePermissionsOk() (*AddClusterNamespaceRequestNamespaceResourcePermissions, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *AddClusterNamespaceRequestNamespace) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given AddClusterNamespaceRequestNamespaceResourcePermissions and assigns it to the ResourcePermissions field.
func (o *AddClusterNamespaceRequestNamespace) SetResourcePermissions(v AddClusterNamespaceRequestNamespaceResourcePermissions) {
	o.ResourcePermissions = &v
}

func (o AddClusterNamespaceRequestNamespace) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClusterNamespaceRequestNamespace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddClusterNamespaceRequestNamespace) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
