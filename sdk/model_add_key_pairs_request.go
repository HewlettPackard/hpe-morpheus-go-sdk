/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddKeyPairsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddKeyPairsRequest{}

// AddKeyPairsRequest struct for AddKeyPairsRequest
type AddKeyPairsRequest struct {
	KeyPair              AddKeyPairsRequestKeyPair `json:"keyPair"`
	AdditionalProperties map[string]interface{}    `json:",remain"`
}

type _AddKeyPairsRequest AddKeyPairsRequest

// NewAddKeyPairsRequest instantiates a new AddKeyPairsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddKeyPairsRequest(keyPair AddKeyPairsRequestKeyPair) *AddKeyPairsRequest {
	this := AddKeyPairsRequest{}
	this.KeyPair = keyPair
	return &this
}

// NewAddKeyPairsRequestWithDefaults instantiates a new AddKeyPairsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddKeyPairsRequestWithDefaults() *AddKeyPairsRequest {
	this := AddKeyPairsRequest{}
	return &this
}

// GetKeyPair returns the KeyPair field value
func (o *AddKeyPairsRequest) GetKeyPair() AddKeyPairsRequestKeyPair {
	if o == nil {
		var ret AddKeyPairsRequestKeyPair
		return ret
	}

	return o.KeyPair
}

// GetKeyPairOk returns a tuple with the KeyPair field value
// and a boolean to check if the value has been set.
func (o *AddKeyPairsRequest) GetKeyPairOk() (*AddKeyPairsRequestKeyPair, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPair, true
}

// SetKeyPair sets field value
func (o *AddKeyPairsRequest) SetKeyPair(v AddKeyPairsRequestKeyPair) {
	o.KeyPair = v
}

func (o AddKeyPairsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddKeyPairsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyPair"] = o.KeyPair

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddKeyPairsRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
