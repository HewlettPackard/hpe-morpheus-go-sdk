/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkRouterNatRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkRouterNatRequest{}

// UpdateNetworkRouterNatRequest struct for UpdateNetworkRouterNatRequest
type UpdateNetworkRouterNatRequest struct {
	NetworkRouterNAT *UpdateNetworkRouterNatRequestNetworkRouterNAT `json:"networkRouterNAT,omitempty"`
}

// NewUpdateNetworkRouterNatRequest instantiates a new UpdateNetworkRouterNatRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkRouterNatRequest() *UpdateNetworkRouterNatRequest {
	this := UpdateNetworkRouterNatRequest{}
	return &this
}

// NewUpdateNetworkRouterNatRequestWithDefaults instantiates a new UpdateNetworkRouterNatRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkRouterNatRequestWithDefaults() *UpdateNetworkRouterNatRequest {
	this := UpdateNetworkRouterNatRequest{}
	return &this
}

// GetNetworkRouterNAT returns the NetworkRouterNAT field value if set, zero value otherwise.
func (o *UpdateNetworkRouterNatRequest) GetNetworkRouterNAT() UpdateNetworkRouterNatRequestNetworkRouterNAT {
	if o == nil || IsNil(o.NetworkRouterNAT) {
		var ret UpdateNetworkRouterNatRequestNetworkRouterNAT
		return ret
	}
	return *o.NetworkRouterNAT
}

// GetNetworkRouterNATOk returns a tuple with the NetworkRouterNAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkRouterNatRequest) GetNetworkRouterNATOk() (*UpdateNetworkRouterNatRequestNetworkRouterNAT, bool) {
	if o == nil || IsNil(o.NetworkRouterNAT) {
		return nil, false
	}
	return o.NetworkRouterNAT, true
}

// IsSetNetworkRouterNAT returns a boolean if a field has been set.
func (o *UpdateNetworkRouterNatRequest) IsSetNetworkRouterNAT() bool {
	if o != nil && !IsNil(o.NetworkRouterNAT) {
		return true
	}

	return false
}

// SetNetworkRouterNAT gets a reference to the given UpdateNetworkRouterNatRequestNetworkRouterNAT and assigns it to the NetworkRouterNAT field.
func (o *UpdateNetworkRouterNatRequest) SetNetworkRouterNAT(v UpdateNetworkRouterNatRequestNetworkRouterNAT) {
	o.NetworkRouterNAT = &v
}

func (o UpdateNetworkRouterNatRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkRouterNatRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkRouterNAT) {
		toSerialize["networkRouterNAT"] = o.NetworkRouterNAT
	}
	return toSerialize, nil
}

type NullableUpdateNetworkRouterNatRequest struct {
	value *UpdateNetworkRouterNatRequest
	isSet bool
}

func (v NullableUpdateNetworkRouterNatRequest) Get() *UpdateNetworkRouterNatRequest {
	return v.value
}

func (v *NullableUpdateNetworkRouterNatRequest) Set(val *UpdateNetworkRouterNatRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkRouterNatRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkRouterNatRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkRouterNatRequest(val *UpdateNetworkRouterNatRequest) *NullableUpdateNetworkRouterNatRequest {
	return &NullableUpdateNetworkRouterNatRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkRouterNatRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkRouterNatRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


