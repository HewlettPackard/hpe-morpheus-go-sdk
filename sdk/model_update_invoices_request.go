/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateInvoicesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInvoicesRequest{}

// UpdateInvoicesRequest struct for UpdateInvoicesRequest
type UpdateInvoicesRequest struct {
	Invoice *UpdateInvoicesRequestInvoice `json:"invoice,omitempty"`
}

// NewUpdateInvoicesRequest instantiates a new UpdateInvoicesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInvoicesRequest() *UpdateInvoicesRequest {
	this := UpdateInvoicesRequest{}
	return &this
}

// NewUpdateInvoicesRequestWithDefaults instantiates a new UpdateInvoicesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInvoicesRequestWithDefaults() *UpdateInvoicesRequest {
	this := UpdateInvoicesRequest{}
	return &this
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *UpdateInvoicesRequest) GetInvoice() UpdateInvoicesRequestInvoice {
	if o == nil || IsNil(o.Invoice) {
		var ret UpdateInvoicesRequestInvoice
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInvoicesRequest) GetInvoiceOk() (*UpdateInvoicesRequestInvoice, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// IsSetInvoice returns a boolean if a field has been set.
func (o *UpdateInvoicesRequest) IsSetInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given UpdateInvoicesRequestInvoice and assigns it to the Invoice field.
func (o *UpdateInvoicesRequest) SetInvoice(v UpdateInvoicesRequestInvoice) {
	o.Invoice = &v
}

func (o UpdateInvoicesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInvoicesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	return toSerialize, nil
}

type NullableUpdateInvoicesRequest struct {
	value *UpdateInvoicesRequest
	isSet bool
}

func (v NullableUpdateInvoicesRequest) Get() *UpdateInvoicesRequest {
	return v.value
}

func (v *NullableUpdateInvoicesRequest) Set(val *UpdateInvoicesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInvoicesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInvoicesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInvoicesRequest(val *UpdateInvoicesRequest) *NullableUpdateInvoicesRequest {
	return &NullableUpdateInvoicesRequest{value: val, isSet: true}
}

func (v NullableUpdateInvoicesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInvoicesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


