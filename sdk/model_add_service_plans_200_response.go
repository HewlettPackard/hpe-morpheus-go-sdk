/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddServicePlans200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddServicePlans200Response{}

// AddServicePlans200Response struct for AddServicePlans200Response
type AddServicePlans200Response struct {
	ServicePlan *ListServicePlans200ResponseAllOfServicePlansInner `json:"servicePlan,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddServicePlans200Response instantiates a new AddServicePlans200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddServicePlans200Response() *AddServicePlans200Response {
	this := AddServicePlans200Response{}
	return &this
}

// NewAddServicePlans200ResponseWithDefaults instantiates a new AddServicePlans200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddServicePlans200ResponseWithDefaults() *AddServicePlans200Response {
	this := AddServicePlans200Response{}
	return &this
}

// GetServicePlan returns the ServicePlan field value if set, zero value otherwise.
func (o *AddServicePlans200Response) GetServicePlan() ListServicePlans200ResponseAllOfServicePlansInner {
	if o == nil || IsNil(o.ServicePlan) {
		var ret ListServicePlans200ResponseAllOfServicePlansInner
		return ret
	}
	return *o.ServicePlan
}

// GetServicePlanOk returns a tuple with the ServicePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlans200Response) GetServicePlanOk() (*ListServicePlans200ResponseAllOfServicePlansInner, bool) {
	if o == nil || IsNil(o.ServicePlan) {
		return nil, false
	}
	return o.ServicePlan, true
}

// IsSetServicePlan returns a boolean if a field has been set.
func (o *AddServicePlans200Response) IsSetServicePlan() bool {
	if o != nil && !IsNil(o.ServicePlan) {
		return true
	}

	return false
}

// SetServicePlan gets a reference to the given ListServicePlans200ResponseAllOfServicePlansInner and assigns it to the ServicePlan field.
func (o *AddServicePlans200Response) SetServicePlan(v ListServicePlans200ResponseAllOfServicePlansInner) {
	o.ServicePlan = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddServicePlans200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlans200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddServicePlans200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddServicePlans200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddServicePlans200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddServicePlans200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServicePlan) {
		toSerialize["servicePlan"] = o.ServicePlan
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddServicePlans200Response struct {
	value *AddServicePlans200Response
	isSet bool
}

func (v NullableAddServicePlans200Response) Get() *AddServicePlans200Response {
	return v.value
}

func (v *NullableAddServicePlans200Response) Set(val *AddServicePlans200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddServicePlans200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddServicePlans200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddServicePlans200Response(val *AddServicePlans200Response) *NullableAddServicePlans200Response {
	return &NullableAddServicePlans200Response{value: val, isSet: true}
}

func (v NullableAddServicePlans200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddServicePlans200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


