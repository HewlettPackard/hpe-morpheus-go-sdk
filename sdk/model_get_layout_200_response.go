/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetLayout200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLayout200Response{}

// GetLayout200Response struct for GetLayout200Response
type GetLayout200Response struct {
	InstanceTypeLayout *GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner `json:"instanceTypeLayout,omitempty"`
}

// NewGetLayout200Response instantiates a new GetLayout200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLayout200Response() *GetLayout200Response {
	this := GetLayout200Response{}
	return &this
}

// NewGetLayout200ResponseWithDefaults instantiates a new GetLayout200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLayout200ResponseWithDefaults() *GetLayout200Response {
	this := GetLayout200Response{}
	return &this
}

// GetInstanceTypeLayout returns the InstanceTypeLayout field value if set, zero value otherwise.
func (o *GetLayout200Response) GetInstanceTypeLayout() GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner {
	if o == nil || IsNil(o.InstanceTypeLayout) {
		var ret GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner
		return ret
	}
	return *o.InstanceTypeLayout
}

// GetInstanceTypeLayoutOk returns a tuple with the InstanceTypeLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLayout200Response) GetInstanceTypeLayoutOk() (*GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner, bool) {
	if o == nil || IsNil(o.InstanceTypeLayout) {
		return nil, false
	}
	return o.InstanceTypeLayout, true
}

// IsSetInstanceTypeLayout returns a boolean if a field has been set.
func (o *GetLayout200Response) IsSetInstanceTypeLayout() bool {
	if o != nil && !IsNil(o.InstanceTypeLayout) {
		return true
	}

	return false
}

// SetInstanceTypeLayout gets a reference to the given GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner and assigns it to the InstanceTypeLayout field.
func (o *GetLayout200Response) SetInstanceTypeLayout(v GetInstanceType200ResponseInstanceTypeInstanceTypeLayoutsInner) {
	o.InstanceTypeLayout = &v
}

func (o GetLayout200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLayout200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceTypeLayout) {
		toSerialize["instanceTypeLayout"] = o.InstanceTypeLayout
	}
	return toSerialize, nil
}

type NullableGetLayout200Response struct {
	value *GetLayout200Response
	isSet bool
}

func (v NullableGetLayout200Response) Get() *GetLayout200Response {
	return v.value
}

func (v *NullableGetLayout200Response) Set(val *GetLayout200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLayout200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLayout200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLayout200Response(val *GetLayout200Response) *NullableGetLayout200Response {
	return &NullableGetLayout200Response{value: val, isSet: true}
}

func (v NullableGetLayout200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLayout200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


