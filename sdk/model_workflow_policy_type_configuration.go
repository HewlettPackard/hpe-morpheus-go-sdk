/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the WorkflowPolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowPolicyTypeConfiguration{}

// WorkflowPolicyTypeConfiguration Configuration settings for the following policy types: - Workflow 
type WorkflowPolicyTypeConfiguration struct {
	WorkflowId *string `json:"workflowId,omitempty"`
}

// NewWorkflowPolicyTypeConfiguration instantiates a new WorkflowPolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowPolicyTypeConfiguration() *WorkflowPolicyTypeConfiguration {
	this := WorkflowPolicyTypeConfiguration{}
	return &this
}

// NewWorkflowPolicyTypeConfigurationWithDefaults instantiates a new WorkflowPolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowPolicyTypeConfigurationWithDefaults() *WorkflowPolicyTypeConfiguration {
	this := WorkflowPolicyTypeConfiguration{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WorkflowPolicyTypeConfiguration) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowPolicyTypeConfiguration) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// IsSetWorkflowId returns a boolean if a field has been set.
func (o *WorkflowPolicyTypeConfiguration) IsSetWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *WorkflowPolicyTypeConfiguration) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

func (o WorkflowPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowPolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}
	return toSerialize, nil
}

type NullableWorkflowPolicyTypeConfiguration struct {
	value *WorkflowPolicyTypeConfiguration
	isSet bool
}

func (v NullableWorkflowPolicyTypeConfiguration) Get() *WorkflowPolicyTypeConfiguration {
	return v.value
}

func (v *NullableWorkflowPolicyTypeConfiguration) Set(val *WorkflowPolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowPolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowPolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowPolicyTypeConfiguration(val *WorkflowPolicyTypeConfiguration) *NullableWorkflowPolicyTypeConfiguration {
	return &NullableWorkflowPolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableWorkflowPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowPolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


