/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListStorageServers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStorageServers200Response{}

// ListStorageServers200Response struct for ListStorageServers200Response
type ListStorageServers200Response struct {
	StorageServers []ListStorageServers200ResponseAllOfStorageServersInner `json:"storageServers,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListStorageServers200Response instantiates a new ListStorageServers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageServers200Response() *ListStorageServers200Response {
	this := ListStorageServers200Response{}
	return &this
}

// NewListStorageServers200ResponseWithDefaults instantiates a new ListStorageServers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageServers200ResponseWithDefaults() *ListStorageServers200Response {
	this := ListStorageServers200Response{}
	return &this
}

// GetStorageServers returns the StorageServers field value if set, zero value otherwise.
func (o *ListStorageServers200Response) GetStorageServers() []ListStorageServers200ResponseAllOfStorageServersInner {
	if o == nil || IsNil(o.StorageServers) {
		var ret []ListStorageServers200ResponseAllOfStorageServersInner
		return ret
	}
	return o.StorageServers
}

// GetStorageServersOk returns a tuple with the StorageServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200Response) GetStorageServersOk() ([]ListStorageServers200ResponseAllOfStorageServersInner, bool) {
	if o == nil || IsNil(o.StorageServers) {
		return nil, false
	}
	return o.StorageServers, true
}

// IsSetStorageServers returns a boolean if a field has been set.
func (o *ListStorageServers200Response) IsSetStorageServers() bool {
	if o != nil && !IsNil(o.StorageServers) {
		return true
	}

	return false
}

// SetStorageServers gets a reference to the given []ListStorageServers200ResponseAllOfStorageServersInner and assigns it to the StorageServers field.
func (o *ListStorageServers200Response) SetStorageServers(v []ListStorageServers200ResponseAllOfStorageServersInner) {
	o.StorageServers = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListStorageServers200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageServers200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListStorageServers200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListStorageServers200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListStorageServers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStorageServers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageServers) {
		toSerialize["storageServers"] = o.StorageServers
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListStorageServers200Response struct {
	value *ListStorageServers200Response
	isSet bool
}

func (v NullableListStorageServers200Response) Get() *ListStorageServers200Response {
	return v.value
}

func (v *NullableListStorageServers200Response) Set(val *ListStorageServers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageServers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageServers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageServers200Response(val *ListStorageServers200Response) *NullableListStorageServers200Response {
	return &NullableListStorageServers200Response{value: val, isSet: true}
}

func (v NullableListStorageServers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageServers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


