/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateIntegrationInventoryRequestInventory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIntegrationInventoryRequestInventory{}

// UpdateIntegrationInventoryRequestInventory struct for UpdateIntegrationInventoryRequestInventory
type UpdateIntegrationInventoryRequestInventory struct {
	// Array of tenant accounts that will use this inventory as Default. Used by jobs set to 'Use Tenant Default'
	Tenants []GetAlerts200ResponseAllOfChecksInnerAccount `json:"tenants,omitempty"`
}

// NewUpdateIntegrationInventoryRequestInventory instantiates a new UpdateIntegrationInventoryRequestInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIntegrationInventoryRequestInventory() *UpdateIntegrationInventoryRequestInventory {
	this := UpdateIntegrationInventoryRequestInventory{}
	return &this
}

// NewUpdateIntegrationInventoryRequestInventoryWithDefaults instantiates a new UpdateIntegrationInventoryRequestInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIntegrationInventoryRequestInventoryWithDefaults() *UpdateIntegrationInventoryRequestInventory {
	this := UpdateIntegrationInventoryRequestInventory{}
	return &this
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *UpdateIntegrationInventoryRequestInventory) GetTenants() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Tenants) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationInventoryRequestInventory) GetTenantsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *UpdateIntegrationInventoryRequestInventory) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Tenants field.
func (o *UpdateIntegrationInventoryRequestInventory) SetTenants(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Tenants = v
}

func (o UpdateIntegrationInventoryRequestInventory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIntegrationInventoryRequestInventory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

type NullableUpdateIntegrationInventoryRequestInventory struct {
	value *UpdateIntegrationInventoryRequestInventory
	isSet bool
}

func (v NullableUpdateIntegrationInventoryRequestInventory) Get() *UpdateIntegrationInventoryRequestInventory {
	return v.value
}

func (v *NullableUpdateIntegrationInventoryRequestInventory) Set(val *UpdateIntegrationInventoryRequestInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIntegrationInventoryRequestInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIntegrationInventoryRequestInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIntegrationInventoryRequestInventory(val *UpdateIntegrationInventoryRequestInventory) *NullableUpdateIntegrationInventoryRequestInventory {
	return &NullableUpdateIntegrationInventoryRequestInventory{value: val, isSet: true}
}

func (v NullableUpdateIntegrationInventoryRequestInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIntegrationInventoryRequestInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


