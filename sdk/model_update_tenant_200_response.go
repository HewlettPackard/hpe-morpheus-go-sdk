/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateTenant200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTenant200Response{}

// UpdateTenant200Response struct for UpdateTenant200Response
type UpdateTenant200Response struct {
	Account *UpdateTenant200ResponseAccount `json:"account,omitempty"`
}

// NewUpdateTenant200Response instantiates a new UpdateTenant200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTenant200Response() *UpdateTenant200Response {
	this := UpdateTenant200Response{}
	return &this
}

// NewUpdateTenant200ResponseWithDefaults instantiates a new UpdateTenant200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTenant200ResponseWithDefaults() *UpdateTenant200Response {
	this := UpdateTenant200Response{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *UpdateTenant200Response) GetAccount() UpdateTenant200ResponseAccount {
	if o == nil || IsNil(o.Account) {
		var ret UpdateTenant200ResponseAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenant200Response) GetAccountOk() (*UpdateTenant200ResponseAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *UpdateTenant200Response) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given UpdateTenant200ResponseAccount and assigns it to the Account field.
func (o *UpdateTenant200Response) SetAccount(v UpdateTenant200ResponseAccount) {
	o.Account = &v
}

func (o UpdateTenant200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTenant200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return toSerialize, nil
}

type NullableUpdateTenant200Response struct {
	value *UpdateTenant200Response
	isSet bool
}

func (v NullableUpdateTenant200Response) Get() *UpdateTenant200Response {
	return v.value
}

func (v *NullableUpdateTenant200Response) Set(val *UpdateTenant200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTenant200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTenant200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTenant200Response(val *UpdateTenant200Response) *NullableUpdateTenant200Response {
	return &NullableUpdateTenant200Response{value: val, isSet: true}
}

func (v NullableUpdateTenant200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTenant200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


