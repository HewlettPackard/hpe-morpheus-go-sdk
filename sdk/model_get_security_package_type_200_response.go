/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetSecurityPackageType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSecurityPackageType200Response{}

// GetSecurityPackageType200Response struct for GetSecurityPackageType200Response
type GetSecurityPackageType200Response struct {
	SecurityPackageType *ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner `json:"securityPackageType,omitempty"`
}

// NewGetSecurityPackageType200Response instantiates a new GetSecurityPackageType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSecurityPackageType200Response() *GetSecurityPackageType200Response {
	this := GetSecurityPackageType200Response{}
	return &this
}

// NewGetSecurityPackageType200ResponseWithDefaults instantiates a new GetSecurityPackageType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSecurityPackageType200ResponseWithDefaults() *GetSecurityPackageType200Response {
	this := GetSecurityPackageType200Response{}
	return &this
}

// GetSecurityPackageType returns the SecurityPackageType field value if set, zero value otherwise.
func (o *GetSecurityPackageType200Response) GetSecurityPackageType() ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner {
	if o == nil || IsNil(o.SecurityPackageType) {
		var ret ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner
		return ret
	}
	return *o.SecurityPackageType
}

// GetSecurityPackageTypeOk returns a tuple with the SecurityPackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSecurityPackageType200Response) GetSecurityPackageTypeOk() (*ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner, bool) {
	if o == nil || IsNil(o.SecurityPackageType) {
		return nil, false
	}
	return o.SecurityPackageType, true
}

// IsSetSecurityPackageType returns a boolean if a field has been set.
func (o *GetSecurityPackageType200Response) IsSetSecurityPackageType() bool {
	if o != nil && !IsNil(o.SecurityPackageType) {
		return true
	}

	return false
}

// SetSecurityPackageType gets a reference to the given ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner and assigns it to the SecurityPackageType field.
func (o *GetSecurityPackageType200Response) SetSecurityPackageType(v ListSecurityPackageTypes200ResponseAllOfSecurityPackageTypesInner) {
	o.SecurityPackageType = &v
}

func (o GetSecurityPackageType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSecurityPackageType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecurityPackageType) {
		toSerialize["securityPackageType"] = o.SecurityPackageType
	}
	return toSerialize, nil
}

type NullableGetSecurityPackageType200Response struct {
	value *GetSecurityPackageType200Response
	isSet bool
}

func (v NullableGetSecurityPackageType200Response) Get() *GetSecurityPackageType200Response {
	return v.value
}

func (v *NullableGetSecurityPackageType200Response) Set(val *GetSecurityPackageType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSecurityPackageType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSecurityPackageType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSecurityPackageType200Response(val *GetSecurityPackageType200Response) *NullableGetSecurityPackageType200Response {
	return &NullableGetSecurityPackageType200Response{value: val, isSet: true}
}

func (v NullableGetSecurityPackageType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSecurityPackageType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


