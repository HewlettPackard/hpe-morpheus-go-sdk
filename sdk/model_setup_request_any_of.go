/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetupRequestAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetupRequestAnyOf{}

// SetupRequestAnyOf struct for SetupRequestAnyOf
type SetupRequestAnyOf struct {
	// Appliance Name. Choose a name for your Morpheus Appliance.  This is stored in the Appliance Settings.
	ApplianceName string `json:"applianceName"`
	// Appliance URL. Specify the full URL for your Morpheus Appliance. This is stored in the Appliance Settings.
	ApplianceUrl *string `json:"applianceUrl,omitempty"`
	// Name of the Master Tenant account being created.
	AccountName string `json:"accountName"`
	// First Name for the System Admin user being created.
	FirstName *string `json:"firstName,omitempty"`
	// Last Name for the System Admin user being created.
	LastName *string `json:"lastName,omitempty"`
	// Username for the System Admin user being created.
	Username string `json:"username"`
	// Email for the System Admin user being created.
	Email string `json:"email"`
	// Password for the System Admin user being created.
	Password string `json:"password"`
	// Hub Mode. Determines if and how the appliance should connect with the Morpheus Hub. The default value (skip) means do not connect with the hub, and you will be installing your license manually. If you login or register with the hub then a Community Edition license will be installed automatically.
	Hubmode *string `json:"hubmode,omitempty"`
	// License Key to install on setup.
	LicenseKey *string `json:"licenseKey,omitempty"`
}

type _SetupRequestAnyOf SetupRequestAnyOf

// NewSetupRequestAnyOf instantiates a new SetupRequestAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetupRequestAnyOf(applianceName string, accountName string, username string, email string, password string) *SetupRequestAnyOf {
	this := SetupRequestAnyOf{}
	this.ApplianceName = applianceName
	this.AccountName = accountName
	this.Username = username
	this.Email = email
	this.Password = password
	var hubmode string = "skip"
	this.Hubmode = &hubmode
	return &this
}

// NewSetupRequestAnyOfWithDefaults instantiates a new SetupRequestAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetupRequestAnyOfWithDefaults() *SetupRequestAnyOf {
	this := SetupRequestAnyOf{}
	var hubmode string = "skip"
	this.Hubmode = &hubmode
	return &this
}

// GetApplianceName returns the ApplianceName field value
func (o *SetupRequestAnyOf) GetApplianceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplianceName
}

// GetApplianceNameOk returns a tuple with the ApplianceName field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetApplianceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplianceName, true
}

// SetApplianceName sets field value
func (o *SetupRequestAnyOf) SetApplianceName(v string) {
	o.ApplianceName = v
}

// GetApplianceUrl returns the ApplianceUrl field value if set, zero value otherwise.
func (o *SetupRequestAnyOf) GetApplianceUrl() string {
	if o == nil || IsNil(o.ApplianceUrl) {
		var ret string
		return ret
	}
	return *o.ApplianceUrl
}

// GetApplianceUrlOk returns a tuple with the ApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceUrl) {
		return nil, false
	}
	return o.ApplianceUrl, true
}

// IsSetApplianceUrl returns a boolean if a field has been set.
func (o *SetupRequestAnyOf) IsSetApplianceUrl() bool {
	if o != nil && !IsNil(o.ApplianceUrl) {
		return true
	}

	return false
}

// SetApplianceUrl gets a reference to the given string and assigns it to the ApplianceUrl field.
func (o *SetupRequestAnyOf) SetApplianceUrl(v string) {
	o.ApplianceUrl = &v
}

// GetAccountName returns the AccountName field value
func (o *SetupRequestAnyOf) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *SetupRequestAnyOf) SetAccountName(v string) {
	o.AccountName = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *SetupRequestAnyOf) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// IsSetFirstName returns a boolean if a field has been set.
func (o *SetupRequestAnyOf) IsSetFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *SetupRequestAnyOf) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *SetupRequestAnyOf) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// IsSetLastName returns a boolean if a field has been set.
func (o *SetupRequestAnyOf) IsSetLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *SetupRequestAnyOf) SetLastName(v string) {
	o.LastName = &v
}

// GetUsername returns the Username field value
func (o *SetupRequestAnyOf) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *SetupRequestAnyOf) SetUsername(v string) {
	o.Username = v
}

// GetEmail returns the Email field value
func (o *SetupRequestAnyOf) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SetupRequestAnyOf) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *SetupRequestAnyOf) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SetupRequestAnyOf) SetPassword(v string) {
	o.Password = v
}

// GetHubmode returns the Hubmode field value if set, zero value otherwise.
func (o *SetupRequestAnyOf) GetHubmode() string {
	if o == nil || IsNil(o.Hubmode) {
		var ret string
		return ret
	}
	return *o.Hubmode
}

// GetHubmodeOk returns a tuple with the Hubmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetHubmodeOk() (*string, bool) {
	if o == nil || IsNil(o.Hubmode) {
		return nil, false
	}
	return o.Hubmode, true
}

// IsSetHubmode returns a boolean if a field has been set.
func (o *SetupRequestAnyOf) IsSetHubmode() bool {
	if o != nil && !IsNil(o.Hubmode) {
		return true
	}

	return false
}

// SetHubmode gets a reference to the given string and assigns it to the Hubmode field.
func (o *SetupRequestAnyOf) SetHubmode(v string) {
	o.Hubmode = &v
}

// GetLicenseKey returns the LicenseKey field value if set, zero value otherwise.
func (o *SetupRequestAnyOf) GetLicenseKey() string {
	if o == nil || IsNil(o.LicenseKey) {
		var ret string
		return ret
	}
	return *o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf) GetLicenseKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseKey) {
		return nil, false
	}
	return o.LicenseKey, true
}

// IsSetLicenseKey returns a boolean if a field has been set.
func (o *SetupRequestAnyOf) IsSetLicenseKey() bool {
	if o != nil && !IsNil(o.LicenseKey) {
		return true
	}

	return false
}

// SetLicenseKey gets a reference to the given string and assigns it to the LicenseKey field.
func (o *SetupRequestAnyOf) SetLicenseKey(v string) {
	o.LicenseKey = &v
}

func (o SetupRequestAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetupRequestAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applianceName"] = o.ApplianceName
	if !IsNil(o.ApplianceUrl) {
		toSerialize["applianceUrl"] = o.ApplianceUrl
	}
	toSerialize["accountName"] = o.AccountName
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	toSerialize["username"] = o.Username
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	if !IsNil(o.Hubmode) {
		toSerialize["hubmode"] = o.Hubmode
	}
	if !IsNil(o.LicenseKey) {
		toSerialize["licenseKey"] = o.LicenseKey
	}
	return toSerialize, nil
}

func (o *SetupRequestAnyOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"applianceName",
		"accountName",
		"username",
		"email",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetupRequestAnyOf := _SetupRequestAnyOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetupRequestAnyOf)

	if err != nil {
		return err
	}

	*o = SetupRequestAnyOf(varSetupRequestAnyOf)

	return err
}

type NullableSetupRequestAnyOf struct {
	value *SetupRequestAnyOf
	isSet bool
}

func (v NullableSetupRequestAnyOf) Get() *SetupRequestAnyOf {
	return v.value
}

func (v *NullableSetupRequestAnyOf) Set(val *SetupRequestAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSetupRequestAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSetupRequestAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetupRequestAnyOf(val *SetupRequestAnyOf) *NullableSetupRequestAnyOf {
	return &NullableSetupRequestAnyOf{value: val, isSet: true}
}

func (v NullableSetupRequestAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetupRequestAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


