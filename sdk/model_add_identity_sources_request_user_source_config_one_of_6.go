/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIdentitySourcesRequestUserSourceConfigOneOf6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIdentitySourcesRequestUserSourceConfigOneOf6{}

// AddIdentitySourcesRequestUserSourceConfigOneOf6 Custom External Configuration
type AddIdentitySourcesRequestUserSourceConfigOneOf6 struct {
	// External Login URL
	LoginUrl *string `json:"loginUrl,omitempty"`
	// Do not include SAMLRequest
	DoNotIncludeSAMLRequest *bool `json:"doNotIncludeSAMLRequest,omitempty"`
	// External Logout URL
	Logout *string `json:"logout,omitempty"`
	// Encryption Algorithm
	EncryptionAlgo *string `json:"encryptionAlgo,omitempty"`
	// Encryption Key
	EncryptionKey *string `json:"encryptionKey,omitempty"`
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf6 instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIdentitySourcesRequestUserSourceConfigOneOf6() *AddIdentitySourcesRequestUserSourceConfigOneOf6 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf6{}
	var doNotIncludeSAMLRequest bool = false
	this.DoNotIncludeSAMLRequest = &doNotIncludeSAMLRequest
	return &this
}

// NewAddIdentitySourcesRequestUserSourceConfigOneOf6WithDefaults instantiates a new AddIdentitySourcesRequestUserSourceConfigOneOf6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIdentitySourcesRequestUserSourceConfigOneOf6WithDefaults() *AddIdentitySourcesRequestUserSourceConfigOneOf6 {
	this := AddIdentitySourcesRequestUserSourceConfigOneOf6{}
	var doNotIncludeSAMLRequest bool = false
	this.DoNotIncludeSAMLRequest = &doNotIncludeSAMLRequest
	return &this
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetLoginUrl() string {
	if o == nil || IsNil(o.LoginUrl) {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetLoginUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LoginUrl) {
		return nil, false
	}
	return o.LoginUrl, true
}

// IsSetLoginUrl returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) IsSetLoginUrl() bool {
	if o != nil && !IsNil(o.LoginUrl) {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetDoNotIncludeSAMLRequest returns the DoNotIncludeSAMLRequest field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetDoNotIncludeSAMLRequest() bool {
	if o == nil || IsNil(o.DoNotIncludeSAMLRequest) {
		var ret bool
		return ret
	}
	return *o.DoNotIncludeSAMLRequest
}

// GetDoNotIncludeSAMLRequestOk returns a tuple with the DoNotIncludeSAMLRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetDoNotIncludeSAMLRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotIncludeSAMLRequest) {
		return nil, false
	}
	return o.DoNotIncludeSAMLRequest, true
}

// IsSetDoNotIncludeSAMLRequest returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) IsSetDoNotIncludeSAMLRequest() bool {
	if o != nil && !IsNil(o.DoNotIncludeSAMLRequest) {
		return true
	}

	return false
}

// SetDoNotIncludeSAMLRequest gets a reference to the given bool and assigns it to the DoNotIncludeSAMLRequest field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) SetDoNotIncludeSAMLRequest(v bool) {
	o.DoNotIncludeSAMLRequest = &v
}

// GetLogout returns the Logout field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetLogout() string {
	if o == nil || IsNil(o.Logout) {
		var ret string
		return ret
	}
	return *o.Logout
}

// GetLogoutOk returns a tuple with the Logout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetLogoutOk() (*string, bool) {
	if o == nil || IsNil(o.Logout) {
		return nil, false
	}
	return o.Logout, true
}

// IsSetLogout returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) IsSetLogout() bool {
	if o != nil && !IsNil(o.Logout) {
		return true
	}

	return false
}

// SetLogout gets a reference to the given string and assigns it to the Logout field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) SetLogout(v string) {
	o.Logout = &v
}

// GetEncryptionAlgo returns the EncryptionAlgo field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetEncryptionAlgo() string {
	if o == nil || IsNil(o.EncryptionAlgo) {
		var ret string
		return ret
	}
	return *o.EncryptionAlgo
}

// GetEncryptionAlgoOk returns a tuple with the EncryptionAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetEncryptionAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionAlgo) {
		return nil, false
	}
	return o.EncryptionAlgo, true
}

// IsSetEncryptionAlgo returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) IsSetEncryptionAlgo() bool {
	if o != nil && !IsNil(o.EncryptionAlgo) {
		return true
	}

	return false
}

// SetEncryptionAlgo gets a reference to the given string and assigns it to the EncryptionAlgo field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) SetEncryptionAlgo(v string) {
	o.EncryptionAlgo = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetEncryptionKey() string {
	if o == nil || IsNil(o.EncryptionKey) {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionKey) {
		return nil, false
	}
	return o.EncryptionKey, true
}

// IsSetEncryptionKey returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) IsSetEncryptionKey() bool {
	if o != nil && !IsNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *AddIdentitySourcesRequestUserSourceConfigOneOf6) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf6) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIdentitySourcesRequestUserSourceConfigOneOf6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoginUrl) {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if !IsNil(o.DoNotIncludeSAMLRequest) {
		toSerialize["doNotIncludeSAMLRequest"] = o.DoNotIncludeSAMLRequest
	}
	if !IsNil(o.Logout) {
		toSerialize["logout"] = o.Logout
	}
	if !IsNil(o.EncryptionAlgo) {
		toSerialize["encryptionAlgo"] = o.EncryptionAlgo
	}
	if !IsNil(o.EncryptionKey) {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	return toSerialize, nil
}

type NullableAddIdentitySourcesRequestUserSourceConfigOneOf6 struct {
	value *AddIdentitySourcesRequestUserSourceConfigOneOf6
	isSet bool
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) Get() *AddIdentitySourcesRequestUserSourceConfigOneOf6 {
	return v.value
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) Set(val *AddIdentitySourcesRequestUserSourceConfigOneOf6) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentitySourcesRequestUserSourceConfigOneOf6(val *AddIdentitySourcesRequestUserSourceConfigOneOf6) *NullableAddIdentitySourcesRequestUserSourceConfigOneOf6 {
	return &NullableAddIdentitySourcesRequestUserSourceConfigOneOf6{value: val, isSet: true}
}

func (v NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentitySourcesRequestUserSourceConfigOneOf6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


