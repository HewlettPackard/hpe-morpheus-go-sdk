/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateCloudFoldersRequestFolderTenantPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCloudFoldersRequestFolderTenantPermissions{}

// UpdateCloudFoldersRequestFolderTenantPermissions struct for UpdateCloudFoldersRequestFolderTenantPermissions
type UpdateCloudFoldersRequestFolderTenantPermissions struct {
	// Array of tenant account ids that are allowed access
	Accounts []int64 `json:"accounts,omitempty"`
	// Array of tenant account ids which should use the folder as the Default
	DefaultTarget []int64 `json:"defaultTarget,omitempty"`
	// Array of tenant account ids which should use the folder as the Image Target
	DefaultStore []int64 `json:"defaultStore,omitempty"`
}

// NewUpdateCloudFoldersRequestFolderTenantPermissions instantiates a new UpdateCloudFoldersRequestFolderTenantPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCloudFoldersRequestFolderTenantPermissions() *UpdateCloudFoldersRequestFolderTenantPermissions {
	this := UpdateCloudFoldersRequestFolderTenantPermissions{}
	return &this
}

// NewUpdateCloudFoldersRequestFolderTenantPermissionsWithDefaults instantiates a new UpdateCloudFoldersRequestFolderTenantPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCloudFoldersRequestFolderTenantPermissionsWithDefaults() *UpdateCloudFoldersRequestFolderTenantPermissions {
	this := UpdateCloudFoldersRequestFolderTenantPermissions{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetAccounts() []int64 {
	if o == nil || IsNil(o.Accounts) {
		var ret []int64
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetAccountsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// IsSetAccounts returns a boolean if a field has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) IsSetAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []int64 and assigns it to the Accounts field.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) SetAccounts(v []int64) {
	o.Accounts = v
}

// GetDefaultTarget returns the DefaultTarget field value if set, zero value otherwise.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetDefaultTarget() []int64 {
	if o == nil || IsNil(o.DefaultTarget) {
		var ret []int64
		return ret
	}
	return o.DefaultTarget
}

// GetDefaultTargetOk returns a tuple with the DefaultTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetDefaultTargetOk() ([]int64, bool) {
	if o == nil || IsNil(o.DefaultTarget) {
		return nil, false
	}
	return o.DefaultTarget, true
}

// IsSetDefaultTarget returns a boolean if a field has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) IsSetDefaultTarget() bool {
	if o != nil && !IsNil(o.DefaultTarget) {
		return true
	}

	return false
}

// SetDefaultTarget gets a reference to the given []int64 and assigns it to the DefaultTarget field.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) SetDefaultTarget(v []int64) {
	o.DefaultTarget = v
}

// GetDefaultStore returns the DefaultStore field value if set, zero value otherwise.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetDefaultStore() []int64 {
	if o == nil || IsNil(o.DefaultStore) {
		var ret []int64
		return ret
	}
	return o.DefaultStore
}

// GetDefaultStoreOk returns a tuple with the DefaultStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) GetDefaultStoreOk() ([]int64, bool) {
	if o == nil || IsNil(o.DefaultStore) {
		return nil, false
	}
	return o.DefaultStore, true
}

// IsSetDefaultStore returns a boolean if a field has been set.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) IsSetDefaultStore() bool {
	if o != nil && !IsNil(o.DefaultStore) {
		return true
	}

	return false
}

// SetDefaultStore gets a reference to the given []int64 and assigns it to the DefaultStore field.
func (o *UpdateCloudFoldersRequestFolderTenantPermissions) SetDefaultStore(v []int64) {
	o.DefaultStore = v
}

func (o UpdateCloudFoldersRequestFolderTenantPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCloudFoldersRequestFolderTenantPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.DefaultTarget) {
		toSerialize["defaultTarget"] = o.DefaultTarget
	}
	if !IsNil(o.DefaultStore) {
		toSerialize["defaultStore"] = o.DefaultStore
	}
	return toSerialize, nil
}

type NullableUpdateCloudFoldersRequestFolderTenantPermissions struct {
	value *UpdateCloudFoldersRequestFolderTenantPermissions
	isSet bool
}

func (v NullableUpdateCloudFoldersRequestFolderTenantPermissions) Get() *UpdateCloudFoldersRequestFolderTenantPermissions {
	return v.value
}

func (v *NullableUpdateCloudFoldersRequestFolderTenantPermissions) Set(val *UpdateCloudFoldersRequestFolderTenantPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCloudFoldersRequestFolderTenantPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCloudFoldersRequestFolderTenantPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCloudFoldersRequestFolderTenantPermissions(val *UpdateCloudFoldersRequestFolderTenantPermissions) *NullableUpdateCloudFoldersRequestFolderTenantPermissions {
	return &NullableUpdateCloudFoldersRequestFolderTenantPermissions{value: val, isSet: true}
}

func (v NullableUpdateCloudFoldersRequestFolderTenantPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCloudFoldersRequestFolderTenantPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


