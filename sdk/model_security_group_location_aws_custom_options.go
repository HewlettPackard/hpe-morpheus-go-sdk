/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SecurityGroupLocationAwsCustomOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupLocationAwsCustomOptions{}

// SecurityGroupLocationAwsCustomOptions struct for SecurityGroupLocationAwsCustomOptions
type SecurityGroupLocationAwsCustomOptions struct {
	// External ID of Amazon VPC
	Vpc *string `json:"vpc,omitempty"`
}

// NewSecurityGroupLocationAwsCustomOptions instantiates a new SecurityGroupLocationAwsCustomOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupLocationAwsCustomOptions() *SecurityGroupLocationAwsCustomOptions {
	this := SecurityGroupLocationAwsCustomOptions{}
	return &this
}

// NewSecurityGroupLocationAwsCustomOptionsWithDefaults instantiates a new SecurityGroupLocationAwsCustomOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupLocationAwsCustomOptionsWithDefaults() *SecurityGroupLocationAwsCustomOptions {
	this := SecurityGroupLocationAwsCustomOptions{}
	return &this
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *SecurityGroupLocationAwsCustomOptions) GetVpc() string {
	if o == nil || IsNil(o.Vpc) {
		var ret string
		return ret
	}
	return *o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocationAwsCustomOptions) GetVpcOk() (*string, bool) {
	if o == nil || IsNil(o.Vpc) {
		return nil, false
	}
	return o.Vpc, true
}

// IsSetVpc returns a boolean if a field has been set.
func (o *SecurityGroupLocationAwsCustomOptions) IsSetVpc() bool {
	if o != nil && !IsNil(o.Vpc) {
		return true
	}

	return false
}

// SetVpc gets a reference to the given string and assigns it to the Vpc field.
func (o *SecurityGroupLocationAwsCustomOptions) SetVpc(v string) {
	o.Vpc = &v
}

func (o SecurityGroupLocationAwsCustomOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupLocationAwsCustomOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vpc) {
		toSerialize["vpc"] = o.Vpc
	}
	return toSerialize, nil
}

type NullableSecurityGroupLocationAwsCustomOptions struct {
	value *SecurityGroupLocationAwsCustomOptions
	isSet bool
}

func (v NullableSecurityGroupLocationAwsCustomOptions) Get() *SecurityGroupLocationAwsCustomOptions {
	return v.value
}

func (v *NullableSecurityGroupLocationAwsCustomOptions) Set(val *SecurityGroupLocationAwsCustomOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupLocationAwsCustomOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupLocationAwsCustomOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupLocationAwsCustomOptions(val *SecurityGroupLocationAwsCustomOptions) *NullableSecurityGroupLocationAwsCustomOptions {
	return &NullableSecurityGroupLocationAwsCustomOptions{value: val, isSet: true}
}

func (v NullableSecurityGroupLocationAwsCustomOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupLocationAwsCustomOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


