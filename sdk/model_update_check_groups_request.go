/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateCheckGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCheckGroupsRequest{}

// UpdateCheckGroupsRequest struct for UpdateCheckGroupsRequest
type UpdateCheckGroupsRequest struct {
	CheckGroup UpdateCheckGroupsRequestCheckGroup `json:"checkGroup"`
}

type _UpdateCheckGroupsRequest UpdateCheckGroupsRequest

// NewUpdateCheckGroupsRequest instantiates a new UpdateCheckGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCheckGroupsRequest(checkGroup UpdateCheckGroupsRequestCheckGroup) *UpdateCheckGroupsRequest {
	this := UpdateCheckGroupsRequest{}
	this.CheckGroup = checkGroup
	return &this
}

// NewUpdateCheckGroupsRequestWithDefaults instantiates a new UpdateCheckGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCheckGroupsRequestWithDefaults() *UpdateCheckGroupsRequest {
	this := UpdateCheckGroupsRequest{}
	return &this
}

// GetCheckGroup returns the CheckGroup field value
func (o *UpdateCheckGroupsRequest) GetCheckGroup() UpdateCheckGroupsRequestCheckGroup {
	if o == nil {
		var ret UpdateCheckGroupsRequestCheckGroup
		return ret
	}

	return o.CheckGroup
}

// GetCheckGroupOk returns a tuple with the CheckGroup field value
// and a boolean to check if the value has been set.
func (o *UpdateCheckGroupsRequest) GetCheckGroupOk() (*UpdateCheckGroupsRequestCheckGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckGroup, true
}

// SetCheckGroup sets field value
func (o *UpdateCheckGroupsRequest) SetCheckGroup(v UpdateCheckGroupsRequestCheckGroup) {
	o.CheckGroup = v
}

func (o UpdateCheckGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCheckGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["checkGroup"] = o.CheckGroup
	return toSerialize, nil
}

func (o *UpdateCheckGroupsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"checkGroup",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateCheckGroupsRequest := _UpdateCheckGroupsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateCheckGroupsRequest)

	if err != nil {
		return err
	}

	*o = UpdateCheckGroupsRequest(varUpdateCheckGroupsRequest)

	return err
}

type NullableUpdateCheckGroupsRequest struct {
	value *UpdateCheckGroupsRequest
	isSet bool
}

func (v NullableUpdateCheckGroupsRequest) Get() *UpdateCheckGroupsRequest {
	return v.value
}

func (v *NullableUpdateCheckGroupsRequest) Set(val *UpdateCheckGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCheckGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCheckGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCheckGroupsRequest(val *UpdateCheckGroupsRequest) *NullableUpdateCheckGroupsRequest {
	return &NullableUpdateCheckGroupsRequest{value: val, isSet: true}
}

func (v NullableUpdateCheckGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCheckGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


