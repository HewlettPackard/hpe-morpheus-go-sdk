/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner{}

// UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner struct for UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner
type UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner struct {
	Url string `json:"url"`
	Label string `json:"label"`
	LabelCode string `json:"labelCode"`
}

type _UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner

// NewUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner instantiates a new UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner(url string, label string, labelCode string) *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner {
	this := UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner{}
	this.Url = url
	this.Label = label
	this.LabelCode = labelCode
	return &this
}

// NewUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInnerWithDefaults instantiates a new UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInnerWithDefaults() *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner {
	this := UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner{}
	return &this
}

// GetUrl returns the Url field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) SetUrl(v string) {
	o.Url = v
}

// GetLabel returns the Label field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) SetLabel(v string) {
	o.Label = v
}

// GetLabelCode returns the LabelCode field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetLabelCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelCode
}

// GetLabelCodeOk returns a tuple with the LabelCode field value
// and a boolean to check if the value has been set.
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) GetLabelCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelCode, true
}

// SetLabelCode sets field value
func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) SetLabelCode(v string) {
	o.LabelCode = v
}

func (o UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["label"] = o.Label
	toSerialize["labelCode"] = o.LabelCode
	return toSerialize, nil
}

func (o *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"label",
		"labelCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner := _UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner)

	if err != nil {
		return err
	}

	*o = UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner(varUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner)

	return err
}

type NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner struct {
	value *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner
	isSet bool
}

func (v NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) Get() *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner {
	return v.value
}

func (v *NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) Set(val *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner(val *UpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) *NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner {
	return &NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner{value: val, isSet: true}
}

func (v NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWhitelabelSettingsRequestWhitelabelSettingsSupportMenuLinksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


