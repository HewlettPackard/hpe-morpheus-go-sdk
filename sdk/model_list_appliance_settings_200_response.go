/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListApplianceSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListApplianceSettings200Response{}

// ListApplianceSettings200Response struct for ListApplianceSettings200Response
type ListApplianceSettings200Response struct {
	ApplianceSettings    *ListApplianceSettings200ResponseApplianceSettings `json:"applianceSettings,omitempty"`
	AdditionalProperties map[string]interface{}                             `json:",remain"`
}

type _ListApplianceSettings200Response ListApplianceSettings200Response

// NewListApplianceSettings200Response instantiates a new ListApplianceSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListApplianceSettings200Response() *ListApplianceSettings200Response {
	this := ListApplianceSettings200Response{}
	return &this
}

// NewListApplianceSettings200ResponseWithDefaults instantiates a new ListApplianceSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListApplianceSettings200ResponseWithDefaults() *ListApplianceSettings200Response {
	this := ListApplianceSettings200Response{}
	return &this
}

// GetApplianceSettings returns the ApplianceSettings field value if set, zero value otherwise.
func (o *ListApplianceSettings200Response) GetApplianceSettings() ListApplianceSettings200ResponseApplianceSettings {
	if o == nil || IsNil(o.ApplianceSettings) {
		var ret ListApplianceSettings200ResponseApplianceSettings
		return ret
	}
	return *o.ApplianceSettings
}

// GetApplianceSettingsOk returns a tuple with the ApplianceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApplianceSettings200Response) GetApplianceSettingsOk() (*ListApplianceSettings200ResponseApplianceSettings, bool) {
	if o == nil || IsNil(o.ApplianceSettings) {
		return nil, false
	}
	return o.ApplianceSettings, true
}

// IsSetApplianceSettings returns a boolean if a field has been set.
func (o *ListApplianceSettings200Response) IsSetApplianceSettings() bool {
	if o != nil && !IsNil(o.ApplianceSettings) {
		return true
	}

	return false
}

// SetApplianceSettings gets a reference to the given ListApplianceSettings200ResponseApplianceSettings and assigns it to the ApplianceSettings field.
func (o *ListApplianceSettings200Response) SetApplianceSettings(v ListApplianceSettings200ResponseApplianceSettings) {
	o.ApplianceSettings = &v
}

func (o ListApplianceSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListApplianceSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplianceSettings) {
		toSerialize["applianceSettings"] = o.ApplianceSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListApplianceSettings200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
