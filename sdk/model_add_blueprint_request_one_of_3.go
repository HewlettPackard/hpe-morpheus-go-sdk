/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddBlueprintRequestOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOf3{}

// AddBlueprintRequestOneOf3 struct for AddBlueprintRequestOneOf3
type AddBlueprintRequestOneOf3 struct {
	// A name for the blueprint
	Name string `json:"name"`
	// Path to display image. Defaults to an internal Morpheus image.
	Image *string `json:"image,omitempty"`
	// Blueprint Type
	Type string `json:"type"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	Kubernetes AddBlueprintRequestOneOf3Kubernetes `json:"kubernetes"`
	Config *AddBlueprintRequestOneOf3Config `json:"config,omitempty"`
}

type _AddBlueprintRequestOneOf3 AddBlueprintRequestOneOf3

// NewAddBlueprintRequestOneOf3 instantiates a new AddBlueprintRequestOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOf3(name string, type_ string, kubernetes AddBlueprintRequestOneOf3Kubernetes) *AddBlueprintRequestOneOf3 {
	this := AddBlueprintRequestOneOf3{}
	this.Name = name
	this.Type = type_
	this.Kubernetes = kubernetes
	return &this
}

// NewAddBlueprintRequestOneOf3WithDefaults instantiates a new AddBlueprintRequestOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOf3WithDefaults() *AddBlueprintRequestOneOf3 {
	this := AddBlueprintRequestOneOf3{}
	return &this
}

// GetName returns the Name field value
func (o *AddBlueprintRequestOneOf3) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddBlueprintRequestOneOf3) SetName(v string) {
	o.Name = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// IsSetImage returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3) IsSetImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *AddBlueprintRequestOneOf3) SetImage(v string) {
	o.Image = &v
}

// GetType returns the Type field value
func (o *AddBlueprintRequestOneOf3) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddBlueprintRequestOneOf3) SetType(v string) {
	o.Type = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *AddBlueprintRequestOneOf3) SetLabels(v []string) {
	o.Labels = v
}

// GetKubernetes returns the Kubernetes field value
func (o *AddBlueprintRequestOneOf3) GetKubernetes() AddBlueprintRequestOneOf3Kubernetes {
	if o == nil {
		var ret AddBlueprintRequestOneOf3Kubernetes
		return ret
	}

	return o.Kubernetes
}

// GetKubernetesOk returns a tuple with the Kubernetes field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetKubernetesOk() (*AddBlueprintRequestOneOf3Kubernetes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kubernetes, true
}

// SetKubernetes sets field value
func (o *AddBlueprintRequestOneOf3) SetKubernetes(v AddBlueprintRequestOneOf3Kubernetes) {
	o.Kubernetes = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3) GetConfig() AddBlueprintRequestOneOf3Config {
	if o == nil || IsNil(o.Config) {
		var ret AddBlueprintRequestOneOf3Config
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3) GetConfigOk() (*AddBlueprintRequestOneOf3Config, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddBlueprintRequestOneOf3Config and assigns it to the Config field.
func (o *AddBlueprintRequestOneOf3) SetConfig(v AddBlueprintRequestOneOf3Config) {
	o.Config = &v
}

func (o AddBlueprintRequestOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["kubernetes"] = o.Kubernetes
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

func (o *AddBlueprintRequestOneOf3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"kubernetes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBlueprintRequestOneOf3 := _AddBlueprintRequestOneOf3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddBlueprintRequestOneOf3)

	if err != nil {
		return err
	}

	*o = AddBlueprintRequestOneOf3(varAddBlueprintRequestOneOf3)

	return err
}

type NullableAddBlueprintRequestOneOf3 struct {
	value *AddBlueprintRequestOneOf3
	isSet bool
}

func (v NullableAddBlueprintRequestOneOf3) Get() *AddBlueprintRequestOneOf3 {
	return v.value
}

func (v *NullableAddBlueprintRequestOneOf3) Set(val *AddBlueprintRequestOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequestOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequestOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequestOneOf3(val *AddBlueprintRequestOneOf3) *NullableAddBlueprintRequestOneOf3 {
	return &NullableAddBlueprintRequestOneOf3{value: val, isSet: true}
}

func (v NullableAddBlueprintRequestOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequestOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


