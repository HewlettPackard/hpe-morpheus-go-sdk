/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddInstanceDeployRequestAppDeploy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstanceDeployRequestAppDeploy{}

// AddInstanceDeployRequestAppDeploy struct for AddInstanceDeployRequestAppDeploy
type AddInstanceDeployRequestAppDeploy struct {
	// Deployment ID.
	DeploymentId *int64 `json:"deploymentId,omitempty"`
	// Deployment Version number identifier (userVersion). Can be passed along with deploymentId to identify the version
	Version *string `json:"version,omitempty"`
	// Deployment Version ID. This can be passed instead of deploymentId and version.
	VersionId *int64 `json:"versionId,omitempty"`
	// Map of configuration properties that vary by instance type.
	Config map[string]interface{} `json:"config,omitempty"`
	// Stage Only, do not run the deploy right away and instead set status to staged so it can be deployed later on.
	StageOnly *bool `json:"stageOnly,omitempty"`
}

// NewAddInstanceDeployRequestAppDeploy instantiates a new AddInstanceDeployRequestAppDeploy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstanceDeployRequestAppDeploy() *AddInstanceDeployRequestAppDeploy {
	this := AddInstanceDeployRequestAppDeploy{}
	var stageOnly bool = false
	this.StageOnly = &stageOnly
	return &this
}

// NewAddInstanceDeployRequestAppDeployWithDefaults instantiates a new AddInstanceDeployRequestAppDeploy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstanceDeployRequestAppDeployWithDefaults() *AddInstanceDeployRequestAppDeploy {
	this := AddInstanceDeployRequestAppDeploy{}
	var stageOnly bool = false
	this.StageOnly = &stageOnly
	return &this
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *AddInstanceDeployRequestAppDeploy) GetDeploymentId() int64 {
	if o == nil || IsNil(o.DeploymentId) {
		var ret int64
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceDeployRequestAppDeploy) GetDeploymentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeploymentId) {
		return nil, false
	}
	return o.DeploymentId, true
}

// IsSetDeploymentId returns a boolean if a field has been set.
func (o *AddInstanceDeployRequestAppDeploy) IsSetDeploymentId() bool {
	if o != nil && !IsNil(o.DeploymentId) {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given int64 and assigns it to the DeploymentId field.
func (o *AddInstanceDeployRequestAppDeploy) SetDeploymentId(v int64) {
	o.DeploymentId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AddInstanceDeployRequestAppDeploy) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceDeployRequestAppDeploy) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// IsSetVersion returns a boolean if a field has been set.
func (o *AddInstanceDeployRequestAppDeploy) IsSetVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AddInstanceDeployRequestAppDeploy) SetVersion(v string) {
	o.Version = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *AddInstanceDeployRequestAppDeploy) GetVersionId() int64 {
	if o == nil || IsNil(o.VersionId) {
		var ret int64
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceDeployRequestAppDeploy) GetVersionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// IsSetVersionId returns a boolean if a field has been set.
func (o *AddInstanceDeployRequestAppDeploy) IsSetVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given int64 and assigns it to the VersionId field.
func (o *AddInstanceDeployRequestAppDeploy) SetVersionId(v int64) {
	o.VersionId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddInstanceDeployRequestAppDeploy) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceDeployRequestAppDeploy) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddInstanceDeployRequestAppDeploy) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *AddInstanceDeployRequestAppDeploy) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetStageOnly returns the StageOnly field value if set, zero value otherwise.
func (o *AddInstanceDeployRequestAppDeploy) GetStageOnly() bool {
	if o == nil || IsNil(o.StageOnly) {
		var ret bool
		return ret
	}
	return *o.StageOnly
}

// GetStageOnlyOk returns a tuple with the StageOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstanceDeployRequestAppDeploy) GetStageOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.StageOnly) {
		return nil, false
	}
	return o.StageOnly, true
}

// IsSetStageOnly returns a boolean if a field has been set.
func (o *AddInstanceDeployRequestAppDeploy) IsSetStageOnly() bool {
	if o != nil && !IsNil(o.StageOnly) {
		return true
	}

	return false
}

// SetStageOnly gets a reference to the given bool and assigns it to the StageOnly field.
func (o *AddInstanceDeployRequestAppDeploy) SetStageOnly(v bool) {
	o.StageOnly = &v
}

func (o AddInstanceDeployRequestAppDeploy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstanceDeployRequestAppDeploy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentId) {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.StageOnly) {
		toSerialize["stageOnly"] = o.StageOnly
	}
	return toSerialize, nil
}

type NullableAddInstanceDeployRequestAppDeploy struct {
	value *AddInstanceDeployRequestAppDeploy
	isSet bool
}

func (v NullableAddInstanceDeployRequestAppDeploy) Get() *AddInstanceDeployRequestAppDeploy {
	return v.value
}

func (v *NullableAddInstanceDeployRequestAppDeploy) Set(val *AddInstanceDeployRequestAppDeploy) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInstanceDeployRequestAppDeploy) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInstanceDeployRequestAppDeploy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInstanceDeployRequestAppDeploy(val *AddInstanceDeployRequestAppDeploy) *NullableAddInstanceDeployRequestAppDeploy {
	return &NullableAddInstanceDeployRequestAppDeploy{value: val, isSet: true}
}

func (v NullableAddInstanceDeployRequestAppDeploy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInstanceDeployRequestAppDeploy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


