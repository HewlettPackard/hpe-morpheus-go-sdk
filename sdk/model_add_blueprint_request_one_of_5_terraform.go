/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddBlueprintRequestOneOf5Terraform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOf5Terraform{}

// AddBlueprintRequestOneOf5Terraform struct for AddBlueprintRequestOneOf5Terraform
type AddBlueprintRequestOneOf5Terraform struct {
	// Configuration Type
	ConfigType string `json:"configType"`
	// Terraform definition in JSON for `configType` `json`
	Json *string `json:"json,omitempty"`
	// Terraform definition for `configType` `tf`
	Tf *string `json:"tf,omitempty"`
	Git *AddBlueprintRequestOneOf5TerraformGit `json:"git,omitempty"`
	// tfvar secret from Morpheus Cypher
	TfvarSecret *string `json:"tfvarSecret,omitempty"`
}

type _AddBlueprintRequestOneOf5Terraform AddBlueprintRequestOneOf5Terraform

// NewAddBlueprintRequestOneOf5Terraform instantiates a new AddBlueprintRequestOneOf5Terraform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOf5Terraform(configType string) *AddBlueprintRequestOneOf5Terraform {
	this := AddBlueprintRequestOneOf5Terraform{}
	this.ConfigType = configType
	return &this
}

// NewAddBlueprintRequestOneOf5TerraformWithDefaults instantiates a new AddBlueprintRequestOneOf5Terraform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOf5TerraformWithDefaults() *AddBlueprintRequestOneOf5Terraform {
	this := AddBlueprintRequestOneOf5Terraform{}
	return &this
}

// GetConfigType returns the ConfigType field value
func (o *AddBlueprintRequestOneOf5Terraform) GetConfigType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigType
}

// GetConfigTypeOk returns a tuple with the ConfigType field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5Terraform) GetConfigTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigType, true
}

// SetConfigType sets field value
func (o *AddBlueprintRequestOneOf5Terraform) SetConfigType(v string) {
	o.ConfigType = v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf5Terraform) GetJson() string {
	if o == nil || IsNil(o.Json) {
		var ret string
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5Terraform) GetJsonOk() (*string, bool) {
	if o == nil || IsNil(o.Json) {
		return nil, false
	}
	return o.Json, true
}

// IsSetJson returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf5Terraform) IsSetJson() bool {
	if o != nil && !IsNil(o.Json) {
		return true
	}

	return false
}

// SetJson gets a reference to the given string and assigns it to the Json field.
func (o *AddBlueprintRequestOneOf5Terraform) SetJson(v string) {
	o.Json = &v
}

// GetTf returns the Tf field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf5Terraform) GetTf() string {
	if o == nil || IsNil(o.Tf) {
		var ret string
		return ret
	}
	return *o.Tf
}

// GetTfOk returns a tuple with the Tf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5Terraform) GetTfOk() (*string, bool) {
	if o == nil || IsNil(o.Tf) {
		return nil, false
	}
	return o.Tf, true
}

// IsSetTf returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf5Terraform) IsSetTf() bool {
	if o != nil && !IsNil(o.Tf) {
		return true
	}

	return false
}

// SetTf gets a reference to the given string and assigns it to the Tf field.
func (o *AddBlueprintRequestOneOf5Terraform) SetTf(v string) {
	o.Tf = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf5Terraform) GetGit() AddBlueprintRequestOneOf5TerraformGit {
	if o == nil || IsNil(o.Git) {
		var ret AddBlueprintRequestOneOf5TerraformGit
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5Terraform) GetGitOk() (*AddBlueprintRequestOneOf5TerraformGit, bool) {
	if o == nil || IsNil(o.Git) {
		return nil, false
	}
	return o.Git, true
}

// IsSetGit returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf5Terraform) IsSetGit() bool {
	if o != nil && !IsNil(o.Git) {
		return true
	}

	return false
}

// SetGit gets a reference to the given AddBlueprintRequestOneOf5TerraformGit and assigns it to the Git field.
func (o *AddBlueprintRequestOneOf5Terraform) SetGit(v AddBlueprintRequestOneOf5TerraformGit) {
	o.Git = &v
}

// GetTfvarSecret returns the TfvarSecret field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf5Terraform) GetTfvarSecret() string {
	if o == nil || IsNil(o.TfvarSecret) {
		var ret string
		return ret
	}
	return *o.TfvarSecret
}

// GetTfvarSecretOk returns a tuple with the TfvarSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5Terraform) GetTfvarSecretOk() (*string, bool) {
	if o == nil || IsNil(o.TfvarSecret) {
		return nil, false
	}
	return o.TfvarSecret, true
}

// IsSetTfvarSecret returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf5Terraform) IsSetTfvarSecret() bool {
	if o != nil && !IsNil(o.TfvarSecret) {
		return true
	}

	return false
}

// SetTfvarSecret gets a reference to the given string and assigns it to the TfvarSecret field.
func (o *AddBlueprintRequestOneOf5Terraform) SetTfvarSecret(v string) {
	o.TfvarSecret = &v
}

func (o AddBlueprintRequestOneOf5Terraform) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOf5Terraform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configType"] = o.ConfigType
	if !IsNil(o.Json) {
		toSerialize["json"] = o.Json
	}
	if !IsNil(o.Tf) {
		toSerialize["tf"] = o.Tf
	}
	if !IsNil(o.Git) {
		toSerialize["git"] = o.Git
	}
	if !IsNil(o.TfvarSecret) {
		toSerialize["tfvarSecret"] = o.TfvarSecret
	}
	return toSerialize, nil
}

func (o *AddBlueprintRequestOneOf5Terraform) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"configType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBlueprintRequestOneOf5Terraform := _AddBlueprintRequestOneOf5Terraform{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddBlueprintRequestOneOf5Terraform)

	if err != nil {
		return err
	}

	*o = AddBlueprintRequestOneOf5Terraform(varAddBlueprintRequestOneOf5Terraform)

	return err
}

type NullableAddBlueprintRequestOneOf5Terraform struct {
	value *AddBlueprintRequestOneOf5Terraform
	isSet bool
}

func (v NullableAddBlueprintRequestOneOf5Terraform) Get() *AddBlueprintRequestOneOf5Terraform {
	return v.value
}

func (v *NullableAddBlueprintRequestOneOf5Terraform) Set(val *AddBlueprintRequestOneOf5Terraform) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequestOneOf5Terraform) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequestOneOf5Terraform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequestOneOf5Terraform(val *AddBlueprintRequestOneOf5Terraform) *NullableAddBlueprintRequestOneOf5Terraform {
	return &NullableAddBlueprintRequestOneOf5Terraform{value: val, isSet: true}
}

func (v NullableAddBlueprintRequestOneOf5Terraform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequestOneOf5Terraform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


