/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the Whoami200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Whoami200Response{}

// Whoami200Response struct for Whoami200Response
type Whoami200Response struct {
	User *AddUserTenant200ResponseAllOfUser `json:"user,omitempty"`
	IsMasterAccount *bool `json:"isMasterAccount,omitempty"`
	Permissions []Whoami200ResponsePermissionsInner `json:"permissions,omitempty"`
	Appliance *Whoami200ResponseAppliance `json:"appliance,omitempty"`
}

// NewWhoami200Response instantiates a new Whoami200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhoami200Response() *Whoami200Response {
	this := Whoami200Response{}
	return &this
}

// NewWhoami200ResponseWithDefaults instantiates a new Whoami200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhoami200ResponseWithDefaults() *Whoami200Response {
	this := Whoami200Response{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Whoami200Response) GetUser() AddUserTenant200ResponseAllOfUser {
	if o == nil || IsNil(o.User) {
		var ret AddUserTenant200ResponseAllOfUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Whoami200Response) GetUserOk() (*AddUserTenant200ResponseAllOfUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *Whoami200Response) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AddUserTenant200ResponseAllOfUser and assigns it to the User field.
func (o *Whoami200Response) SetUser(v AddUserTenant200ResponseAllOfUser) {
	o.User = &v
}

// GetIsMasterAccount returns the IsMasterAccount field value if set, zero value otherwise.
func (o *Whoami200Response) GetIsMasterAccount() bool {
	if o == nil || IsNil(o.IsMasterAccount) {
		var ret bool
		return ret
	}
	return *o.IsMasterAccount
}

// GetIsMasterAccountOk returns a tuple with the IsMasterAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Whoami200Response) GetIsMasterAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMasterAccount) {
		return nil, false
	}
	return o.IsMasterAccount, true
}

// IsSetIsMasterAccount returns a boolean if a field has been set.
func (o *Whoami200Response) IsSetIsMasterAccount() bool {
	if o != nil && !IsNil(o.IsMasterAccount) {
		return true
	}

	return false
}

// SetIsMasterAccount gets a reference to the given bool and assigns it to the IsMasterAccount field.
func (o *Whoami200Response) SetIsMasterAccount(v bool) {
	o.IsMasterAccount = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *Whoami200Response) GetPermissions() []Whoami200ResponsePermissionsInner {
	if o == nil || IsNil(o.Permissions) {
		var ret []Whoami200ResponsePermissionsInner
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Whoami200Response) GetPermissionsOk() ([]Whoami200ResponsePermissionsInner, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// IsSetPermissions returns a boolean if a field has been set.
func (o *Whoami200Response) IsSetPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Whoami200ResponsePermissionsInner and assigns it to the Permissions field.
func (o *Whoami200Response) SetPermissions(v []Whoami200ResponsePermissionsInner) {
	o.Permissions = v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *Whoami200Response) GetAppliance() Whoami200ResponseAppliance {
	if o == nil || IsNil(o.Appliance) {
		var ret Whoami200ResponseAppliance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Whoami200Response) GetApplianceOk() (*Whoami200ResponseAppliance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// IsSetAppliance returns a boolean if a field has been set.
func (o *Whoami200Response) IsSetAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given Whoami200ResponseAppliance and assigns it to the Appliance field.
func (o *Whoami200Response) SetAppliance(v Whoami200ResponseAppliance) {
	o.Appliance = &v
}

func (o Whoami200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Whoami200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.IsMasterAccount) {
		toSerialize["isMasterAccount"] = o.IsMasterAccount
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	return toSerialize, nil
}

type NullableWhoami200Response struct {
	value *Whoami200Response
	isSet bool
}

func (v NullableWhoami200Response) Get() *Whoami200Response {
	return v.value
}

func (v *NullableWhoami200Response) Set(val *Whoami200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableWhoami200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableWhoami200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhoami200Response(val *Whoami200Response) *NullableWhoami200Response {
	return &NullableWhoami200Response{value: val, isSet: true}
}

func (v NullableWhoami200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhoami200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


