/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListTasks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTasks200Response{}

// ListTasks200Response struct for ListTasks200Response
type ListTasks200Response struct {
	Tasks []ListTasks200ResponseAllOfTasksInner `json:"tasks,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListTasks200Response instantiates a new ListTasks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTasks200Response() *ListTasks200Response {
	this := ListTasks200Response{}
	return &this
}

// NewListTasks200ResponseWithDefaults instantiates a new ListTasks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTasks200ResponseWithDefaults() *ListTasks200Response {
	this := ListTasks200Response{}
	return &this
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ListTasks200Response) GetTasks() []ListTasks200ResponseAllOfTasksInner {
	if o == nil || IsNil(o.Tasks) {
		var ret []ListTasks200ResponseAllOfTasksInner
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200Response) GetTasksOk() ([]ListTasks200ResponseAllOfTasksInner, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// IsSetTasks returns a boolean if a field has been set.
func (o *ListTasks200Response) IsSetTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []ListTasks200ResponseAllOfTasksInner and assigns it to the Tasks field.
func (o *ListTasks200Response) SetTasks(v []ListTasks200ResponseAllOfTasksInner) {
	o.Tasks = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListTasks200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTasks200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListTasks200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListTasks200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListTasks200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTasks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListTasks200Response struct {
	value *ListTasks200Response
	isSet bool
}

func (v NullableListTasks200Response) Get() *ListTasks200Response {
	return v.value
}

func (v *NullableListTasks200Response) Set(val *ListTasks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200Response(val *ListTasks200Response) *NullableListTasks200Response {
	return &NullableListTasks200Response{value: val, isSet: true}
}

func (v NullableListTasks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


