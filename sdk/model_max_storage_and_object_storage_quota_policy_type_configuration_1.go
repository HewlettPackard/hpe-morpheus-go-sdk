/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1{}

// MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 Configuration settings for the following policy types: - Max Storage - Object Storage Quota 
type MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 struct {
	MaxStorage *string `json:"maxStorage,omitempty"`
	ExcludeContainers *bool `json:"excludeContainers,omitempty"`
}

// NewMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 instantiates a new MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1() *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 {
	this := MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1{}
	return &this
}

// NewMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1WithDefaults instantiates a new MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1WithDefaults() *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 {
	this := MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1{}
	return &this
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) GetMaxStorage() string {
	if o == nil || IsNil(o.MaxStorage) {
		var ret string
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) GetMaxStorageOk() (*string, bool) {
	if o == nil || IsNil(o.MaxStorage) {
		return nil, false
	}
	return o.MaxStorage, true
}

// IsSetMaxStorage returns a boolean if a field has been set.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) IsSetMaxStorage() bool {
	if o != nil && !IsNil(o.MaxStorage) {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given string and assigns it to the MaxStorage field.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) SetMaxStorage(v string) {
	o.MaxStorage = &v
}

// GetExcludeContainers returns the ExcludeContainers field value if set, zero value otherwise.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) GetExcludeContainers() bool {
	if o == nil || IsNil(o.ExcludeContainers) {
		var ret bool
		return ret
	}
	return *o.ExcludeContainers
}

// GetExcludeContainersOk returns a tuple with the ExcludeContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) GetExcludeContainersOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeContainers) {
		return nil, false
	}
	return o.ExcludeContainers, true
}

// IsSetExcludeContainers returns a boolean if a field has been set.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) IsSetExcludeContainers() bool {
	if o != nil && !IsNil(o.ExcludeContainers) {
		return true
	}

	return false
}

// SetExcludeContainers gets a reference to the given bool and assigns it to the ExcludeContainers field.
func (o *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) SetExcludeContainers(v bool) {
	o.ExcludeContainers = &v
}

func (o MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxStorage) {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if !IsNil(o.ExcludeContainers) {
		toSerialize["excludeContainers"] = o.ExcludeContainers
	}
	return toSerialize, nil
}

type NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 struct {
	value *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1
	isSet bool
}

func (v NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) Get() *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 {
	return v.value
}

func (v *NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) Set(val *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) {
	v.value = val
	v.isSet = true
}

func (v NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) IsSet() bool {
	return v.isSet
}

func (v *NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1(val *MaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) *NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1 {
	return &NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1{value: val, isSet: true}
}

func (v NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaxStorageAndObjectStorageQuotaPolicyTypeConfiguration1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


