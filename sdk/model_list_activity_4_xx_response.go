/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListActivity4XXResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListActivity4XXResponse{}

// ListActivity4XXResponse The standard response object that is returned when a request fails to complete successfully
type ListActivity4XXResponse struct {
	// Success indicator, true when the request succeeded and false when an error occurred
	Success *bool `json:"success,omitempty"`
	// Message containing a description of the result, usually a message about the error that occurred
	Msg *string `json:"msg,omitempty"`
	// Validation errors, with a key for Object containing error messages for each invalid parameter (key)
	Errors map[string]interface{} `json:"errors,omitempty"`
}

// NewListActivity4XXResponse instantiates a new ListActivity4XXResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListActivity4XXResponse() *ListActivity4XXResponse {
	this := ListActivity4XXResponse{}
	var success bool = true
	this.Success = &success
	return &this
}

// NewListActivity4XXResponseWithDefaults instantiates a new ListActivity4XXResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListActivity4XXResponseWithDefaults() *ListActivity4XXResponse {
	this := ListActivity4XXResponse{}
	var success bool = true
	this.Success = &success
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListActivity4XXResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListActivity4XXResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *ListActivity4XXResponse) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListActivity4XXResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *ListActivity4XXResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListActivity4XXResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// IsSetMsg returns a boolean if a field has been set.
func (o *ListActivity4XXResponse) IsSetMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *ListActivity4XXResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ListActivity4XXResponse) GetErrors() map[string]interface{} {
	if o == nil || IsNil(o.Errors) {
		var ret map[string]interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListActivity4XXResponse) GetErrorsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Errors) {
		return map[string]interface{}{}, false
	}
	return o.Errors, true
}

// IsSetErrors returns a boolean if a field has been set.
func (o *ListActivity4XXResponse) IsSetErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given map[string]interface{} and assigns it to the Errors field.
func (o *ListActivity4XXResponse) SetErrors(v map[string]interface{}) {
	o.Errors = v
}

func (o ListActivity4XXResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListActivity4XXResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableListActivity4XXResponse struct {
	value *ListActivity4XXResponse
	isSet bool
}

func (v NullableListActivity4XXResponse) Get() *ListActivity4XXResponse {
	return v.value
}

func (v *NullableListActivity4XXResponse) Set(val *ListActivity4XXResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListActivity4XXResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListActivity4XXResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListActivity4XXResponse(val *ListActivity4XXResponse) *NullableListActivity4XXResponse {
	return &NullableListActivity4XXResponse{value: val, isSet: true}
}

func (v NullableListActivity4XXResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListActivity4XXResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


