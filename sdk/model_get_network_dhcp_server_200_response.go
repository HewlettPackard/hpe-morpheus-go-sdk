/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkDhcpServer200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkDhcpServer200Response{}

// GetNetworkDhcpServer200Response struct for GetNetworkDhcpServer200Response
type GetNetworkDhcpServer200Response struct {
	NetworkDhcpServer    *GetNetworkDhcpServer200ResponseNetworkDhcpServer `json:"networkDhcpServer,omitempty"`
	AdditionalProperties map[string]interface{}                            `json:",remain"`
}

type _GetNetworkDhcpServer200Response GetNetworkDhcpServer200Response

// NewGetNetworkDhcpServer200Response instantiates a new GetNetworkDhcpServer200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkDhcpServer200Response() *GetNetworkDhcpServer200Response {
	this := GetNetworkDhcpServer200Response{}
	return &this
}

// NewGetNetworkDhcpServer200ResponseWithDefaults instantiates a new GetNetworkDhcpServer200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkDhcpServer200ResponseWithDefaults() *GetNetworkDhcpServer200Response {
	this := GetNetworkDhcpServer200Response{}
	return &this
}

// GetNetworkDhcpServer returns the NetworkDhcpServer field value if set, zero value otherwise.
func (o *GetNetworkDhcpServer200Response) GetNetworkDhcpServer() GetNetworkDhcpServer200ResponseNetworkDhcpServer {
	if o == nil || IsNil(o.NetworkDhcpServer) {
		var ret GetNetworkDhcpServer200ResponseNetworkDhcpServer
		return ret
	}
	return *o.NetworkDhcpServer
}

// GetNetworkDhcpServerOk returns a tuple with the NetworkDhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkDhcpServer200Response) GetNetworkDhcpServerOk() (*GetNetworkDhcpServer200ResponseNetworkDhcpServer, bool) {
	if o == nil || IsNil(o.NetworkDhcpServer) {
		return nil, false
	}
	return o.NetworkDhcpServer, true
}

// IsSetNetworkDhcpServer returns a boolean if a field has been set.
func (o *GetNetworkDhcpServer200Response) IsSetNetworkDhcpServer() bool {
	if o != nil && !IsNil(o.NetworkDhcpServer) {
		return true
	}

	return false
}

// SetNetworkDhcpServer gets a reference to the given GetNetworkDhcpServer200ResponseNetworkDhcpServer and assigns it to the NetworkDhcpServer field.
func (o *GetNetworkDhcpServer200Response) SetNetworkDhcpServer(v GetNetworkDhcpServer200ResponseNetworkDhcpServer) {
	o.NetworkDhcpServer = &v
}

func (o GetNetworkDhcpServer200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkDhcpServer200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkDhcpServer) {
		toSerialize["networkDhcpServer"] = o.NetworkDhcpServer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetNetworkDhcpServer200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
