/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddIntegrationsRequestOneOf4Integration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIntegrationsRequestOneOf4Integration{}

// AddIntegrationsRequestOneOf4Integration struct for AddIntegrationsRequestOneOf4Integration
type AddIntegrationsRequestOneOf4Integration struct {
	// Name, a unique identifier for the integration
	Name string `json:"name"`
	// Integration Type Code
	Type string `json:"type"`
	// Repository URL
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Username
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	// Password
	ServicePassword *string `json:"servicePassword,omitempty"`
	// Access Token
	ServiceToken *string `json:"serviceToken,omitempty"`
}

type _AddIntegrationsRequestOneOf4Integration AddIntegrationsRequestOneOf4Integration

// NewAddIntegrationsRequestOneOf4Integration instantiates a new AddIntegrationsRequestOneOf4Integration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIntegrationsRequestOneOf4Integration(name string, type_ string) *AddIntegrationsRequestOneOf4Integration {
	this := AddIntegrationsRequestOneOf4Integration{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewAddIntegrationsRequestOneOf4IntegrationWithDefaults instantiates a new AddIntegrationsRequestOneOf4Integration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIntegrationsRequestOneOf4IntegrationWithDefaults() *AddIntegrationsRequestOneOf4Integration {
	this := AddIntegrationsRequestOneOf4Integration{}
	return &this
}

// GetName returns the Name field value
func (o *AddIntegrationsRequestOneOf4Integration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddIntegrationsRequestOneOf4Integration) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AddIntegrationsRequestOneOf4Integration) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddIntegrationsRequestOneOf4Integration) SetType(v string) {
	o.Type = v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *AddIntegrationsRequestOneOf4Integration) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *AddIntegrationsRequestOneOf4Integration) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *AddIntegrationsRequestOneOf4Integration) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *AddIntegrationsRequestOneOf4Integration) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *AddIntegrationsRequestOneOf4Integration) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *AddIntegrationsRequestOneOf4Integration) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *AddIntegrationsRequestOneOf4Integration) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceToken() string {
	if o == nil || IsNil(o.ServiceToken) {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIntegrationsRequestOneOf4Integration) GetServiceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceToken) {
		return nil, false
	}
	return o.ServiceToken, true
}

// IsSetServiceToken returns a boolean if a field has been set.
func (o *AddIntegrationsRequestOneOf4Integration) IsSetServiceToken() bool {
	if o != nil && !IsNil(o.ServiceToken) {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *AddIntegrationsRequestOneOf4Integration) SetServiceToken(v string) {
	o.ServiceToken = &v
}

func (o AddIntegrationsRequestOneOf4Integration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIntegrationsRequestOneOf4Integration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.ServiceToken) {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	return toSerialize, nil
}

func (o *AddIntegrationsRequestOneOf4Integration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddIntegrationsRequestOneOf4Integration := _AddIntegrationsRequestOneOf4Integration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddIntegrationsRequestOneOf4Integration)

	if err != nil {
		return err
	}

	*o = AddIntegrationsRequestOneOf4Integration(varAddIntegrationsRequestOneOf4Integration)

	return err
}

type NullableAddIntegrationsRequestOneOf4Integration struct {
	value *AddIntegrationsRequestOneOf4Integration
	isSet bool
}

func (v NullableAddIntegrationsRequestOneOf4Integration) Get() *AddIntegrationsRequestOneOf4Integration {
	return v.value
}

func (v *NullableAddIntegrationsRequestOneOf4Integration) Set(val *AddIntegrationsRequestOneOf4Integration) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIntegrationsRequestOneOf4Integration) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIntegrationsRequestOneOf4Integration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIntegrationsRequestOneOf4Integration(val *AddIntegrationsRequestOneOf4Integration) *NullableAddIntegrationsRequestOneOf4Integration {
	return &NullableAddIntegrationsRequestOneOf4Integration{value: val, isSet: true}
}

func (v NullableAddIntegrationsRequestOneOf4Integration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIntegrationsRequestOneOf4Integration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


