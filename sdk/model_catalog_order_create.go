/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CatalogOrderCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogOrderCreate{}

// CatalogOrderCreate struct for CatalogOrderCreate
type CatalogOrderCreate struct {
	Items []AddCatalogOrderRequestOrderItemsInner `json:"items,omitempty"`
}

// NewCatalogOrderCreate instantiates a new CatalogOrderCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogOrderCreate() *CatalogOrderCreate {
	this := CatalogOrderCreate{}
	return &this
}

// NewCatalogOrderCreateWithDefaults instantiates a new CatalogOrderCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogOrderCreateWithDefaults() *CatalogOrderCreate {
	this := CatalogOrderCreate{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CatalogOrderCreate) GetItems() []AddCatalogOrderRequestOrderItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []AddCatalogOrderRequestOrderItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOrderCreate) GetItemsOk() ([]AddCatalogOrderRequestOrderItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// IsSetItems returns a boolean if a field has been set.
func (o *CatalogOrderCreate) IsSetItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AddCatalogOrderRequestOrderItemsInner and assigns it to the Items field.
func (o *CatalogOrderCreate) SetItems(v []AddCatalogOrderRequestOrderItemsInner) {
	o.Items = v
}

func (o CatalogOrderCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogOrderCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableCatalogOrderCreate struct {
	value *CatalogOrderCreate
	isSet bool
}

func (v NullableCatalogOrderCreate) Get() *CatalogOrderCreate {
	return v.value
}

func (v *NullableCatalogOrderCreate) Set(val *CatalogOrderCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogOrderCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogOrderCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogOrderCreate(val *CatalogOrderCreate) *NullableCatalogOrderCreate {
	return &NullableCatalogOrderCreate{value: val, isSet: true}
}

func (v NullableCatalogOrderCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogOrderCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


