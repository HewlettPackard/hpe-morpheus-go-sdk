/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetInstanceStats200ResponseInstanceStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceStats200ResponseInstanceStats{}

// GetInstanceStats200ResponseInstanceStats struct for GetInstanceStats200ResponseInstanceStats
type GetInstanceStats200ResponseInstanceStats struct {
	// Total CPUs for all instances
	MaxCpu *float32 `json:"maxCpu,omitempty"`
	// Total cores for all instances
	MaxCores *float32 `json:"maxCores,omitempty"`
	// Average current CPU Usage across all instances
	CpuUsageAverage *float32 `json:"cpuUsageAverage,omitempty"`
	// Max current CPU Usage across all instances
	CpuUsagePeak *float32 `json:"cpuUsagePeak,omitempty"`
	// Total used memory across all instances
	UsedMemory *float32 `json:"usedMemory,omitempty"`
	// Total memory across all instances
	MaxMemory *float32 `json:"maxMemory,omitempty"`
	// Total used storage total across all instances
	UsedStorage *float32 `json:"usedStorage,omitempty"`
	// Total storage across all instances
	MaxStorage *float32 `json:"maxStorage,omitempty"`
	// Total number of running instances
	Running *float32 `json:"running,omitempty"`
	// Total number of instances
	Total *float32 `json:"total,omitempty"`
	// Total number of containers across all instances
	TotalContainers *float32 `json:"totalContainers,omitempty"`
}

// NewGetInstanceStats200ResponseInstanceStats instantiates a new GetInstanceStats200ResponseInstanceStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceStats200ResponseInstanceStats() *GetInstanceStats200ResponseInstanceStats {
	this := GetInstanceStats200ResponseInstanceStats{}
	return &this
}

// NewGetInstanceStats200ResponseInstanceStatsWithDefaults instantiates a new GetInstanceStats200ResponseInstanceStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceStats200ResponseInstanceStatsWithDefaults() *GetInstanceStats200ResponseInstanceStats {
	this := GetInstanceStats200ResponseInstanceStats{}
	return &this
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxCpu() float32 {
	if o == nil || IsNil(o.MaxCpu) {
		var ret float32
		return ret
	}
	return *o.MaxCpu
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxCpuOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCpu) {
		return nil, false
	}
	return o.MaxCpu, true
}

// IsSetMaxCpu returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetMaxCpu() bool {
	if o != nil && !IsNil(o.MaxCpu) {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given float32 and assigns it to the MaxCpu field.
func (o *GetInstanceStats200ResponseInstanceStats) SetMaxCpu(v float32) {
	o.MaxCpu = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxCores() float32 {
	if o == nil || IsNil(o.MaxCores) {
		var ret float32
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxCoresOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCores) {
		return nil, false
	}
	return o.MaxCores, true
}

// IsSetMaxCores returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetMaxCores() bool {
	if o != nil && !IsNil(o.MaxCores) {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given float32 and assigns it to the MaxCores field.
func (o *GetInstanceStats200ResponseInstanceStats) SetMaxCores(v float32) {
	o.MaxCores = &v
}

// GetCpuUsageAverage returns the CpuUsageAverage field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetCpuUsageAverage() float32 {
	if o == nil || IsNil(o.CpuUsageAverage) {
		var ret float32
		return ret
	}
	return *o.CpuUsageAverage
}

// GetCpuUsageAverageOk returns a tuple with the CpuUsageAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetCpuUsageAverageOk() (*float32, bool) {
	if o == nil || IsNil(o.CpuUsageAverage) {
		return nil, false
	}
	return o.CpuUsageAverage, true
}

// IsSetCpuUsageAverage returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetCpuUsageAverage() bool {
	if o != nil && !IsNil(o.CpuUsageAverage) {
		return true
	}

	return false
}

// SetCpuUsageAverage gets a reference to the given float32 and assigns it to the CpuUsageAverage field.
func (o *GetInstanceStats200ResponseInstanceStats) SetCpuUsageAverage(v float32) {
	o.CpuUsageAverage = &v
}

// GetCpuUsagePeak returns the CpuUsagePeak field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetCpuUsagePeak() float32 {
	if o == nil || IsNil(o.CpuUsagePeak) {
		var ret float32
		return ret
	}
	return *o.CpuUsagePeak
}

// GetCpuUsagePeakOk returns a tuple with the CpuUsagePeak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetCpuUsagePeakOk() (*float32, bool) {
	if o == nil || IsNil(o.CpuUsagePeak) {
		return nil, false
	}
	return o.CpuUsagePeak, true
}

// IsSetCpuUsagePeak returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetCpuUsagePeak() bool {
	if o != nil && !IsNil(o.CpuUsagePeak) {
		return true
	}

	return false
}

// SetCpuUsagePeak gets a reference to the given float32 and assigns it to the CpuUsagePeak field.
func (o *GetInstanceStats200ResponseInstanceStats) SetCpuUsagePeak(v float32) {
	o.CpuUsagePeak = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetUsedMemory() float32 {
	if o == nil || IsNil(o.UsedMemory) {
		var ret float32
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetUsedMemoryOk() (*float32, bool) {
	if o == nil || IsNil(o.UsedMemory) {
		return nil, false
	}
	return o.UsedMemory, true
}

// IsSetUsedMemory returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetUsedMemory() bool {
	if o != nil && !IsNil(o.UsedMemory) {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given float32 and assigns it to the UsedMemory field.
func (o *GetInstanceStats200ResponseInstanceStats) SetUsedMemory(v float32) {
	o.UsedMemory = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxMemory() float32 {
	if o == nil || IsNil(o.MaxMemory) {
		var ret float32
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxMemoryOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxMemory) {
		return nil, false
	}
	return o.MaxMemory, true
}

// IsSetMaxMemory returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetMaxMemory() bool {
	if o != nil && !IsNil(o.MaxMemory) {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given float32 and assigns it to the MaxMemory field.
func (o *GetInstanceStats200ResponseInstanceStats) SetMaxMemory(v float32) {
	o.MaxMemory = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetUsedStorage() float32 {
	if o == nil || IsNil(o.UsedStorage) {
		var ret float32
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetUsedStorageOk() (*float32, bool) {
	if o == nil || IsNil(o.UsedStorage) {
		return nil, false
	}
	return o.UsedStorage, true
}

// IsSetUsedStorage returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetUsedStorage() bool {
	if o != nil && !IsNil(o.UsedStorage) {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given float32 and assigns it to the UsedStorage field.
func (o *GetInstanceStats200ResponseInstanceStats) SetUsedStorage(v float32) {
	o.UsedStorage = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxStorage() float32 {
	if o == nil || IsNil(o.MaxStorage) {
		var ret float32
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetMaxStorageOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxStorage) {
		return nil, false
	}
	return o.MaxStorage, true
}

// IsSetMaxStorage returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetMaxStorage() bool {
	if o != nil && !IsNil(o.MaxStorage) {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given float32 and assigns it to the MaxStorage field.
func (o *GetInstanceStats200ResponseInstanceStats) SetMaxStorage(v float32) {
	o.MaxStorage = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetRunning() float32 {
	if o == nil || IsNil(o.Running) {
		var ret float32
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetRunningOk() (*float32, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// IsSetRunning returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given float32 and assigns it to the Running field.
func (o *GetInstanceStats200ResponseInstanceStats) SetRunning(v float32) {
	o.Running = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// IsSetTotal returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetInstanceStats200ResponseInstanceStats) SetTotal(v float32) {
	o.Total = &v
}

// GetTotalContainers returns the TotalContainers field value if set, zero value otherwise.
func (o *GetInstanceStats200ResponseInstanceStats) GetTotalContainers() float32 {
	if o == nil || IsNil(o.TotalContainers) {
		var ret float32
		return ret
	}
	return *o.TotalContainers
}

// GetTotalContainersOk returns a tuple with the TotalContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceStats200ResponseInstanceStats) GetTotalContainersOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalContainers) {
		return nil, false
	}
	return o.TotalContainers, true
}

// IsSetTotalContainers returns a boolean if a field has been set.
func (o *GetInstanceStats200ResponseInstanceStats) IsSetTotalContainers() bool {
	if o != nil && !IsNil(o.TotalContainers) {
		return true
	}

	return false
}

// SetTotalContainers gets a reference to the given float32 and assigns it to the TotalContainers field.
func (o *GetInstanceStats200ResponseInstanceStats) SetTotalContainers(v float32) {
	o.TotalContainers = &v
}

func (o GetInstanceStats200ResponseInstanceStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceStats200ResponseInstanceStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxCpu) {
		toSerialize["maxCpu"] = o.MaxCpu
	}
	if !IsNil(o.MaxCores) {
		toSerialize["maxCores"] = o.MaxCores
	}
	if !IsNil(o.CpuUsageAverage) {
		toSerialize["cpuUsageAverage"] = o.CpuUsageAverage
	}
	if !IsNil(o.CpuUsagePeak) {
		toSerialize["cpuUsagePeak"] = o.CpuUsagePeak
	}
	if !IsNil(o.UsedMemory) {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	if !IsNil(o.MaxMemory) {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if !IsNil(o.UsedStorage) {
		toSerialize["usedStorage"] = o.UsedStorage
	}
	if !IsNil(o.MaxStorage) {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalContainers) {
		toSerialize["totalContainers"] = o.TotalContainers
	}
	return toSerialize, nil
}

type NullableGetInstanceStats200ResponseInstanceStats struct {
	value *GetInstanceStats200ResponseInstanceStats
	isSet bool
}

func (v NullableGetInstanceStats200ResponseInstanceStats) Get() *GetInstanceStats200ResponseInstanceStats {
	return v.value
}

func (v *NullableGetInstanceStats200ResponseInstanceStats) Set(val *GetInstanceStats200ResponseInstanceStats) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceStats200ResponseInstanceStats) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceStats200ResponseInstanceStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceStats200ResponseInstanceStats(val *GetInstanceStats200ResponseInstanceStats) *NullableGetInstanceStats200ResponseInstanceStats {
	return &NullableGetInstanceStats200ResponseInstanceStats{value: val, isSet: true}
}

func (v NullableGetInstanceStats200ResponseInstanceStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceStats200ResponseInstanceStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


