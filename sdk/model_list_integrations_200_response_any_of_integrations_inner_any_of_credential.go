/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential{}

// ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential struct for ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential
type ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Types []string `json:"types,omitempty"`
}

// NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential instantiates a new ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential {
	this := ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential{}
	return &this
}

// NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredentialWithDefaults instantiates a new ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredentialWithDefaults() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential {
	this := ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) SetType(v string) {
	o.Type = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// IsSetTypes returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) IsSetTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) SetTypes(v []string) {
	o.Types = v
}

func (o ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

type NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential struct {
	value *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential
	isSet bool
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) Get() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential {
	return v.value
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) Set(val *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential(val *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential {
	return &NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential{value: val, isSet: true}
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOfCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


