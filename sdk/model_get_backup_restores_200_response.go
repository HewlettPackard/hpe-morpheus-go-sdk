/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetBackupRestores200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBackupRestores200Response{}

// GetBackupRestores200Response struct for GetBackupRestores200Response
type GetBackupRestores200Response struct {
	Restore *ListBackupRestores200ResponseAllOfRestoresInner `json:"restore,omitempty"`
}

// NewGetBackupRestores200Response instantiates a new GetBackupRestores200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBackupRestores200Response() *GetBackupRestores200Response {
	this := GetBackupRestores200Response{}
	return &this
}

// NewGetBackupRestores200ResponseWithDefaults instantiates a new GetBackupRestores200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBackupRestores200ResponseWithDefaults() *GetBackupRestores200Response {
	this := GetBackupRestores200Response{}
	return &this
}

// GetRestore returns the Restore field value if set, zero value otherwise.
func (o *GetBackupRestores200Response) GetRestore() ListBackupRestores200ResponseAllOfRestoresInner {
	if o == nil || IsNil(o.Restore) {
		var ret ListBackupRestores200ResponseAllOfRestoresInner
		return ret
	}
	return *o.Restore
}

// GetRestoreOk returns a tuple with the Restore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBackupRestores200Response) GetRestoreOk() (*ListBackupRestores200ResponseAllOfRestoresInner, bool) {
	if o == nil || IsNil(o.Restore) {
		return nil, false
	}
	return o.Restore, true
}

// IsSetRestore returns a boolean if a field has been set.
func (o *GetBackupRestores200Response) IsSetRestore() bool {
	if o != nil && !IsNil(o.Restore) {
		return true
	}

	return false
}

// SetRestore gets a reference to the given ListBackupRestores200ResponseAllOfRestoresInner and assigns it to the Restore field.
func (o *GetBackupRestores200Response) SetRestore(v ListBackupRestores200ResponseAllOfRestoresInner) {
	o.Restore = &v
}

func (o GetBackupRestores200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBackupRestores200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Restore) {
		toSerialize["restore"] = o.Restore
	}
	return toSerialize, nil
}

type NullableGetBackupRestores200Response struct {
	value *GetBackupRestores200Response
	isSet bool
}

func (v NullableGetBackupRestores200Response) Get() *GetBackupRestores200Response {
	return v.value
}

func (v *NullableGetBackupRestores200Response) Set(val *GetBackupRestores200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBackupRestores200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBackupRestores200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBackupRestores200Response(val *GetBackupRestores200Response) *NullableGetBackupRestores200Response {
	return &NullableGetBackupRestores200Response{value: val, isSet: true}
}

func (v NullableGetBackupRestores200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBackupRestores200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


