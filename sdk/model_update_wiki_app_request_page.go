/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateWikiAppRequestPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWikiAppRequestPage{}

// UpdateWikiAppRequestPage struct for UpdateWikiAppRequestPage
type UpdateWikiAppRequestPage struct {
	Name *string `json:"name,omitempty"`
	Category *string `json:"category,omitempty"`
	Content *string `json:"content,omitempty"`
}

// NewUpdateWikiAppRequestPage instantiates a new UpdateWikiAppRequestPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWikiAppRequestPage() *UpdateWikiAppRequestPage {
	this := UpdateWikiAppRequestPage{}
	return &this
}

// NewUpdateWikiAppRequestPageWithDefaults instantiates a new UpdateWikiAppRequestPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWikiAppRequestPageWithDefaults() *UpdateWikiAppRequestPage {
	this := UpdateWikiAppRequestPage{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateWikiAppRequestPage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWikiAppRequestPage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateWikiAppRequestPage) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateWikiAppRequestPage) SetName(v string) {
	o.Name = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *UpdateWikiAppRequestPage) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWikiAppRequestPage) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *UpdateWikiAppRequestPage) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *UpdateWikiAppRequestPage) SetCategory(v string) {
	o.Category = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *UpdateWikiAppRequestPage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWikiAppRequestPage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// IsSetContent returns a boolean if a field has been set.
func (o *UpdateWikiAppRequestPage) IsSetContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *UpdateWikiAppRequestPage) SetContent(v string) {
	o.Content = &v
}

func (o UpdateWikiAppRequestPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWikiAppRequestPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullableUpdateWikiAppRequestPage struct {
	value *UpdateWikiAppRequestPage
	isSet bool
}

func (v NullableUpdateWikiAppRequestPage) Get() *UpdateWikiAppRequestPage {
	return v.value
}

func (v *NullableUpdateWikiAppRequestPage) Set(val *UpdateWikiAppRequestPage) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWikiAppRequestPage) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWikiAppRequestPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWikiAppRequestPage(val *UpdateWikiAppRequestPage) *NullableUpdateWikiAppRequestPage {
	return &NullableUpdateWikiAppRequestPage{value: val, isSet: true}
}

func (v NullableUpdateWikiAppRequestPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWikiAppRequestPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


