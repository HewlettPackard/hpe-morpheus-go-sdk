/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateMuteAllCheckAppsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMuteAllCheckAppsRequest{}

// UpdateMuteAllCheckAppsRequest struct for UpdateMuteAllCheckAppsRequest
type UpdateMuteAllCheckAppsRequest struct {
	// Set to false to unmute
	Muted bool `json:"muted"`
}

type _UpdateMuteAllCheckAppsRequest UpdateMuteAllCheckAppsRequest

// NewUpdateMuteAllCheckAppsRequest instantiates a new UpdateMuteAllCheckAppsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMuteAllCheckAppsRequest(muted bool) *UpdateMuteAllCheckAppsRequest {
	this := UpdateMuteAllCheckAppsRequest{}
	this.Muted = muted
	return &this
}

// NewUpdateMuteAllCheckAppsRequestWithDefaults instantiates a new UpdateMuteAllCheckAppsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMuteAllCheckAppsRequestWithDefaults() *UpdateMuteAllCheckAppsRequest {
	this := UpdateMuteAllCheckAppsRequest{}
	var muted bool = true
	this.Muted = muted
	return &this
}

// GetMuted returns the Muted field value
func (o *UpdateMuteAllCheckAppsRequest) GetMuted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Muted
}

// GetMutedOk returns a tuple with the Muted field value
// and a boolean to check if the value has been set.
func (o *UpdateMuteAllCheckAppsRequest) GetMutedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Muted, true
}

// SetMuted sets field value
func (o *UpdateMuteAllCheckAppsRequest) SetMuted(v bool) {
	o.Muted = v
}

func (o UpdateMuteAllCheckAppsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMuteAllCheckAppsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["muted"] = o.Muted
	return toSerialize, nil
}

func (o *UpdateMuteAllCheckAppsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"muted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateMuteAllCheckAppsRequest := _UpdateMuteAllCheckAppsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateMuteAllCheckAppsRequest)

	if err != nil {
		return err
	}

	*o = UpdateMuteAllCheckAppsRequest(varUpdateMuteAllCheckAppsRequest)

	return err
}

type NullableUpdateMuteAllCheckAppsRequest struct {
	value *UpdateMuteAllCheckAppsRequest
	isSet bool
}

func (v NullableUpdateMuteAllCheckAppsRequest) Get() *UpdateMuteAllCheckAppsRequest {
	return v.value
}

func (v *NullableUpdateMuteAllCheckAppsRequest) Set(val *UpdateMuteAllCheckAppsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMuteAllCheckAppsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMuteAllCheckAppsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMuteAllCheckAppsRequest(val *UpdateMuteAllCheckAppsRequest) *NullableUpdateMuteAllCheckAppsRequest {
	return &NullableUpdateMuteAllCheckAppsRequest{value: val, isSet: true}
}

func (v NullableUpdateMuteAllCheckAppsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMuteAllCheckAppsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


