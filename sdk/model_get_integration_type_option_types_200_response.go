/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetIntegrationTypeOptionTypes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegrationTypeOptionTypes200Response{}

// GetIntegrationTypeOptionTypes200Response struct for GetIntegrationTypeOptionTypes200Response
type GetIntegrationTypeOptionTypes200Response struct {
	OptionTypes []GetIntegrationTypeOptionTypes200ResponseOptionTypesInner `json:"optionTypes,omitempty"`
}

// NewGetIntegrationTypeOptionTypes200Response instantiates a new GetIntegrationTypeOptionTypes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegrationTypeOptionTypes200Response() *GetIntegrationTypeOptionTypes200Response {
	this := GetIntegrationTypeOptionTypes200Response{}
	return &this
}

// NewGetIntegrationTypeOptionTypes200ResponseWithDefaults instantiates a new GetIntegrationTypeOptionTypes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegrationTypeOptionTypes200ResponseWithDefaults() *GetIntegrationTypeOptionTypes200Response {
	this := GetIntegrationTypeOptionTypes200Response{}
	return &this
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *GetIntegrationTypeOptionTypes200Response) GetOptionTypes() []GetIntegrationTypeOptionTypes200ResponseOptionTypesInner {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []GetIntegrationTypeOptionTypes200ResponseOptionTypesInner
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegrationTypeOptionTypes200Response) GetOptionTypesOk() ([]GetIntegrationTypeOptionTypes200ResponseOptionTypesInner, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *GetIntegrationTypeOptionTypes200Response) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []GetIntegrationTypeOptionTypes200ResponseOptionTypesInner and assigns it to the OptionTypes field.
func (o *GetIntegrationTypeOptionTypes200Response) SetOptionTypes(v []GetIntegrationTypeOptionTypes200ResponseOptionTypesInner) {
	o.OptionTypes = v
}

func (o GetIntegrationTypeOptionTypes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegrationTypeOptionTypes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	return toSerialize, nil
}

type NullableGetIntegrationTypeOptionTypes200Response struct {
	value *GetIntegrationTypeOptionTypes200Response
	isSet bool
}

func (v NullableGetIntegrationTypeOptionTypes200Response) Get() *GetIntegrationTypeOptionTypes200Response {
	return v.value
}

func (v *NullableGetIntegrationTypeOptionTypes200Response) Set(val *GetIntegrationTypeOptionTypes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegrationTypeOptionTypes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegrationTypeOptionTypes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegrationTypeOptionTypes200Response(val *GetIntegrationTypeOptionTypes200Response) *NullableGetIntegrationTypeOptionTypes200Response {
	return &NullableGetIntegrationTypeOptionTypes200Response{value: val, isSet: true}
}

func (v NullableGetIntegrationTypeOptionTypes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegrationTypeOptionTypes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


