/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UserCreationPolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreationPolicyTypeConfiguration{}

// UserCreationPolicyTypeConfiguration Configuration settings for the following policy types: - User Creation 
type UserCreationPolicyTypeConfiguration struct {
	CreateUserType *string `json:"createUserType,omitempty"`
	CreateUser *bool `json:"createUser,omitempty"`
}

// NewUserCreationPolicyTypeConfiguration instantiates a new UserCreationPolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreationPolicyTypeConfiguration() *UserCreationPolicyTypeConfiguration {
	this := UserCreationPolicyTypeConfiguration{}
	return &this
}

// NewUserCreationPolicyTypeConfigurationWithDefaults instantiates a new UserCreationPolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreationPolicyTypeConfigurationWithDefaults() *UserCreationPolicyTypeConfiguration {
	this := UserCreationPolicyTypeConfiguration{}
	return &this
}

// GetCreateUserType returns the CreateUserType field value if set, zero value otherwise.
func (o *UserCreationPolicyTypeConfiguration) GetCreateUserType() string {
	if o == nil || IsNil(o.CreateUserType) {
		var ret string
		return ret
	}
	return *o.CreateUserType
}

// GetCreateUserTypeOk returns a tuple with the CreateUserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreationPolicyTypeConfiguration) GetCreateUserTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateUserType) {
		return nil, false
	}
	return o.CreateUserType, true
}

// IsSetCreateUserType returns a boolean if a field has been set.
func (o *UserCreationPolicyTypeConfiguration) IsSetCreateUserType() bool {
	if o != nil && !IsNil(o.CreateUserType) {
		return true
	}

	return false
}

// SetCreateUserType gets a reference to the given string and assigns it to the CreateUserType field.
func (o *UserCreationPolicyTypeConfiguration) SetCreateUserType(v string) {
	o.CreateUserType = &v
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *UserCreationPolicyTypeConfiguration) GetCreateUser() bool {
	if o == nil || IsNil(o.CreateUser) {
		var ret bool
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreationPolicyTypeConfiguration) GetCreateUserOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateUser) {
		return nil, false
	}
	return o.CreateUser, true
}

// IsSetCreateUser returns a boolean if a field has been set.
func (o *UserCreationPolicyTypeConfiguration) IsSetCreateUser() bool {
	if o != nil && !IsNil(o.CreateUser) {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given bool and assigns it to the CreateUser field.
func (o *UserCreationPolicyTypeConfiguration) SetCreateUser(v bool) {
	o.CreateUser = &v
}

func (o UserCreationPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreationPolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateUserType) {
		toSerialize["createUserType"] = o.CreateUserType
	}
	if !IsNil(o.CreateUser) {
		toSerialize["createUser"] = o.CreateUser
	}
	return toSerialize, nil
}

type NullableUserCreationPolicyTypeConfiguration struct {
	value *UserCreationPolicyTypeConfiguration
	isSet bool
}

func (v NullableUserCreationPolicyTypeConfiguration) Get() *UserCreationPolicyTypeConfiguration {
	return v.value
}

func (v *NullableUserCreationPolicyTypeConfiguration) Set(val *UserCreationPolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreationPolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreationPolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreationPolicyTypeConfiguration(val *UserCreationPolicyTypeConfiguration) *NullableUserCreationPolicyTypeConfiguration {
	return &NullableUserCreationPolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableUserCreationPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreationPolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


