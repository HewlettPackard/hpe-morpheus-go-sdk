/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateOptionListRequestOptionTypeList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOptionListRequestOptionTypeList{}

// UpdateOptionListRequestOptionTypeList struct for UpdateOptionListRequestOptionTypeList
type UpdateOptionListRequestOptionTypeList struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Option List Type eg. `rest`, `api`, `ldap` or `manual`.
	Type *string `json:"type,omitempty"`
	// Source URL, the http(s) URL to request data from. Required when type is rest.
	SourceUrl *string `json:"sourceUrl,omitempty"`
	// Visibility
	Visibility *string `json:"visibility,omitempty"`
	// Source Method, the HTTP method.
	SourceMethod *string `json:"sourceMethod,omitempty"`
	// Api Type, The code of the api option list to use, eg. clouds, environments, groups, instances, instance-wiki, networks, servicePlans, resourcePools, securityGroups, servers, server-wiki. Required when type is api.
	ApiType *string `json:"apiType,omitempty"`
	// Ignore SSL Errors.
	IgnoreSSLErrors *bool `json:"ignoreSSLErrors,omitempty"`
	// Real Time.
	RealTime *bool `json:"realTime,omitempty"`
	Credential *AddOptionListRequestOptionTypeListCredential `json:"credential,omitempty"`
	// Username for authenticating with Basic Auth when type is rest or ldap username.
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	// Password for authenticating with Basic Auth when type is rest or ldap password.
	ServicePassword *string `json:"servicePassword,omitempty"`
	// Initial Dataset. Create an initial JSON or CSV dataset to be used as the collection for this option list. It should be a list containing objects with properties 'name', and 'value'. Required when type is manual.
	InitialDataset *string `json:"initialDataset,omitempty"`
	// Translation Script. Create a js script to translate the result data object into an Array containing objects with properties 'name' and 'value'. The input data is provided as data and the result should be put on the global variable results.
	TranslationScript *string `json:"translationScript,omitempty"`
	// Request Script. Create a js script to prepare the request. Return a data object as the body for a post, and return an array containing properties 'name' and 'value' for a get. The input data is provided as data and the result should be put on the global variable results.
	RequestScript *string `json:"requestScript,omitempty"`
	Config *AddOptionListRequestOptionTypeListConfig `json:"config,omitempty"`
}

// NewUpdateOptionListRequestOptionTypeList instantiates a new UpdateOptionListRequestOptionTypeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOptionListRequestOptionTypeList() *UpdateOptionListRequestOptionTypeList {
	this := UpdateOptionListRequestOptionTypeList{}
	var type_ string = "rest"
	this.Type = &type_
	var visibility string = "private"
	this.Visibility = &visibility
	var sourceMethod string = "GET"
	this.SourceMethod = &sourceMethod
	var ignoreSSLErrors bool = false
	this.IgnoreSSLErrors = &ignoreSSLErrors
	var realTime bool = false
	this.RealTime = &realTime
	return &this
}

// NewUpdateOptionListRequestOptionTypeListWithDefaults instantiates a new UpdateOptionListRequestOptionTypeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOptionListRequestOptionTypeListWithDefaults() *UpdateOptionListRequestOptionTypeList {
	this := UpdateOptionListRequestOptionTypeList{}
	var type_ string = "rest"
	this.Type = &type_
	var visibility string = "private"
	this.Visibility = &visibility
	var sourceMethod string = "GET"
	this.SourceMethod = &sourceMethod
	var ignoreSSLErrors bool = false
	this.IgnoreSSLErrors = &ignoreSSLErrors
	var realTime bool = false
	this.RealTime = &realTime
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOptionListRequestOptionTypeList) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateOptionListRequestOptionTypeList) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateOptionListRequestOptionTypeList) SetLabels(v []string) {
	o.Labels = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateOptionListRequestOptionTypeList) SetType(v string) {
	o.Type = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetSourceUrl() string {
	if o == nil || IsNil(o.SourceUrl) {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetSourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUrl) {
		return nil, false
	}
	return o.SourceUrl, true
}

// IsSetSourceUrl returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetSourceUrl() bool {
	if o != nil && !IsNil(o.SourceUrl) {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *UpdateOptionListRequestOptionTypeList) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *UpdateOptionListRequestOptionTypeList) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSourceMethod returns the SourceMethod field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetSourceMethod() string {
	if o == nil || IsNil(o.SourceMethod) {
		var ret string
		return ret
	}
	return *o.SourceMethod
}

// GetSourceMethodOk returns a tuple with the SourceMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetSourceMethodOk() (*string, bool) {
	if o == nil || IsNil(o.SourceMethod) {
		return nil, false
	}
	return o.SourceMethod, true
}

// IsSetSourceMethod returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetSourceMethod() bool {
	if o != nil && !IsNil(o.SourceMethod) {
		return true
	}

	return false
}

// SetSourceMethod gets a reference to the given string and assigns it to the SourceMethod field.
func (o *UpdateOptionListRequestOptionTypeList) SetSourceMethod(v string) {
	o.SourceMethod = &v
}

// GetApiType returns the ApiType field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetApiType() string {
	if o == nil || IsNil(o.ApiType) {
		var ret string
		return ret
	}
	return *o.ApiType
}

// GetApiTypeOk returns a tuple with the ApiType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetApiTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApiType) {
		return nil, false
	}
	return o.ApiType, true
}

// IsSetApiType returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetApiType() bool {
	if o != nil && !IsNil(o.ApiType) {
		return true
	}

	return false
}

// SetApiType gets a reference to the given string and assigns it to the ApiType field.
func (o *UpdateOptionListRequestOptionTypeList) SetApiType(v string) {
	o.ApiType = &v
}

// GetIgnoreSSLErrors returns the IgnoreSSLErrors field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetIgnoreSSLErrors() bool {
	if o == nil || IsNil(o.IgnoreSSLErrors) {
		var ret bool
		return ret
	}
	return *o.IgnoreSSLErrors
}

// GetIgnoreSSLErrorsOk returns a tuple with the IgnoreSSLErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetIgnoreSSLErrorsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreSSLErrors) {
		return nil, false
	}
	return o.IgnoreSSLErrors, true
}

// IsSetIgnoreSSLErrors returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetIgnoreSSLErrors() bool {
	if o != nil && !IsNil(o.IgnoreSSLErrors) {
		return true
	}

	return false
}

// SetIgnoreSSLErrors gets a reference to the given bool and assigns it to the IgnoreSSLErrors field.
func (o *UpdateOptionListRequestOptionTypeList) SetIgnoreSSLErrors(v bool) {
	o.IgnoreSSLErrors = &v
}

// GetRealTime returns the RealTime field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetRealTime() bool {
	if o == nil || IsNil(o.RealTime) {
		var ret bool
		return ret
	}
	return *o.RealTime
}

// GetRealTimeOk returns a tuple with the RealTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetRealTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.RealTime) {
		return nil, false
	}
	return o.RealTime, true
}

// IsSetRealTime returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetRealTime() bool {
	if o != nil && !IsNil(o.RealTime) {
		return true
	}

	return false
}

// SetRealTime gets a reference to the given bool and assigns it to the RealTime field.
func (o *UpdateOptionListRequestOptionTypeList) SetRealTime(v bool) {
	o.RealTime = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetCredential() AddOptionListRequestOptionTypeListCredential {
	if o == nil || IsNil(o.Credential) {
		var ret AddOptionListRequestOptionTypeListCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetCredentialOk() (*AddOptionListRequestOptionTypeListCredential, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// IsSetCredential returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given AddOptionListRequestOptionTypeListCredential and assigns it to the Credential field.
func (o *UpdateOptionListRequestOptionTypeList) SetCredential(v AddOptionListRequestOptionTypeListCredential) {
	o.Credential = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *UpdateOptionListRequestOptionTypeList) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *UpdateOptionListRequestOptionTypeList) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetInitialDataset returns the InitialDataset field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetInitialDataset() string {
	if o == nil || IsNil(o.InitialDataset) {
		var ret string
		return ret
	}
	return *o.InitialDataset
}

// GetInitialDatasetOk returns a tuple with the InitialDataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetInitialDatasetOk() (*string, bool) {
	if o == nil || IsNil(o.InitialDataset) {
		return nil, false
	}
	return o.InitialDataset, true
}

// IsSetInitialDataset returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetInitialDataset() bool {
	if o != nil && !IsNil(o.InitialDataset) {
		return true
	}

	return false
}

// SetInitialDataset gets a reference to the given string and assigns it to the InitialDataset field.
func (o *UpdateOptionListRequestOptionTypeList) SetInitialDataset(v string) {
	o.InitialDataset = &v
}

// GetTranslationScript returns the TranslationScript field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetTranslationScript() string {
	if o == nil || IsNil(o.TranslationScript) {
		var ret string
		return ret
	}
	return *o.TranslationScript
}

// GetTranslationScriptOk returns a tuple with the TranslationScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetTranslationScriptOk() (*string, bool) {
	if o == nil || IsNil(o.TranslationScript) {
		return nil, false
	}
	return o.TranslationScript, true
}

// IsSetTranslationScript returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetTranslationScript() bool {
	if o != nil && !IsNil(o.TranslationScript) {
		return true
	}

	return false
}

// SetTranslationScript gets a reference to the given string and assigns it to the TranslationScript field.
func (o *UpdateOptionListRequestOptionTypeList) SetTranslationScript(v string) {
	o.TranslationScript = &v
}

// GetRequestScript returns the RequestScript field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetRequestScript() string {
	if o == nil || IsNil(o.RequestScript) {
		var ret string
		return ret
	}
	return *o.RequestScript
}

// GetRequestScriptOk returns a tuple with the RequestScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetRequestScriptOk() (*string, bool) {
	if o == nil || IsNil(o.RequestScript) {
		return nil, false
	}
	return o.RequestScript, true
}

// IsSetRequestScript returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetRequestScript() bool {
	if o != nil && !IsNil(o.RequestScript) {
		return true
	}

	return false
}

// SetRequestScript gets a reference to the given string and assigns it to the RequestScript field.
func (o *UpdateOptionListRequestOptionTypeList) SetRequestScript(v string) {
	o.RequestScript = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UpdateOptionListRequestOptionTypeList) GetConfig() AddOptionListRequestOptionTypeListConfig {
	if o == nil || IsNil(o.Config) {
		var ret AddOptionListRequestOptionTypeListConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOptionListRequestOptionTypeList) GetConfigOk() (*AddOptionListRequestOptionTypeListConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *UpdateOptionListRequestOptionTypeList) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddOptionListRequestOptionTypeListConfig and assigns it to the Config field.
func (o *UpdateOptionListRequestOptionTypeList) SetConfig(v AddOptionListRequestOptionTypeListConfig) {
	o.Config = &v
}

func (o UpdateOptionListRequestOptionTypeList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOptionListRequestOptionTypeList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SourceUrl) {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.SourceMethod) {
		toSerialize["sourceMethod"] = o.SourceMethod
	}
	if !IsNil(o.ApiType) {
		toSerialize["apiType"] = o.ApiType
	}
	if !IsNil(o.IgnoreSSLErrors) {
		toSerialize["ignoreSSLErrors"] = o.IgnoreSSLErrors
	}
	if !IsNil(o.RealTime) {
		toSerialize["realTime"] = o.RealTime
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.InitialDataset) {
		toSerialize["initialDataset"] = o.InitialDataset
	}
	if !IsNil(o.TranslationScript) {
		toSerialize["translationScript"] = o.TranslationScript
	}
	if !IsNil(o.RequestScript) {
		toSerialize["requestScript"] = o.RequestScript
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableUpdateOptionListRequestOptionTypeList struct {
	value *UpdateOptionListRequestOptionTypeList
	isSet bool
}

func (v NullableUpdateOptionListRequestOptionTypeList) Get() *UpdateOptionListRequestOptionTypeList {
	return v.value
}

func (v *NullableUpdateOptionListRequestOptionTypeList) Set(val *UpdateOptionListRequestOptionTypeList) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOptionListRequestOptionTypeList) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOptionListRequestOptionTypeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOptionListRequestOptionTypeList(val *UpdateOptionListRequestOptionTypeList) *NullableUpdateOptionListRequestOptionTypeList {
	return &NullableUpdateOptionListRequestOptionTypeList{value: val, isSet: true}
}

func (v NullableUpdateOptionListRequestOptionTypeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOptionListRequestOptionTypeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


