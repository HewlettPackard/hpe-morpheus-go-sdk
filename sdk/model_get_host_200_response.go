/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetHost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetHost200Response{}

// GetHost200Response struct for GetHost200Response
type GetHost200Response struct {
	Server *ListHosts200ResponseAllOfServersInner `json:"server,omitempty"`
	Stats map[string]interface{} `json:"stats,omitempty"`
}

// NewGetHost200Response instantiates a new GetHost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHost200Response() *GetHost200Response {
	this := GetHost200Response{}
	return &this
}

// NewGetHost200ResponseWithDefaults instantiates a new GetHost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHost200ResponseWithDefaults() *GetHost200Response {
	this := GetHost200Response{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *GetHost200Response) GetServer() ListHosts200ResponseAllOfServersInner {
	if o == nil || IsNil(o.Server) {
		var ret ListHosts200ResponseAllOfServersInner
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHost200Response) GetServerOk() (*ListHosts200ResponseAllOfServersInner, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// IsSetServer returns a boolean if a field has been set.
func (o *GetHost200Response) IsSetServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ListHosts200ResponseAllOfServersInner and assigns it to the Server field.
func (o *GetHost200Response) SetServer(v ListHosts200ResponseAllOfServersInner) {
	o.Server = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *GetHost200Response) GetStats() map[string]interface{} {
	if o == nil || IsNil(o.Stats) {
		var ret map[string]interface{}
		return ret
	}
	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHost200Response) GetStatsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Stats) {
		return map[string]interface{}{}, false
	}
	return o.Stats, true
}

// IsSetStats returns a boolean if a field has been set.
func (o *GetHost200Response) IsSetStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given map[string]interface{} and assigns it to the Stats field.
func (o *GetHost200Response) SetStats(v map[string]interface{}) {
	o.Stats = v
}

func (o GetHost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetHost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	return toSerialize, nil
}

type NullableGetHost200Response struct {
	value *GetHost200Response
	isSet bool
}

func (v NullableGetHost200Response) Get() *GetHost200Response {
	return v.value
}

func (v *NullableGetHost200Response) Set(val *GetHost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHost200Response(val *GetHost200Response) *NullableGetHost200Response {
	return &NullableGetHost200Response{value: val, isSet: true}
}

func (v NullableGetHost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


