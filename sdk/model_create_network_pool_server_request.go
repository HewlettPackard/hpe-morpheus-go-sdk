/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateNetworkPoolServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkPoolServerRequest{}

// CreateNetworkPoolServerRequest struct for CreateNetworkPoolServerRequest
type CreateNetworkPoolServerRequest struct {
	NetworkPoolServer    *CreateNetworkPoolServerRequestNetworkPoolServer `json:"networkPoolServer,omitempty"`
	AdditionalProperties map[string]interface{}                           `json:",remain"`
}

type _CreateNetworkPoolServerRequest CreateNetworkPoolServerRequest

// NewCreateNetworkPoolServerRequest instantiates a new CreateNetworkPoolServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkPoolServerRequest() *CreateNetworkPoolServerRequest {
	this := CreateNetworkPoolServerRequest{}
	return &this
}

// NewCreateNetworkPoolServerRequestWithDefaults instantiates a new CreateNetworkPoolServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkPoolServerRequestWithDefaults() *CreateNetworkPoolServerRequest {
	this := CreateNetworkPoolServerRequest{}
	return &this
}

// GetNetworkPoolServer returns the NetworkPoolServer field value if set, zero value otherwise.
func (o *CreateNetworkPoolServerRequest) GetNetworkPoolServer() CreateNetworkPoolServerRequestNetworkPoolServer {
	if o == nil || IsNil(o.NetworkPoolServer) {
		var ret CreateNetworkPoolServerRequestNetworkPoolServer
		return ret
	}
	return *o.NetworkPoolServer
}

// GetNetworkPoolServerOk returns a tuple with the NetworkPoolServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolServerRequest) GetNetworkPoolServerOk() (*CreateNetworkPoolServerRequestNetworkPoolServer, bool) {
	if o == nil || IsNil(o.NetworkPoolServer) {
		return nil, false
	}
	return o.NetworkPoolServer, true
}

// IsSetNetworkPoolServer returns a boolean if a field has been set.
func (o *CreateNetworkPoolServerRequest) IsSetNetworkPoolServer() bool {
	if o != nil && !IsNil(o.NetworkPoolServer) {
		return true
	}

	return false
}

// SetNetworkPoolServer gets a reference to the given CreateNetworkPoolServerRequestNetworkPoolServer and assigns it to the NetworkPoolServer field.
func (o *CreateNetworkPoolServerRequest) SetNetworkPoolServer(v CreateNetworkPoolServerRequestNetworkPoolServer) {
	o.NetworkPoolServer = &v
}

func (o CreateNetworkPoolServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkPoolServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkPoolServer) {
		toSerialize["networkPoolServer"] = o.NetworkPoolServer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *CreateNetworkPoolServerRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
