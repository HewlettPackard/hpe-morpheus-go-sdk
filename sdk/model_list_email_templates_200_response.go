/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListEmailTemplates200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListEmailTemplates200Response{}

// ListEmailTemplates200Response struct for ListEmailTemplates200Response
type ListEmailTemplates200Response struct {
	EmailTemplates []ListEmailTemplates200ResponseAllOfEmailTemplatesInner `json:"emailTemplates,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListEmailTemplates200Response instantiates a new ListEmailTemplates200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEmailTemplates200Response() *ListEmailTemplates200Response {
	this := ListEmailTemplates200Response{}
	return &this
}

// NewListEmailTemplates200ResponseWithDefaults instantiates a new ListEmailTemplates200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEmailTemplates200ResponseWithDefaults() *ListEmailTemplates200Response {
	this := ListEmailTemplates200Response{}
	return &this
}

// GetEmailTemplates returns the EmailTemplates field value if set, zero value otherwise.
func (o *ListEmailTemplates200Response) GetEmailTemplates() []ListEmailTemplates200ResponseAllOfEmailTemplatesInner {
	if o == nil || IsNil(o.EmailTemplates) {
		var ret []ListEmailTemplates200ResponseAllOfEmailTemplatesInner
		return ret
	}
	return o.EmailTemplates
}

// GetEmailTemplatesOk returns a tuple with the EmailTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEmailTemplates200Response) GetEmailTemplatesOk() ([]ListEmailTemplates200ResponseAllOfEmailTemplatesInner, bool) {
	if o == nil || IsNil(o.EmailTemplates) {
		return nil, false
	}
	return o.EmailTemplates, true
}

// IsSetEmailTemplates returns a boolean if a field has been set.
func (o *ListEmailTemplates200Response) IsSetEmailTemplates() bool {
	if o != nil && !IsNil(o.EmailTemplates) {
		return true
	}

	return false
}

// SetEmailTemplates gets a reference to the given []ListEmailTemplates200ResponseAllOfEmailTemplatesInner and assigns it to the EmailTemplates field.
func (o *ListEmailTemplates200Response) SetEmailTemplates(v []ListEmailTemplates200ResponseAllOfEmailTemplatesInner) {
	o.EmailTemplates = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListEmailTemplates200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEmailTemplates200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListEmailTemplates200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListEmailTemplates200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListEmailTemplates200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListEmailTemplates200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailTemplates) {
		toSerialize["emailTemplates"] = o.EmailTemplates
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListEmailTemplates200Response struct {
	value *ListEmailTemplates200Response
	isSet bool
}

func (v NullableListEmailTemplates200Response) Get() *ListEmailTemplates200Response {
	return v.value
}

func (v *NullableListEmailTemplates200Response) Set(val *ListEmailTemplates200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListEmailTemplates200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListEmailTemplates200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEmailTemplates200Response(val *ListEmailTemplates200Response) *NullableListEmailTemplates200Response {
	return &NullableListEmailTemplates200Response{value: val, isSet: true}
}

func (v NullableListEmailTemplates200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEmailTemplates200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


