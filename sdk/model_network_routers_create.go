/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkRoutersCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkRoutersCreate{}

// NetworkRoutersCreate struct for NetworkRoutersCreate
type NetworkRoutersCreate struct {
	// Name
	Name string `json:"name"`
	Type CreateNetworkRouterRequestNetworkRouterType `json:"type"`
	Site CreateNetworkRouterRequestNetworkRouterSite `json:"site"`
	// Can be used to enable / disable the network router (true, false). Default is on
	Enabled *bool `json:"enabled,omitempty"`
	Zone *CreateNetworkRouterRequestNetworkRouterZone `json:"zone,omitempty"`
	NetworkServer *CreateNetworkRouterRequestNetworkRouterNetworkServer `json:"networkServer,omitempty"`
}

type _NetworkRoutersCreate NetworkRoutersCreate

// NewNetworkRoutersCreate instantiates a new NetworkRoutersCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRoutersCreate(name string, type_ CreateNetworkRouterRequestNetworkRouterType, site CreateNetworkRouterRequestNetworkRouterSite) *NetworkRoutersCreate {
	this := NetworkRoutersCreate{}
	this.Name = name
	this.Type = type_
	this.Site = site
	return &this
}

// NewNetworkRoutersCreateWithDefaults instantiates a new NetworkRoutersCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRoutersCreateWithDefaults() *NetworkRoutersCreate {
	this := NetworkRoutersCreate{}
	return &this
}

// GetName returns the Name field value
func (o *NetworkRoutersCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkRoutersCreate) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *NetworkRoutersCreate) GetType() CreateNetworkRouterRequestNetworkRouterType {
	if o == nil {
		var ret CreateNetworkRouterRequestNetworkRouterType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetTypeOk() (*CreateNetworkRouterRequestNetworkRouterType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworkRoutersCreate) SetType(v CreateNetworkRouterRequestNetworkRouterType) {
	o.Type = v
}

// GetSite returns the Site field value
func (o *NetworkRoutersCreate) GetSite() CreateNetworkRouterRequestNetworkRouterSite {
	if o == nil {
		var ret CreateNetworkRouterRequestNetworkRouterSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetSiteOk() (*CreateNetworkRouterRequestNetworkRouterSite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *NetworkRoutersCreate) SetSite(v CreateNetworkRouterRequestNetworkRouterSite) {
	o.Site = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRoutersCreate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetZone() CreateNetworkRouterRequestNetworkRouterZone {
	if o == nil || IsNil(o.Zone) {
		var ret CreateNetworkRouterRequestNetworkRouterZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetZoneOk() (*CreateNetworkRouterRequestNetworkRouterZone, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// IsSetZone returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) IsSetZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given CreateNetworkRouterRequestNetworkRouterZone and assigns it to the Zone field.
func (o *NetworkRoutersCreate) SetZone(v CreateNetworkRouterRequestNetworkRouterZone) {
	o.Zone = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetNetworkServer() CreateNetworkRouterRequestNetworkRouterNetworkServer {
	if o == nil || IsNil(o.NetworkServer) {
		var ret CreateNetworkRouterRequestNetworkRouterNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetNetworkServerOk() (*CreateNetworkRouterRequestNetworkRouterNetworkServer, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given CreateNetworkRouterRequestNetworkRouterNetworkServer and assigns it to the NetworkServer field.
func (o *NetworkRoutersCreate) SetNetworkServer(v CreateNetworkRouterRequestNetworkRouterNetworkServer) {
	o.NetworkServer = &v
}

func (o NetworkRoutersCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkRoutersCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["site"] = o.Site
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	return toSerialize, nil
}

func (o *NetworkRoutersCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"site",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkRoutersCreate := _NetworkRoutersCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkRoutersCreate)

	if err != nil {
		return err
	}

	*o = NetworkRoutersCreate(varNetworkRoutersCreate)

	return err
}

type NullableNetworkRoutersCreate struct {
	value *NetworkRoutersCreate
	isSet bool
}

func (v NullableNetworkRoutersCreate) Get() *NetworkRoutersCreate {
	return v.value
}

func (v *NullableNetworkRoutersCreate) Set(val *NetworkRoutersCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRoutersCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRoutersCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRoutersCreate(val *NetworkRoutersCreate) *NullableNetworkRoutersCreate {
	return &NullableNetworkRoutersCreate{value: val, isSet: true}
}

func (v NullableNetworkRoutersCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRoutersCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


