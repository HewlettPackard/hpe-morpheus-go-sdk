/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetBudgets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBudgets200Response{}

// GetBudgets200Response struct for GetBudgets200Response
type GetBudgets200Response struct {
	Budget *GetBudgets200ResponseAllOfBudget `json:"budget,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewGetBudgets200Response instantiates a new GetBudgets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBudgets200Response() *GetBudgets200Response {
	this := GetBudgets200Response{}
	return &this
}

// NewGetBudgets200ResponseWithDefaults instantiates a new GetBudgets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBudgets200ResponseWithDefaults() *GetBudgets200Response {
	this := GetBudgets200Response{}
	return &this
}

// GetBudget returns the Budget field value if set, zero value otherwise.
func (o *GetBudgets200Response) GetBudget() GetBudgets200ResponseAllOfBudget {
	if o == nil || IsNil(o.Budget) {
		var ret GetBudgets200ResponseAllOfBudget
		return ret
	}
	return *o.Budget
}

// GetBudgetOk returns a tuple with the Budget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBudgets200Response) GetBudgetOk() (*GetBudgets200ResponseAllOfBudget, bool) {
	if o == nil || IsNil(o.Budget) {
		return nil, false
	}
	return o.Budget, true
}

// IsSetBudget returns a boolean if a field has been set.
func (o *GetBudgets200Response) IsSetBudget() bool {
	if o != nil && !IsNil(o.Budget) {
		return true
	}

	return false
}

// SetBudget gets a reference to the given GetBudgets200ResponseAllOfBudget and assigns it to the Budget field.
func (o *GetBudgets200Response) SetBudget(v GetBudgets200ResponseAllOfBudget) {
	o.Budget = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *GetBudgets200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBudgets200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *GetBudgets200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *GetBudgets200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o GetBudgets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBudgets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Budget) {
		toSerialize["budget"] = o.Budget
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableGetBudgets200Response struct {
	value *GetBudgets200Response
	isSet bool
}

func (v NullableGetBudgets200Response) Get() *GetBudgets200Response {
	return v.value
}

func (v *NullableGetBudgets200Response) Set(val *GetBudgets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBudgets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBudgets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBudgets200Response(val *GetBudgets200Response) *NullableGetBudgets200Response {
	return &NullableGetBudgets200Response{value: val, isSet: true}
}

func (v NullableGetBudgets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBudgets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


