/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetUserGroup200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserGroup200Response{}

// GetUserGroup200Response struct for GetUserGroup200Response
type GetUserGroup200Response struct {
	UserGroup *ListUserGroups200ResponseAllOfUserGroupsInner `json:"userGroup,omitempty"`
}

// NewGetUserGroup200Response instantiates a new GetUserGroup200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserGroup200Response() *GetUserGroup200Response {
	this := GetUserGroup200Response{}
	return &this
}

// NewGetUserGroup200ResponseWithDefaults instantiates a new GetUserGroup200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserGroup200ResponseWithDefaults() *GetUserGroup200Response {
	this := GetUserGroup200Response{}
	return &this
}

// GetUserGroup returns the UserGroup field value if set, zero value otherwise.
func (o *GetUserGroup200Response) GetUserGroup() ListUserGroups200ResponseAllOfUserGroupsInner {
	if o == nil || IsNil(o.UserGroup) {
		var ret ListUserGroups200ResponseAllOfUserGroupsInner
		return ret
	}
	return *o.UserGroup
}

// GetUserGroupOk returns a tuple with the UserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserGroup200Response) GetUserGroupOk() (*ListUserGroups200ResponseAllOfUserGroupsInner, bool) {
	if o == nil || IsNil(o.UserGroup) {
		return nil, false
	}
	return o.UserGroup, true
}

// IsSetUserGroup returns a boolean if a field has been set.
func (o *GetUserGroup200Response) IsSetUserGroup() bool {
	if o != nil && !IsNil(o.UserGroup) {
		return true
	}

	return false
}

// SetUserGroup gets a reference to the given ListUserGroups200ResponseAllOfUserGroupsInner and assigns it to the UserGroup field.
func (o *GetUserGroup200Response) SetUserGroup(v ListUserGroups200ResponseAllOfUserGroupsInner) {
	o.UserGroup = &v
}

func (o GetUserGroup200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserGroup200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserGroup) {
		toSerialize["userGroup"] = o.UserGroup
	}
	return toSerialize, nil
}

type NullableGetUserGroup200Response struct {
	value *GetUserGroup200Response
	isSet bool
}

func (v NullableGetUserGroup200Response) Get() *GetUserGroup200Response {
	return v.value
}

func (v *NullableGetUserGroup200Response) Set(val *GetUserGroup200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserGroup200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserGroup200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserGroup200Response(val *GetUserGroup200Response) *NullableGetUserGroup200Response {
	return &NullableGetUserGroup200Response{value: val, isSet: true}
}

func (v NullableGetUserGroup200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserGroup200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


