/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListPrices200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPrices200Response{}

// ListPrices200Response struct for ListPrices200Response
type ListPrices200Response struct {
	Prices []ListPrices200ResponseAllOfPricesInner `json:"prices,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListPrices200Response instantiates a new ListPrices200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPrices200Response() *ListPrices200Response {
	this := ListPrices200Response{}
	return &this
}

// NewListPrices200ResponseWithDefaults instantiates a new ListPrices200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPrices200ResponseWithDefaults() *ListPrices200Response {
	this := ListPrices200Response{}
	return &this
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *ListPrices200Response) GetPrices() []ListPrices200ResponseAllOfPricesInner {
	if o == nil || IsNil(o.Prices) {
		var ret []ListPrices200ResponseAllOfPricesInner
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrices200Response) GetPricesOk() ([]ListPrices200ResponseAllOfPricesInner, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// IsSetPrices returns a boolean if a field has been set.
func (o *ListPrices200Response) IsSetPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []ListPrices200ResponseAllOfPricesInner and assigns it to the Prices field.
func (o *ListPrices200Response) SetPrices(v []ListPrices200ResponseAllOfPricesInner) {
	o.Prices = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListPrices200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrices200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListPrices200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListPrices200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListPrices200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPrices200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListPrices200Response struct {
	value *ListPrices200Response
	isSet bool
}

func (v NullableListPrices200Response) Get() *ListPrices200Response {
	return v.value
}

func (v *NullableListPrices200Response) Set(val *ListPrices200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListPrices200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListPrices200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPrices200Response(val *ListPrices200Response) *NullableListPrices200Response {
	return &NullableListPrices200Response{value: val, isSet: true}
}

func (v NullableListPrices200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPrices200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


