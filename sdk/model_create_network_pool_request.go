/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateNetworkPoolRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkPoolRequest{}

// CreateNetworkPoolRequest struct for CreateNetworkPoolRequest
type CreateNetworkPoolRequest struct {
	NetworkPool          *CreateNetworkPoolRequestNetworkPool `json:"networkPool,omitempty"`
	AdditionalProperties map[string]interface{}               `json:",remain"`
}

type _CreateNetworkPoolRequest CreateNetworkPoolRequest

// NewCreateNetworkPoolRequest instantiates a new CreateNetworkPoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkPoolRequest() *CreateNetworkPoolRequest {
	this := CreateNetworkPoolRequest{}
	return &this
}

// NewCreateNetworkPoolRequestWithDefaults instantiates a new CreateNetworkPoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkPoolRequestWithDefaults() *CreateNetworkPoolRequest {
	this := CreateNetworkPoolRequest{}
	return &this
}

// GetNetworkPool returns the NetworkPool field value if set, zero value otherwise.
func (o *CreateNetworkPoolRequest) GetNetworkPool() CreateNetworkPoolRequestNetworkPool {
	if o == nil || IsNil(o.NetworkPool) {
		var ret CreateNetworkPoolRequestNetworkPool
		return ret
	}
	return *o.NetworkPool
}

// GetNetworkPoolOk returns a tuple with the NetworkPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkPoolRequest) GetNetworkPoolOk() (*CreateNetworkPoolRequestNetworkPool, bool) {
	if o == nil || IsNil(o.NetworkPool) {
		return nil, false
	}
	return o.NetworkPool, true
}

// IsSetNetworkPool returns a boolean if a field has been set.
func (o *CreateNetworkPoolRequest) IsSetNetworkPool() bool {
	if o != nil && !IsNil(o.NetworkPool) {
		return true
	}

	return false
}

// SetNetworkPool gets a reference to the given CreateNetworkPoolRequestNetworkPool and assigns it to the NetworkPool field.
func (o *CreateNetworkPoolRequest) SetNetworkPool(v CreateNetworkPoolRequestNetworkPool) {
	o.NetworkPool = &v
}

func (o CreateNetworkPoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkPoolRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkPool) {
		toSerialize["networkPool"] = o.NetworkPool
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *CreateNetworkPoolRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
