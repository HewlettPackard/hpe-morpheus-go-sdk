/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetOsType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOsType200Response{}

// GetOsType200Response struct for GetOsType200Response
type GetOsType200Response struct {
	OsType *ListOsTypes200ResponseAllOfOsTypesInner `json:"osType,omitempty"`
}

// NewGetOsType200Response instantiates a new GetOsType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOsType200Response() *GetOsType200Response {
	this := GetOsType200Response{}
	return &this
}

// NewGetOsType200ResponseWithDefaults instantiates a new GetOsType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOsType200ResponseWithDefaults() *GetOsType200Response {
	this := GetOsType200Response{}
	return &this
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *GetOsType200Response) GetOsType() ListOsTypes200ResponseAllOfOsTypesInner {
	if o == nil || IsNil(o.OsType) {
		var ret ListOsTypes200ResponseAllOfOsTypesInner
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOsType200Response) GetOsTypeOk() (*ListOsTypes200ResponseAllOfOsTypesInner, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// IsSetOsType returns a boolean if a field has been set.
func (o *GetOsType200Response) IsSetOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given ListOsTypes200ResponseAllOfOsTypesInner and assigns it to the OsType field.
func (o *GetOsType200Response) SetOsType(v ListOsTypes200ResponseAllOfOsTypesInner) {
	o.OsType = &v
}

func (o GetOsType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOsType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	return toSerialize, nil
}

type NullableGetOsType200Response struct {
	value *GetOsType200Response
	isSet bool
}

func (v NullableGetOsType200Response) Get() *GetOsType200Response {
	return v.value
}

func (v *NullableGetOsType200Response) Set(val *GetOsType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOsType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOsType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOsType200Response(val *GetOsType200Response) *NullableGetOsType200Response {
	return &NullableGetOsType200Response{value: val, isSet: true}
}

func (v NullableGetOsType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOsType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


