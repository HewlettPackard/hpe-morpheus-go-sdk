/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRoleRequest{}

// UpdateRoleRequest struct for UpdateRoleRequest
type UpdateRoleRequest struct {
	Role                 UpdateRoleRequestRole  `json:"role"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _UpdateRoleRequest UpdateRoleRequest

// NewUpdateRoleRequest instantiates a new UpdateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoleRequest(role UpdateRoleRequestRole) *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	this.Role = role
	return &this
}

// NewUpdateRoleRequestWithDefaults instantiates a new UpdateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoleRequestWithDefaults() *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	return &this
}

// GetRole returns the Role field value
func (o *UpdateRoleRequest) GetRole() UpdateRoleRequestRole {
	if o == nil {
		var ret UpdateRoleRequestRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *UpdateRoleRequest) GetRoleOk() (*UpdateRoleRequestRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *UpdateRoleRequest) SetRole(v UpdateRoleRequestRole) {
	o.Role = v
}

func (o UpdateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role"] = o.Role

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateRoleRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
