/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config{}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config struct for AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config
type AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config struct {
	// Path to display image. Defaults to an internal Morpheus image.
	Image *string `json:"image,omitempty"`
	// A name for the blueprint
	Name *string `json:"name,omitempty"`
	// Blueprint Type
	Type *string `json:"type,omitempty"`
	// Tier definitions - Create in UI to view a baseline for object
	Tiers map[string]interface{} `json:"tiers,omitempty"`
}

// NewAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config instantiates a new AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config() *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config {
	this := AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config{}
	return &this
}

// NewAddBlueprint200ResponseAllOfBlueprintConfigOneOf4ConfigWithDefaults instantiates a new AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprint200ResponseAllOfBlueprintConfigOneOf4ConfigWithDefaults() *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config {
	this := AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// IsSetImage returns a boolean if a field has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) IsSetImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) SetImage(v string) {
	o.Image = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) SetType(v string) {
	o.Type = &v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetTiers() map[string]interface{} {
	if o == nil || IsNil(o.Tiers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) GetTiersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tiers) {
		return map[string]interface{}{}, false
	}
	return o.Tiers, true
}

// IsSetTiers returns a boolean if a field has been set.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) IsSetTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given map[string]interface{} and assigns it to the Tiers field.
func (o *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) SetTiers(v map[string]interface{}) {
	o.Tiers = v
}

func (o AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	return toSerialize, nil
}

type NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config struct {
	value *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config
	isSet bool
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) Get() *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config {
	return v.value
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) Set(val *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config(val *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) *NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config {
	return &NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config{value: val, isSet: true}
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfigOneOf4Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


