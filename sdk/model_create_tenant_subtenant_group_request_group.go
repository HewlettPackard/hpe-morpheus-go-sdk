/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateTenantSubtenantGroupRequestGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTenantSubtenantGroupRequestGroup{}

// CreateTenantSubtenantGroupRequestGroup Payload for updating an existing tenant
type CreateTenantSubtenantGroupRequestGroup struct {
	// A unique name scoped to the subtenant for the group
	Name string `json:"name"`
	// Optional description field if you want to put more info there
	Description *string `json:"description,omitempty"`
	// Optional code for use with policies
	Code *string `json:"code,omitempty"`
	// location
	Location             *string                `json:"location,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _CreateTenantSubtenantGroupRequestGroup CreateTenantSubtenantGroupRequestGroup

// NewCreateTenantSubtenantGroupRequestGroup instantiates a new CreateTenantSubtenantGroupRequestGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantSubtenantGroupRequestGroup(name string) *CreateTenantSubtenantGroupRequestGroup {
	this := CreateTenantSubtenantGroupRequestGroup{}
	this.Name = name
	return &this
}

// NewCreateTenantSubtenantGroupRequestGroupWithDefaults instantiates a new CreateTenantSubtenantGroupRequestGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantSubtenantGroupRequestGroupWithDefaults() *CreateTenantSubtenantGroupRequestGroup {
	this := CreateTenantSubtenantGroupRequestGroup{}
	return &this
}

// GetName returns the Name field value
func (o *CreateTenantSubtenantGroupRequestGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTenantSubtenantGroupRequestGroup) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTenantSubtenantGroupRequestGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTenantSubtenantGroupRequestGroup) SetDescription(v string) {
	o.Description = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreateTenantSubtenantGroupRequestGroup) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreateTenantSubtenantGroupRequestGroup) SetCode(v string) {
	o.Code = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CreateTenantSubtenantGroupRequestGroup) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// IsSetLocation returns a boolean if a field has been set.
func (o *CreateTenantSubtenantGroupRequestGroup) IsSetLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *CreateTenantSubtenantGroupRequestGroup) SetLocation(v string) {
	o.Location = &v
}

func (o CreateTenantSubtenantGroupRequestGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTenantSubtenantGroupRequestGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *CreateTenantSubtenantGroupRequestGroup) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
