/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListStorageVolumes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStorageVolumes200Response{}

// ListStorageVolumes200Response struct for ListStorageVolumes200Response
type ListStorageVolumes200Response struct {
	StorageVolumes []ListClusterVolumes200ResponseAllOfVolumesInner `json:"storageVolumes,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListStorageVolumes200Response instantiates a new ListStorageVolumes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStorageVolumes200Response() *ListStorageVolumes200Response {
	this := ListStorageVolumes200Response{}
	return &this
}

// NewListStorageVolumes200ResponseWithDefaults instantiates a new ListStorageVolumes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStorageVolumes200ResponseWithDefaults() *ListStorageVolumes200Response {
	this := ListStorageVolumes200Response{}
	return &this
}

// GetStorageVolumes returns the StorageVolumes field value if set, zero value otherwise.
func (o *ListStorageVolumes200Response) GetStorageVolumes() []ListClusterVolumes200ResponseAllOfVolumesInner {
	if o == nil || IsNil(o.StorageVolumes) {
		var ret []ListClusterVolumes200ResponseAllOfVolumesInner
		return ret
	}
	return o.StorageVolumes
}

// GetStorageVolumesOk returns a tuple with the StorageVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageVolumes200Response) GetStorageVolumesOk() ([]ListClusterVolumes200ResponseAllOfVolumesInner, bool) {
	if o == nil || IsNil(o.StorageVolumes) {
		return nil, false
	}
	return o.StorageVolumes, true
}

// IsSetStorageVolumes returns a boolean if a field has been set.
func (o *ListStorageVolumes200Response) IsSetStorageVolumes() bool {
	if o != nil && !IsNil(o.StorageVolumes) {
		return true
	}

	return false
}

// SetStorageVolumes gets a reference to the given []ListClusterVolumes200ResponseAllOfVolumesInner and assigns it to the StorageVolumes field.
func (o *ListStorageVolumes200Response) SetStorageVolumes(v []ListClusterVolumes200ResponseAllOfVolumesInner) {
	o.StorageVolumes = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListStorageVolumes200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStorageVolumes200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListStorageVolumes200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListStorageVolumes200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListStorageVolumes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStorageVolumes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageVolumes) {
		toSerialize["storageVolumes"] = o.StorageVolumes
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListStorageVolumes200Response struct {
	value *ListStorageVolumes200Response
	isSet bool
}

func (v NullableListStorageVolumes200Response) Get() *ListStorageVolumes200Response {
	return v.value
}

func (v *NullableListStorageVolumes200Response) Set(val *ListStorageVolumes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListStorageVolumes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListStorageVolumes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStorageVolumes200Response(val *ListStorageVolumes200Response) *NullableListStorageVolumes200Response {
	return &NullableListStorageVolumes200Response{value: val, isSet: true}
}

func (v NullableListStorageVolumes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStorageVolumes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


