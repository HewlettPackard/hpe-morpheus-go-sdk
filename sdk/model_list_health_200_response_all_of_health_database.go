/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHealth200ResponseAllOfHealthDatabase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHealth200ResponseAllOfHealthDatabase{}

// ListHealth200ResponseAllOfHealthDatabase struct for ListHealth200ResponseAllOfHealthDatabase
type ListHealth200ResponseAllOfHealthDatabase struct {
	Success *bool `json:"success,omitempty"`
	ConnectionList []map[string]interface{} `json:"connectionList,omitempty"`
	BusyConnections []string `json:"busyConnections,omitempty"`
	MaxConnections *int64 `json:"maxConnections,omitempty"`
	MaxUsedConnections *int64 `json:"maxUsedConnections,omitempty"`
	UsedConnections *int64 `json:"usedConnections,omitempty"`
	AbortedConnections *int64 `json:"abortedConnections,omitempty"`
	InnodbStatus *string `json:"innodbStatus,omitempty"`
	Stats *ListHealth200ResponseAllOfHealthDatabaseStats `json:"stats,omitempty"`
	Scans *ListHealth200ResponseAllOfHealthDatabaseScans `json:"scans,omitempty"`
	SlowQueries []ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner `json:"slowQueries,omitempty"`
	InnodbStats *ListHealth200ResponseAllOfHealthDatabaseInnodbStats `json:"innodbStats,omitempty"`
	ScanPercent *float32 `json:"scanPercent,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewListHealth200ResponseAllOfHealthDatabase instantiates a new ListHealth200ResponseAllOfHealthDatabase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHealth200ResponseAllOfHealthDatabase() *ListHealth200ResponseAllOfHealthDatabase {
	this := ListHealth200ResponseAllOfHealthDatabase{}
	return &this
}

// NewListHealth200ResponseAllOfHealthDatabaseWithDefaults instantiates a new ListHealth200ResponseAllOfHealthDatabase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHealth200ResponseAllOfHealthDatabaseWithDefaults() *ListHealth200ResponseAllOfHealthDatabase {
	this := ListHealth200ResponseAllOfHealthDatabase{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetSuccess(v bool) {
	o.Success = &v
}

// GetConnectionList returns the ConnectionList field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetConnectionList() []map[string]interface{} {
	if o == nil || IsNil(o.ConnectionList) {
		var ret []map[string]interface{}
		return ret
	}
	return o.ConnectionList
}

// GetConnectionListOk returns a tuple with the ConnectionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetConnectionListOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConnectionList) {
		return nil, false
	}
	return o.ConnectionList, true
}

// IsSetConnectionList returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetConnectionList() bool {
	if o != nil && !IsNil(o.ConnectionList) {
		return true
	}

	return false
}

// SetConnectionList gets a reference to the given []map[string]interface{} and assigns it to the ConnectionList field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetConnectionList(v []map[string]interface{}) {
	o.ConnectionList = v
}

// GetBusyConnections returns the BusyConnections field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetBusyConnections() []string {
	if o == nil || IsNil(o.BusyConnections) {
		var ret []string
		return ret
	}
	return o.BusyConnections
}

// GetBusyConnectionsOk returns a tuple with the BusyConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetBusyConnectionsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusyConnections) {
		return nil, false
	}
	return o.BusyConnections, true
}

// IsSetBusyConnections returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetBusyConnections() bool {
	if o != nil && !IsNil(o.BusyConnections) {
		return true
	}

	return false
}

// SetBusyConnections gets a reference to the given []string and assigns it to the BusyConnections field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetBusyConnections(v []string) {
	o.BusyConnections = v
}

// GetMaxConnections returns the MaxConnections field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetMaxConnections() int64 {
	if o == nil || IsNil(o.MaxConnections) {
		var ret int64
		return ret
	}
	return *o.MaxConnections
}

// GetMaxConnectionsOk returns a tuple with the MaxConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetMaxConnectionsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxConnections) {
		return nil, false
	}
	return o.MaxConnections, true
}

// IsSetMaxConnections returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetMaxConnections() bool {
	if o != nil && !IsNil(o.MaxConnections) {
		return true
	}

	return false
}

// SetMaxConnections gets a reference to the given int64 and assigns it to the MaxConnections field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetMaxConnections(v int64) {
	o.MaxConnections = &v
}

// GetMaxUsedConnections returns the MaxUsedConnections field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetMaxUsedConnections() int64 {
	if o == nil || IsNil(o.MaxUsedConnections) {
		var ret int64
		return ret
	}
	return *o.MaxUsedConnections
}

// GetMaxUsedConnectionsOk returns a tuple with the MaxUsedConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetMaxUsedConnectionsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxUsedConnections) {
		return nil, false
	}
	return o.MaxUsedConnections, true
}

// IsSetMaxUsedConnections returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetMaxUsedConnections() bool {
	if o != nil && !IsNil(o.MaxUsedConnections) {
		return true
	}

	return false
}

// SetMaxUsedConnections gets a reference to the given int64 and assigns it to the MaxUsedConnections field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetMaxUsedConnections(v int64) {
	o.MaxUsedConnections = &v
}

// GetUsedConnections returns the UsedConnections field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetUsedConnections() int64 {
	if o == nil || IsNil(o.UsedConnections) {
		var ret int64
		return ret
	}
	return *o.UsedConnections
}

// GetUsedConnectionsOk returns a tuple with the UsedConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetUsedConnectionsOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedConnections) {
		return nil, false
	}
	return o.UsedConnections, true
}

// IsSetUsedConnections returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetUsedConnections() bool {
	if o != nil && !IsNil(o.UsedConnections) {
		return true
	}

	return false
}

// SetUsedConnections gets a reference to the given int64 and assigns it to the UsedConnections field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetUsedConnections(v int64) {
	o.UsedConnections = &v
}

// GetAbortedConnections returns the AbortedConnections field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetAbortedConnections() int64 {
	if o == nil || IsNil(o.AbortedConnections) {
		var ret int64
		return ret
	}
	return *o.AbortedConnections
}

// GetAbortedConnectionsOk returns a tuple with the AbortedConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetAbortedConnectionsOk() (*int64, bool) {
	if o == nil || IsNil(o.AbortedConnections) {
		return nil, false
	}
	return o.AbortedConnections, true
}

// IsSetAbortedConnections returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetAbortedConnections() bool {
	if o != nil && !IsNil(o.AbortedConnections) {
		return true
	}

	return false
}

// SetAbortedConnections gets a reference to the given int64 and assigns it to the AbortedConnections field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetAbortedConnections(v int64) {
	o.AbortedConnections = &v
}

// GetInnodbStatus returns the InnodbStatus field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetInnodbStatus() string {
	if o == nil || IsNil(o.InnodbStatus) {
		var ret string
		return ret
	}
	return *o.InnodbStatus
}

// GetInnodbStatusOk returns a tuple with the InnodbStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetInnodbStatusOk() (*string, bool) {
	if o == nil || IsNil(o.InnodbStatus) {
		return nil, false
	}
	return o.InnodbStatus, true
}

// IsSetInnodbStatus returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetInnodbStatus() bool {
	if o != nil && !IsNil(o.InnodbStatus) {
		return true
	}

	return false
}

// SetInnodbStatus gets a reference to the given string and assigns it to the InnodbStatus field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetInnodbStatus(v string) {
	o.InnodbStatus = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetStats() ListHealth200ResponseAllOfHealthDatabaseStats {
	if o == nil || IsNil(o.Stats) {
		var ret ListHealth200ResponseAllOfHealthDatabaseStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetStatsOk() (*ListHealth200ResponseAllOfHealthDatabaseStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// IsSetStats returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given ListHealth200ResponseAllOfHealthDatabaseStats and assigns it to the Stats field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetStats(v ListHealth200ResponseAllOfHealthDatabaseStats) {
	o.Stats = &v
}

// GetScans returns the Scans field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetScans() ListHealth200ResponseAllOfHealthDatabaseScans {
	if o == nil || IsNil(o.Scans) {
		var ret ListHealth200ResponseAllOfHealthDatabaseScans
		return ret
	}
	return *o.Scans
}

// GetScansOk returns a tuple with the Scans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetScansOk() (*ListHealth200ResponseAllOfHealthDatabaseScans, bool) {
	if o == nil || IsNil(o.Scans) {
		return nil, false
	}
	return o.Scans, true
}

// IsSetScans returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetScans() bool {
	if o != nil && !IsNil(o.Scans) {
		return true
	}

	return false
}

// SetScans gets a reference to the given ListHealth200ResponseAllOfHealthDatabaseScans and assigns it to the Scans field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetScans(v ListHealth200ResponseAllOfHealthDatabaseScans) {
	o.Scans = &v
}

// GetSlowQueries returns the SlowQueries field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetSlowQueries() []ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner {
	if o == nil || IsNil(o.SlowQueries) {
		var ret []ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner
		return ret
	}
	return o.SlowQueries
}

// GetSlowQueriesOk returns a tuple with the SlowQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetSlowQueriesOk() ([]ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner, bool) {
	if o == nil || IsNil(o.SlowQueries) {
		return nil, false
	}
	return o.SlowQueries, true
}

// IsSetSlowQueries returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetSlowQueries() bool {
	if o != nil && !IsNil(o.SlowQueries) {
		return true
	}

	return false
}

// SetSlowQueries gets a reference to the given []ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner and assigns it to the SlowQueries field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetSlowQueries(v []ListHealth200ResponseAllOfHealthDatabaseSlowQueriesInner) {
	o.SlowQueries = v
}

// GetInnodbStats returns the InnodbStats field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetInnodbStats() ListHealth200ResponseAllOfHealthDatabaseInnodbStats {
	if o == nil || IsNil(o.InnodbStats) {
		var ret ListHealth200ResponseAllOfHealthDatabaseInnodbStats
		return ret
	}
	return *o.InnodbStats
}

// GetInnodbStatsOk returns a tuple with the InnodbStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetInnodbStatsOk() (*ListHealth200ResponseAllOfHealthDatabaseInnodbStats, bool) {
	if o == nil || IsNil(o.InnodbStats) {
		return nil, false
	}
	return o.InnodbStats, true
}

// IsSetInnodbStats returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetInnodbStats() bool {
	if o != nil && !IsNil(o.InnodbStats) {
		return true
	}

	return false
}

// SetInnodbStats gets a reference to the given ListHealth200ResponseAllOfHealthDatabaseInnodbStats and assigns it to the InnodbStats field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetInnodbStats(v ListHealth200ResponseAllOfHealthDatabaseInnodbStats) {
	o.InnodbStats = &v
}

// GetScanPercent returns the ScanPercent field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetScanPercent() float32 {
	if o == nil || IsNil(o.ScanPercent) {
		var ret float32
		return ret
	}
	return *o.ScanPercent
}

// GetScanPercentOk returns a tuple with the ScanPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetScanPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.ScanPercent) {
		return nil, false
	}
	return o.ScanPercent, true
}

// IsSetScanPercent returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetScanPercent() bool {
	if o != nil && !IsNil(o.ScanPercent) {
		return true
	}

	return false
}

// SetScanPercent gets a reference to the given float32 and assigns it to the ScanPercent field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetScanPercent(v float32) {
	o.ScanPercent = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabase) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListHealth200ResponseAllOfHealthDatabase) SetStatus(v string) {
	o.Status = &v
}

func (o ListHealth200ResponseAllOfHealthDatabase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHealth200ResponseAllOfHealthDatabase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ConnectionList) {
		toSerialize["connectionList"] = o.ConnectionList
	}
	if !IsNil(o.BusyConnections) {
		toSerialize["busyConnections"] = o.BusyConnections
	}
	if !IsNil(o.MaxConnections) {
		toSerialize["maxConnections"] = o.MaxConnections
	}
	if !IsNil(o.MaxUsedConnections) {
		toSerialize["maxUsedConnections"] = o.MaxUsedConnections
	}
	if !IsNil(o.UsedConnections) {
		toSerialize["usedConnections"] = o.UsedConnections
	}
	if !IsNil(o.AbortedConnections) {
		toSerialize["abortedConnections"] = o.AbortedConnections
	}
	if !IsNil(o.InnodbStatus) {
		toSerialize["innodbStatus"] = o.InnodbStatus
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Scans) {
		toSerialize["scans"] = o.Scans
	}
	if !IsNil(o.SlowQueries) {
		toSerialize["slowQueries"] = o.SlowQueries
	}
	if !IsNil(o.InnodbStats) {
		toSerialize["innodbStats"] = o.InnodbStats
	}
	if !IsNil(o.ScanPercent) {
		toSerialize["scanPercent"] = o.ScanPercent
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableListHealth200ResponseAllOfHealthDatabase struct {
	value *ListHealth200ResponseAllOfHealthDatabase
	isSet bool
}

func (v NullableListHealth200ResponseAllOfHealthDatabase) Get() *ListHealth200ResponseAllOfHealthDatabase {
	return v.value
}

func (v *NullableListHealth200ResponseAllOfHealthDatabase) Set(val *ListHealth200ResponseAllOfHealthDatabase) {
	v.value = val
	v.isSet = true
}

func (v NullableListHealth200ResponseAllOfHealthDatabase) IsSet() bool {
	return v.isSet
}

func (v *NullableListHealth200ResponseAllOfHealthDatabase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHealth200ResponseAllOfHealthDatabase(val *ListHealth200ResponseAllOfHealthDatabase) *NullableListHealth200ResponseAllOfHealthDatabase {
	return &NullableListHealth200ResponseAllOfHealthDatabase{value: val, isSet: true}
}

func (v NullableListHealth200ResponseAllOfHealthDatabase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHealth200ResponseAllOfHealthDatabase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


