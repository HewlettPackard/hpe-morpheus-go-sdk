/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateRoleBlueprintAccess200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRoleBlueprintAccess200Response{}

// UpdateRoleBlueprintAccess200Response struct for UpdateRoleBlueprintAccess200Response
type UpdateRoleBlueprintAccess200Response struct {
	Access               *string                `json:"access,omitempty"`
	Success              *bool                  `json:"success,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _UpdateRoleBlueprintAccess200Response UpdateRoleBlueprintAccess200Response

// NewUpdateRoleBlueprintAccess200Response instantiates a new UpdateRoleBlueprintAccess200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoleBlueprintAccess200Response() *UpdateRoleBlueprintAccess200Response {
	this := UpdateRoleBlueprintAccess200Response{}
	return &this
}

// NewUpdateRoleBlueprintAccess200ResponseWithDefaults instantiates a new UpdateRoleBlueprintAccess200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoleBlueprintAccess200ResponseWithDefaults() *UpdateRoleBlueprintAccess200Response {
	this := UpdateRoleBlueprintAccess200Response{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *UpdateRoleBlueprintAccess200Response) GetAccess() string {
	if o == nil || IsNil(o.Access) {
		var ret string
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleBlueprintAccess200Response) GetAccessOk() (*string, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// IsSetAccess returns a boolean if a field has been set.
func (o *UpdateRoleBlueprintAccess200Response) IsSetAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given string and assigns it to the Access field.
func (o *UpdateRoleBlueprintAccess200Response) SetAccess(v string) {
	o.Access = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateRoleBlueprintAccess200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleBlueprintAccess200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *UpdateRoleBlueprintAccess200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateRoleBlueprintAccess200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o UpdateRoleBlueprintAccess200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRoleBlueprintAccess200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateRoleBlueprintAccess200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
