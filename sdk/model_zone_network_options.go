/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ZoneNetworkOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneNetworkOptions{}

// ZoneNetworkOptions struct for ZoneNetworkOptions
type ZoneNetworkOptions struct {
	Networks []ZoneNetworkOptionsNetworksInner `json:"networks,omitempty"`
	NetworkGroups []ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner `json:"networkGroups,omitempty"`
	NetworkTypes []ZoneNetworkOptionsNetworkTypesInner `json:"networkTypes,omitempty"`
	NetworkSubnets []ZoneNetworkOptionsNetworkSubnetsInner `json:"networkSubnets,omitempty"`
	HasNetworks *bool `json:"hasNetworks,omitempty"`
	MaxNetworks *int64 `json:"maxNetworks,omitempty"`
	EnableNetworkTypeSelection *string `json:"enableNetworkTypeSelection,omitempty"`
	SupportsNetworkSelection *bool `json:"supportsNetworkSelection,omitempty"`
}

// NewZoneNetworkOptions instantiates a new ZoneNetworkOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneNetworkOptions() *ZoneNetworkOptions {
	this := ZoneNetworkOptions{}
	return &this
}

// NewZoneNetworkOptionsWithDefaults instantiates a new ZoneNetworkOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneNetworkOptionsWithDefaults() *ZoneNetworkOptions {
	this := ZoneNetworkOptions{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetNetworks() []ZoneNetworkOptionsNetworksInner {
	if o == nil || IsNil(o.Networks) {
		var ret []ZoneNetworkOptionsNetworksInner
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetNetworksOk() ([]ZoneNetworkOptionsNetworksInner, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// IsSetNetworks returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []ZoneNetworkOptionsNetworksInner and assigns it to the Networks field.
func (o *ZoneNetworkOptions) SetNetworks(v []ZoneNetworkOptionsNetworksInner) {
	o.Networks = v
}

// GetNetworkGroups returns the NetworkGroups field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetNetworkGroups() []ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner {
	if o == nil || IsNil(o.NetworkGroups) {
		var ret []ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner
		return ret
	}
	return o.NetworkGroups
}

// GetNetworkGroupsOk returns a tuple with the NetworkGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetNetworkGroupsOk() ([]ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner, bool) {
	if o == nil || IsNil(o.NetworkGroups) {
		return nil, false
	}
	return o.NetworkGroups, true
}

// IsSetNetworkGroups returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetNetworkGroups() bool {
	if o != nil && !IsNil(o.NetworkGroups) {
		return true
	}

	return false
}

// SetNetworkGroups gets a reference to the given []ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner and assigns it to the NetworkGroups field.
func (o *ZoneNetworkOptions) SetNetworkGroups(v []ListInstanceServicePlans200ResponsePlansInnerAutoOptionsInner) {
	o.NetworkGroups = v
}

// GetNetworkTypes returns the NetworkTypes field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetNetworkTypes() []ZoneNetworkOptionsNetworkTypesInner {
	if o == nil || IsNil(o.NetworkTypes) {
		var ret []ZoneNetworkOptionsNetworkTypesInner
		return ret
	}
	return o.NetworkTypes
}

// GetNetworkTypesOk returns a tuple with the NetworkTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetNetworkTypesOk() ([]ZoneNetworkOptionsNetworkTypesInner, bool) {
	if o == nil || IsNil(o.NetworkTypes) {
		return nil, false
	}
	return o.NetworkTypes, true
}

// IsSetNetworkTypes returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetNetworkTypes() bool {
	if o != nil && !IsNil(o.NetworkTypes) {
		return true
	}

	return false
}

// SetNetworkTypes gets a reference to the given []ZoneNetworkOptionsNetworkTypesInner and assigns it to the NetworkTypes field.
func (o *ZoneNetworkOptions) SetNetworkTypes(v []ZoneNetworkOptionsNetworkTypesInner) {
	o.NetworkTypes = v
}

// GetNetworkSubnets returns the NetworkSubnets field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetNetworkSubnets() []ZoneNetworkOptionsNetworkSubnetsInner {
	if o == nil || IsNil(o.NetworkSubnets) {
		var ret []ZoneNetworkOptionsNetworkSubnetsInner
		return ret
	}
	return o.NetworkSubnets
}

// GetNetworkSubnetsOk returns a tuple with the NetworkSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetNetworkSubnetsOk() ([]ZoneNetworkOptionsNetworkSubnetsInner, bool) {
	if o == nil || IsNil(o.NetworkSubnets) {
		return nil, false
	}
	return o.NetworkSubnets, true
}

// IsSetNetworkSubnets returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetNetworkSubnets() bool {
	if o != nil && !IsNil(o.NetworkSubnets) {
		return true
	}

	return false
}

// SetNetworkSubnets gets a reference to the given []ZoneNetworkOptionsNetworkSubnetsInner and assigns it to the NetworkSubnets field.
func (o *ZoneNetworkOptions) SetNetworkSubnets(v []ZoneNetworkOptionsNetworkSubnetsInner) {
	o.NetworkSubnets = v
}

// GetHasNetworks returns the HasNetworks field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetHasNetworks() bool {
	if o == nil || IsNil(o.HasNetworks) {
		var ret bool
		return ret
	}
	return *o.HasNetworks
}

// GetHasNetworksOk returns a tuple with the HasNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetHasNetworksOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNetworks) {
		return nil, false
	}
	return o.HasNetworks, true
}

// IsSetHasNetworks returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetHasNetworks() bool {
	if o != nil && !IsNil(o.HasNetworks) {
		return true
	}

	return false
}

// SetHasNetworks gets a reference to the given bool and assigns it to the HasNetworks field.
func (o *ZoneNetworkOptions) SetHasNetworks(v bool) {
	o.HasNetworks = &v
}

// GetMaxNetworks returns the MaxNetworks field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetMaxNetworks() int64 {
	if o == nil || IsNil(o.MaxNetworks) {
		var ret int64
		return ret
	}
	return *o.MaxNetworks
}

// GetMaxNetworksOk returns a tuple with the MaxNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetMaxNetworksOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNetworks) {
		return nil, false
	}
	return o.MaxNetworks, true
}

// IsSetMaxNetworks returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetMaxNetworks() bool {
	if o != nil && !IsNil(o.MaxNetworks) {
		return true
	}

	return false
}

// SetMaxNetworks gets a reference to the given int64 and assigns it to the MaxNetworks field.
func (o *ZoneNetworkOptions) SetMaxNetworks(v int64) {
	o.MaxNetworks = &v
}

// GetEnableNetworkTypeSelection returns the EnableNetworkTypeSelection field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetEnableNetworkTypeSelection() string {
	if o == nil || IsNil(o.EnableNetworkTypeSelection) {
		var ret string
		return ret
	}
	return *o.EnableNetworkTypeSelection
}

// GetEnableNetworkTypeSelectionOk returns a tuple with the EnableNetworkTypeSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetEnableNetworkTypeSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.EnableNetworkTypeSelection) {
		return nil, false
	}
	return o.EnableNetworkTypeSelection, true
}

// IsSetEnableNetworkTypeSelection returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetEnableNetworkTypeSelection() bool {
	if o != nil && !IsNil(o.EnableNetworkTypeSelection) {
		return true
	}

	return false
}

// SetEnableNetworkTypeSelection gets a reference to the given string and assigns it to the EnableNetworkTypeSelection field.
func (o *ZoneNetworkOptions) SetEnableNetworkTypeSelection(v string) {
	o.EnableNetworkTypeSelection = &v
}

// GetSupportsNetworkSelection returns the SupportsNetworkSelection field value if set, zero value otherwise.
func (o *ZoneNetworkOptions) GetSupportsNetworkSelection() bool {
	if o == nil || IsNil(o.SupportsNetworkSelection) {
		var ret bool
		return ret
	}
	return *o.SupportsNetworkSelection
}

// GetSupportsNetworkSelectionOk returns a tuple with the SupportsNetworkSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptions) GetSupportsNetworkSelectionOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsNetworkSelection) {
		return nil, false
	}
	return o.SupportsNetworkSelection, true
}

// IsSetSupportsNetworkSelection returns a boolean if a field has been set.
func (o *ZoneNetworkOptions) IsSetSupportsNetworkSelection() bool {
	if o != nil && !IsNil(o.SupportsNetworkSelection) {
		return true
	}

	return false
}

// SetSupportsNetworkSelection gets a reference to the given bool and assigns it to the SupportsNetworkSelection field.
func (o *ZoneNetworkOptions) SetSupportsNetworkSelection(v bool) {
	o.SupportsNetworkSelection = &v
}

func (o ZoneNetworkOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneNetworkOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.NetworkGroups) {
		toSerialize["networkGroups"] = o.NetworkGroups
	}
	if !IsNil(o.NetworkTypes) {
		toSerialize["networkTypes"] = o.NetworkTypes
	}
	if !IsNil(o.NetworkSubnets) {
		toSerialize["networkSubnets"] = o.NetworkSubnets
	}
	if !IsNil(o.HasNetworks) {
		toSerialize["hasNetworks"] = o.HasNetworks
	}
	if !IsNil(o.MaxNetworks) {
		toSerialize["maxNetworks"] = o.MaxNetworks
	}
	if !IsNil(o.EnableNetworkTypeSelection) {
		toSerialize["enableNetworkTypeSelection"] = o.EnableNetworkTypeSelection
	}
	if !IsNil(o.SupportsNetworkSelection) {
		toSerialize["supportsNetworkSelection"] = o.SupportsNetworkSelection
	}
	return toSerialize, nil
}

type NullableZoneNetworkOptions struct {
	value *ZoneNetworkOptions
	isSet bool
}

func (v NullableZoneNetworkOptions) Get() *ZoneNetworkOptions {
	return v.value
}

func (v *NullableZoneNetworkOptions) Set(val *ZoneNetworkOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneNetworkOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneNetworkOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneNetworkOptions(val *ZoneNetworkOptions) *NullableZoneNetworkOptions {
	return &NullableZoneNetworkOptions{value: val, isSet: true}
}

func (v NullableZoneNetworkOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneNetworkOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


