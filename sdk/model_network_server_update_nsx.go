/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the NetworkServerUpdateNSX type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkServerUpdateNSX{}

// NetworkServerUpdateNSX struct for NetworkServerUpdateNSX
type NetworkServerUpdateNSX struct {
	// Name
	Name *string `json:"name,omitempty"`
	// URL
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Username
	ServiceUsername *string `json:"serviceUsername,omitempty"`
	// Password
	ServicePassword *string `json:"servicePassword,omitempty"`
	// Visibility - Set to public to allow all tenants
	Visibility *string `json:"visibility,omitempty"`
	// Array of tenant account ids that are allowed access
	Tenants []GetAlerts200ResponseAllOfChecksInnerAccount `json:"tenants,omitempty"`
}

// NewNetworkServerUpdateNSX instantiates a new NetworkServerUpdateNSX object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkServerUpdateNSX() *NetworkServerUpdateNSX {
	this := NetworkServerUpdateNSX{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewNetworkServerUpdateNSXWithDefaults instantiates a new NetworkServerUpdateNSX object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkServerUpdateNSXWithDefaults() *NetworkServerUpdateNSX {
	this := NetworkServerUpdateNSX{}
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkServerUpdateNSX) SetName(v string) {
	o.Name = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetServiceUrl() string {
	if o == nil || IsNil(o.ServiceUrl) {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUrl) {
		return nil, false
	}
	return o.ServiceUrl, true
}

// IsSetServiceUrl returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetServiceUrl() bool {
	if o != nil && !IsNil(o.ServiceUrl) {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *NetworkServerUpdateNSX) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetServiceUsername() string {
	if o == nil || IsNil(o.ServiceUsername) {
		var ret string
		return ret
	}
	return *o.ServiceUsername
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetServiceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUsername) {
		return nil, false
	}
	return o.ServiceUsername, true
}

// IsSetServiceUsername returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetServiceUsername() bool {
	if o != nil && !IsNil(o.ServiceUsername) {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given string and assigns it to the ServiceUsername field.
func (o *NetworkServerUpdateNSX) SetServiceUsername(v string) {
	o.ServiceUsername = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// IsSetServicePassword returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *NetworkServerUpdateNSX) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *NetworkServerUpdateNSX) SetVisibility(v string) {
	o.Visibility = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *NetworkServerUpdateNSX) GetTenants() []GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Tenants) {
		var ret []GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerUpdateNSX) GetTenantsOk() ([]GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *NetworkServerUpdateNSX) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Tenants field.
func (o *NetworkServerUpdateNSX) SetTenants(v []GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Tenants = v
}

func (o NetworkServerUpdateNSX) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkServerUpdateNSX) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ServiceUrl) {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if !IsNil(o.ServiceUsername) {
		toSerialize["serviceUsername"] = o.ServiceUsername
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	return toSerialize, nil
}

type NullableNetworkServerUpdateNSX struct {
	value *NetworkServerUpdateNSX
	isSet bool
}

func (v NullableNetworkServerUpdateNSX) Get() *NetworkServerUpdateNSX {
	return v.value
}

func (v *NullableNetworkServerUpdateNSX) Set(val *NetworkServerUpdateNSX) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkServerUpdateNSX) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkServerUpdateNSX) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkServerUpdateNSX(val *NetworkServerUpdateNSX) *NullableNetworkServerUpdateNSX {
	return &NullableNetworkServerUpdateNSX{value: val, isSet: true}
}

func (v NullableNetworkServerUpdateNSX) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkServerUpdateNSX) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


