/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClouds200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClouds200Response{}

// ListClouds200Response struct for ListClouds200Response
type ListClouds200Response struct {
	Zones []ListClouds200ResponseAllOfZonesInner `json:"zones,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClouds200Response instantiates a new ListClouds200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClouds200Response() *ListClouds200Response {
	this := ListClouds200Response{}
	return &this
}

// NewListClouds200ResponseWithDefaults instantiates a new ListClouds200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClouds200ResponseWithDefaults() *ListClouds200Response {
	this := ListClouds200Response{}
	return &this
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *ListClouds200Response) GetZones() []ListClouds200ResponseAllOfZonesInner {
	if o == nil || IsNil(o.Zones) {
		var ret []ListClouds200ResponseAllOfZonesInner
		return ret
	}
	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClouds200Response) GetZonesOk() ([]ListClouds200ResponseAllOfZonesInner, bool) {
	if o == nil || IsNil(o.Zones) {
		return nil, false
	}
	return o.Zones, true
}

// IsSetZones returns a boolean if a field has been set.
func (o *ListClouds200Response) IsSetZones() bool {
	if o != nil && !IsNil(o.Zones) {
		return true
	}

	return false
}

// SetZones gets a reference to the given []ListClouds200ResponseAllOfZonesInner and assigns it to the Zones field.
func (o *ListClouds200Response) SetZones(v []ListClouds200ResponseAllOfZonesInner) {
	o.Zones = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClouds200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClouds200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClouds200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClouds200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClouds200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClouds200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Zones) {
		toSerialize["zones"] = o.Zones
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClouds200Response struct {
	value *ListClouds200Response
	isSet bool
}

func (v NullableListClouds200Response) Get() *ListClouds200Response {
	return v.value
}

func (v *NullableListClouds200Response) Set(val *ListClouds200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClouds200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClouds200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClouds200Response(val *ListClouds200Response) *NullableListClouds200Response {
	return &NullableListClouds200Response{value: val, isSet: true}
}

func (v NullableListClouds200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClouds200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


