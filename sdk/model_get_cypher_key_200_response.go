/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetCypherKey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCypherKey200Response{}

// GetCypherKey200Response struct for GetCypherKey200Response
type GetCypherKey200Response struct {
	Success *bool `json:"success,omitempty"`
	Data *GetCypherKey200ResponseAllOfData `json:"data,omitempty"`
	// Type of data that was written to the key
	Type *string `json:"type,omitempty"`
	// Lease duration in seconds, 0 means no expiry.
	LeaseDuration *int32 `json:"lease_duration,omitempty"`
	Cypher *ListCypherKeys200ResponseAllOfCyphersInner `json:"cypher,omitempty"`
}

// NewGetCypherKey200Response instantiates a new GetCypherKey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCypherKey200Response() *GetCypherKey200Response {
	this := GetCypherKey200Response{}
	return &this
}

// NewGetCypherKey200ResponseWithDefaults instantiates a new GetCypherKey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCypherKey200ResponseWithDefaults() *GetCypherKey200Response {
	this := GetCypherKey200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *GetCypherKey200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCypherKey200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *GetCypherKey200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *GetCypherKey200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetCypherKey200Response) GetData() GetCypherKey200ResponseAllOfData {
	if o == nil || IsNil(o.Data) {
		var ret GetCypherKey200ResponseAllOfData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCypherKey200Response) GetDataOk() (*GetCypherKey200ResponseAllOfData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// IsSetData returns a boolean if a field has been set.
func (o *GetCypherKey200Response) IsSetData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GetCypherKey200ResponseAllOfData and assigns it to the Data field.
func (o *GetCypherKey200Response) SetData(v GetCypherKey200ResponseAllOfData) {
	o.Data = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetCypherKey200Response) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCypherKey200Response) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *GetCypherKey200Response) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetCypherKey200Response) SetType(v string) {
	o.Type = &v
}

// GetLeaseDuration returns the LeaseDuration field value if set, zero value otherwise.
func (o *GetCypherKey200Response) GetLeaseDuration() int32 {
	if o == nil || IsNil(o.LeaseDuration) {
		var ret int32
		return ret
	}
	return *o.LeaseDuration
}

// GetLeaseDurationOk returns a tuple with the LeaseDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCypherKey200Response) GetLeaseDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.LeaseDuration) {
		return nil, false
	}
	return o.LeaseDuration, true
}

// IsSetLeaseDuration returns a boolean if a field has been set.
func (o *GetCypherKey200Response) IsSetLeaseDuration() bool {
	if o != nil && !IsNil(o.LeaseDuration) {
		return true
	}

	return false
}

// SetLeaseDuration gets a reference to the given int32 and assigns it to the LeaseDuration field.
func (o *GetCypherKey200Response) SetLeaseDuration(v int32) {
	o.LeaseDuration = &v
}

// GetCypher returns the Cypher field value if set, zero value otherwise.
func (o *GetCypherKey200Response) GetCypher() ListCypherKeys200ResponseAllOfCyphersInner {
	if o == nil || IsNil(o.Cypher) {
		var ret ListCypherKeys200ResponseAllOfCyphersInner
		return ret
	}
	return *o.Cypher
}

// GetCypherOk returns a tuple with the Cypher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCypherKey200Response) GetCypherOk() (*ListCypherKeys200ResponseAllOfCyphersInner, bool) {
	if o == nil || IsNil(o.Cypher) {
		return nil, false
	}
	return o.Cypher, true
}

// IsSetCypher returns a boolean if a field has been set.
func (o *GetCypherKey200Response) IsSetCypher() bool {
	if o != nil && !IsNil(o.Cypher) {
		return true
	}

	return false
}

// SetCypher gets a reference to the given ListCypherKeys200ResponseAllOfCyphersInner and assigns it to the Cypher field.
func (o *GetCypherKey200Response) SetCypher(v ListCypherKeys200ResponseAllOfCyphersInner) {
	o.Cypher = &v
}

func (o GetCypherKey200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCypherKey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.LeaseDuration) {
		toSerialize["lease_duration"] = o.LeaseDuration
	}
	if !IsNil(o.Cypher) {
		toSerialize["cypher"] = o.Cypher
	}
	return toSerialize, nil
}

type NullableGetCypherKey200Response struct {
	value *GetCypherKey200Response
	isSet bool
}

func (v NullableGetCypherKey200Response) Get() *GetCypherKey200Response {
	return v.value
}

func (v *NullableGetCypherKey200Response) Set(val *GetCypherKey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCypherKey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCypherKey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCypherKey200Response(val *GetCypherKey200Response) *NullableGetCypherKey200Response {
	return &NullableGetCypherKey200Response{value: val, isSet: true}
}

func (v NullableGetCypherKey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCypherKey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


