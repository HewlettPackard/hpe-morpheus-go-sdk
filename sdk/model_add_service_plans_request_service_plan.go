/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddServicePlansRequestServicePlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddServicePlansRequestServicePlan{}

// AddServicePlansRequestServicePlan struct for AddServicePlansRequestServicePlan
type AddServicePlansRequestServicePlan struct {
	// Service plan name
	Name string `json:"name"`
	// Service plan code, must be unique
	Code string `json:"code"`
	// Service plan description
	Description *string `json:"description,omitempty"`
	// Can be used to enable / disable the editability of the service plan.
	Editable *bool `json:"editable,omitempty"`
	// Max storage size in bytes
	MaxStorage float32 `json:"maxStorage"`
	// Max memory size in bytes
	MaxMemory float32 `json:"maxMemory"`
	// Max cores
	MaxCores *float32 `json:"maxCores,omitempty"`
	// Max disks allowed
	MaxDisks *float32 `json:"maxDisks,omitempty"`
	ProvisionType AddClusterLayoutsRequestLayoutProvisionType `json:"provisionType"`
	// Can be used to enable / disable customizable cores
	CustomCores *bool `json:"customCores,omitempty"`
	// Can be used to enable / disable customizable storage
	CustomMaxStorage *bool `json:"customMaxStorage,omitempty"`
	// Can be used to enable / disable customizable extra volumes.
	CustomMaxDataStorage *bool `json:"customMaxDataStorage,omitempty"`
	// Can be used to enable / disable customizable memory.
	CustomMaxMemory *bool `json:"customMaxMemory,omitempty"`
	// Can be used to enable / disable ability to add volumes
	AddVolumes *bool `json:"addVolumes,omitempty"`
	// Sort order
	SortOrder *float32 `json:"sortOrder,omitempty"`
	// List of price sets to include in service plan
	PriceSets []AddServicePlansRequestServicePlanPriceSetsInner `json:"priceSets,omitempty"`
	Config *AddServicePlansRequestServicePlanConfig `json:"config,omitempty"`
}

type _AddServicePlansRequestServicePlan AddServicePlansRequestServicePlan

// NewAddServicePlansRequestServicePlan instantiates a new AddServicePlansRequestServicePlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddServicePlansRequestServicePlan(name string, code string, maxStorage float32, maxMemory float32, provisionType AddClusterLayoutsRequestLayoutProvisionType) *AddServicePlansRequestServicePlan {
	this := AddServicePlansRequestServicePlan{}
	this.Name = name
	this.Code = code
	var editable bool = true
	this.Editable = &editable
	this.MaxStorage = maxStorage
	this.MaxMemory = maxMemory
	this.ProvisionType = provisionType
	var customCores bool = false
	this.CustomCores = &customCores
	var customMaxStorage bool = false
	this.CustomMaxStorage = &customMaxStorage
	var customMaxDataStorage bool = false
	this.CustomMaxDataStorage = &customMaxDataStorage
	var customMaxMemory bool = false
	this.CustomMaxMemory = &customMaxMemory
	var addVolumes bool = false
	this.AddVolumes = &addVolumes
	return &this
}

// NewAddServicePlansRequestServicePlanWithDefaults instantiates a new AddServicePlansRequestServicePlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddServicePlansRequestServicePlanWithDefaults() *AddServicePlansRequestServicePlan {
	this := AddServicePlansRequestServicePlan{}
	var editable bool = true
	this.Editable = &editable
	var customCores bool = false
	this.CustomCores = &customCores
	var customMaxStorage bool = false
	this.CustomMaxStorage = &customMaxStorage
	var customMaxDataStorage bool = false
	this.CustomMaxDataStorage = &customMaxDataStorage
	var customMaxMemory bool = false
	this.CustomMaxMemory = &customMaxMemory
	var addVolumes bool = false
	this.AddVolumes = &addVolumes
	return &this
}

// GetName returns the Name field value
func (o *AddServicePlansRequestServicePlan) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddServicePlansRequestServicePlan) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value
func (o *AddServicePlansRequestServicePlan) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AddServicePlansRequestServicePlan) SetCode(v string) {
	o.Code = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddServicePlansRequestServicePlan) SetDescription(v string) {
	o.Description = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetEditable() bool {
	if o == nil || IsNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.Editable) {
		return nil, false
	}
	return o.Editable, true
}

// IsSetEditable returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetEditable() bool {
	if o != nil && !IsNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *AddServicePlansRequestServicePlan) SetEditable(v bool) {
	o.Editable = &v
}

// GetMaxStorage returns the MaxStorage field value
func (o *AddServicePlansRequestServicePlan) GetMaxStorage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetMaxStorageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxStorage, true
}

// SetMaxStorage sets field value
func (o *AddServicePlansRequestServicePlan) SetMaxStorage(v float32) {
	o.MaxStorage = v
}

// GetMaxMemory returns the MaxMemory field value
func (o *AddServicePlansRequestServicePlan) GetMaxMemory() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetMaxMemoryOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMemory, true
}

// SetMaxMemory sets field value
func (o *AddServicePlansRequestServicePlan) SetMaxMemory(v float32) {
	o.MaxMemory = v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetMaxCores() float32 {
	if o == nil || IsNil(o.MaxCores) {
		var ret float32
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetMaxCoresOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCores) {
		return nil, false
	}
	return o.MaxCores, true
}

// IsSetMaxCores returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetMaxCores() bool {
	if o != nil && !IsNil(o.MaxCores) {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given float32 and assigns it to the MaxCores field.
func (o *AddServicePlansRequestServicePlan) SetMaxCores(v float32) {
	o.MaxCores = &v
}

// GetMaxDisks returns the MaxDisks field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetMaxDisks() float32 {
	if o == nil || IsNil(o.MaxDisks) {
		var ret float32
		return ret
	}
	return *o.MaxDisks
}

// GetMaxDisksOk returns a tuple with the MaxDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetMaxDisksOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDisks) {
		return nil, false
	}
	return o.MaxDisks, true
}

// IsSetMaxDisks returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetMaxDisks() bool {
	if o != nil && !IsNil(o.MaxDisks) {
		return true
	}

	return false
}

// SetMaxDisks gets a reference to the given float32 and assigns it to the MaxDisks field.
func (o *AddServicePlansRequestServicePlan) SetMaxDisks(v float32) {
	o.MaxDisks = &v
}

// GetProvisionType returns the ProvisionType field value
func (o *AddServicePlansRequestServicePlan) GetProvisionType() AddClusterLayoutsRequestLayoutProvisionType {
	if o == nil {
		var ret AddClusterLayoutsRequestLayoutProvisionType
		return ret
	}

	return o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetProvisionTypeOk() (*AddClusterLayoutsRequestLayoutProvisionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisionType, true
}

// SetProvisionType sets field value
func (o *AddServicePlansRequestServicePlan) SetProvisionType(v AddClusterLayoutsRequestLayoutProvisionType) {
	o.ProvisionType = v
}

// GetCustomCores returns the CustomCores field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetCustomCores() bool {
	if o == nil || IsNil(o.CustomCores) {
		var ret bool
		return ret
	}
	return *o.CustomCores
}

// GetCustomCoresOk returns a tuple with the CustomCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetCustomCoresOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomCores) {
		return nil, false
	}
	return o.CustomCores, true
}

// IsSetCustomCores returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetCustomCores() bool {
	if o != nil && !IsNil(o.CustomCores) {
		return true
	}

	return false
}

// SetCustomCores gets a reference to the given bool and assigns it to the CustomCores field.
func (o *AddServicePlansRequestServicePlan) SetCustomCores(v bool) {
	o.CustomCores = &v
}

// GetCustomMaxStorage returns the CustomMaxStorage field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxStorage() bool {
	if o == nil || IsNil(o.CustomMaxStorage) {
		var ret bool
		return ret
	}
	return *o.CustomMaxStorage
}

// GetCustomMaxStorageOk returns a tuple with the CustomMaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomMaxStorage) {
		return nil, false
	}
	return o.CustomMaxStorage, true
}

// IsSetCustomMaxStorage returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetCustomMaxStorage() bool {
	if o != nil && !IsNil(o.CustomMaxStorage) {
		return true
	}

	return false
}

// SetCustomMaxStorage gets a reference to the given bool and assigns it to the CustomMaxStorage field.
func (o *AddServicePlansRequestServicePlan) SetCustomMaxStorage(v bool) {
	o.CustomMaxStorage = &v
}

// GetCustomMaxDataStorage returns the CustomMaxDataStorage field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxDataStorage() bool {
	if o == nil || IsNil(o.CustomMaxDataStorage) {
		var ret bool
		return ret
	}
	return *o.CustomMaxDataStorage
}

// GetCustomMaxDataStorageOk returns a tuple with the CustomMaxDataStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxDataStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomMaxDataStorage) {
		return nil, false
	}
	return o.CustomMaxDataStorage, true
}

// IsSetCustomMaxDataStorage returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetCustomMaxDataStorage() bool {
	if o != nil && !IsNil(o.CustomMaxDataStorage) {
		return true
	}

	return false
}

// SetCustomMaxDataStorage gets a reference to the given bool and assigns it to the CustomMaxDataStorage field.
func (o *AddServicePlansRequestServicePlan) SetCustomMaxDataStorage(v bool) {
	o.CustomMaxDataStorage = &v
}

// GetCustomMaxMemory returns the CustomMaxMemory field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxMemory() bool {
	if o == nil || IsNil(o.CustomMaxMemory) {
		var ret bool
		return ret
	}
	return *o.CustomMaxMemory
}

// GetCustomMaxMemoryOk returns a tuple with the CustomMaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetCustomMaxMemoryOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomMaxMemory) {
		return nil, false
	}
	return o.CustomMaxMemory, true
}

// IsSetCustomMaxMemory returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetCustomMaxMemory() bool {
	if o != nil && !IsNil(o.CustomMaxMemory) {
		return true
	}

	return false
}

// SetCustomMaxMemory gets a reference to the given bool and assigns it to the CustomMaxMemory field.
func (o *AddServicePlansRequestServicePlan) SetCustomMaxMemory(v bool) {
	o.CustomMaxMemory = &v
}

// GetAddVolumes returns the AddVolumes field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetAddVolumes() bool {
	if o == nil || IsNil(o.AddVolumes) {
		var ret bool
		return ret
	}
	return *o.AddVolumes
}

// GetAddVolumesOk returns a tuple with the AddVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetAddVolumesOk() (*bool, bool) {
	if o == nil || IsNil(o.AddVolumes) {
		return nil, false
	}
	return o.AddVolumes, true
}

// IsSetAddVolumes returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetAddVolumes() bool {
	if o != nil && !IsNil(o.AddVolumes) {
		return true
	}

	return false
}

// SetAddVolumes gets a reference to the given bool and assigns it to the AddVolumes field.
func (o *AddServicePlansRequestServicePlan) SetAddVolumes(v bool) {
	o.AddVolumes = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetSortOrder() float32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret float32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetSortOrderOk() (*float32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// IsSetSortOrder returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given float32 and assigns it to the SortOrder field.
func (o *AddServicePlansRequestServicePlan) SetSortOrder(v float32) {
	o.SortOrder = &v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetPriceSets() []AddServicePlansRequestServicePlanPriceSetsInner {
	if o == nil || IsNil(o.PriceSets) {
		var ret []AddServicePlansRequestServicePlanPriceSetsInner
		return ret
	}
	return o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetPriceSetsOk() ([]AddServicePlansRequestServicePlanPriceSetsInner, bool) {
	if o == nil || IsNil(o.PriceSets) {
		return nil, false
	}
	return o.PriceSets, true
}

// IsSetPriceSets returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetPriceSets() bool {
	if o != nil && !IsNil(o.PriceSets) {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []AddServicePlansRequestServicePlanPriceSetsInner and assigns it to the PriceSets field.
func (o *AddServicePlansRequestServicePlan) SetPriceSets(v []AddServicePlansRequestServicePlanPriceSetsInner) {
	o.PriceSets = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddServicePlansRequestServicePlan) GetConfig() AddServicePlansRequestServicePlanConfig {
	if o == nil || IsNil(o.Config) {
		var ret AddServicePlansRequestServicePlanConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlansRequestServicePlan) GetConfigOk() (*AddServicePlansRequestServicePlanConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddServicePlansRequestServicePlan) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddServicePlansRequestServicePlanConfig and assigns it to the Config field.
func (o *AddServicePlansRequestServicePlan) SetConfig(v AddServicePlansRequestServicePlanConfig) {
	o.Config = &v
}

func (o AddServicePlansRequestServicePlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddServicePlansRequestServicePlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["code"] = o.Code
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	toSerialize["maxStorage"] = o.MaxStorage
	toSerialize["maxMemory"] = o.MaxMemory
	if !IsNil(o.MaxCores) {
		toSerialize["maxCores"] = o.MaxCores
	}
	if !IsNil(o.MaxDisks) {
		toSerialize["maxDisks"] = o.MaxDisks
	}
	toSerialize["provisionType"] = o.ProvisionType
	if !IsNil(o.CustomCores) {
		toSerialize["customCores"] = o.CustomCores
	}
	if !IsNil(o.CustomMaxStorage) {
		toSerialize["customMaxStorage"] = o.CustomMaxStorage
	}
	if !IsNil(o.CustomMaxDataStorage) {
		toSerialize["customMaxDataStorage"] = o.CustomMaxDataStorage
	}
	if !IsNil(o.CustomMaxMemory) {
		toSerialize["customMaxMemory"] = o.CustomMaxMemory
	}
	if !IsNil(o.AddVolumes) {
		toSerialize["addVolumes"] = o.AddVolumes
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.PriceSets) {
		toSerialize["priceSets"] = o.PriceSets
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

func (o *AddServicePlansRequestServicePlan) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"code",
		"maxStorage",
		"maxMemory",
		"provisionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddServicePlansRequestServicePlan := _AddServicePlansRequestServicePlan{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddServicePlansRequestServicePlan)

	if err != nil {
		return err
	}

	*o = AddServicePlansRequestServicePlan(varAddServicePlansRequestServicePlan)

	return err
}

type NullableAddServicePlansRequestServicePlan struct {
	value *AddServicePlansRequestServicePlan
	isSet bool
}

func (v NullableAddServicePlansRequestServicePlan) Get() *AddServicePlansRequestServicePlan {
	return v.value
}

func (v *NullableAddServicePlansRequestServicePlan) Set(val *AddServicePlansRequestServicePlan) {
	v.value = val
	v.isSet = true
}

func (v NullableAddServicePlansRequestServicePlan) IsSet() bool {
	return v.isSet
}

func (v *NullableAddServicePlansRequestServicePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddServicePlansRequestServicePlan(val *AddServicePlansRequestServicePlan) *NullableAddServicePlansRequestServicePlan {
	return &NullableAddServicePlansRequestServicePlan{value: val, isSet: true}
}

func (v NullableAddServicePlansRequestServicePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddServicePlansRequestServicePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


