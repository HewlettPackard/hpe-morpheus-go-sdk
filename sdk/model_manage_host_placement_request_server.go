/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ManageHostPlacementRequestServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManageHostPlacementRequestServer{}

// ManageHostPlacementRequestServer struct for ManageHostPlacementRequestServer
type ManageHostPlacementRequestServer struct {
	// Placement Strategy
	PlacementStrategy *string `json:"placementStrategy,omitempty"`
	PreferredParentServer *ManageHostPlacementRequestServerPreferredParentServer `json:"preferredParentServer,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManageHostPlacementRequestServer ManageHostPlacementRequestServer

// NewManageHostPlacementRequestServer instantiates a new ManageHostPlacementRequestServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageHostPlacementRequestServer() *ManageHostPlacementRequestServer {
	this := ManageHostPlacementRequestServer{}
	return &this
}

// NewManageHostPlacementRequestServerWithDefaults instantiates a new ManageHostPlacementRequestServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageHostPlacementRequestServerWithDefaults() *ManageHostPlacementRequestServer {
	this := ManageHostPlacementRequestServer{}
	return &this
}

// GetPlacementStrategy returns the PlacementStrategy field value if set, zero value otherwise.
func (o *ManageHostPlacementRequestServer) GetPlacementStrategy() string {
	if o == nil || IsNil(o.PlacementStrategy) {
		var ret string
		return ret
	}
	return *o.PlacementStrategy
}

// GetPlacementStrategyOk returns a tuple with the PlacementStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageHostPlacementRequestServer) GetPlacementStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.PlacementStrategy) {
		return nil, false
	}
	return o.PlacementStrategy, true
}

// IsSetPlacementStrategy returns a boolean if a field has been set.
func (o *ManageHostPlacementRequestServer) IsSetPlacementStrategy() bool {
	if o != nil && !IsNil(o.PlacementStrategy) {
		return true
	}

	return false
}

// SetPlacementStrategy gets a reference to the given string and assigns it to the PlacementStrategy field.
func (o *ManageHostPlacementRequestServer) SetPlacementStrategy(v string) {
	o.PlacementStrategy = &v
}

// GetPreferredParentServer returns the PreferredParentServer field value if set, zero value otherwise.
func (o *ManageHostPlacementRequestServer) GetPreferredParentServer() ManageHostPlacementRequestServerPreferredParentServer {
	if o == nil || IsNil(o.PreferredParentServer) {
		var ret ManageHostPlacementRequestServerPreferredParentServer
		return ret
	}
	return *o.PreferredParentServer
}

// GetPreferredParentServerOk returns a tuple with the PreferredParentServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageHostPlacementRequestServer) GetPreferredParentServerOk() (*ManageHostPlacementRequestServerPreferredParentServer, bool) {
	if o == nil || IsNil(o.PreferredParentServer) {
		return nil, false
	}
	return o.PreferredParentServer, true
}

// IsSetPreferredParentServer returns a boolean if a field has been set.
func (o *ManageHostPlacementRequestServer) IsSetPreferredParentServer() bool {
	if o != nil && !IsNil(o.PreferredParentServer) {
		return true
	}

	return false
}

// SetPreferredParentServer gets a reference to the given ManageHostPlacementRequestServerPreferredParentServer and assigns it to the PreferredParentServer field.
func (o *ManageHostPlacementRequestServer) SetPreferredParentServer(v ManageHostPlacementRequestServerPreferredParentServer) {
	o.PreferredParentServer = &v
}

func (o ManageHostPlacementRequestServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManageHostPlacementRequestServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlacementStrategy) {
		toSerialize["placementStrategy"] = o.PlacementStrategy
	}
	if !IsNil(o.PreferredParentServer) {
		toSerialize["preferredParentServer"] = o.PreferredParentServer
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManageHostPlacementRequestServer) UnmarshalJSON(data []byte) (err error) {
	varManageHostPlacementRequestServer := _ManageHostPlacementRequestServer{}

	err = json.Unmarshal(data, &varManageHostPlacementRequestServer)

	if err != nil {
		return err
	}

	*o = ManageHostPlacementRequestServer(varManageHostPlacementRequestServer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "placementStrategy")
		delete(additionalProperties, "preferredParentServer")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManageHostPlacementRequestServer struct {
	value *ManageHostPlacementRequestServer
	isSet bool
}

func (v NullableManageHostPlacementRequestServer) Get() *ManageHostPlacementRequestServer {
	return v.value
}

func (v *NullableManageHostPlacementRequestServer) Set(val *ManageHostPlacementRequestServer) {
	v.value = val
	v.isSet = true
}

func (v NullableManageHostPlacementRequestServer) IsSet() bool {
	return v.isSet
}

func (v *NullableManageHostPlacementRequestServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageHostPlacementRequestServer(val *ManageHostPlacementRequestServer) *NullableManageHostPlacementRequestServer {
	return &NullableManageHostPlacementRequestServer{value: val, isSet: true}
}

func (v NullableManageHostPlacementRequestServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageHostPlacementRequestServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


