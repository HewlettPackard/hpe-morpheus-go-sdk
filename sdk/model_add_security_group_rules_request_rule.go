/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddSecurityGroupRulesRequestRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSecurityGroupRulesRequestRule{}

// AddSecurityGroupRulesRequestRule struct for AddSecurityGroupRulesRequestRule
type AddSecurityGroupRulesRequestRule struct {
	// A name for the rule
	Name *string `json:"name,omitempty"`
	// Either `ingress` or `egress`
	Direction *string `json:"direction,omitempty"`
	// Either `cidr`, `group`, `tier`, `all`
	SourceType *string `json:"sourceType,omitempty"`
	// CIDR representing the source IP(s) which should receive access. Required for `sourceType`=cidr
	Source *string `json:"source,omitempty"`
	SourceGroup *AddSecurityGroupRulesRequestRuleSourceGroup `json:"sourceGroup,omitempty"`
	SourceTier *AddSecurityGroupRulesRequestRuleSourceTier `json:"sourceTier,omitempty"`
	// Either a single value (i.e. 55) or a port range (i.e. 1-65535) for which to open access to the source. Required if customRule is true, otherwise, ignored. 
	PortRange *string `json:"portRange,omitempty"`
	// Either a single value (i.e. 55) or a port range (i.e. 1-65535) for which to open access to the destination. 
	DestinationPortRange *string `json:"destinationPortRange,omitempty"`
	// Either tcp, udp, icmp. Required if customRule is true, otherwise, ignored.
	Protocol string `json:"protocol"`
	// Either cidr, group, tier, instance.
	DestinationType *string `json:"destinationType,omitempty"`
	// CIDR representing the destination IP(s) which should receive access. Required for `destinationType`=cidr.
	Destination *string `json:"destination,omitempty"`
	DestinationGroup *AddSecurityGroupRulesRequestRuleDestinationGroup `json:"destinationGroup,omitempty"`
	DestinationTier *AddSecurityGroupRulesRequestRuleDestinationTier `json:"destinationTier,omitempty"`
	// Either `customRule` or an `instance type` code.
	RuleType string `json:"ruleType"`
	// Either `accept` or `deny`.
	Policy *string `json:"policy,omitempty"`
	// The id of an Instance Type. If specified, the source CIDR will have access to all ports exposed by the particular instance in the cloud, app, or instance. Required if customRule is false, otherwise ignored. 
	InstanceTypeId *int64 `json:"instanceTypeId,omitempty"`
}

type _AddSecurityGroupRulesRequestRule AddSecurityGroupRulesRequestRule

// NewAddSecurityGroupRulesRequestRule instantiates a new AddSecurityGroupRulesRequestRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSecurityGroupRulesRequestRule(protocol string, ruleType string) *AddSecurityGroupRulesRequestRule {
	this := AddSecurityGroupRulesRequestRule{}
	var direction string = "ingress"
	this.Direction = &direction
	var sourceType string = "cidr"
	this.SourceType = &sourceType
	this.Protocol = protocol
	var destinationType string = "cidr"
	this.DestinationType = &destinationType
	this.RuleType = ruleType
	return &this
}

// NewAddSecurityGroupRulesRequestRuleWithDefaults instantiates a new AddSecurityGroupRulesRequestRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSecurityGroupRulesRequestRuleWithDefaults() *AddSecurityGroupRulesRequestRule {
	this := AddSecurityGroupRulesRequestRule{}
	var direction string = "ingress"
	this.Direction = &direction
	var sourceType string = "cidr"
	this.SourceType = &sourceType
	var destinationType string = "cidr"
	this.DestinationType = &destinationType
	var ruleType string = "customRule"
	this.RuleType = ruleType
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddSecurityGroupRulesRequestRule) SetName(v string) {
	o.Name = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// IsSetDirection returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *AddSecurityGroupRulesRequestRule) SetDirection(v string) {
	o.Direction = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// IsSetSourceType returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *AddSecurityGroupRulesRequestRule) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// IsSetSource returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *AddSecurityGroupRulesRequestRule) SetSource(v string) {
	o.Source = &v
}

// GetSourceGroup returns the SourceGroup field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetSourceGroup() AddSecurityGroupRulesRequestRuleSourceGroup {
	if o == nil || IsNil(o.SourceGroup) {
		var ret AddSecurityGroupRulesRequestRuleSourceGroup
		return ret
	}
	return *o.SourceGroup
}

// GetSourceGroupOk returns a tuple with the SourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetSourceGroupOk() (*AddSecurityGroupRulesRequestRuleSourceGroup, bool) {
	if o == nil || IsNil(o.SourceGroup) {
		return nil, false
	}
	return o.SourceGroup, true
}

// IsSetSourceGroup returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetSourceGroup() bool {
	if o != nil && !IsNil(o.SourceGroup) {
		return true
	}

	return false
}

// SetSourceGroup gets a reference to the given AddSecurityGroupRulesRequestRuleSourceGroup and assigns it to the SourceGroup field.
func (o *AddSecurityGroupRulesRequestRule) SetSourceGroup(v AddSecurityGroupRulesRequestRuleSourceGroup) {
	o.SourceGroup = &v
}

// GetSourceTier returns the SourceTier field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetSourceTier() AddSecurityGroupRulesRequestRuleSourceTier {
	if o == nil || IsNil(o.SourceTier) {
		var ret AddSecurityGroupRulesRequestRuleSourceTier
		return ret
	}
	return *o.SourceTier
}

// GetSourceTierOk returns a tuple with the SourceTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetSourceTierOk() (*AddSecurityGroupRulesRequestRuleSourceTier, bool) {
	if o == nil || IsNil(o.SourceTier) {
		return nil, false
	}
	return o.SourceTier, true
}

// IsSetSourceTier returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetSourceTier() bool {
	if o != nil && !IsNil(o.SourceTier) {
		return true
	}

	return false
}

// SetSourceTier gets a reference to the given AddSecurityGroupRulesRequestRuleSourceTier and assigns it to the SourceTier field.
func (o *AddSecurityGroupRulesRequestRule) SetSourceTier(v AddSecurityGroupRulesRequestRuleSourceTier) {
	o.SourceTier = &v
}

// GetPortRange returns the PortRange field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetPortRange() string {
	if o == nil || IsNil(o.PortRange) {
		var ret string
		return ret
	}
	return *o.PortRange
}

// GetPortRangeOk returns a tuple with the PortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetPortRangeOk() (*string, bool) {
	if o == nil || IsNil(o.PortRange) {
		return nil, false
	}
	return o.PortRange, true
}

// IsSetPortRange returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetPortRange() bool {
	if o != nil && !IsNil(o.PortRange) {
		return true
	}

	return false
}

// SetPortRange gets a reference to the given string and assigns it to the PortRange field.
func (o *AddSecurityGroupRulesRequestRule) SetPortRange(v string) {
	o.PortRange = &v
}

// GetDestinationPortRange returns the DestinationPortRange field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationPortRange() string {
	if o == nil || IsNil(o.DestinationPortRange) {
		var ret string
		return ret
	}
	return *o.DestinationPortRange
}

// GetDestinationPortRangeOk returns a tuple with the DestinationPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationPortRangeOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationPortRange) {
		return nil, false
	}
	return o.DestinationPortRange, true
}

// IsSetDestinationPortRange returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDestinationPortRange() bool {
	if o != nil && !IsNil(o.DestinationPortRange) {
		return true
	}

	return false
}

// SetDestinationPortRange gets a reference to the given string and assigns it to the DestinationPortRange field.
func (o *AddSecurityGroupRulesRequestRule) SetDestinationPortRange(v string) {
	o.DestinationPortRange = &v
}

// GetProtocol returns the Protocol field value
func (o *AddSecurityGroupRulesRequestRule) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *AddSecurityGroupRulesRequestRule) SetProtocol(v string) {
	o.Protocol = v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationType() string {
	if o == nil || IsNil(o.DestinationType) {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationType) {
		return nil, false
	}
	return o.DestinationType, true
}

// IsSetDestinationType returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDestinationType() bool {
	if o != nil && !IsNil(o.DestinationType) {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *AddSecurityGroupRulesRequestRule) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// IsSetDestination returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *AddSecurityGroupRulesRequestRule) SetDestination(v string) {
	o.Destination = &v
}

// GetDestinationGroup returns the DestinationGroup field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationGroup() AddSecurityGroupRulesRequestRuleDestinationGroup {
	if o == nil || IsNil(o.DestinationGroup) {
		var ret AddSecurityGroupRulesRequestRuleDestinationGroup
		return ret
	}
	return *o.DestinationGroup
}

// GetDestinationGroupOk returns a tuple with the DestinationGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationGroupOk() (*AddSecurityGroupRulesRequestRuleDestinationGroup, bool) {
	if o == nil || IsNil(o.DestinationGroup) {
		return nil, false
	}
	return o.DestinationGroup, true
}

// IsSetDestinationGroup returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDestinationGroup() bool {
	if o != nil && !IsNil(o.DestinationGroup) {
		return true
	}

	return false
}

// SetDestinationGroup gets a reference to the given AddSecurityGroupRulesRequestRuleDestinationGroup and assigns it to the DestinationGroup field.
func (o *AddSecurityGroupRulesRequestRule) SetDestinationGroup(v AddSecurityGroupRulesRequestRuleDestinationGroup) {
	o.DestinationGroup = &v
}

// GetDestinationTier returns the DestinationTier field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationTier() AddSecurityGroupRulesRequestRuleDestinationTier {
	if o == nil || IsNil(o.DestinationTier) {
		var ret AddSecurityGroupRulesRequestRuleDestinationTier
		return ret
	}
	return *o.DestinationTier
}

// GetDestinationTierOk returns a tuple with the DestinationTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetDestinationTierOk() (*AddSecurityGroupRulesRequestRuleDestinationTier, bool) {
	if o == nil || IsNil(o.DestinationTier) {
		return nil, false
	}
	return o.DestinationTier, true
}

// IsSetDestinationTier returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetDestinationTier() bool {
	if o != nil && !IsNil(o.DestinationTier) {
		return true
	}

	return false
}

// SetDestinationTier gets a reference to the given AddSecurityGroupRulesRequestRuleDestinationTier and assigns it to the DestinationTier field.
func (o *AddSecurityGroupRulesRequestRule) SetDestinationTier(v AddSecurityGroupRulesRequestRuleDestinationTier) {
	o.DestinationTier = &v
}

// GetRuleType returns the RuleType field value
func (o *AddSecurityGroupRulesRequestRule) GetRuleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetRuleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleType, true
}

// SetRuleType sets field value
func (o *AddSecurityGroupRulesRequestRule) SetRuleType(v string) {
	o.RuleType = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// IsSetPolicy returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *AddSecurityGroupRulesRequestRule) SetPolicy(v string) {
	o.Policy = &v
}

// GetInstanceTypeId returns the InstanceTypeId field value if set, zero value otherwise.
func (o *AddSecurityGroupRulesRequestRule) GetInstanceTypeId() int64 {
	if o == nil || IsNil(o.InstanceTypeId) {
		var ret int64
		return ret
	}
	return *o.InstanceTypeId
}

// GetInstanceTypeIdOk returns a tuple with the InstanceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSecurityGroupRulesRequestRule) GetInstanceTypeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InstanceTypeId) {
		return nil, false
	}
	return o.InstanceTypeId, true
}

// IsSetInstanceTypeId returns a boolean if a field has been set.
func (o *AddSecurityGroupRulesRequestRule) IsSetInstanceTypeId() bool {
	if o != nil && !IsNil(o.InstanceTypeId) {
		return true
	}

	return false
}

// SetInstanceTypeId gets a reference to the given int64 and assigns it to the InstanceTypeId field.
func (o *AddSecurityGroupRulesRequestRule) SetInstanceTypeId(v int64) {
	o.InstanceTypeId = &v
}

func (o AddSecurityGroupRulesRequestRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSecurityGroupRulesRequestRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.SourceType) {
		toSerialize["sourceType"] = o.SourceType
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.SourceGroup) {
		toSerialize["sourceGroup"] = o.SourceGroup
	}
	if !IsNil(o.SourceTier) {
		toSerialize["sourceTier"] = o.SourceTier
	}
	if !IsNil(o.PortRange) {
		toSerialize["portRange"] = o.PortRange
	}
	if !IsNil(o.DestinationPortRange) {
		toSerialize["destinationPortRange"] = o.DestinationPortRange
	}
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.DestinationType) {
		toSerialize["destinationType"] = o.DestinationType
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.DestinationGroup) {
		toSerialize["destinationGroup"] = o.DestinationGroup
	}
	if !IsNil(o.DestinationTier) {
		toSerialize["destinationTier"] = o.DestinationTier
	}
	toSerialize["ruleType"] = o.RuleType
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.InstanceTypeId) {
		toSerialize["instanceTypeId"] = o.InstanceTypeId
	}
	return toSerialize, nil
}

func (o *AddSecurityGroupRulesRequestRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protocol",
		"ruleType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddSecurityGroupRulesRequestRule := _AddSecurityGroupRulesRequestRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddSecurityGroupRulesRequestRule)

	if err != nil {
		return err
	}

	*o = AddSecurityGroupRulesRequestRule(varAddSecurityGroupRulesRequestRule)

	return err
}

type NullableAddSecurityGroupRulesRequestRule struct {
	value *AddSecurityGroupRulesRequestRule
	isSet bool
}

func (v NullableAddSecurityGroupRulesRequestRule) Get() *AddSecurityGroupRulesRequestRule {
	return v.value
}

func (v *NullableAddSecurityGroupRulesRequestRule) Set(val *AddSecurityGroupRulesRequestRule) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSecurityGroupRulesRequestRule) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSecurityGroupRulesRequestRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSecurityGroupRulesRequestRule(val *AddSecurityGroupRulesRequestRule) *NullableAddSecurityGroupRulesRequestRule {
	return &NullableAddSecurityGroupRulesRequestRule{value: val, isSet: true}
}

func (v NullableAddSecurityGroupRulesRequestRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSecurityGroupRulesRequestRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


