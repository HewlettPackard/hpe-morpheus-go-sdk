/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetClusterNamespace200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClusterNamespace200Response{}

// GetClusterNamespace200Response struct for GetClusterNamespace200Response
type GetClusterNamespace200Response struct {
	Namespace            *GetClusterNamespace200ResponseNamespace `json:"namespace,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:",remain"`
}

type _GetClusterNamespace200Response GetClusterNamespace200Response

// NewGetClusterNamespace200Response instantiates a new GetClusterNamespace200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClusterNamespace200Response() *GetClusterNamespace200Response {
	this := GetClusterNamespace200Response{}
	return &this
}

// NewGetClusterNamespace200ResponseWithDefaults instantiates a new GetClusterNamespace200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClusterNamespace200ResponseWithDefaults() *GetClusterNamespace200Response {
	this := GetClusterNamespace200Response{}
	return &this
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *GetClusterNamespace200Response) GetNamespace() GetClusterNamespace200ResponseNamespace {
	if o == nil || IsNil(o.Namespace) {
		var ret GetClusterNamespace200ResponseNamespace
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClusterNamespace200Response) GetNamespaceOk() (*GetClusterNamespace200ResponseNamespace, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// IsSetNamespace returns a boolean if a field has been set.
func (o *GetClusterNamespace200Response) IsSetNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given GetClusterNamespace200ResponseNamespace and assigns it to the Namespace field.
func (o *GetClusterNamespace200Response) SetNamespace(v GetClusterNamespace200ResponseNamespace) {
	o.Namespace = &v
}

func (o GetClusterNamespace200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClusterNamespace200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetClusterNamespace200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
