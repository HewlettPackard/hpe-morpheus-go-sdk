/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	Id *int64 `json:"id,omitempty"`
	OwnerId *int64 `json:"ownerId,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
	Group map[string]interface{} `json:"group,omitempty"`
	Cloud *ListInvoices200ResponseAllOfInvoicesInnerCloud `json:"cloud,omitempty"`
	Instance map[string]interface{} `json:"instance,omitempty"`
	Server *string `json:"server,omitempty"`
	Cluster *string `json:"cluster,omitempty"`
	User map[string]interface{} `json:"user,omitempty"`
	Plan map[string]interface{} `json:"plan,omitempty"`
	Tags []map[string]interface{} `json:"tags,omitempty"`
	Project *string `json:"project,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	RefUuid *string `json:"refUuid,omitempty"`
	RefName *string `json:"refName,omitempty"`
	RefCategory *string `json:"refCategory,omitempty"`
	ResourceId *string `json:"resourceId,omitempty"`
	ResourceUuid *string `json:"resourceUuid,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	ResourceName *string `json:"resourceName,omitempty"`
	ResourceExternalId *string `json:"resourceExternalId,omitempty"`
	ResourceInternalId *string `json:"resourceInternalId,omitempty"`
	Interval *string `json:"interval,omitempty"`
	Period *string `json:"period,omitempty"`
	Estimate *bool `json:"estimate,omitempty"`
	SummaryInvoice *bool `json:"summaryInvoice,omitempty"`
	Active *bool `json:"active,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	RefStart *time.Time `json:"refStart,omitempty"`
	RefEnd *time.Time `json:"refEnd,omitempty"`
	EstimatedComputePrice *float32 `json:"estimatedComputePrice,omitempty"`
	EstimatedComputeCost *float32 `json:"estimatedComputeCost,omitempty"`
	EstimatedMemoryPrice *float32 `json:"estimatedMemoryPrice,omitempty"`
	EstimatedMemoryCost *float32 `json:"estimatedMemoryCost,omitempty"`
	EstimatedStoragePrice *float32 `json:"estimatedStoragePrice,omitempty"`
	EstimatedStorageCost *float32 `json:"estimatedStorageCost,omitempty"`
	EstimatedNetworkPrice *float32 `json:"estimatedNetworkPrice,omitempty"`
	EstimatedNetworkCost *float32 `json:"estimatedNetworkCost,omitempty"`
	EstimatedLicensePrice *float32 `json:"estimatedLicensePrice,omitempty"`
	EstimatedLicenseCost *float32 `json:"estimatedLicenseCost,omitempty"`
	EstimatedExtraPrice *float32 `json:"estimatedExtraPrice,omitempty"`
	EstimatedExtraCost *float32 `json:"estimatedExtraCost,omitempty"`
	EstimatedTotalPrice *float32 `json:"estimatedTotalPrice,omitempty"`
	EstimatedTotalCost *float32 `json:"estimatedTotalCost,omitempty"`
	EstimatedRunningPrice *float32 `json:"estimatedRunningPrice,omitempty"`
	EstimatedRunningCost *float32 `json:"estimatedRunningCost,omitempty"`
	EstimatedCurrency *string `json:"estimatedCurrency,omitempty"`
	EstimatedConversionRate *float32 `json:"estimatedConversionRate,omitempty"`
	ActualComputePrice *float32 `json:"actualComputePrice,omitempty"`
	ActualComputeCost *float32 `json:"actualComputeCost,omitempty"`
	ActualMemoryPrice *float32 `json:"actualMemoryPrice,omitempty"`
	ActualMemoryCost *float32 `json:"actualMemoryCost,omitempty"`
	ActualStoragePrice *float32 `json:"actualStoragePrice,omitempty"`
	ActualStorageCost *float32 `json:"actualStorageCost,omitempty"`
	ActualNetworkPrice *float32 `json:"actualNetworkPrice,omitempty"`
	ActualNetworkCost *float32 `json:"actualNetworkCost,omitempty"`
	ActualLicensePrice *float32 `json:"actualLicensePrice,omitempty"`
	ActualLicenseCost *float32 `json:"actualLicenseCost,omitempty"`
	ActualExtraPrice *float32 `json:"actualExtraPrice,omitempty"`
	ActualExtraCost *float32 `json:"actualExtraCost,omitempty"`
	ActualTotalPrice *float32 `json:"actualTotalPrice,omitempty"`
	ActualTotalCost *float32 `json:"actualTotalCost,omitempty"`
	ActualRunningPrice *float32 `json:"actualRunningPrice,omitempty"`
	ActualRunningCost *float32 `json:"actualRunningCost,omitempty"`
	ActualCurrency *string `json:"actualCurrency,omitempty"`
	ActualConversionRate *float32 `json:"actualConversionRate,omitempty"`
	ComputePrice *float32 `json:"computePrice,omitempty"`
	ComputeCost *float32 `json:"computeCost,omitempty"`
	MemoryPrice *float32 `json:"memoryPrice,omitempty"`
	MemoryCost *float32 `json:"memoryCost,omitempty"`
	StoragePrice *float32 `json:"storagePrice,omitempty"`
	StorageCost *float32 `json:"storageCost,omitempty"`
	NetworkPrice *float32 `json:"networkPrice,omitempty"`
	NetworkCost *float32 `json:"networkCost,omitempty"`
	LicensePrice *float32 `json:"licensePrice,omitempty"`
	LicenseCost *float32 `json:"licenseCost,omitempty"`
	ExtraPrice *float32 `json:"extraPrice,omitempty"`
	ExtraCost *float32 `json:"extraCost,omitempty"`
	TotalPrice *float32 `json:"totalPrice,omitempty"`
	TotalCost *float32 `json:"totalCost,omitempty"`
	RunningPrice *float32 `json:"runningPrice,omitempty"`
	RunningCost *float32 `json:"runningCost,omitempty"`
	Currency *string `json:"currency,omitempty"`
	ConversionRate *float32 `json:"conversionRate,omitempty"`
	CostType *string `json:"costType,omitempty"`
	OffTime *int64 `json:"offTime,omitempty"`
	PowerState *string `json:"powerState,omitempty"`
	PowerDate *time.Time `json:"powerDate,omitempty"`
	RunningMultiplier *float32 `json:"runningMultiplier,omitempty"`
	UsageType *string `json:"usageType,omitempty"`
	UsageCategory *string `json:"usageCategory,omitempty"`
	LastCostDate *time.Time `json:"lastCostDate,omitempty"`
	LastActualDate *time.Time `json:"lastActualDate,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LineItemCount *int64 `json:"lineItemCount,omitempty"`
	LineItems []ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner `json:"lineItems,omitempty"`
}

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice() *Invoice {
	this := Invoice{}
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Invoice) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *Invoice) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Invoice) SetId(v int64) {
	o.Id = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *Invoice) GetOwnerId() int64 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int64
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetOwnerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// IsSetOwnerId returns a boolean if a field has been set.
func (o *Invoice) IsSetOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int64 and assigns it to the OwnerId field.
func (o *Invoice) SetOwnerId(v int64) {
	o.OwnerId = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Invoice) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *Invoice) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *Invoice) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Invoice) GetGroup() map[string]interface{} {
	if o == nil || IsNil(o.Group) {
		var ret map[string]interface{}
		return ret
	}
	return o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetGroupOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Group) {
		return map[string]interface{}{}, false
	}
	return o.Group, true
}

// IsSetGroup returns a boolean if a field has been set.
func (o *Invoice) IsSetGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given map[string]interface{} and assigns it to the Group field.
func (o *Invoice) SetGroup(v map[string]interface{}) {
	o.Group = v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *Invoice) GetCloud() ListInvoices200ResponseAllOfInvoicesInnerCloud {
	if o == nil || IsNil(o.Cloud) {
		var ret ListInvoices200ResponseAllOfInvoicesInnerCloud
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCloudOk() (*ListInvoices200ResponseAllOfInvoicesInnerCloud, bool) {
	if o == nil || IsNil(o.Cloud) {
		return nil, false
	}
	return o.Cloud, true
}

// IsSetCloud returns a boolean if a field has been set.
func (o *Invoice) IsSetCloud() bool {
	if o != nil && !IsNil(o.Cloud) {
		return true
	}

	return false
}

// SetCloud gets a reference to the given ListInvoices200ResponseAllOfInvoicesInnerCloud and assigns it to the Cloud field.
func (o *Invoice) SetCloud(v ListInvoices200ResponseAllOfInvoicesInnerCloud) {
	o.Cloud = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *Invoice) GetInstance() map[string]interface{} {
	if o == nil || IsNil(o.Instance) {
		var ret map[string]interface{}
		return ret
	}
	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInstanceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Instance) {
		return map[string]interface{}{}, false
	}
	return o.Instance, true
}

// IsSetInstance returns a boolean if a field has been set.
func (o *Invoice) IsSetInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given map[string]interface{} and assigns it to the Instance field.
func (o *Invoice) SetInstance(v map[string]interface{}) {
	o.Instance = v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *Invoice) GetServer() string {
	if o == nil || IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetServerOk() (*string, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// IsSetServer returns a boolean if a field has been set.
func (o *Invoice) IsSetServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *Invoice) SetServer(v string) {
	o.Server = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Invoice) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *Invoice) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Invoice) SetCluster(v string) {
	o.Cluster = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Invoice) GetUser() map[string]interface{} {
	if o == nil || IsNil(o.User) {
		var ret map[string]interface{}
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUserOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.User) {
		return map[string]interface{}{}, false
	}
	return o.User, true
}

// IsSetUser returns a boolean if a field has been set.
func (o *Invoice) IsSetUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given map[string]interface{} and assigns it to the User field.
func (o *Invoice) SetUser(v map[string]interface{}) {
	o.User = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Invoice) GetPlan() map[string]interface{} {
	if o == nil || IsNil(o.Plan) {
		var ret map[string]interface{}
		return ret
	}
	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPlanOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Plan) {
		return map[string]interface{}{}, false
	}
	return o.Plan, true
}

// IsSetPlan returns a boolean if a field has been set.
func (o *Invoice) IsSetPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given map[string]interface{} and assigns it to the Plan field.
func (o *Invoice) SetPlan(v map[string]interface{}) {
	o.Plan = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Invoice) GetTags() []map[string]interface{} {
	if o == nil || IsNil(o.Tags) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTagsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *Invoice) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *Invoice) SetTags(v []map[string]interface{}) {
	o.Tags = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *Invoice) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// IsSetProject returns a boolean if a field has been set.
func (o *Invoice) IsSetProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *Invoice) SetProject(v string) {
	o.Project = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *Invoice) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *Invoice) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *Invoice) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *Invoice) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *Invoice) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *Invoice) SetRefId(v int64) {
	o.RefId = &v
}

// GetRefUuid returns the RefUuid field value if set, zero value otherwise.
func (o *Invoice) GetRefUuid() string {
	if o == nil || IsNil(o.RefUuid) {
		var ret string
		return ret
	}
	return *o.RefUuid
}

// GetRefUuidOk returns a tuple with the RefUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RefUuid) {
		return nil, false
	}
	return o.RefUuid, true
}

// IsSetRefUuid returns a boolean if a field has been set.
func (o *Invoice) IsSetRefUuid() bool {
	if o != nil && !IsNil(o.RefUuid) {
		return true
	}

	return false
}

// SetRefUuid gets a reference to the given string and assigns it to the RefUuid field.
func (o *Invoice) SetRefUuid(v string) {
	o.RefUuid = &v
}

// GetRefName returns the RefName field value if set, zero value otherwise.
func (o *Invoice) GetRefName() string {
	if o == nil || IsNil(o.RefName) {
		var ret string
		return ret
	}
	return *o.RefName
}

// GetRefNameOk returns a tuple with the RefName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefNameOk() (*string, bool) {
	if o == nil || IsNil(o.RefName) {
		return nil, false
	}
	return o.RefName, true
}

// IsSetRefName returns a boolean if a field has been set.
func (o *Invoice) IsSetRefName() bool {
	if o != nil && !IsNil(o.RefName) {
		return true
	}

	return false
}

// SetRefName gets a reference to the given string and assigns it to the RefName field.
func (o *Invoice) SetRefName(v string) {
	o.RefName = &v
}

// GetRefCategory returns the RefCategory field value if set, zero value otherwise.
func (o *Invoice) GetRefCategory() string {
	if o == nil || IsNil(o.RefCategory) {
		var ret string
		return ret
	}
	return *o.RefCategory
}

// GetRefCategoryOk returns a tuple with the RefCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.RefCategory) {
		return nil, false
	}
	return o.RefCategory, true
}

// IsSetRefCategory returns a boolean if a field has been set.
func (o *Invoice) IsSetRefCategory() bool {
	if o != nil && !IsNil(o.RefCategory) {
		return true
	}

	return false
}

// SetRefCategory gets a reference to the given string and assigns it to the RefCategory field.
func (o *Invoice) SetRefCategory(v string) {
	o.RefCategory = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *Invoice) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// IsSetResourceId returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *Invoice) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceUuid returns the ResourceUuid field value if set, zero value otherwise.
func (o *Invoice) GetResourceUuid() string {
	if o == nil || IsNil(o.ResourceUuid) {
		var ret string
		return ret
	}
	return *o.ResourceUuid
}

// GetResourceUuidOk returns a tuple with the ResourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUuid) {
		return nil, false
	}
	return o.ResourceUuid, true
}

// IsSetResourceUuid returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceUuid() bool {
	if o != nil && !IsNil(o.ResourceUuid) {
		return true
	}

	return false
}

// SetResourceUuid gets a reference to the given string and assigns it to the ResourceUuid field.
func (o *Invoice) SetResourceUuid(v string) {
	o.ResourceUuid = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *Invoice) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// IsSetResourceType returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *Invoice) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *Invoice) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// IsSetResourceName returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *Invoice) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetResourceExternalId returns the ResourceExternalId field value if set, zero value otherwise.
func (o *Invoice) GetResourceExternalId() string {
	if o == nil || IsNil(o.ResourceExternalId) {
		var ret string
		return ret
	}
	return *o.ResourceExternalId
}

// GetResourceExternalIdOk returns a tuple with the ResourceExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceExternalId) {
		return nil, false
	}
	return o.ResourceExternalId, true
}

// IsSetResourceExternalId returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceExternalId() bool {
	if o != nil && !IsNil(o.ResourceExternalId) {
		return true
	}

	return false
}

// SetResourceExternalId gets a reference to the given string and assigns it to the ResourceExternalId field.
func (o *Invoice) SetResourceExternalId(v string) {
	o.ResourceExternalId = &v
}

// GetResourceInternalId returns the ResourceInternalId field value if set, zero value otherwise.
func (o *Invoice) GetResourceInternalId() string {
	if o == nil || IsNil(o.ResourceInternalId) {
		var ret string
		return ret
	}
	return *o.ResourceInternalId
}

// GetResourceInternalIdOk returns a tuple with the ResourceInternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetResourceInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceInternalId) {
		return nil, false
	}
	return o.ResourceInternalId, true
}

// IsSetResourceInternalId returns a boolean if a field has been set.
func (o *Invoice) IsSetResourceInternalId() bool {
	if o != nil && !IsNil(o.ResourceInternalId) {
		return true
	}

	return false
}

// SetResourceInternalId gets a reference to the given string and assigns it to the ResourceInternalId field.
func (o *Invoice) SetResourceInternalId(v string) {
	o.ResourceInternalId = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *Invoice) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// IsSetInterval returns a boolean if a field has been set.
func (o *Invoice) IsSetInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *Invoice) SetInterval(v string) {
	o.Interval = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *Invoice) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// IsSetPeriod returns a boolean if a field has been set.
func (o *Invoice) IsSetPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *Invoice) SetPeriod(v string) {
	o.Period = &v
}

// GetEstimate returns the Estimate field value if set, zero value otherwise.
func (o *Invoice) GetEstimate() bool {
	if o == nil || IsNil(o.Estimate) {
		var ret bool
		return ret
	}
	return *o.Estimate
}

// GetEstimateOk returns a tuple with the Estimate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimateOk() (*bool, bool) {
	if o == nil || IsNil(o.Estimate) {
		return nil, false
	}
	return o.Estimate, true
}

// IsSetEstimate returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimate() bool {
	if o != nil && !IsNil(o.Estimate) {
		return true
	}

	return false
}

// SetEstimate gets a reference to the given bool and assigns it to the Estimate field.
func (o *Invoice) SetEstimate(v bool) {
	o.Estimate = &v
}

// GetSummaryInvoice returns the SummaryInvoice field value if set, zero value otherwise.
func (o *Invoice) GetSummaryInvoice() bool {
	if o == nil || IsNil(o.SummaryInvoice) {
		var ret bool
		return ret
	}
	return *o.SummaryInvoice
}

// GetSummaryInvoiceOk returns a tuple with the SummaryInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSummaryInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.SummaryInvoice) {
		return nil, false
	}
	return o.SummaryInvoice, true
}

// IsSetSummaryInvoice returns a boolean if a field has been set.
func (o *Invoice) IsSetSummaryInvoice() bool {
	if o != nil && !IsNil(o.SummaryInvoice) {
		return true
	}

	return false
}

// SetSummaryInvoice gets a reference to the given bool and assigns it to the SummaryInvoice field.
func (o *Invoice) SetSummaryInvoice(v bool) {
	o.SummaryInvoice = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Invoice) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// IsSetActive returns a boolean if a field has been set.
func (o *Invoice) IsSetActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Invoice) SetActive(v bool) {
	o.Active = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *Invoice) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// IsSetStartDate returns a boolean if a field has been set.
func (o *Invoice) IsSetStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *Invoice) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *Invoice) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// IsSetEndDate returns a boolean if a field has been set.
func (o *Invoice) IsSetEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *Invoice) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetRefStart returns the RefStart field value if set, zero value otherwise.
func (o *Invoice) GetRefStart() time.Time {
	if o == nil || IsNil(o.RefStart) {
		var ret time.Time
		return ret
	}
	return *o.RefStart
}

// GetRefStartOk returns a tuple with the RefStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RefStart) {
		return nil, false
	}
	return o.RefStart, true
}

// IsSetRefStart returns a boolean if a field has been set.
func (o *Invoice) IsSetRefStart() bool {
	if o != nil && !IsNil(o.RefStart) {
		return true
	}

	return false
}

// SetRefStart gets a reference to the given time.Time and assigns it to the RefStart field.
func (o *Invoice) SetRefStart(v time.Time) {
	o.RefStart = &v
}

// GetRefEnd returns the RefEnd field value if set, zero value otherwise.
func (o *Invoice) GetRefEnd() time.Time {
	if o == nil || IsNil(o.RefEnd) {
		var ret time.Time
		return ret
	}
	return *o.RefEnd
}

// GetRefEndOk returns a tuple with the RefEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRefEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RefEnd) {
		return nil, false
	}
	return o.RefEnd, true
}

// IsSetRefEnd returns a boolean if a field has been set.
func (o *Invoice) IsSetRefEnd() bool {
	if o != nil && !IsNil(o.RefEnd) {
		return true
	}

	return false
}

// SetRefEnd gets a reference to the given time.Time and assigns it to the RefEnd field.
func (o *Invoice) SetRefEnd(v time.Time) {
	o.RefEnd = &v
}

// GetEstimatedComputePrice returns the EstimatedComputePrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedComputePrice() float32 {
	if o == nil || IsNil(o.EstimatedComputePrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedComputePrice
}

// GetEstimatedComputePriceOk returns a tuple with the EstimatedComputePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedComputePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedComputePrice) {
		return nil, false
	}
	return o.EstimatedComputePrice, true
}

// IsSetEstimatedComputePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedComputePrice() bool {
	if o != nil && !IsNil(o.EstimatedComputePrice) {
		return true
	}

	return false
}

// SetEstimatedComputePrice gets a reference to the given float32 and assigns it to the EstimatedComputePrice field.
func (o *Invoice) SetEstimatedComputePrice(v float32) {
	o.EstimatedComputePrice = &v
}

// GetEstimatedComputeCost returns the EstimatedComputeCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedComputeCost() float32 {
	if o == nil || IsNil(o.EstimatedComputeCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedComputeCost
}

// GetEstimatedComputeCostOk returns a tuple with the EstimatedComputeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedComputeCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedComputeCost) {
		return nil, false
	}
	return o.EstimatedComputeCost, true
}

// IsSetEstimatedComputeCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedComputeCost() bool {
	if o != nil && !IsNil(o.EstimatedComputeCost) {
		return true
	}

	return false
}

// SetEstimatedComputeCost gets a reference to the given float32 and assigns it to the EstimatedComputeCost field.
func (o *Invoice) SetEstimatedComputeCost(v float32) {
	o.EstimatedComputeCost = &v
}

// GetEstimatedMemoryPrice returns the EstimatedMemoryPrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedMemoryPrice() float32 {
	if o == nil || IsNil(o.EstimatedMemoryPrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedMemoryPrice
}

// GetEstimatedMemoryPriceOk returns a tuple with the EstimatedMemoryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedMemoryPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedMemoryPrice) {
		return nil, false
	}
	return o.EstimatedMemoryPrice, true
}

// IsSetEstimatedMemoryPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedMemoryPrice() bool {
	if o != nil && !IsNil(o.EstimatedMemoryPrice) {
		return true
	}

	return false
}

// SetEstimatedMemoryPrice gets a reference to the given float32 and assigns it to the EstimatedMemoryPrice field.
func (o *Invoice) SetEstimatedMemoryPrice(v float32) {
	o.EstimatedMemoryPrice = &v
}

// GetEstimatedMemoryCost returns the EstimatedMemoryCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedMemoryCost() float32 {
	if o == nil || IsNil(o.EstimatedMemoryCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedMemoryCost
}

// GetEstimatedMemoryCostOk returns a tuple with the EstimatedMemoryCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedMemoryCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedMemoryCost) {
		return nil, false
	}
	return o.EstimatedMemoryCost, true
}

// IsSetEstimatedMemoryCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedMemoryCost() bool {
	if o != nil && !IsNil(o.EstimatedMemoryCost) {
		return true
	}

	return false
}

// SetEstimatedMemoryCost gets a reference to the given float32 and assigns it to the EstimatedMemoryCost field.
func (o *Invoice) SetEstimatedMemoryCost(v float32) {
	o.EstimatedMemoryCost = &v
}

// GetEstimatedStoragePrice returns the EstimatedStoragePrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedStoragePrice() float32 {
	if o == nil || IsNil(o.EstimatedStoragePrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedStoragePrice
}

// GetEstimatedStoragePriceOk returns a tuple with the EstimatedStoragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedStoragePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedStoragePrice) {
		return nil, false
	}
	return o.EstimatedStoragePrice, true
}

// IsSetEstimatedStoragePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedStoragePrice() bool {
	if o != nil && !IsNil(o.EstimatedStoragePrice) {
		return true
	}

	return false
}

// SetEstimatedStoragePrice gets a reference to the given float32 and assigns it to the EstimatedStoragePrice field.
func (o *Invoice) SetEstimatedStoragePrice(v float32) {
	o.EstimatedStoragePrice = &v
}

// GetEstimatedStorageCost returns the EstimatedStorageCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedStorageCost() float32 {
	if o == nil || IsNil(o.EstimatedStorageCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedStorageCost
}

// GetEstimatedStorageCostOk returns a tuple with the EstimatedStorageCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedStorageCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedStorageCost) {
		return nil, false
	}
	return o.EstimatedStorageCost, true
}

// IsSetEstimatedStorageCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedStorageCost() bool {
	if o != nil && !IsNil(o.EstimatedStorageCost) {
		return true
	}

	return false
}

// SetEstimatedStorageCost gets a reference to the given float32 and assigns it to the EstimatedStorageCost field.
func (o *Invoice) SetEstimatedStorageCost(v float32) {
	o.EstimatedStorageCost = &v
}

// GetEstimatedNetworkPrice returns the EstimatedNetworkPrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedNetworkPrice() float32 {
	if o == nil || IsNil(o.EstimatedNetworkPrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedNetworkPrice
}

// GetEstimatedNetworkPriceOk returns a tuple with the EstimatedNetworkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedNetworkPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedNetworkPrice) {
		return nil, false
	}
	return o.EstimatedNetworkPrice, true
}

// IsSetEstimatedNetworkPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedNetworkPrice() bool {
	if o != nil && !IsNil(o.EstimatedNetworkPrice) {
		return true
	}

	return false
}

// SetEstimatedNetworkPrice gets a reference to the given float32 and assigns it to the EstimatedNetworkPrice field.
func (o *Invoice) SetEstimatedNetworkPrice(v float32) {
	o.EstimatedNetworkPrice = &v
}

// GetEstimatedNetworkCost returns the EstimatedNetworkCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedNetworkCost() float32 {
	if o == nil || IsNil(o.EstimatedNetworkCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedNetworkCost
}

// GetEstimatedNetworkCostOk returns a tuple with the EstimatedNetworkCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedNetworkCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedNetworkCost) {
		return nil, false
	}
	return o.EstimatedNetworkCost, true
}

// IsSetEstimatedNetworkCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedNetworkCost() bool {
	if o != nil && !IsNil(o.EstimatedNetworkCost) {
		return true
	}

	return false
}

// SetEstimatedNetworkCost gets a reference to the given float32 and assigns it to the EstimatedNetworkCost field.
func (o *Invoice) SetEstimatedNetworkCost(v float32) {
	o.EstimatedNetworkCost = &v
}

// GetEstimatedLicensePrice returns the EstimatedLicensePrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedLicensePrice() float32 {
	if o == nil || IsNil(o.EstimatedLicensePrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedLicensePrice
}

// GetEstimatedLicensePriceOk returns a tuple with the EstimatedLicensePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedLicensePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedLicensePrice) {
		return nil, false
	}
	return o.EstimatedLicensePrice, true
}

// IsSetEstimatedLicensePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedLicensePrice() bool {
	if o != nil && !IsNil(o.EstimatedLicensePrice) {
		return true
	}

	return false
}

// SetEstimatedLicensePrice gets a reference to the given float32 and assigns it to the EstimatedLicensePrice field.
func (o *Invoice) SetEstimatedLicensePrice(v float32) {
	o.EstimatedLicensePrice = &v
}

// GetEstimatedLicenseCost returns the EstimatedLicenseCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedLicenseCost() float32 {
	if o == nil || IsNil(o.EstimatedLicenseCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedLicenseCost
}

// GetEstimatedLicenseCostOk returns a tuple with the EstimatedLicenseCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedLicenseCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedLicenseCost) {
		return nil, false
	}
	return o.EstimatedLicenseCost, true
}

// IsSetEstimatedLicenseCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedLicenseCost() bool {
	if o != nil && !IsNil(o.EstimatedLicenseCost) {
		return true
	}

	return false
}

// SetEstimatedLicenseCost gets a reference to the given float32 and assigns it to the EstimatedLicenseCost field.
func (o *Invoice) SetEstimatedLicenseCost(v float32) {
	o.EstimatedLicenseCost = &v
}

// GetEstimatedExtraPrice returns the EstimatedExtraPrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedExtraPrice() float32 {
	if o == nil || IsNil(o.EstimatedExtraPrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedExtraPrice
}

// GetEstimatedExtraPriceOk returns a tuple with the EstimatedExtraPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedExtraPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedExtraPrice) {
		return nil, false
	}
	return o.EstimatedExtraPrice, true
}

// IsSetEstimatedExtraPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedExtraPrice() bool {
	if o != nil && !IsNil(o.EstimatedExtraPrice) {
		return true
	}

	return false
}

// SetEstimatedExtraPrice gets a reference to the given float32 and assigns it to the EstimatedExtraPrice field.
func (o *Invoice) SetEstimatedExtraPrice(v float32) {
	o.EstimatedExtraPrice = &v
}

// GetEstimatedExtraCost returns the EstimatedExtraCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedExtraCost() float32 {
	if o == nil || IsNil(o.EstimatedExtraCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedExtraCost
}

// GetEstimatedExtraCostOk returns a tuple with the EstimatedExtraCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedExtraCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedExtraCost) {
		return nil, false
	}
	return o.EstimatedExtraCost, true
}

// IsSetEstimatedExtraCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedExtraCost() bool {
	if o != nil && !IsNil(o.EstimatedExtraCost) {
		return true
	}

	return false
}

// SetEstimatedExtraCost gets a reference to the given float32 and assigns it to the EstimatedExtraCost field.
func (o *Invoice) SetEstimatedExtraCost(v float32) {
	o.EstimatedExtraCost = &v
}

// GetEstimatedTotalPrice returns the EstimatedTotalPrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedTotalPrice() float32 {
	if o == nil || IsNil(o.EstimatedTotalPrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedTotalPrice
}

// GetEstimatedTotalPriceOk returns a tuple with the EstimatedTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedTotalPrice) {
		return nil, false
	}
	return o.EstimatedTotalPrice, true
}

// IsSetEstimatedTotalPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedTotalPrice() bool {
	if o != nil && !IsNil(o.EstimatedTotalPrice) {
		return true
	}

	return false
}

// SetEstimatedTotalPrice gets a reference to the given float32 and assigns it to the EstimatedTotalPrice field.
func (o *Invoice) SetEstimatedTotalPrice(v float32) {
	o.EstimatedTotalPrice = &v
}

// GetEstimatedTotalCost returns the EstimatedTotalCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedTotalCost() float32 {
	if o == nil || IsNil(o.EstimatedTotalCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedTotalCost
}

// GetEstimatedTotalCostOk returns a tuple with the EstimatedTotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedTotalCost) {
		return nil, false
	}
	return o.EstimatedTotalCost, true
}

// IsSetEstimatedTotalCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedTotalCost() bool {
	if o != nil && !IsNil(o.EstimatedTotalCost) {
		return true
	}

	return false
}

// SetEstimatedTotalCost gets a reference to the given float32 and assigns it to the EstimatedTotalCost field.
func (o *Invoice) SetEstimatedTotalCost(v float32) {
	o.EstimatedTotalCost = &v
}

// GetEstimatedRunningPrice returns the EstimatedRunningPrice field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedRunningPrice() float32 {
	if o == nil || IsNil(o.EstimatedRunningPrice) {
		var ret float32
		return ret
	}
	return *o.EstimatedRunningPrice
}

// GetEstimatedRunningPriceOk returns a tuple with the EstimatedRunningPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedRunningPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedRunningPrice) {
		return nil, false
	}
	return o.EstimatedRunningPrice, true
}

// IsSetEstimatedRunningPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedRunningPrice() bool {
	if o != nil && !IsNil(o.EstimatedRunningPrice) {
		return true
	}

	return false
}

// SetEstimatedRunningPrice gets a reference to the given float32 and assigns it to the EstimatedRunningPrice field.
func (o *Invoice) SetEstimatedRunningPrice(v float32) {
	o.EstimatedRunningPrice = &v
}

// GetEstimatedRunningCost returns the EstimatedRunningCost field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedRunningCost() float32 {
	if o == nil || IsNil(o.EstimatedRunningCost) {
		var ret float32
		return ret
	}
	return *o.EstimatedRunningCost
}

// GetEstimatedRunningCostOk returns a tuple with the EstimatedRunningCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedRunningCostOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedRunningCost) {
		return nil, false
	}
	return o.EstimatedRunningCost, true
}

// IsSetEstimatedRunningCost returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedRunningCost() bool {
	if o != nil && !IsNil(o.EstimatedRunningCost) {
		return true
	}

	return false
}

// SetEstimatedRunningCost gets a reference to the given float32 and assigns it to the EstimatedRunningCost field.
func (o *Invoice) SetEstimatedRunningCost(v float32) {
	o.EstimatedRunningCost = &v
}

// GetEstimatedCurrency returns the EstimatedCurrency field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedCurrency() string {
	if o == nil || IsNil(o.EstimatedCurrency) {
		var ret string
		return ret
	}
	return *o.EstimatedCurrency
}

// GetEstimatedCurrencyOk returns a tuple with the EstimatedCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.EstimatedCurrency) {
		return nil, false
	}
	return o.EstimatedCurrency, true
}

// IsSetEstimatedCurrency returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedCurrency() bool {
	if o != nil && !IsNil(o.EstimatedCurrency) {
		return true
	}

	return false
}

// SetEstimatedCurrency gets a reference to the given string and assigns it to the EstimatedCurrency field.
func (o *Invoice) SetEstimatedCurrency(v string) {
	o.EstimatedCurrency = &v
}

// GetEstimatedConversionRate returns the EstimatedConversionRate field value if set, zero value otherwise.
func (o *Invoice) GetEstimatedConversionRate() float32 {
	if o == nil || IsNil(o.EstimatedConversionRate) {
		var ret float32
		return ret
	}
	return *o.EstimatedConversionRate
}

// GetEstimatedConversionRateOk returns a tuple with the EstimatedConversionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetEstimatedConversionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedConversionRate) {
		return nil, false
	}
	return o.EstimatedConversionRate, true
}

// IsSetEstimatedConversionRate returns a boolean if a field has been set.
func (o *Invoice) IsSetEstimatedConversionRate() bool {
	if o != nil && !IsNil(o.EstimatedConversionRate) {
		return true
	}

	return false
}

// SetEstimatedConversionRate gets a reference to the given float32 and assigns it to the EstimatedConversionRate field.
func (o *Invoice) SetEstimatedConversionRate(v float32) {
	o.EstimatedConversionRate = &v
}

// GetActualComputePrice returns the ActualComputePrice field value if set, zero value otherwise.
func (o *Invoice) GetActualComputePrice() float32 {
	if o == nil || IsNil(o.ActualComputePrice) {
		var ret float32
		return ret
	}
	return *o.ActualComputePrice
}

// GetActualComputePriceOk returns a tuple with the ActualComputePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualComputePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualComputePrice) {
		return nil, false
	}
	return o.ActualComputePrice, true
}

// IsSetActualComputePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualComputePrice() bool {
	if o != nil && !IsNil(o.ActualComputePrice) {
		return true
	}

	return false
}

// SetActualComputePrice gets a reference to the given float32 and assigns it to the ActualComputePrice field.
func (o *Invoice) SetActualComputePrice(v float32) {
	o.ActualComputePrice = &v
}

// GetActualComputeCost returns the ActualComputeCost field value if set, zero value otherwise.
func (o *Invoice) GetActualComputeCost() float32 {
	if o == nil || IsNil(o.ActualComputeCost) {
		var ret float32
		return ret
	}
	return *o.ActualComputeCost
}

// GetActualComputeCostOk returns a tuple with the ActualComputeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualComputeCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualComputeCost) {
		return nil, false
	}
	return o.ActualComputeCost, true
}

// IsSetActualComputeCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualComputeCost() bool {
	if o != nil && !IsNil(o.ActualComputeCost) {
		return true
	}

	return false
}

// SetActualComputeCost gets a reference to the given float32 and assigns it to the ActualComputeCost field.
func (o *Invoice) SetActualComputeCost(v float32) {
	o.ActualComputeCost = &v
}

// GetActualMemoryPrice returns the ActualMemoryPrice field value if set, zero value otherwise.
func (o *Invoice) GetActualMemoryPrice() float32 {
	if o == nil || IsNil(o.ActualMemoryPrice) {
		var ret float32
		return ret
	}
	return *o.ActualMemoryPrice
}

// GetActualMemoryPriceOk returns a tuple with the ActualMemoryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualMemoryPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualMemoryPrice) {
		return nil, false
	}
	return o.ActualMemoryPrice, true
}

// IsSetActualMemoryPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualMemoryPrice() bool {
	if o != nil && !IsNil(o.ActualMemoryPrice) {
		return true
	}

	return false
}

// SetActualMemoryPrice gets a reference to the given float32 and assigns it to the ActualMemoryPrice field.
func (o *Invoice) SetActualMemoryPrice(v float32) {
	o.ActualMemoryPrice = &v
}

// GetActualMemoryCost returns the ActualMemoryCost field value if set, zero value otherwise.
func (o *Invoice) GetActualMemoryCost() float32 {
	if o == nil || IsNil(o.ActualMemoryCost) {
		var ret float32
		return ret
	}
	return *o.ActualMemoryCost
}

// GetActualMemoryCostOk returns a tuple with the ActualMemoryCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualMemoryCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualMemoryCost) {
		return nil, false
	}
	return o.ActualMemoryCost, true
}

// IsSetActualMemoryCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualMemoryCost() bool {
	if o != nil && !IsNil(o.ActualMemoryCost) {
		return true
	}

	return false
}

// SetActualMemoryCost gets a reference to the given float32 and assigns it to the ActualMemoryCost field.
func (o *Invoice) SetActualMemoryCost(v float32) {
	o.ActualMemoryCost = &v
}

// GetActualStoragePrice returns the ActualStoragePrice field value if set, zero value otherwise.
func (o *Invoice) GetActualStoragePrice() float32 {
	if o == nil || IsNil(o.ActualStoragePrice) {
		var ret float32
		return ret
	}
	return *o.ActualStoragePrice
}

// GetActualStoragePriceOk returns a tuple with the ActualStoragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualStoragePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualStoragePrice) {
		return nil, false
	}
	return o.ActualStoragePrice, true
}

// IsSetActualStoragePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualStoragePrice() bool {
	if o != nil && !IsNil(o.ActualStoragePrice) {
		return true
	}

	return false
}

// SetActualStoragePrice gets a reference to the given float32 and assigns it to the ActualStoragePrice field.
func (o *Invoice) SetActualStoragePrice(v float32) {
	o.ActualStoragePrice = &v
}

// GetActualStorageCost returns the ActualStorageCost field value if set, zero value otherwise.
func (o *Invoice) GetActualStorageCost() float32 {
	if o == nil || IsNil(o.ActualStorageCost) {
		var ret float32
		return ret
	}
	return *o.ActualStorageCost
}

// GetActualStorageCostOk returns a tuple with the ActualStorageCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualStorageCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualStorageCost) {
		return nil, false
	}
	return o.ActualStorageCost, true
}

// IsSetActualStorageCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualStorageCost() bool {
	if o != nil && !IsNil(o.ActualStorageCost) {
		return true
	}

	return false
}

// SetActualStorageCost gets a reference to the given float32 and assigns it to the ActualStorageCost field.
func (o *Invoice) SetActualStorageCost(v float32) {
	o.ActualStorageCost = &v
}

// GetActualNetworkPrice returns the ActualNetworkPrice field value if set, zero value otherwise.
func (o *Invoice) GetActualNetworkPrice() float32 {
	if o == nil || IsNil(o.ActualNetworkPrice) {
		var ret float32
		return ret
	}
	return *o.ActualNetworkPrice
}

// GetActualNetworkPriceOk returns a tuple with the ActualNetworkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualNetworkPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualNetworkPrice) {
		return nil, false
	}
	return o.ActualNetworkPrice, true
}

// IsSetActualNetworkPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualNetworkPrice() bool {
	if o != nil && !IsNil(o.ActualNetworkPrice) {
		return true
	}

	return false
}

// SetActualNetworkPrice gets a reference to the given float32 and assigns it to the ActualNetworkPrice field.
func (o *Invoice) SetActualNetworkPrice(v float32) {
	o.ActualNetworkPrice = &v
}

// GetActualNetworkCost returns the ActualNetworkCost field value if set, zero value otherwise.
func (o *Invoice) GetActualNetworkCost() float32 {
	if o == nil || IsNil(o.ActualNetworkCost) {
		var ret float32
		return ret
	}
	return *o.ActualNetworkCost
}

// GetActualNetworkCostOk returns a tuple with the ActualNetworkCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualNetworkCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualNetworkCost) {
		return nil, false
	}
	return o.ActualNetworkCost, true
}

// IsSetActualNetworkCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualNetworkCost() bool {
	if o != nil && !IsNil(o.ActualNetworkCost) {
		return true
	}

	return false
}

// SetActualNetworkCost gets a reference to the given float32 and assigns it to the ActualNetworkCost field.
func (o *Invoice) SetActualNetworkCost(v float32) {
	o.ActualNetworkCost = &v
}

// GetActualLicensePrice returns the ActualLicensePrice field value if set, zero value otherwise.
func (o *Invoice) GetActualLicensePrice() float32 {
	if o == nil || IsNil(o.ActualLicensePrice) {
		var ret float32
		return ret
	}
	return *o.ActualLicensePrice
}

// GetActualLicensePriceOk returns a tuple with the ActualLicensePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualLicensePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualLicensePrice) {
		return nil, false
	}
	return o.ActualLicensePrice, true
}

// IsSetActualLicensePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualLicensePrice() bool {
	if o != nil && !IsNil(o.ActualLicensePrice) {
		return true
	}

	return false
}

// SetActualLicensePrice gets a reference to the given float32 and assigns it to the ActualLicensePrice field.
func (o *Invoice) SetActualLicensePrice(v float32) {
	o.ActualLicensePrice = &v
}

// GetActualLicenseCost returns the ActualLicenseCost field value if set, zero value otherwise.
func (o *Invoice) GetActualLicenseCost() float32 {
	if o == nil || IsNil(o.ActualLicenseCost) {
		var ret float32
		return ret
	}
	return *o.ActualLicenseCost
}

// GetActualLicenseCostOk returns a tuple with the ActualLicenseCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualLicenseCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualLicenseCost) {
		return nil, false
	}
	return o.ActualLicenseCost, true
}

// IsSetActualLicenseCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualLicenseCost() bool {
	if o != nil && !IsNil(o.ActualLicenseCost) {
		return true
	}

	return false
}

// SetActualLicenseCost gets a reference to the given float32 and assigns it to the ActualLicenseCost field.
func (o *Invoice) SetActualLicenseCost(v float32) {
	o.ActualLicenseCost = &v
}

// GetActualExtraPrice returns the ActualExtraPrice field value if set, zero value otherwise.
func (o *Invoice) GetActualExtraPrice() float32 {
	if o == nil || IsNil(o.ActualExtraPrice) {
		var ret float32
		return ret
	}
	return *o.ActualExtraPrice
}

// GetActualExtraPriceOk returns a tuple with the ActualExtraPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualExtraPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualExtraPrice) {
		return nil, false
	}
	return o.ActualExtraPrice, true
}

// IsSetActualExtraPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualExtraPrice() bool {
	if o != nil && !IsNil(o.ActualExtraPrice) {
		return true
	}

	return false
}

// SetActualExtraPrice gets a reference to the given float32 and assigns it to the ActualExtraPrice field.
func (o *Invoice) SetActualExtraPrice(v float32) {
	o.ActualExtraPrice = &v
}

// GetActualExtraCost returns the ActualExtraCost field value if set, zero value otherwise.
func (o *Invoice) GetActualExtraCost() float32 {
	if o == nil || IsNil(o.ActualExtraCost) {
		var ret float32
		return ret
	}
	return *o.ActualExtraCost
}

// GetActualExtraCostOk returns a tuple with the ActualExtraCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualExtraCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualExtraCost) {
		return nil, false
	}
	return o.ActualExtraCost, true
}

// IsSetActualExtraCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualExtraCost() bool {
	if o != nil && !IsNil(o.ActualExtraCost) {
		return true
	}

	return false
}

// SetActualExtraCost gets a reference to the given float32 and assigns it to the ActualExtraCost field.
func (o *Invoice) SetActualExtraCost(v float32) {
	o.ActualExtraCost = &v
}

// GetActualTotalPrice returns the ActualTotalPrice field value if set, zero value otherwise.
func (o *Invoice) GetActualTotalPrice() float32 {
	if o == nil || IsNil(o.ActualTotalPrice) {
		var ret float32
		return ret
	}
	return *o.ActualTotalPrice
}

// GetActualTotalPriceOk returns a tuple with the ActualTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualTotalPrice) {
		return nil, false
	}
	return o.ActualTotalPrice, true
}

// IsSetActualTotalPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualTotalPrice() bool {
	if o != nil && !IsNil(o.ActualTotalPrice) {
		return true
	}

	return false
}

// SetActualTotalPrice gets a reference to the given float32 and assigns it to the ActualTotalPrice field.
func (o *Invoice) SetActualTotalPrice(v float32) {
	o.ActualTotalPrice = &v
}

// GetActualTotalCost returns the ActualTotalCost field value if set, zero value otherwise.
func (o *Invoice) GetActualTotalCost() float32 {
	if o == nil || IsNil(o.ActualTotalCost) {
		var ret float32
		return ret
	}
	return *o.ActualTotalCost
}

// GetActualTotalCostOk returns a tuple with the ActualTotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualTotalCost) {
		return nil, false
	}
	return o.ActualTotalCost, true
}

// IsSetActualTotalCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualTotalCost() bool {
	if o != nil && !IsNil(o.ActualTotalCost) {
		return true
	}

	return false
}

// SetActualTotalCost gets a reference to the given float32 and assigns it to the ActualTotalCost field.
func (o *Invoice) SetActualTotalCost(v float32) {
	o.ActualTotalCost = &v
}

// GetActualRunningPrice returns the ActualRunningPrice field value if set, zero value otherwise.
func (o *Invoice) GetActualRunningPrice() float32 {
	if o == nil || IsNil(o.ActualRunningPrice) {
		var ret float32
		return ret
	}
	return *o.ActualRunningPrice
}

// GetActualRunningPriceOk returns a tuple with the ActualRunningPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualRunningPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualRunningPrice) {
		return nil, false
	}
	return o.ActualRunningPrice, true
}

// IsSetActualRunningPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetActualRunningPrice() bool {
	if o != nil && !IsNil(o.ActualRunningPrice) {
		return true
	}

	return false
}

// SetActualRunningPrice gets a reference to the given float32 and assigns it to the ActualRunningPrice field.
func (o *Invoice) SetActualRunningPrice(v float32) {
	o.ActualRunningPrice = &v
}

// GetActualRunningCost returns the ActualRunningCost field value if set, zero value otherwise.
func (o *Invoice) GetActualRunningCost() float32 {
	if o == nil || IsNil(o.ActualRunningCost) {
		var ret float32
		return ret
	}
	return *o.ActualRunningCost
}

// GetActualRunningCostOk returns a tuple with the ActualRunningCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualRunningCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualRunningCost) {
		return nil, false
	}
	return o.ActualRunningCost, true
}

// IsSetActualRunningCost returns a boolean if a field has been set.
func (o *Invoice) IsSetActualRunningCost() bool {
	if o != nil && !IsNil(o.ActualRunningCost) {
		return true
	}

	return false
}

// SetActualRunningCost gets a reference to the given float32 and assigns it to the ActualRunningCost field.
func (o *Invoice) SetActualRunningCost(v float32) {
	o.ActualRunningCost = &v
}

// GetActualCurrency returns the ActualCurrency field value if set, zero value otherwise.
func (o *Invoice) GetActualCurrency() string {
	if o == nil || IsNil(o.ActualCurrency) {
		var ret string
		return ret
	}
	return *o.ActualCurrency
}

// GetActualCurrencyOk returns a tuple with the ActualCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.ActualCurrency) {
		return nil, false
	}
	return o.ActualCurrency, true
}

// IsSetActualCurrency returns a boolean if a field has been set.
func (o *Invoice) IsSetActualCurrency() bool {
	if o != nil && !IsNil(o.ActualCurrency) {
		return true
	}

	return false
}

// SetActualCurrency gets a reference to the given string and assigns it to the ActualCurrency field.
func (o *Invoice) SetActualCurrency(v string) {
	o.ActualCurrency = &v
}

// GetActualConversionRate returns the ActualConversionRate field value if set, zero value otherwise.
func (o *Invoice) GetActualConversionRate() float32 {
	if o == nil || IsNil(o.ActualConversionRate) {
		var ret float32
		return ret
	}
	return *o.ActualConversionRate
}

// GetActualConversionRateOk returns a tuple with the ActualConversionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetActualConversionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualConversionRate) {
		return nil, false
	}
	return o.ActualConversionRate, true
}

// IsSetActualConversionRate returns a boolean if a field has been set.
func (o *Invoice) IsSetActualConversionRate() bool {
	if o != nil && !IsNil(o.ActualConversionRate) {
		return true
	}

	return false
}

// SetActualConversionRate gets a reference to the given float32 and assigns it to the ActualConversionRate field.
func (o *Invoice) SetActualConversionRate(v float32) {
	o.ActualConversionRate = &v
}

// GetComputePrice returns the ComputePrice field value if set, zero value otherwise.
func (o *Invoice) GetComputePrice() float32 {
	if o == nil || IsNil(o.ComputePrice) {
		var ret float32
		return ret
	}
	return *o.ComputePrice
}

// GetComputePriceOk returns a tuple with the ComputePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetComputePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ComputePrice) {
		return nil, false
	}
	return o.ComputePrice, true
}

// IsSetComputePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetComputePrice() bool {
	if o != nil && !IsNil(o.ComputePrice) {
		return true
	}

	return false
}

// SetComputePrice gets a reference to the given float32 and assigns it to the ComputePrice field.
func (o *Invoice) SetComputePrice(v float32) {
	o.ComputePrice = &v
}

// GetComputeCost returns the ComputeCost field value if set, zero value otherwise.
func (o *Invoice) GetComputeCost() float32 {
	if o == nil || IsNil(o.ComputeCost) {
		var ret float32
		return ret
	}
	return *o.ComputeCost
}

// GetComputeCostOk returns a tuple with the ComputeCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetComputeCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ComputeCost) {
		return nil, false
	}
	return o.ComputeCost, true
}

// IsSetComputeCost returns a boolean if a field has been set.
func (o *Invoice) IsSetComputeCost() bool {
	if o != nil && !IsNil(o.ComputeCost) {
		return true
	}

	return false
}

// SetComputeCost gets a reference to the given float32 and assigns it to the ComputeCost field.
func (o *Invoice) SetComputeCost(v float32) {
	o.ComputeCost = &v
}

// GetMemoryPrice returns the MemoryPrice field value if set, zero value otherwise.
func (o *Invoice) GetMemoryPrice() float32 {
	if o == nil || IsNil(o.MemoryPrice) {
		var ret float32
		return ret
	}
	return *o.MemoryPrice
}

// GetMemoryPriceOk returns a tuple with the MemoryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetMemoryPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.MemoryPrice) {
		return nil, false
	}
	return o.MemoryPrice, true
}

// IsSetMemoryPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetMemoryPrice() bool {
	if o != nil && !IsNil(o.MemoryPrice) {
		return true
	}

	return false
}

// SetMemoryPrice gets a reference to the given float32 and assigns it to the MemoryPrice field.
func (o *Invoice) SetMemoryPrice(v float32) {
	o.MemoryPrice = &v
}

// GetMemoryCost returns the MemoryCost field value if set, zero value otherwise.
func (o *Invoice) GetMemoryCost() float32 {
	if o == nil || IsNil(o.MemoryCost) {
		var ret float32
		return ret
	}
	return *o.MemoryCost
}

// GetMemoryCostOk returns a tuple with the MemoryCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetMemoryCostOk() (*float32, bool) {
	if o == nil || IsNil(o.MemoryCost) {
		return nil, false
	}
	return o.MemoryCost, true
}

// IsSetMemoryCost returns a boolean if a field has been set.
func (o *Invoice) IsSetMemoryCost() bool {
	if o != nil && !IsNil(o.MemoryCost) {
		return true
	}

	return false
}

// SetMemoryCost gets a reference to the given float32 and assigns it to the MemoryCost field.
func (o *Invoice) SetMemoryCost(v float32) {
	o.MemoryCost = &v
}

// GetStoragePrice returns the StoragePrice field value if set, zero value otherwise.
func (o *Invoice) GetStoragePrice() float32 {
	if o == nil || IsNil(o.StoragePrice) {
		var ret float32
		return ret
	}
	return *o.StoragePrice
}

// GetStoragePriceOk returns a tuple with the StoragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStoragePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.StoragePrice) {
		return nil, false
	}
	return o.StoragePrice, true
}

// IsSetStoragePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetStoragePrice() bool {
	if o != nil && !IsNil(o.StoragePrice) {
		return true
	}

	return false
}

// SetStoragePrice gets a reference to the given float32 and assigns it to the StoragePrice field.
func (o *Invoice) SetStoragePrice(v float32) {
	o.StoragePrice = &v
}

// GetStorageCost returns the StorageCost field value if set, zero value otherwise.
func (o *Invoice) GetStorageCost() float32 {
	if o == nil || IsNil(o.StorageCost) {
		var ret float32
		return ret
	}
	return *o.StorageCost
}

// GetStorageCostOk returns a tuple with the StorageCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStorageCostOk() (*float32, bool) {
	if o == nil || IsNil(o.StorageCost) {
		return nil, false
	}
	return o.StorageCost, true
}

// IsSetStorageCost returns a boolean if a field has been set.
func (o *Invoice) IsSetStorageCost() bool {
	if o != nil && !IsNil(o.StorageCost) {
		return true
	}

	return false
}

// SetStorageCost gets a reference to the given float32 and assigns it to the StorageCost field.
func (o *Invoice) SetStorageCost(v float32) {
	o.StorageCost = &v
}

// GetNetworkPrice returns the NetworkPrice field value if set, zero value otherwise.
func (o *Invoice) GetNetworkPrice() float32 {
	if o == nil || IsNil(o.NetworkPrice) {
		var ret float32
		return ret
	}
	return *o.NetworkPrice
}

// GetNetworkPriceOk returns a tuple with the NetworkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetNetworkPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.NetworkPrice) {
		return nil, false
	}
	return o.NetworkPrice, true
}

// IsSetNetworkPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetNetworkPrice() bool {
	if o != nil && !IsNil(o.NetworkPrice) {
		return true
	}

	return false
}

// SetNetworkPrice gets a reference to the given float32 and assigns it to the NetworkPrice field.
func (o *Invoice) SetNetworkPrice(v float32) {
	o.NetworkPrice = &v
}

// GetNetworkCost returns the NetworkCost field value if set, zero value otherwise.
func (o *Invoice) GetNetworkCost() float32 {
	if o == nil || IsNil(o.NetworkCost) {
		var ret float32
		return ret
	}
	return *o.NetworkCost
}

// GetNetworkCostOk returns a tuple with the NetworkCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetNetworkCostOk() (*float32, bool) {
	if o == nil || IsNil(o.NetworkCost) {
		return nil, false
	}
	return o.NetworkCost, true
}

// IsSetNetworkCost returns a boolean if a field has been set.
func (o *Invoice) IsSetNetworkCost() bool {
	if o != nil && !IsNil(o.NetworkCost) {
		return true
	}

	return false
}

// SetNetworkCost gets a reference to the given float32 and assigns it to the NetworkCost field.
func (o *Invoice) SetNetworkCost(v float32) {
	o.NetworkCost = &v
}

// GetLicensePrice returns the LicensePrice field value if set, zero value otherwise.
func (o *Invoice) GetLicensePrice() float32 {
	if o == nil || IsNil(o.LicensePrice) {
		var ret float32
		return ret
	}
	return *o.LicensePrice
}

// GetLicensePriceOk returns a tuple with the LicensePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLicensePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.LicensePrice) {
		return nil, false
	}
	return o.LicensePrice, true
}

// IsSetLicensePrice returns a boolean if a field has been set.
func (o *Invoice) IsSetLicensePrice() bool {
	if o != nil && !IsNil(o.LicensePrice) {
		return true
	}

	return false
}

// SetLicensePrice gets a reference to the given float32 and assigns it to the LicensePrice field.
func (o *Invoice) SetLicensePrice(v float32) {
	o.LicensePrice = &v
}

// GetLicenseCost returns the LicenseCost field value if set, zero value otherwise.
func (o *Invoice) GetLicenseCost() float32 {
	if o == nil || IsNil(o.LicenseCost) {
		var ret float32
		return ret
	}
	return *o.LicenseCost
}

// GetLicenseCostOk returns a tuple with the LicenseCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLicenseCostOk() (*float32, bool) {
	if o == nil || IsNil(o.LicenseCost) {
		return nil, false
	}
	return o.LicenseCost, true
}

// IsSetLicenseCost returns a boolean if a field has been set.
func (o *Invoice) IsSetLicenseCost() bool {
	if o != nil && !IsNil(o.LicenseCost) {
		return true
	}

	return false
}

// SetLicenseCost gets a reference to the given float32 and assigns it to the LicenseCost field.
func (o *Invoice) SetLicenseCost(v float32) {
	o.LicenseCost = &v
}

// GetExtraPrice returns the ExtraPrice field value if set, zero value otherwise.
func (o *Invoice) GetExtraPrice() float32 {
	if o == nil || IsNil(o.ExtraPrice) {
		var ret float32
		return ret
	}
	return *o.ExtraPrice
}

// GetExtraPriceOk returns a tuple with the ExtraPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetExtraPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.ExtraPrice) {
		return nil, false
	}
	return o.ExtraPrice, true
}

// IsSetExtraPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetExtraPrice() bool {
	if o != nil && !IsNil(o.ExtraPrice) {
		return true
	}

	return false
}

// SetExtraPrice gets a reference to the given float32 and assigns it to the ExtraPrice field.
func (o *Invoice) SetExtraPrice(v float32) {
	o.ExtraPrice = &v
}

// GetExtraCost returns the ExtraCost field value if set, zero value otherwise.
func (o *Invoice) GetExtraCost() float32 {
	if o == nil || IsNil(o.ExtraCost) {
		var ret float32
		return ret
	}
	return *o.ExtraCost
}

// GetExtraCostOk returns a tuple with the ExtraCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetExtraCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ExtraCost) {
		return nil, false
	}
	return o.ExtraCost, true
}

// IsSetExtraCost returns a boolean if a field has been set.
func (o *Invoice) IsSetExtraCost() bool {
	if o != nil && !IsNil(o.ExtraCost) {
		return true
	}

	return false
}

// SetExtraCost gets a reference to the given float32 and assigns it to the ExtraCost field.
func (o *Invoice) SetExtraCost(v float32) {
	o.ExtraCost = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *Invoice) GetTotalPrice() float32 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float32
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// IsSetTotalPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float32 and assigns it to the TotalPrice field.
func (o *Invoice) SetTotalPrice(v float32) {
	o.TotalPrice = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *Invoice) GetTotalCost() float32 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float32
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// IsSetTotalCost returns a boolean if a field has been set.
func (o *Invoice) IsSetTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float32 and assigns it to the TotalCost field.
func (o *Invoice) SetTotalCost(v float32) {
	o.TotalCost = &v
}

// GetRunningPrice returns the RunningPrice field value if set, zero value otherwise.
func (o *Invoice) GetRunningPrice() float32 {
	if o == nil || IsNil(o.RunningPrice) {
		var ret float32
		return ret
	}
	return *o.RunningPrice
}

// GetRunningPriceOk returns a tuple with the RunningPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRunningPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.RunningPrice) {
		return nil, false
	}
	return o.RunningPrice, true
}

// IsSetRunningPrice returns a boolean if a field has been set.
func (o *Invoice) IsSetRunningPrice() bool {
	if o != nil && !IsNil(o.RunningPrice) {
		return true
	}

	return false
}

// SetRunningPrice gets a reference to the given float32 and assigns it to the RunningPrice field.
func (o *Invoice) SetRunningPrice(v float32) {
	o.RunningPrice = &v
}

// GetRunningCost returns the RunningCost field value if set, zero value otherwise.
func (o *Invoice) GetRunningCost() float32 {
	if o == nil || IsNil(o.RunningCost) {
		var ret float32
		return ret
	}
	return *o.RunningCost
}

// GetRunningCostOk returns a tuple with the RunningCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRunningCostOk() (*float32, bool) {
	if o == nil || IsNil(o.RunningCost) {
		return nil, false
	}
	return o.RunningCost, true
}

// IsSetRunningCost returns a boolean if a field has been set.
func (o *Invoice) IsSetRunningCost() bool {
	if o != nil && !IsNil(o.RunningCost) {
		return true
	}

	return false
}

// SetRunningCost gets a reference to the given float32 and assigns it to the RunningCost field.
func (o *Invoice) SetRunningCost(v float32) {
	o.RunningCost = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Invoice) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// IsSetCurrency returns a boolean if a field has been set.
func (o *Invoice) IsSetCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Invoice) SetCurrency(v string) {
	o.Currency = &v
}

// GetConversionRate returns the ConversionRate field value if set, zero value otherwise.
func (o *Invoice) GetConversionRate() float32 {
	if o == nil || IsNil(o.ConversionRate) {
		var ret float32
		return ret
	}
	return *o.ConversionRate
}

// GetConversionRateOk returns a tuple with the ConversionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetConversionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ConversionRate) {
		return nil, false
	}
	return o.ConversionRate, true
}

// IsSetConversionRate returns a boolean if a field has been set.
func (o *Invoice) IsSetConversionRate() bool {
	if o != nil && !IsNil(o.ConversionRate) {
		return true
	}

	return false
}

// SetConversionRate gets a reference to the given float32 and assigns it to the ConversionRate field.
func (o *Invoice) SetConversionRate(v float32) {
	o.ConversionRate = &v
}

// GetCostType returns the CostType field value if set, zero value otherwise.
func (o *Invoice) GetCostType() string {
	if o == nil || IsNil(o.CostType) {
		var ret string
		return ret
	}
	return *o.CostType
}

// GetCostTypeOk returns a tuple with the CostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCostTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CostType) {
		return nil, false
	}
	return o.CostType, true
}

// IsSetCostType returns a boolean if a field has been set.
func (o *Invoice) IsSetCostType() bool {
	if o != nil && !IsNil(o.CostType) {
		return true
	}

	return false
}

// SetCostType gets a reference to the given string and assigns it to the CostType field.
func (o *Invoice) SetCostType(v string) {
	o.CostType = &v
}

// GetOffTime returns the OffTime field value if set, zero value otherwise.
func (o *Invoice) GetOffTime() int64 {
	if o == nil || IsNil(o.OffTime) {
		var ret int64
		return ret
	}
	return *o.OffTime
}

// GetOffTimeOk returns a tuple with the OffTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetOffTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.OffTime) {
		return nil, false
	}
	return o.OffTime, true
}

// IsSetOffTime returns a boolean if a field has been set.
func (o *Invoice) IsSetOffTime() bool {
	if o != nil && !IsNil(o.OffTime) {
		return true
	}

	return false
}

// SetOffTime gets a reference to the given int64 and assigns it to the OffTime field.
func (o *Invoice) SetOffTime(v int64) {
	o.OffTime = &v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *Invoice) GetPowerState() string {
	if o == nil || IsNil(o.PowerState) {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// IsSetPowerState returns a boolean if a field has been set.
func (o *Invoice) IsSetPowerState() bool {
	if o != nil && !IsNil(o.PowerState) {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *Invoice) SetPowerState(v string) {
	o.PowerState = &v
}

// GetPowerDate returns the PowerDate field value if set, zero value otherwise.
func (o *Invoice) GetPowerDate() time.Time {
	if o == nil || IsNil(o.PowerDate) {
		var ret time.Time
		return ret
	}
	return *o.PowerDate
}

// GetPowerDateOk returns a tuple with the PowerDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPowerDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PowerDate) {
		return nil, false
	}
	return o.PowerDate, true
}

// IsSetPowerDate returns a boolean if a field has been set.
func (o *Invoice) IsSetPowerDate() bool {
	if o != nil && !IsNil(o.PowerDate) {
		return true
	}

	return false
}

// SetPowerDate gets a reference to the given time.Time and assigns it to the PowerDate field.
func (o *Invoice) SetPowerDate(v time.Time) {
	o.PowerDate = &v
}

// GetRunningMultiplier returns the RunningMultiplier field value if set, zero value otherwise.
func (o *Invoice) GetRunningMultiplier() float32 {
	if o == nil || IsNil(o.RunningMultiplier) {
		var ret float32
		return ret
	}
	return *o.RunningMultiplier
}

// GetRunningMultiplierOk returns a tuple with the RunningMultiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRunningMultiplierOk() (*float32, bool) {
	if o == nil || IsNil(o.RunningMultiplier) {
		return nil, false
	}
	return o.RunningMultiplier, true
}

// IsSetRunningMultiplier returns a boolean if a field has been set.
func (o *Invoice) IsSetRunningMultiplier() bool {
	if o != nil && !IsNil(o.RunningMultiplier) {
		return true
	}

	return false
}

// SetRunningMultiplier gets a reference to the given float32 and assigns it to the RunningMultiplier field.
func (o *Invoice) SetRunningMultiplier(v float32) {
	o.RunningMultiplier = &v
}

// GetUsageType returns the UsageType field value if set, zero value otherwise.
func (o *Invoice) GetUsageType() string {
	if o == nil || IsNil(o.UsageType) {
		var ret string
		return ret
	}
	return *o.UsageType
}

// GetUsageTypeOk returns a tuple with the UsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UsageType) {
		return nil, false
	}
	return o.UsageType, true
}

// IsSetUsageType returns a boolean if a field has been set.
func (o *Invoice) IsSetUsageType() bool {
	if o != nil && !IsNil(o.UsageType) {
		return true
	}

	return false
}

// SetUsageType gets a reference to the given string and assigns it to the UsageType field.
func (o *Invoice) SetUsageType(v string) {
	o.UsageType = &v
}

// GetUsageCategory returns the UsageCategory field value if set, zero value otherwise.
func (o *Invoice) GetUsageCategory() string {
	if o == nil || IsNil(o.UsageCategory) {
		var ret string
		return ret
	}
	return *o.UsageCategory
}

// GetUsageCategoryOk returns a tuple with the UsageCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUsageCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.UsageCategory) {
		return nil, false
	}
	return o.UsageCategory, true
}

// IsSetUsageCategory returns a boolean if a field has been set.
func (o *Invoice) IsSetUsageCategory() bool {
	if o != nil && !IsNil(o.UsageCategory) {
		return true
	}

	return false
}

// SetUsageCategory gets a reference to the given string and assigns it to the UsageCategory field.
func (o *Invoice) SetUsageCategory(v string) {
	o.UsageCategory = &v
}

// GetLastCostDate returns the LastCostDate field value if set, zero value otherwise.
func (o *Invoice) GetLastCostDate() time.Time {
	if o == nil || IsNil(o.LastCostDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCostDate
}

// GetLastCostDateOk returns a tuple with the LastCostDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLastCostDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCostDate) {
		return nil, false
	}
	return o.LastCostDate, true
}

// IsSetLastCostDate returns a boolean if a field has been set.
func (o *Invoice) IsSetLastCostDate() bool {
	if o != nil && !IsNil(o.LastCostDate) {
		return true
	}

	return false
}

// SetLastCostDate gets a reference to the given time.Time and assigns it to the LastCostDate field.
func (o *Invoice) SetLastCostDate(v time.Time) {
	o.LastCostDate = &v
}

// GetLastActualDate returns the LastActualDate field value if set, zero value otherwise.
func (o *Invoice) GetLastActualDate() time.Time {
	if o == nil || IsNil(o.LastActualDate) {
		var ret time.Time
		return ret
	}
	return *o.LastActualDate
}

// GetLastActualDateOk returns a tuple with the LastActualDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLastActualDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastActualDate) {
		return nil, false
	}
	return o.LastActualDate, true
}

// IsSetLastActualDate returns a boolean if a field has been set.
func (o *Invoice) IsSetLastActualDate() bool {
	if o != nil && !IsNil(o.LastActualDate) {
		return true
	}

	return false
}

// SetLastActualDate gets a reference to the given time.Time and assigns it to the LastActualDate field.
func (o *Invoice) SetLastActualDate(v time.Time) {
	o.LastActualDate = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Invoice) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *Invoice) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Invoice) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Invoice) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *Invoice) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Invoice) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLineItemCount returns the LineItemCount field value if set, zero value otherwise.
func (o *Invoice) GetLineItemCount() int64 {
	if o == nil || IsNil(o.LineItemCount) {
		var ret int64
		return ret
	}
	return *o.LineItemCount
}

// GetLineItemCountOk returns a tuple with the LineItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLineItemCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LineItemCount) {
		return nil, false
	}
	return o.LineItemCount, true
}

// IsSetLineItemCount returns a boolean if a field has been set.
func (o *Invoice) IsSetLineItemCount() bool {
	if o != nil && !IsNil(o.LineItemCount) {
		return true
	}

	return false
}

// SetLineItemCount gets a reference to the given int64 and assigns it to the LineItemCount field.
func (o *Invoice) SetLineItemCount(v int64) {
	o.LineItemCount = &v
}

// GetLineItems returns the LineItems field value if set, zero value otherwise.
func (o *Invoice) GetLineItems() []ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner {
	if o == nil || IsNil(o.LineItems) {
		var ret []ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner
		return ret
	}
	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLineItemsOk() ([]ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner, bool) {
	if o == nil || IsNil(o.LineItems) {
		return nil, false
	}
	return o.LineItems, true
}

// IsSetLineItems returns a boolean if a field has been set.
func (o *Invoice) IsSetLineItems() bool {
	if o != nil && !IsNil(o.LineItems) {
		return true
	}

	return false
}

// SetLineItems gets a reference to the given []ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner and assigns it to the LineItems field.
func (o *Invoice) SetLineItems(v []ListInvoices200ResponseAllOfInvoicesInnerLineItemsInner) {
	o.LineItems = v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Cloud) {
		toSerialize["cloud"] = o.Cloud
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.RefUuid) {
		toSerialize["refUuid"] = o.RefUuid
	}
	if !IsNil(o.RefName) {
		toSerialize["refName"] = o.RefName
	}
	if !IsNil(o.RefCategory) {
		toSerialize["refCategory"] = o.RefCategory
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.ResourceUuid) {
		toSerialize["resourceUuid"] = o.ResourceUuid
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.ResourceExternalId) {
		toSerialize["resourceExternalId"] = o.ResourceExternalId
	}
	if !IsNil(o.ResourceInternalId) {
		toSerialize["resourceInternalId"] = o.ResourceInternalId
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.Estimate) {
		toSerialize["estimate"] = o.Estimate
	}
	if !IsNil(o.SummaryInvoice) {
		toSerialize["summaryInvoice"] = o.SummaryInvoice
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.RefStart) {
		toSerialize["refStart"] = o.RefStart
	}
	if !IsNil(o.RefEnd) {
		toSerialize["refEnd"] = o.RefEnd
	}
	if !IsNil(o.EstimatedComputePrice) {
		toSerialize["estimatedComputePrice"] = o.EstimatedComputePrice
	}
	if !IsNil(o.EstimatedComputeCost) {
		toSerialize["estimatedComputeCost"] = o.EstimatedComputeCost
	}
	if !IsNil(o.EstimatedMemoryPrice) {
		toSerialize["estimatedMemoryPrice"] = o.EstimatedMemoryPrice
	}
	if !IsNil(o.EstimatedMemoryCost) {
		toSerialize["estimatedMemoryCost"] = o.EstimatedMemoryCost
	}
	if !IsNil(o.EstimatedStoragePrice) {
		toSerialize["estimatedStoragePrice"] = o.EstimatedStoragePrice
	}
	if !IsNil(o.EstimatedStorageCost) {
		toSerialize["estimatedStorageCost"] = o.EstimatedStorageCost
	}
	if !IsNil(o.EstimatedNetworkPrice) {
		toSerialize["estimatedNetworkPrice"] = o.EstimatedNetworkPrice
	}
	if !IsNil(o.EstimatedNetworkCost) {
		toSerialize["estimatedNetworkCost"] = o.EstimatedNetworkCost
	}
	if !IsNil(o.EstimatedLicensePrice) {
		toSerialize["estimatedLicensePrice"] = o.EstimatedLicensePrice
	}
	if !IsNil(o.EstimatedLicenseCost) {
		toSerialize["estimatedLicenseCost"] = o.EstimatedLicenseCost
	}
	if !IsNil(o.EstimatedExtraPrice) {
		toSerialize["estimatedExtraPrice"] = o.EstimatedExtraPrice
	}
	if !IsNil(o.EstimatedExtraCost) {
		toSerialize["estimatedExtraCost"] = o.EstimatedExtraCost
	}
	if !IsNil(o.EstimatedTotalPrice) {
		toSerialize["estimatedTotalPrice"] = o.EstimatedTotalPrice
	}
	if !IsNil(o.EstimatedTotalCost) {
		toSerialize["estimatedTotalCost"] = o.EstimatedTotalCost
	}
	if !IsNil(o.EstimatedRunningPrice) {
		toSerialize["estimatedRunningPrice"] = o.EstimatedRunningPrice
	}
	if !IsNil(o.EstimatedRunningCost) {
		toSerialize["estimatedRunningCost"] = o.EstimatedRunningCost
	}
	if !IsNil(o.EstimatedCurrency) {
		toSerialize["estimatedCurrency"] = o.EstimatedCurrency
	}
	if !IsNil(o.EstimatedConversionRate) {
		toSerialize["estimatedConversionRate"] = o.EstimatedConversionRate
	}
	if !IsNil(o.ActualComputePrice) {
		toSerialize["actualComputePrice"] = o.ActualComputePrice
	}
	if !IsNil(o.ActualComputeCost) {
		toSerialize["actualComputeCost"] = o.ActualComputeCost
	}
	if !IsNil(o.ActualMemoryPrice) {
		toSerialize["actualMemoryPrice"] = o.ActualMemoryPrice
	}
	if !IsNil(o.ActualMemoryCost) {
		toSerialize["actualMemoryCost"] = o.ActualMemoryCost
	}
	if !IsNil(o.ActualStoragePrice) {
		toSerialize["actualStoragePrice"] = o.ActualStoragePrice
	}
	if !IsNil(o.ActualStorageCost) {
		toSerialize["actualStorageCost"] = o.ActualStorageCost
	}
	if !IsNil(o.ActualNetworkPrice) {
		toSerialize["actualNetworkPrice"] = o.ActualNetworkPrice
	}
	if !IsNil(o.ActualNetworkCost) {
		toSerialize["actualNetworkCost"] = o.ActualNetworkCost
	}
	if !IsNil(o.ActualLicensePrice) {
		toSerialize["actualLicensePrice"] = o.ActualLicensePrice
	}
	if !IsNil(o.ActualLicenseCost) {
		toSerialize["actualLicenseCost"] = o.ActualLicenseCost
	}
	if !IsNil(o.ActualExtraPrice) {
		toSerialize["actualExtraPrice"] = o.ActualExtraPrice
	}
	if !IsNil(o.ActualExtraCost) {
		toSerialize["actualExtraCost"] = o.ActualExtraCost
	}
	if !IsNil(o.ActualTotalPrice) {
		toSerialize["actualTotalPrice"] = o.ActualTotalPrice
	}
	if !IsNil(o.ActualTotalCost) {
		toSerialize["actualTotalCost"] = o.ActualTotalCost
	}
	if !IsNil(o.ActualRunningPrice) {
		toSerialize["actualRunningPrice"] = o.ActualRunningPrice
	}
	if !IsNil(o.ActualRunningCost) {
		toSerialize["actualRunningCost"] = o.ActualRunningCost
	}
	if !IsNil(o.ActualCurrency) {
		toSerialize["actualCurrency"] = o.ActualCurrency
	}
	if !IsNil(o.ActualConversionRate) {
		toSerialize["actualConversionRate"] = o.ActualConversionRate
	}
	if !IsNil(o.ComputePrice) {
		toSerialize["computePrice"] = o.ComputePrice
	}
	if !IsNil(o.ComputeCost) {
		toSerialize["computeCost"] = o.ComputeCost
	}
	if !IsNil(o.MemoryPrice) {
		toSerialize["memoryPrice"] = o.MemoryPrice
	}
	if !IsNil(o.MemoryCost) {
		toSerialize["memoryCost"] = o.MemoryCost
	}
	if !IsNil(o.StoragePrice) {
		toSerialize["storagePrice"] = o.StoragePrice
	}
	if !IsNil(o.StorageCost) {
		toSerialize["storageCost"] = o.StorageCost
	}
	if !IsNil(o.NetworkPrice) {
		toSerialize["networkPrice"] = o.NetworkPrice
	}
	if !IsNil(o.NetworkCost) {
		toSerialize["networkCost"] = o.NetworkCost
	}
	if !IsNil(o.LicensePrice) {
		toSerialize["licensePrice"] = o.LicensePrice
	}
	if !IsNil(o.LicenseCost) {
		toSerialize["licenseCost"] = o.LicenseCost
	}
	if !IsNil(o.ExtraPrice) {
		toSerialize["extraPrice"] = o.ExtraPrice
	}
	if !IsNil(o.ExtraCost) {
		toSerialize["extraCost"] = o.ExtraCost
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	if !IsNil(o.TotalCost) {
		toSerialize["totalCost"] = o.TotalCost
	}
	if !IsNil(o.RunningPrice) {
		toSerialize["runningPrice"] = o.RunningPrice
	}
	if !IsNil(o.RunningCost) {
		toSerialize["runningCost"] = o.RunningCost
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ConversionRate) {
		toSerialize["conversionRate"] = o.ConversionRate
	}
	if !IsNil(o.CostType) {
		toSerialize["costType"] = o.CostType
	}
	if !IsNil(o.OffTime) {
		toSerialize["offTime"] = o.OffTime
	}
	if !IsNil(o.PowerState) {
		toSerialize["powerState"] = o.PowerState
	}
	if !IsNil(o.PowerDate) {
		toSerialize["powerDate"] = o.PowerDate
	}
	if !IsNil(o.RunningMultiplier) {
		toSerialize["runningMultiplier"] = o.RunningMultiplier
	}
	if !IsNil(o.UsageType) {
		toSerialize["usageType"] = o.UsageType
	}
	if !IsNil(o.UsageCategory) {
		toSerialize["usageCategory"] = o.UsageCategory
	}
	if !IsNil(o.LastCostDate) {
		toSerialize["lastCostDate"] = o.LastCostDate
	}
	if !IsNil(o.LastActualDate) {
		toSerialize["lastActualDate"] = o.LastActualDate
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LineItemCount) {
		toSerialize["lineItemCount"] = o.LineItemCount
	}
	if !IsNil(o.LineItems) {
		toSerialize["lineItems"] = o.LineItems
	}
	return toSerialize, nil
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


