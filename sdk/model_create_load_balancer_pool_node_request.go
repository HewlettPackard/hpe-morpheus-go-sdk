/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateLoadBalancerPoolNodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLoadBalancerPoolNodeRequest{}

// CreateLoadBalancerPoolNodeRequest struct for CreateLoadBalancerPoolNodeRequest
type CreateLoadBalancerPoolNodeRequest struct {
	LoadBalancerNode *CreateLoadBalancerPoolNodeRequestLoadBalancerNode `json:"loadBalancerNode,omitempty"`
}

// NewCreateLoadBalancerPoolNodeRequest instantiates a new CreateLoadBalancerPoolNodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoadBalancerPoolNodeRequest() *CreateLoadBalancerPoolNodeRequest {
	this := CreateLoadBalancerPoolNodeRequest{}
	return &this
}

// NewCreateLoadBalancerPoolNodeRequestWithDefaults instantiates a new CreateLoadBalancerPoolNodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoadBalancerPoolNodeRequestWithDefaults() *CreateLoadBalancerPoolNodeRequest {
	this := CreateLoadBalancerPoolNodeRequest{}
	return &this
}

// GetLoadBalancerNode returns the LoadBalancerNode field value if set, zero value otherwise.
func (o *CreateLoadBalancerPoolNodeRequest) GetLoadBalancerNode() CreateLoadBalancerPoolNodeRequestLoadBalancerNode {
	if o == nil || IsNil(o.LoadBalancerNode) {
		var ret CreateLoadBalancerPoolNodeRequestLoadBalancerNode
		return ret
	}
	return *o.LoadBalancerNode
}

// GetLoadBalancerNodeOk returns a tuple with the LoadBalancerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoadBalancerPoolNodeRequest) GetLoadBalancerNodeOk() (*CreateLoadBalancerPoolNodeRequestLoadBalancerNode, bool) {
	if o == nil || IsNil(o.LoadBalancerNode) {
		return nil, false
	}
	return o.LoadBalancerNode, true
}

// IsSetLoadBalancerNode returns a boolean if a field has been set.
func (o *CreateLoadBalancerPoolNodeRequest) IsSetLoadBalancerNode() bool {
	if o != nil && !IsNil(o.LoadBalancerNode) {
		return true
	}

	return false
}

// SetLoadBalancerNode gets a reference to the given CreateLoadBalancerPoolNodeRequestLoadBalancerNode and assigns it to the LoadBalancerNode field.
func (o *CreateLoadBalancerPoolNodeRequest) SetLoadBalancerNode(v CreateLoadBalancerPoolNodeRequestLoadBalancerNode) {
	o.LoadBalancerNode = &v
}

func (o CreateLoadBalancerPoolNodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLoadBalancerPoolNodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancerNode) {
		toSerialize["loadBalancerNode"] = o.LoadBalancerNode
	}
	return toSerialize, nil
}

type NullableCreateLoadBalancerPoolNodeRequest struct {
	value *CreateLoadBalancerPoolNodeRequest
	isSet bool
}

func (v NullableCreateLoadBalancerPoolNodeRequest) Get() *CreateLoadBalancerPoolNodeRequest {
	return v.value
}

func (v *NullableCreateLoadBalancerPoolNodeRequest) Set(val *CreateLoadBalancerPoolNodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoadBalancerPoolNodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoadBalancerPoolNodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoadBalancerPoolNodeRequest(val *CreateLoadBalancerPoolNodeRequest) *NullableCreateLoadBalancerPoolNodeRequest {
	return &NullableCreateLoadBalancerPoolNodeRequest{value: val, isSet: true}
}

func (v NullableCreateLoadBalancerPoolNodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoadBalancerPoolNodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


