/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner{}

// AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner struct for AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner
type AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner struct {
	MappedRole *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole `json:"mappedRole,omitempty"`
	// Fully Qualified Name of the role in the identity source
	SourceRoleFqn *string `json:"sourceRoleFqn,omitempty"`
	// Name of the role in the identity source
	SourceRoleName *string `json:"sourceRoleName,omitempty"`
}

// NewAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner instantiates a new AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner() *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner {
	this := AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner{}
	return &this
}

// NewAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerWithDefaults instantiates a new AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerWithDefaults() *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner {
	this := AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner{}
	return &this
}

// GetMappedRole returns the MappedRole field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetMappedRole() AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole {
	if o == nil || IsNil(o.MappedRole) {
		var ret AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole
		return ret
	}
	return *o.MappedRole
}

// GetMappedRoleOk returns a tuple with the MappedRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetMappedRoleOk() (*AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole, bool) {
	if o == nil || IsNil(o.MappedRole) {
		return nil, false
	}
	return o.MappedRole, true
}

// IsSetMappedRole returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) IsSetMappedRole() bool {
	if o != nil && !IsNil(o.MappedRole) {
		return true
	}

	return false
}

// SetMappedRole gets a reference to the given AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole and assigns it to the MappedRole field.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) SetMappedRole(v AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInnerMappedRole) {
	o.MappedRole = &v
}

// GetSourceRoleFqn returns the SourceRoleFqn field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetSourceRoleFqn() string {
	if o == nil || IsNil(o.SourceRoleFqn) {
		var ret string
		return ret
	}
	return *o.SourceRoleFqn
}

// GetSourceRoleFqnOk returns a tuple with the SourceRoleFqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetSourceRoleFqnOk() (*string, bool) {
	if o == nil || IsNil(o.SourceRoleFqn) {
		return nil, false
	}
	return o.SourceRoleFqn, true
}

// IsSetSourceRoleFqn returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) IsSetSourceRoleFqn() bool {
	if o != nil && !IsNil(o.SourceRoleFqn) {
		return true
	}

	return false
}

// SetSourceRoleFqn gets a reference to the given string and assigns it to the SourceRoleFqn field.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) SetSourceRoleFqn(v string) {
	o.SourceRoleFqn = &v
}

// GetSourceRoleName returns the SourceRoleName field value if set, zero value otherwise.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetSourceRoleName() string {
	if o == nil || IsNil(o.SourceRoleName) {
		var ret string
		return ret
	}
	return *o.SourceRoleName
}

// GetSourceRoleNameOk returns a tuple with the SourceRoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) GetSourceRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceRoleName) {
		return nil, false
	}
	return o.SourceRoleName, true
}

// IsSetSourceRoleName returns a boolean if a field has been set.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) IsSetSourceRoleName() bool {
	if o != nil && !IsNil(o.SourceRoleName) {
		return true
	}

	return false
}

// SetSourceRoleName gets a reference to the given string and assigns it to the SourceRoleName field.
func (o *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) SetSourceRoleName(v string) {
	o.SourceRoleName = &v
}

func (o AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MappedRole) {
		toSerialize["mappedRole"] = o.MappedRole
	}
	if !IsNil(o.SourceRoleFqn) {
		toSerialize["sourceRoleFqn"] = o.SourceRoleFqn
	}
	if !IsNil(o.SourceRoleName) {
		toSerialize["sourceRoleName"] = o.SourceRoleName
	}
	return toSerialize, nil
}

type NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner struct {
	value *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner
	isSet bool
}

func (v NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) Get() *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner {
	return v.value
}

func (v *NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) Set(val *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner(val *AddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) *NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner {
	return &NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner{value: val, isSet: true}
}

func (v NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentitySourcesRequestUserSourceRoleMappingsOneOfInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


