/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkRouterType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkRouterType200Response{}

// GetNetworkRouterType200Response struct for GetNetworkRouterType200Response
type GetNetworkRouterType200Response struct {
	NetworkRouterType *GetNetworkRouterType200ResponseNetworkRouterType `json:"networkRouterType,omitempty"`
}

// NewGetNetworkRouterType200Response instantiates a new GetNetworkRouterType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkRouterType200Response() *GetNetworkRouterType200Response {
	this := GetNetworkRouterType200Response{}
	return &this
}

// NewGetNetworkRouterType200ResponseWithDefaults instantiates a new GetNetworkRouterType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkRouterType200ResponseWithDefaults() *GetNetworkRouterType200Response {
	this := GetNetworkRouterType200Response{}
	return &this
}

// GetNetworkRouterType returns the NetworkRouterType field value if set, zero value otherwise.
func (o *GetNetworkRouterType200Response) GetNetworkRouterType() GetNetworkRouterType200ResponseNetworkRouterType {
	if o == nil || IsNil(o.NetworkRouterType) {
		var ret GetNetworkRouterType200ResponseNetworkRouterType
		return ret
	}
	return *o.NetworkRouterType
}

// GetNetworkRouterTypeOk returns a tuple with the NetworkRouterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkRouterType200Response) GetNetworkRouterTypeOk() (*GetNetworkRouterType200ResponseNetworkRouterType, bool) {
	if o == nil || IsNil(o.NetworkRouterType) {
		return nil, false
	}
	return o.NetworkRouterType, true
}

// IsSetNetworkRouterType returns a boolean if a field has been set.
func (o *GetNetworkRouterType200Response) IsSetNetworkRouterType() bool {
	if o != nil && !IsNil(o.NetworkRouterType) {
		return true
	}

	return false
}

// SetNetworkRouterType gets a reference to the given GetNetworkRouterType200ResponseNetworkRouterType and assigns it to the NetworkRouterType field.
func (o *GetNetworkRouterType200Response) SetNetworkRouterType(v GetNetworkRouterType200ResponseNetworkRouterType) {
	o.NetworkRouterType = &v
}

func (o GetNetworkRouterType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkRouterType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkRouterType) {
		toSerialize["networkRouterType"] = o.NetworkRouterType
	}
	return toSerialize, nil
}

type NullableGetNetworkRouterType200Response struct {
	value *GetNetworkRouterType200Response
	isSet bool
}

func (v NullableGetNetworkRouterType200Response) Get() *GetNetworkRouterType200Response {
	return v.value
}

func (v *NullableGetNetworkRouterType200Response) Set(val *GetNetworkRouterType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkRouterType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkRouterType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkRouterType200Response(val *GetNetworkRouterType200Response) *NullableGetNetworkRouterType200Response {
	return &NullableGetNetworkRouterType200Response{value: val, isSet: true}
}

func (v NullableGetNetworkRouterType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkRouterType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


