/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ProvisioningLicense type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningLicense{}

// ProvisioningLicense struct for ProvisioningLicense
type ProvisioningLicense struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	LicenseType *ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"licenseType,omitempty"`
	LicenseKey *string `json:"licenseKey,omitempty"`
	OrgName *string `json:"orgName,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	LicenseVersion *string `json:"licenseVersion,omitempty"`
	Copies *int64 `json:"copies,omitempty"`
	ReservationCount *int64 `json:"reservationCount,omitempty"`
	Tenants []map[string]interface{} `json:"tenants,omitempty"`
	VirtualImages []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"virtualImages,omitempty"`
	Account *ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"account,omitempty"`
}

// NewProvisioningLicense instantiates a new ProvisioningLicense object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningLicense() *ProvisioningLicense {
	this := ProvisioningLicense{}
	return &this
}

// NewProvisioningLicenseWithDefaults instantiates a new ProvisioningLicense object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningLicenseWithDefaults() *ProvisioningLicense {
	this := ProvisioningLicense{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ProvisioningLicense) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProvisioningLicense) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProvisioningLicense) SetDescription(v string) {
	o.Description = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetLicenseType() ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.LicenseType) {
		var ret ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetLicenseTypeOk() (*ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// IsSetLicenseType returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the LicenseType field.
func (o *ProvisioningLicense) SetLicenseType(v ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.LicenseType = &v
}

// GetLicenseKey returns the LicenseKey field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetLicenseKey() string {
	if o == nil || IsNil(o.LicenseKey) {
		var ret string
		return ret
	}
	return *o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetLicenseKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseKey) {
		return nil, false
	}
	return o.LicenseKey, true
}

// IsSetLicenseKey returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetLicenseKey() bool {
	if o != nil && !IsNil(o.LicenseKey) {
		return true
	}

	return false
}

// SetLicenseKey gets a reference to the given string and assigns it to the LicenseKey field.
func (o *ProvisioningLicense) SetLicenseKey(v string) {
	o.LicenseKey = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// IsSetOrgName returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *ProvisioningLicense) SetOrgName(v string) {
	o.OrgName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// IsSetFullName returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ProvisioningLicense) SetFullName(v string) {
	o.FullName = &v
}

// GetLicenseVersion returns the LicenseVersion field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetLicenseVersion() string {
	if o == nil || IsNil(o.LicenseVersion) {
		var ret string
		return ret
	}
	return *o.LicenseVersion
}

// GetLicenseVersionOk returns a tuple with the LicenseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetLicenseVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseVersion) {
		return nil, false
	}
	return o.LicenseVersion, true
}

// IsSetLicenseVersion returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetLicenseVersion() bool {
	if o != nil && !IsNil(o.LicenseVersion) {
		return true
	}

	return false
}

// SetLicenseVersion gets a reference to the given string and assigns it to the LicenseVersion field.
func (o *ProvisioningLicense) SetLicenseVersion(v string) {
	o.LicenseVersion = &v
}

// GetCopies returns the Copies field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetCopies() int64 {
	if o == nil || IsNil(o.Copies) {
		var ret int64
		return ret
	}
	return *o.Copies
}

// GetCopiesOk returns a tuple with the Copies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetCopiesOk() (*int64, bool) {
	if o == nil || IsNil(o.Copies) {
		return nil, false
	}
	return o.Copies, true
}

// IsSetCopies returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetCopies() bool {
	if o != nil && !IsNil(o.Copies) {
		return true
	}

	return false
}

// SetCopies gets a reference to the given int64 and assigns it to the Copies field.
func (o *ProvisioningLicense) SetCopies(v int64) {
	o.Copies = &v
}

// GetReservationCount returns the ReservationCount field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetReservationCount() int64 {
	if o == nil || IsNil(o.ReservationCount) {
		var ret int64
		return ret
	}
	return *o.ReservationCount
}

// GetReservationCountOk returns a tuple with the ReservationCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetReservationCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ReservationCount) {
		return nil, false
	}
	return o.ReservationCount, true
}

// IsSetReservationCount returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetReservationCount() bool {
	if o != nil && !IsNil(o.ReservationCount) {
		return true
	}

	return false
}

// SetReservationCount gets a reference to the given int64 and assigns it to the ReservationCount field.
func (o *ProvisioningLicense) SetReservationCount(v int64) {
	o.ReservationCount = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetTenants() []map[string]interface{} {
	if o == nil || IsNil(o.Tenants) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetTenantsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// IsSetTenants returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []map[string]interface{} and assigns it to the Tenants field.
func (o *ProvisioningLicense) SetTenants(v []map[string]interface{}) {
	o.Tenants = v
}

// GetVirtualImages returns the VirtualImages field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetVirtualImages() []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.VirtualImages) {
		var ret []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return o.VirtualImages
}

// GetVirtualImagesOk returns a tuple with the VirtualImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetVirtualImagesOk() ([]ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.VirtualImages) {
		return nil, false
	}
	return o.VirtualImages, true
}

// IsSetVirtualImages returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetVirtualImages() bool {
	if o != nil && !IsNil(o.VirtualImages) {
		return true
	}

	return false
}

// SetVirtualImages gets a reference to the given []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the VirtualImages field.
func (o *ProvisioningLicense) SetVirtualImages(v []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.VirtualImages = v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ProvisioningLicense) GetAccount() ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Account) {
		var ret ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningLicense) GetAccountOk() (*ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *ProvisioningLicense) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Account field.
func (o *ProvisioningLicense) SetAccount(v ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Account = &v
}

func (o ProvisioningLicense) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningLicense) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.LicenseKey) {
		toSerialize["licenseKey"] = o.LicenseKey
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.LicenseVersion) {
		toSerialize["licenseVersion"] = o.LicenseVersion
	}
	if !IsNil(o.Copies) {
		toSerialize["copies"] = o.Copies
	}
	if !IsNil(o.ReservationCount) {
		toSerialize["reservationCount"] = o.ReservationCount
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	if !IsNil(o.VirtualImages) {
		toSerialize["virtualImages"] = o.VirtualImages
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return toSerialize, nil
}

type NullableProvisioningLicense struct {
	value *ProvisioningLicense
	isSet bool
}

func (v NullableProvisioningLicense) Get() *ProvisioningLicense {
	return v.value
}

func (v *NullableProvisioningLicense) Set(val *ProvisioningLicense) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningLicense) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningLicense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningLicense(val *ProvisioningLicense) *NullableProvisioningLicense {
	return &NullableProvisioningLicense{value: val, isSet: true}
}

func (v NullableProvisioningLicense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningLicense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


