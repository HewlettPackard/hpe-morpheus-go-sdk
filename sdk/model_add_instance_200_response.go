/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddInstance200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstance200Response{}

// AddInstance200Response struct for AddInstance200Response
type AddInstance200Response struct {
	Instance             AddInstance200ResponseAllOfOneOfInstance `json:"instance"`
	Success              *bool                                    `json:"success,omitempty"`
	Errors               map[string]interface{}                   `json:"errors,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:",remain"`
}

type _AddInstance200Response AddInstance200Response

// NewAddInstance200Response instantiates a new AddInstance200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstance200Response(instance AddInstance200ResponseAllOfOneOfInstance) *AddInstance200Response {
	this := AddInstance200Response{}
	this.Instance = instance
	return &this
}

// NewAddInstance200ResponseWithDefaults instantiates a new AddInstance200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstance200ResponseWithDefaults() *AddInstance200Response {
	this := AddInstance200Response{}
	return &this
}

// GetInstance returns the Instance field value
func (o *AddInstance200Response) GetInstance() AddInstance200ResponseAllOfOneOfInstance {
	if o == nil {
		var ret AddInstance200ResponseAllOfOneOfInstance
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *AddInstance200Response) GetInstanceOk() (*AddInstance200ResponseAllOfOneOfInstance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *AddInstance200Response) SetInstance(v AddInstance200ResponseAllOfOneOfInstance) {
	o.Instance = v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddInstance200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddInstance200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddInstance200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *AddInstance200Response) GetErrors() map[string]interface{} {
	if o == nil || IsNil(o.Errors) {
		var ret map[string]interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInstance200Response) GetErrorsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Errors) {
		return map[string]interface{}{}, false
	}
	return o.Errors, true
}

// IsSetErrors returns a boolean if a field has been set.
func (o *AddInstance200Response) IsSetErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given map[string]interface{} and assigns it to the Errors field.
func (o *AddInstance200Response) SetErrors(v map[string]interface{}) {
	o.Errors = v
}

func (o AddInstance200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstance200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance"] = o.Instance
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *AddInstance200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
