/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the DelayedDeletePolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelayedDeletePolicyTypeConfiguration{}

// DelayedDeletePolicyTypeConfiguration Configuration settings for the following policy types: - Delayed Delete
type DelayedDeletePolicyTypeConfiguration struct {
	RemovalAge           *string                `json:"removalAge,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _DelayedDeletePolicyTypeConfiguration DelayedDeletePolicyTypeConfiguration

// NewDelayedDeletePolicyTypeConfiguration instantiates a new DelayedDeletePolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelayedDeletePolicyTypeConfiguration() *DelayedDeletePolicyTypeConfiguration {
	this := DelayedDeletePolicyTypeConfiguration{}
	return &this
}

// NewDelayedDeletePolicyTypeConfigurationWithDefaults instantiates a new DelayedDeletePolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelayedDeletePolicyTypeConfigurationWithDefaults() *DelayedDeletePolicyTypeConfiguration {
	this := DelayedDeletePolicyTypeConfiguration{}
	return &this
}

// GetRemovalAge returns the RemovalAge field value if set, zero value otherwise.
func (o *DelayedDeletePolicyTypeConfiguration) GetRemovalAge() string {
	if o == nil || IsNil(o.RemovalAge) {
		var ret string
		return ret
	}
	return *o.RemovalAge
}

// GetRemovalAgeOk returns a tuple with the RemovalAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelayedDeletePolicyTypeConfiguration) GetRemovalAgeOk() (*string, bool) {
	if o == nil || IsNil(o.RemovalAge) {
		return nil, false
	}
	return o.RemovalAge, true
}

// IsSetRemovalAge returns a boolean if a field has been set.
func (o *DelayedDeletePolicyTypeConfiguration) IsSetRemovalAge() bool {
	if o != nil && !IsNil(o.RemovalAge) {
		return true
	}

	return false
}

// SetRemovalAge gets a reference to the given string and assigns it to the RemovalAge field.
func (o *DelayedDeletePolicyTypeConfiguration) SetRemovalAge(v string) {
	o.RemovalAge = &v
}

func (o DelayedDeletePolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelayedDeletePolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemovalAge) {
		toSerialize["removalAge"] = o.RemovalAge
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *DelayedDeletePolicyTypeConfiguration) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
