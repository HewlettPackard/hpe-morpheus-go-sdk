/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddPoliciesGroupRequestPolicyPolicyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPoliciesGroupRequestPolicyPolicyType{}

// AddPoliciesGroupRequestPolicyPolicyType struct for AddPoliciesGroupRequestPolicyPolicyType
type AddPoliciesGroupRequestPolicyPolicyType struct {
	// The policy type
	Code *string `json:"code,omitempty"`
	Config *AddPoliciesGroupRequestPolicyPolicyTypeConfig `json:"config,omitempty"`
	// Set to false to disable
	Enabled *bool `json:"enabled,omitempty"`
	// Scope object type
	RefType *string `json:"refType,omitempty"`
	// Scope object ID (`group`)
	RefId *int64 `json:"refId,omitempty"`
	// Array of tenants to scope the policy to
	Accounts []int64 `json:"accounts,omitempty"`
	// Apply individually to each user in role.  Only when `refType` equals `Role`
	EachUser *bool `json:"eachUser,omitempty"`
}

// NewAddPoliciesGroupRequestPolicyPolicyType instantiates a new AddPoliciesGroupRequestPolicyPolicyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPoliciesGroupRequestPolicyPolicyType() *AddPoliciesGroupRequestPolicyPolicyType {
	this := AddPoliciesGroupRequestPolicyPolicyType{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewAddPoliciesGroupRequestPolicyPolicyTypeWithDefaults instantiates a new AddPoliciesGroupRequestPolicyPolicyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPoliciesGroupRequestPolicyPolicyTypeWithDefaults() *AddPoliciesGroupRequestPolicyPolicyType {
	this := AddPoliciesGroupRequestPolicyPolicyType{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetCode(v string) {
	o.Code = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetConfig() AddPoliciesGroupRequestPolicyPolicyTypeConfig {
	if o == nil || IsNil(o.Config) {
		var ret AddPoliciesGroupRequestPolicyPolicyTypeConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetConfigOk() (*AddPoliciesGroupRequestPolicyPolicyTypeConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AddPoliciesGroupRequestPolicyPolicyTypeConfig and assigns it to the Config field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetConfig(v AddPoliciesGroupRequestPolicyPolicyTypeConfig) {
	o.Config = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetRefType() string {
	if o == nil || IsNil(o.RefType) {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RefType) {
		return nil, false
	}
	return o.RefType, true
}

// IsSetRefType returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetRefType() bool {
	if o != nil && !IsNil(o.RefType) {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetRefId() int64 {
	if o == nil || IsNil(o.RefId) {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetRefIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RefId) {
		return nil, false
	}
	return o.RefId, true
}

// IsSetRefId returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetRefId() bool {
	if o != nil && !IsNil(o.RefId) {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetRefId(v int64) {
	o.RefId = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetAccounts() []int64 {
	if o == nil || IsNil(o.Accounts) {
		var ret []int64
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetAccountsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// IsSetAccounts returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []int64 and assigns it to the Accounts field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetAccounts(v []int64) {
	o.Accounts = v
}

// GetEachUser returns the EachUser field value if set, zero value otherwise.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetEachUser() bool {
	if o == nil || IsNil(o.EachUser) {
		var ret bool
		return ret
	}
	return *o.EachUser
}

// GetEachUserOk returns a tuple with the EachUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) GetEachUserOk() (*bool, bool) {
	if o == nil || IsNil(o.EachUser) {
		return nil, false
	}
	return o.EachUser, true
}

// IsSetEachUser returns a boolean if a field has been set.
func (o *AddPoliciesGroupRequestPolicyPolicyType) IsSetEachUser() bool {
	if o != nil && !IsNil(o.EachUser) {
		return true
	}

	return false
}

// SetEachUser gets a reference to the given bool and assigns it to the EachUser field.
func (o *AddPoliciesGroupRequestPolicyPolicyType) SetEachUser(v bool) {
	o.EachUser = &v
}

func (o AddPoliciesGroupRequestPolicyPolicyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPoliciesGroupRequestPolicyPolicyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RefType) {
		toSerialize["refType"] = o.RefType
	}
	if !IsNil(o.RefId) {
		toSerialize["refId"] = o.RefId
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.EachUser) {
		toSerialize["eachUser"] = o.EachUser
	}
	return toSerialize, nil
}

type NullableAddPoliciesGroupRequestPolicyPolicyType struct {
	value *AddPoliciesGroupRequestPolicyPolicyType
	isSet bool
}

func (v NullableAddPoliciesGroupRequestPolicyPolicyType) Get() *AddPoliciesGroupRequestPolicyPolicyType {
	return v.value
}

func (v *NullableAddPoliciesGroupRequestPolicyPolicyType) Set(val *AddPoliciesGroupRequestPolicyPolicyType) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPoliciesGroupRequestPolicyPolicyType) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPoliciesGroupRequestPolicyPolicyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPoliciesGroupRequestPolicyPolicyType(val *AddPoliciesGroupRequestPolicyPolicyType) *NullableAddPoliciesGroupRequestPolicyPolicyType {
	return &NullableAddPoliciesGroupRequestPolicyPolicyType{value: val, isSet: true}
}

func (v NullableAddPoliciesGroupRequestPolicyPolicyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPoliciesGroupRequestPolicyPolicyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


