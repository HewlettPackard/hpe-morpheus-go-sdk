/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetNetworkRoutersNats200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkRoutersNats200Response{}

// GetNetworkRoutersNats200Response struct for GetNetworkRoutersNats200Response
type GetNetworkRoutersNats200Response struct {
	NetworkRouterNATs    []GetNetworkRoutersNats200ResponseNetworkRouterNATsInner `json:"networkRouterNATs,omitempty"`
	AdditionalProperties map[string]interface{}                                   `json:",remain"`
}

type _GetNetworkRoutersNats200Response GetNetworkRoutersNats200Response

// NewGetNetworkRoutersNats200Response instantiates a new GetNetworkRoutersNats200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkRoutersNats200Response() *GetNetworkRoutersNats200Response {
	this := GetNetworkRoutersNats200Response{}
	return &this
}

// NewGetNetworkRoutersNats200ResponseWithDefaults instantiates a new GetNetworkRoutersNats200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkRoutersNats200ResponseWithDefaults() *GetNetworkRoutersNats200Response {
	this := GetNetworkRoutersNats200Response{}
	return &this
}

// GetNetworkRouterNATs returns the NetworkRouterNATs field value if set, zero value otherwise.
func (o *GetNetworkRoutersNats200Response) GetNetworkRouterNATs() []GetNetworkRoutersNats200ResponseNetworkRouterNATsInner {
	if o == nil || IsNil(o.NetworkRouterNATs) {
		var ret []GetNetworkRoutersNats200ResponseNetworkRouterNATsInner
		return ret
	}
	return o.NetworkRouterNATs
}

// GetNetworkRouterNATsOk returns a tuple with the NetworkRouterNATs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkRoutersNats200Response) GetNetworkRouterNATsOk() ([]GetNetworkRoutersNats200ResponseNetworkRouterNATsInner, bool) {
	if o == nil || IsNil(o.NetworkRouterNATs) {
		return nil, false
	}
	return o.NetworkRouterNATs, true
}

// IsSetNetworkRouterNATs returns a boolean if a field has been set.
func (o *GetNetworkRoutersNats200Response) IsSetNetworkRouterNATs() bool {
	if o != nil && !IsNil(o.NetworkRouterNATs) {
		return true
	}

	return false
}

// SetNetworkRouterNATs gets a reference to the given []GetNetworkRoutersNats200ResponseNetworkRouterNATsInner and assigns it to the NetworkRouterNATs field.
func (o *GetNetworkRoutersNats200Response) SetNetworkRouterNATs(v []GetNetworkRoutersNats200ResponseNetworkRouterNATsInner) {
	o.NetworkRouterNATs = v
}

func (o GetNetworkRoutersNats200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkRoutersNats200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkRouterNATs) {
		toSerialize["networkRouterNATs"] = o.NetworkRouterNATs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetNetworkRoutersNats200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
