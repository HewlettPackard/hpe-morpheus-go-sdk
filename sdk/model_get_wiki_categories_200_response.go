/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetWikiCategories200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWikiCategories200Response{}

// GetWikiCategories200Response struct for GetWikiCategories200Response
type GetWikiCategories200Response struct {
	Categories           []GetWikiCategories200ResponseCategoriesInner `json:"categories,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:",remain"`
}

type _GetWikiCategories200Response GetWikiCategories200Response

// NewGetWikiCategories200Response instantiates a new GetWikiCategories200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWikiCategories200Response() *GetWikiCategories200Response {
	this := GetWikiCategories200Response{}
	return &this
}

// NewGetWikiCategories200ResponseWithDefaults instantiates a new GetWikiCategories200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWikiCategories200ResponseWithDefaults() *GetWikiCategories200Response {
	this := GetWikiCategories200Response{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *GetWikiCategories200Response) GetCategories() []GetWikiCategories200ResponseCategoriesInner {
	if o == nil || IsNil(o.Categories) {
		var ret []GetWikiCategories200ResponseCategoriesInner
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWikiCategories200Response) GetCategoriesOk() ([]GetWikiCategories200ResponseCategoriesInner, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// IsSetCategories returns a boolean if a field has been set.
func (o *GetWikiCategories200Response) IsSetCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []GetWikiCategories200ResponseCategoriesInner and assigns it to the Categories field.
func (o *GetWikiCategories200Response) SetCategories(v []GetWikiCategories200ResponseCategoriesInner) {
	o.Categories = v
}

func (o GetWikiCategories200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWikiCategories200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetWikiCategories200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
