/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetArchiveFileLinks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetArchiveFileLinks200Response{}

// GetArchiveFileLinks200Response struct for GetArchiveFileLinks200Response
type GetArchiveFileLinks200Response struct {
	ArchiveFileLinks     []GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner `json:"archiveFileLinks,omitempty"`
	AdditionalProperties map[string]interface{}                                     `json:",remain"`
}

type _GetArchiveFileLinks200Response GetArchiveFileLinks200Response

// NewGetArchiveFileLinks200Response instantiates a new GetArchiveFileLinks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetArchiveFileLinks200Response() *GetArchiveFileLinks200Response {
	this := GetArchiveFileLinks200Response{}
	return &this
}

// NewGetArchiveFileLinks200ResponseWithDefaults instantiates a new GetArchiveFileLinks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetArchiveFileLinks200ResponseWithDefaults() *GetArchiveFileLinks200Response {
	this := GetArchiveFileLinks200Response{}
	return &this
}

// GetArchiveFileLinks returns the ArchiveFileLinks field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200Response) GetArchiveFileLinks() []GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner {
	if o == nil || IsNil(o.ArchiveFileLinks) {
		var ret []GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner
		return ret
	}
	return o.ArchiveFileLinks
}

// GetArchiveFileLinksOk returns a tuple with the ArchiveFileLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200Response) GetArchiveFileLinksOk() ([]GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner, bool) {
	if o == nil || IsNil(o.ArchiveFileLinks) {
		return nil, false
	}
	return o.ArchiveFileLinks, true
}

// IsSetArchiveFileLinks returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200Response) IsSetArchiveFileLinks() bool {
	if o != nil && !IsNil(o.ArchiveFileLinks) {
		return true
	}

	return false
}

// SetArchiveFileLinks gets a reference to the given []GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner and assigns it to the ArchiveFileLinks field.
func (o *GetArchiveFileLinks200Response) SetArchiveFileLinks(v []GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) {
	o.ArchiveFileLinks = v
}

func (o GetArchiveFileLinks200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetArchiveFileLinks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArchiveFileLinks) {
		toSerialize["archiveFileLinks"] = o.ArchiveFileLinks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetArchiveFileLinks200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
