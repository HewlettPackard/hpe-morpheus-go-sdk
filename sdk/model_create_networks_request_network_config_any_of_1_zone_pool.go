/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateNetworksRequestNetworkConfigAnyOf1ZonePool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworksRequestNetworkConfigAnyOf1ZonePool{}

// CreateNetworksRequestNetworkConfigAnyOf1ZonePool struct for CreateNetworksRequestNetworkConfigAnyOf1ZonePool
type CreateNetworksRequestNetworkConfigAnyOf1ZonePool struct {
	// Morpheus resource pool ID of the VPC for the network.
	Id int32 `json:"id"`
}

type _CreateNetworksRequestNetworkConfigAnyOf1ZonePool CreateNetworksRequestNetworkConfigAnyOf1ZonePool

// NewCreateNetworksRequestNetworkConfigAnyOf1ZonePool instantiates a new CreateNetworksRequestNetworkConfigAnyOf1ZonePool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworksRequestNetworkConfigAnyOf1ZonePool(id int32) *CreateNetworksRequestNetworkConfigAnyOf1ZonePool {
	this := CreateNetworksRequestNetworkConfigAnyOf1ZonePool{}
	this.Id = id
	return &this
}

// NewCreateNetworksRequestNetworkConfigAnyOf1ZonePoolWithDefaults instantiates a new CreateNetworksRequestNetworkConfigAnyOf1ZonePool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworksRequestNetworkConfigAnyOf1ZonePoolWithDefaults() *CreateNetworksRequestNetworkConfigAnyOf1ZonePool {
	this := CreateNetworksRequestNetworkConfigAnyOf1ZonePool{}
	return &this
}

// GetId returns the Id field value
func (o *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) SetId(v int32) {
	o.Id = v
}

func (o CreateNetworksRequestNetworkConfigAnyOf1ZonePool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworksRequestNetworkConfigAnyOf1ZonePool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNetworksRequestNetworkConfigAnyOf1ZonePool := _CreateNetworksRequestNetworkConfigAnyOf1ZonePool{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateNetworksRequestNetworkConfigAnyOf1ZonePool)

	if err != nil {
		return err
	}

	*o = CreateNetworksRequestNetworkConfigAnyOf1ZonePool(varCreateNetworksRequestNetworkConfigAnyOf1ZonePool)

	return err
}

type NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool struct {
	value *CreateNetworksRequestNetworkConfigAnyOf1ZonePool
	isSet bool
}

func (v NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) Get() *CreateNetworksRequestNetworkConfigAnyOf1ZonePool {
	return v.value
}

func (v *NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) Set(val *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool(val *CreateNetworksRequestNetworkConfigAnyOf1ZonePool) *NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool {
	return &NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool{value: val, isSet: true}
}

func (v NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworksRequestNetworkConfigAnyOf1ZonePool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


