/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddChecksRequestCheckOneOf3Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddChecksRequestCheckOneOf3Config{}

// AddChecksRequestCheckOneOf3Config struct for AddChecksRequestCheckOneOf3Config
type AddChecksRequestCheckOneOf3Config struct {
	// Hostname or IP address of the Elasticsearch server
	EsHost string `json:"esHost"`
	// Port to connect to the HTTP service
	EsPort string `json:"esPort"`
	CheckUser *string `json:"checkUser,omitempty"`
	TextCheckOn *string `json:"textCheckOn,omitempty"`
	CheckPassword *string `json:"checkPassword,omitempty"`
	WebTextMatch *string `json:"webTextMatch,omitempty"`
	CheckPasswordHash *string `json:"checkPasswordHash,omitempty"`
	TunnelOn *string `json:"tunnelOn,omitempty"`
	SshHost *string `json:"sshHost,omitempty"`
	SshPort *int64 `json:"sshPort,omitempty"`
	SshUser *string `json:"sshUser,omitempty"`
	// Password for user, if not using key based authentication
	SshPassword *string `json:"sshPassword,omitempty"`
}

type _AddChecksRequestCheckOneOf3Config AddChecksRequestCheckOneOf3Config

// NewAddChecksRequestCheckOneOf3Config instantiates a new AddChecksRequestCheckOneOf3Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddChecksRequestCheckOneOf3Config(esHost string, esPort string) *AddChecksRequestCheckOneOf3Config {
	this := AddChecksRequestCheckOneOf3Config{}
	this.EsHost = esHost
	this.EsPort = esPort
	return &this
}

// NewAddChecksRequestCheckOneOf3ConfigWithDefaults instantiates a new AddChecksRequestCheckOneOf3Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddChecksRequestCheckOneOf3ConfigWithDefaults() *AddChecksRequestCheckOneOf3Config {
	this := AddChecksRequestCheckOneOf3Config{}
	return &this
}

// GetEsHost returns the EsHost field value
func (o *AddChecksRequestCheckOneOf3Config) GetEsHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EsHost
}

// GetEsHostOk returns a tuple with the EsHost field value
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetEsHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsHost, true
}

// SetEsHost sets field value
func (o *AddChecksRequestCheckOneOf3Config) SetEsHost(v string) {
	o.EsHost = v
}

// GetEsPort returns the EsPort field value
func (o *AddChecksRequestCheckOneOf3Config) GetEsPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EsPort
}

// GetEsPortOk returns a tuple with the EsPort field value
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetEsPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsPort, true
}

// SetEsPort sets field value
func (o *AddChecksRequestCheckOneOf3Config) SetEsPort(v string) {
	o.EsPort = v
}

// GetCheckUser returns the CheckUser field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckUser() string {
	if o == nil || IsNil(o.CheckUser) {
		var ret string
		return ret
	}
	return *o.CheckUser
}

// GetCheckUserOk returns a tuple with the CheckUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckUserOk() (*string, bool) {
	if o == nil || IsNil(o.CheckUser) {
		return nil, false
	}
	return o.CheckUser, true
}

// IsSetCheckUser returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetCheckUser() bool {
	if o != nil && !IsNil(o.CheckUser) {
		return true
	}

	return false
}

// SetCheckUser gets a reference to the given string and assigns it to the CheckUser field.
func (o *AddChecksRequestCheckOneOf3Config) SetCheckUser(v string) {
	o.CheckUser = &v
}

// GetTextCheckOn returns the TextCheckOn field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetTextCheckOn() string {
	if o == nil || IsNil(o.TextCheckOn) {
		var ret string
		return ret
	}
	return *o.TextCheckOn
}

// GetTextCheckOnOk returns a tuple with the TextCheckOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetTextCheckOnOk() (*string, bool) {
	if o == nil || IsNil(o.TextCheckOn) {
		return nil, false
	}
	return o.TextCheckOn, true
}

// IsSetTextCheckOn returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetTextCheckOn() bool {
	if o != nil && !IsNil(o.TextCheckOn) {
		return true
	}

	return false
}

// SetTextCheckOn gets a reference to the given string and assigns it to the TextCheckOn field.
func (o *AddChecksRequestCheckOneOf3Config) SetTextCheckOn(v string) {
	o.TextCheckOn = &v
}

// GetCheckPassword returns the CheckPassword field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckPassword() string {
	if o == nil || IsNil(o.CheckPassword) {
		var ret string
		return ret
	}
	return *o.CheckPassword
}

// GetCheckPasswordOk returns a tuple with the CheckPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.CheckPassword) {
		return nil, false
	}
	return o.CheckPassword, true
}

// IsSetCheckPassword returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetCheckPassword() bool {
	if o != nil && !IsNil(o.CheckPassword) {
		return true
	}

	return false
}

// SetCheckPassword gets a reference to the given string and assigns it to the CheckPassword field.
func (o *AddChecksRequestCheckOneOf3Config) SetCheckPassword(v string) {
	o.CheckPassword = &v
}

// GetWebTextMatch returns the WebTextMatch field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetWebTextMatch() string {
	if o == nil || IsNil(o.WebTextMatch) {
		var ret string
		return ret
	}
	return *o.WebTextMatch
}

// GetWebTextMatchOk returns a tuple with the WebTextMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetWebTextMatchOk() (*string, bool) {
	if o == nil || IsNil(o.WebTextMatch) {
		return nil, false
	}
	return o.WebTextMatch, true
}

// IsSetWebTextMatch returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetWebTextMatch() bool {
	if o != nil && !IsNil(o.WebTextMatch) {
		return true
	}

	return false
}

// SetWebTextMatch gets a reference to the given string and assigns it to the WebTextMatch field.
func (o *AddChecksRequestCheckOneOf3Config) SetWebTextMatch(v string) {
	o.WebTextMatch = &v
}

// GetCheckPasswordHash returns the CheckPasswordHash field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckPasswordHash() string {
	if o == nil || IsNil(o.CheckPasswordHash) {
		var ret string
		return ret
	}
	return *o.CheckPasswordHash
}

// GetCheckPasswordHashOk returns a tuple with the CheckPasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetCheckPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.CheckPasswordHash) {
		return nil, false
	}
	return o.CheckPasswordHash, true
}

// IsSetCheckPasswordHash returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetCheckPasswordHash() bool {
	if o != nil && !IsNil(o.CheckPasswordHash) {
		return true
	}

	return false
}

// SetCheckPasswordHash gets a reference to the given string and assigns it to the CheckPasswordHash field.
func (o *AddChecksRequestCheckOneOf3Config) SetCheckPasswordHash(v string) {
	o.CheckPasswordHash = &v
}

// GetTunnelOn returns the TunnelOn field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetTunnelOn() string {
	if o == nil || IsNil(o.TunnelOn) {
		var ret string
		return ret
	}
	return *o.TunnelOn
}

// GetTunnelOnOk returns a tuple with the TunnelOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetTunnelOnOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelOn) {
		return nil, false
	}
	return o.TunnelOn, true
}

// IsSetTunnelOn returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetTunnelOn() bool {
	if o != nil && !IsNil(o.TunnelOn) {
		return true
	}

	return false
}

// SetTunnelOn gets a reference to the given string and assigns it to the TunnelOn field.
func (o *AddChecksRequestCheckOneOf3Config) SetTunnelOn(v string) {
	o.TunnelOn = &v
}

// GetSshHost returns the SshHost field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetSshHost() string {
	if o == nil || IsNil(o.SshHost) {
		var ret string
		return ret
	}
	return *o.SshHost
}

// GetSshHostOk returns a tuple with the SshHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetSshHostOk() (*string, bool) {
	if o == nil || IsNil(o.SshHost) {
		return nil, false
	}
	return o.SshHost, true
}

// IsSetSshHost returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetSshHost() bool {
	if o != nil && !IsNil(o.SshHost) {
		return true
	}

	return false
}

// SetSshHost gets a reference to the given string and assigns it to the SshHost field.
func (o *AddChecksRequestCheckOneOf3Config) SetSshHost(v string) {
	o.SshHost = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetSshPort() int64 {
	if o == nil || IsNil(o.SshPort) {
		var ret int64
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetSshPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SshPort) {
		return nil, false
	}
	return o.SshPort, true
}

// IsSetSshPort returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetSshPort() bool {
	if o != nil && !IsNil(o.SshPort) {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given int64 and assigns it to the SshPort field.
func (o *AddChecksRequestCheckOneOf3Config) SetSshPort(v int64) {
	o.SshPort = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetSshUser() string {
	if o == nil || IsNil(o.SshUser) {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetSshUserOk() (*string, bool) {
	if o == nil || IsNil(o.SshUser) {
		return nil, false
	}
	return o.SshUser, true
}

// IsSetSshUser returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetSshUser() bool {
	if o != nil && !IsNil(o.SshUser) {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *AddChecksRequestCheckOneOf3Config) SetSshUser(v string) {
	o.SshUser = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *AddChecksRequestCheckOneOf3Config) GetSshPassword() string {
	if o == nil || IsNil(o.SshPassword) {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddChecksRequestCheckOneOf3Config) GetSshPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SshPassword) {
		return nil, false
	}
	return o.SshPassword, true
}

// IsSetSshPassword returns a boolean if a field has been set.
func (o *AddChecksRequestCheckOneOf3Config) IsSetSshPassword() bool {
	if o != nil && !IsNil(o.SshPassword) {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *AddChecksRequestCheckOneOf3Config) SetSshPassword(v string) {
	o.SshPassword = &v
}

func (o AddChecksRequestCheckOneOf3Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddChecksRequestCheckOneOf3Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["esHost"] = o.EsHost
	toSerialize["esPort"] = o.EsPort
	if !IsNil(o.CheckUser) {
		toSerialize["checkUser"] = o.CheckUser
	}
	if !IsNil(o.TextCheckOn) {
		toSerialize["textCheckOn"] = o.TextCheckOn
	}
	if !IsNil(o.CheckPassword) {
		toSerialize["checkPassword"] = o.CheckPassword
	}
	if !IsNil(o.WebTextMatch) {
		toSerialize["webTextMatch"] = o.WebTextMatch
	}
	if !IsNil(o.CheckPasswordHash) {
		toSerialize["checkPasswordHash"] = o.CheckPasswordHash
	}
	if !IsNil(o.TunnelOn) {
		toSerialize["tunnelOn"] = o.TunnelOn
	}
	if !IsNil(o.SshHost) {
		toSerialize["sshHost"] = o.SshHost
	}
	if !IsNil(o.SshPort) {
		toSerialize["sshPort"] = o.SshPort
	}
	if !IsNil(o.SshUser) {
		toSerialize["sshUser"] = o.SshUser
	}
	if !IsNil(o.SshPassword) {
		toSerialize["sshPassword"] = o.SshPassword
	}
	return toSerialize, nil
}

func (o *AddChecksRequestCheckOneOf3Config) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"esHost",
		"esPort",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddChecksRequestCheckOneOf3Config := _AddChecksRequestCheckOneOf3Config{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddChecksRequestCheckOneOf3Config)

	if err != nil {
		return err
	}

	*o = AddChecksRequestCheckOneOf3Config(varAddChecksRequestCheckOneOf3Config)

	return err
}

type NullableAddChecksRequestCheckOneOf3Config struct {
	value *AddChecksRequestCheckOneOf3Config
	isSet bool
}

func (v NullableAddChecksRequestCheckOneOf3Config) Get() *AddChecksRequestCheckOneOf3Config {
	return v.value
}

func (v *NullableAddChecksRequestCheckOneOf3Config) Set(val *AddChecksRequestCheckOneOf3Config) {
	v.value = val
	v.isSet = true
}

func (v NullableAddChecksRequestCheckOneOf3Config) IsSet() bool {
	return v.isSet
}

func (v *NullableAddChecksRequestCheckOneOf3Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddChecksRequestCheckOneOf3Config(val *AddChecksRequestCheckOneOf3Config) *NullableAddChecksRequestCheckOneOf3Config {
	return &NullableAddChecksRequestCheckOneOf3Config{value: val, isSet: true}
}

func (v NullableAddChecksRequestCheckOneOf3Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddChecksRequestCheckOneOf3Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


