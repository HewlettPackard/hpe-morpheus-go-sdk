/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetPlugin200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPlugin200Response{}

// GetPlugin200Response struct for GetPlugin200Response
type GetPlugin200Response struct {
	Plugin *ListPlugins200ResponseAllOfPluginsInner `json:"plugin,omitempty"`
}

// NewGetPlugin200Response instantiates a new GetPlugin200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlugin200Response() *GetPlugin200Response {
	this := GetPlugin200Response{}
	return &this
}

// NewGetPlugin200ResponseWithDefaults instantiates a new GetPlugin200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlugin200ResponseWithDefaults() *GetPlugin200Response {
	this := GetPlugin200Response{}
	return &this
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *GetPlugin200Response) GetPlugin() ListPlugins200ResponseAllOfPluginsInner {
	if o == nil || IsNil(o.Plugin) {
		var ret ListPlugins200ResponseAllOfPluginsInner
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlugin200Response) GetPluginOk() (*ListPlugins200ResponseAllOfPluginsInner, bool) {
	if o == nil || IsNil(o.Plugin) {
		return nil, false
	}
	return o.Plugin, true
}

// IsSetPlugin returns a boolean if a field has been set.
func (o *GetPlugin200Response) IsSetPlugin() bool {
	if o != nil && !IsNil(o.Plugin) {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given ListPlugins200ResponseAllOfPluginsInner and assigns it to the Plugin field.
func (o *GetPlugin200Response) SetPlugin(v ListPlugins200ResponseAllOfPluginsInner) {
	o.Plugin = &v
}

func (o GetPlugin200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPlugin200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plugin) {
		toSerialize["plugin"] = o.Plugin
	}
	return toSerialize, nil
}

type NullableGetPlugin200Response struct {
	value *GetPlugin200Response
	isSet bool
}

func (v NullableGetPlugin200Response) Get() *GetPlugin200Response {
	return v.value
}

func (v *NullableGetPlugin200Response) Set(val *GetPlugin200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlugin200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlugin200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlugin200Response(val *GetPlugin200Response) *NullableGetPlugin200Response {
	return &NullableGetPlugin200Response{value: val, isSet: true}
}

func (v NullableGetPlugin200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlugin200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


