/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListBackups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackups200Response{}

// ListBackups200Response struct for ListBackups200Response
type ListBackups200Response struct {
	Backups []ListBackups200ResponseAllOfBackupsInner `json:"backups,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListBackups200Response instantiates a new ListBackups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackups200Response() *ListBackups200Response {
	this := ListBackups200Response{}
	return &this
}

// NewListBackups200ResponseWithDefaults instantiates a new ListBackups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackups200ResponseWithDefaults() *ListBackups200Response {
	this := ListBackups200Response{}
	return &this
}

// GetBackups returns the Backups field value if set, zero value otherwise.
func (o *ListBackups200Response) GetBackups() []ListBackups200ResponseAllOfBackupsInner {
	if o == nil || IsNil(o.Backups) {
		var ret []ListBackups200ResponseAllOfBackupsInner
		return ret
	}
	return o.Backups
}

// GetBackupsOk returns a tuple with the Backups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200Response) GetBackupsOk() ([]ListBackups200ResponseAllOfBackupsInner, bool) {
	if o == nil || IsNil(o.Backups) {
		return nil, false
	}
	return o.Backups, true
}

// IsSetBackups returns a boolean if a field has been set.
func (o *ListBackups200Response) IsSetBackups() bool {
	if o != nil && !IsNil(o.Backups) {
		return true
	}

	return false
}

// SetBackups gets a reference to the given []ListBackups200ResponseAllOfBackupsInner and assigns it to the Backups field.
func (o *ListBackups200Response) SetBackups(v []ListBackups200ResponseAllOfBackupsInner) {
	o.Backups = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListBackups200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListBackups200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListBackups200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListBackups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Backups) {
		toSerialize["backups"] = o.Backups
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListBackups200Response struct {
	value *ListBackups200Response
	isSet bool
}

func (v NullableListBackups200Response) Get() *ListBackups200Response {
	return v.value
}

func (v *NullableListBackups200Response) Set(val *ListBackups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackups200Response(val *ListBackups200Response) *NullableListBackups200Response {
	return &NullableListBackups200Response{value: val, isSet: true}
}

func (v NullableListBackups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


