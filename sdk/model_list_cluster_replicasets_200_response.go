/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClusterReplicasets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClusterReplicasets200Response{}

// ListClusterReplicasets200Response struct for ListClusterReplicasets200Response
type ListClusterReplicasets200Response struct {
	Replicasets []ListClusterReplicasets200ResponseAllOfReplicasetsInner `json:"replicasets,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListClusterReplicasets200Response instantiates a new ListClusterReplicasets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClusterReplicasets200Response() *ListClusterReplicasets200Response {
	this := ListClusterReplicasets200Response{}
	return &this
}

// NewListClusterReplicasets200ResponseWithDefaults instantiates a new ListClusterReplicasets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClusterReplicasets200ResponseWithDefaults() *ListClusterReplicasets200Response {
	this := ListClusterReplicasets200Response{}
	return &this
}

// GetReplicasets returns the Replicasets field value if set, zero value otherwise.
func (o *ListClusterReplicasets200Response) GetReplicasets() []ListClusterReplicasets200ResponseAllOfReplicasetsInner {
	if o == nil || IsNil(o.Replicasets) {
		var ret []ListClusterReplicasets200ResponseAllOfReplicasetsInner
		return ret
	}
	return o.Replicasets
}

// GetReplicasetsOk returns a tuple with the Replicasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterReplicasets200Response) GetReplicasetsOk() ([]ListClusterReplicasets200ResponseAllOfReplicasetsInner, bool) {
	if o == nil || IsNil(o.Replicasets) {
		return nil, false
	}
	return o.Replicasets, true
}

// IsSetReplicasets returns a boolean if a field has been set.
func (o *ListClusterReplicasets200Response) IsSetReplicasets() bool {
	if o != nil && !IsNil(o.Replicasets) {
		return true
	}

	return false
}

// SetReplicasets gets a reference to the given []ListClusterReplicasets200ResponseAllOfReplicasetsInner and assigns it to the Replicasets field.
func (o *ListClusterReplicasets200Response) SetReplicasets(v []ListClusterReplicasets200ResponseAllOfReplicasetsInner) {
	o.Replicasets = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListClusterReplicasets200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClusterReplicasets200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListClusterReplicasets200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListClusterReplicasets200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListClusterReplicasets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClusterReplicasets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Replicasets) {
		toSerialize["replicasets"] = o.Replicasets
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListClusterReplicasets200Response struct {
	value *ListClusterReplicasets200Response
	isSet bool
}

func (v NullableListClusterReplicasets200Response) Get() *ListClusterReplicasets200Response {
	return v.value
}

func (v *NullableListClusterReplicasets200Response) Set(val *ListClusterReplicasets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListClusterReplicasets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListClusterReplicasets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClusterReplicasets200Response(val *ListClusterReplicasets200Response) *NullableListClusterReplicasets200Response {
	return &NullableListClusterReplicasets200Response{value: val, isSet: true}
}

func (v NullableListClusterReplicasets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClusterReplicasets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


