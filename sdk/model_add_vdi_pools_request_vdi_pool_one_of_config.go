/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddVDIPoolsRequestVdiPoolOneOfConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVDIPoolsRequestVdiPoolOneOfConfig{}

// AddVDIPoolsRequestVdiPoolOneOfConfig This can be passed in place of `instanceConfig`, but will not preserve the config property order.
type AddVDIPoolsRequestVdiPoolOneOfConfig struct {
	// Name of instance
	Name string `json:"name"`
	Group AddVDIPoolsRequestVdiPoolOneOfConfigGroup `json:"group"`
	Cloud AddVDIPoolsRequestVdiPoolOneOfConfigCloud `json:"cloud"`
	Type AddVDIPoolsRequestVdiPoolOneOfConfigType `json:"type"`
	Layout AddVDIPoolsRequestVdiPoolOneOfConfigLayout `json:"layout"`
	Plan AddVDIPoolsRequestVdiPoolOneOfConfigPlan `json:"plan"`
}

type _AddVDIPoolsRequestVdiPoolOneOfConfig AddVDIPoolsRequestVdiPoolOneOfConfig

// NewAddVDIPoolsRequestVdiPoolOneOfConfig instantiates a new AddVDIPoolsRequestVdiPoolOneOfConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVDIPoolsRequestVdiPoolOneOfConfig(name string, group AddVDIPoolsRequestVdiPoolOneOfConfigGroup, cloud AddVDIPoolsRequestVdiPoolOneOfConfigCloud, type_ AddVDIPoolsRequestVdiPoolOneOfConfigType, layout AddVDIPoolsRequestVdiPoolOneOfConfigLayout, plan AddVDIPoolsRequestVdiPoolOneOfConfigPlan) *AddVDIPoolsRequestVdiPoolOneOfConfig {
	this := AddVDIPoolsRequestVdiPoolOneOfConfig{}
	this.Name = name
	this.Group = group
	this.Cloud = cloud
	this.Type = type_
	this.Layout = layout
	this.Plan = plan
	return &this
}

// NewAddVDIPoolsRequestVdiPoolOneOfConfigWithDefaults instantiates a new AddVDIPoolsRequestVdiPoolOneOfConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVDIPoolsRequestVdiPoolOneOfConfigWithDefaults() *AddVDIPoolsRequestVdiPoolOneOfConfig {
	this := AddVDIPoolsRequestVdiPoolOneOfConfig{}
	return &this
}

// GetName returns the Name field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetName(v string) {
	o.Name = v
}

// GetGroup returns the Group field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetGroup() AddVDIPoolsRequestVdiPoolOneOfConfigGroup {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfigGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetGroupOk() (*AddVDIPoolsRequestVdiPoolOneOfConfigGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetGroup(v AddVDIPoolsRequestVdiPoolOneOfConfigGroup) {
	o.Group = v
}

// GetCloud returns the Cloud field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetCloud() AddVDIPoolsRequestVdiPoolOneOfConfigCloud {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfigCloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetCloudOk() (*AddVDIPoolsRequestVdiPoolOneOfConfigCloud, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetCloud(v AddVDIPoolsRequestVdiPoolOneOfConfigCloud) {
	o.Cloud = v
}

// GetType returns the Type field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetType() AddVDIPoolsRequestVdiPoolOneOfConfigType {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfigType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetTypeOk() (*AddVDIPoolsRequestVdiPoolOneOfConfigType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetType(v AddVDIPoolsRequestVdiPoolOneOfConfigType) {
	o.Type = v
}

// GetLayout returns the Layout field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetLayout() AddVDIPoolsRequestVdiPoolOneOfConfigLayout {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfigLayout
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetLayoutOk() (*AddVDIPoolsRequestVdiPoolOneOfConfigLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetLayout(v AddVDIPoolsRequestVdiPoolOneOfConfigLayout) {
	o.Layout = v
}

// GetPlan returns the Plan field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetPlan() AddVDIPoolsRequestVdiPoolOneOfConfigPlan {
	if o == nil {
		var ret AddVDIPoolsRequestVdiPoolOneOfConfigPlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) GetPlanOk() (*AddVDIPoolsRequestVdiPoolOneOfConfigPlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) SetPlan(v AddVDIPoolsRequestVdiPoolOneOfConfigPlan) {
	o.Plan = v
}

func (o AddVDIPoolsRequestVdiPoolOneOfConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVDIPoolsRequestVdiPoolOneOfConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["group"] = o.Group
	toSerialize["cloud"] = o.Cloud
	toSerialize["type"] = o.Type
	toSerialize["layout"] = o.Layout
	toSerialize["plan"] = o.Plan
	return toSerialize, nil
}

func (o *AddVDIPoolsRequestVdiPoolOneOfConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"group",
		"cloud",
		"type",
		"layout",
		"plan",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddVDIPoolsRequestVdiPoolOneOfConfig := _AddVDIPoolsRequestVdiPoolOneOfConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddVDIPoolsRequestVdiPoolOneOfConfig)

	if err != nil {
		return err
	}

	*o = AddVDIPoolsRequestVdiPoolOneOfConfig(varAddVDIPoolsRequestVdiPoolOneOfConfig)

	return err
}

type NullableAddVDIPoolsRequestVdiPoolOneOfConfig struct {
	value *AddVDIPoolsRequestVdiPoolOneOfConfig
	isSet bool
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOfConfig) Get() *AddVDIPoolsRequestVdiPoolOneOfConfig {
	return v.value
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOfConfig) Set(val *AddVDIPoolsRequestVdiPoolOneOfConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOfConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOfConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVDIPoolsRequestVdiPoolOneOfConfig(val *AddVDIPoolsRequestVdiPoolOneOfConfig) *NullableAddVDIPoolsRequestVdiPoolOneOfConfig {
	return &NullableAddVDIPoolsRequestVdiPoolOneOfConfig{value: val, isSet: true}
}

func (v NullableAddVDIPoolsRequestVdiPoolOneOfConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVDIPoolsRequestVdiPoolOneOfConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


