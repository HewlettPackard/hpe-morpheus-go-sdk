/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateNetworkServer200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkServer200Response{}

// CreateNetworkServer200Response struct for CreateNetworkServer200Response
type CreateNetworkServer200Response struct {
	Success *bool `json:"success,omitempty"`
	NetworkServer *ListNetworkServers200ResponseAllOfNetworkServersInner `json:"networkServer,omitempty"`
}

// NewCreateNetworkServer200Response instantiates a new CreateNetworkServer200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkServer200Response() *CreateNetworkServer200Response {
	this := CreateNetworkServer200Response{}
	return &this
}

// NewCreateNetworkServer200ResponseWithDefaults instantiates a new CreateNetworkServer200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkServer200ResponseWithDefaults() *CreateNetworkServer200Response {
	this := CreateNetworkServer200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateNetworkServer200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkServer200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *CreateNetworkServer200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateNetworkServer200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *CreateNetworkServer200Response) GetNetworkServer() ListNetworkServers200ResponseAllOfNetworkServersInner {
	if o == nil || IsNil(o.NetworkServer) {
		var ret ListNetworkServers200ResponseAllOfNetworkServersInner
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkServer200Response) GetNetworkServerOk() (*ListNetworkServers200ResponseAllOfNetworkServersInner, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *CreateNetworkServer200Response) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given ListNetworkServers200ResponseAllOfNetworkServersInner and assigns it to the NetworkServer field.
func (o *CreateNetworkServer200Response) SetNetworkServer(v ListNetworkServers200ResponseAllOfNetworkServersInner) {
	o.NetworkServer = &v
}

func (o CreateNetworkServer200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkServer200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	return toSerialize, nil
}

type NullableCreateNetworkServer200Response struct {
	value *CreateNetworkServer200Response
	isSet bool
}

func (v NullableCreateNetworkServer200Response) Get() *CreateNetworkServer200Response {
	return v.value
}

func (v *NullableCreateNetworkServer200Response) Set(val *CreateNetworkServer200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkServer200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkServer200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkServer200Response(val *CreateNetworkServer200Response) *NullableCreateNetworkServer200Response {
	return &NullableCreateNetworkServer200Response{value: val, isSet: true}
}

func (v NullableCreateNetworkServer200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkServer200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


