/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddTasks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddTasks200Response{}

// AddTasks200Response struct for AddTasks200Response
type AddTasks200Response struct {
	Task *AddTasks200ResponseAllOfTask `json:"task,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddTasks200Response instantiates a new AddTasks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTasks200Response() *AddTasks200Response {
	this := AddTasks200Response{}
	return &this
}

// NewAddTasks200ResponseWithDefaults instantiates a new AddTasks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTasks200ResponseWithDefaults() *AddTasks200Response {
	this := AddTasks200Response{}
	return &this
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *AddTasks200Response) GetTask() AddTasks200ResponseAllOfTask {
	if o == nil || IsNil(o.Task) {
		var ret AddTasks200ResponseAllOfTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTasks200Response) GetTaskOk() (*AddTasks200ResponseAllOfTask, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// IsSetTask returns a boolean if a field has been set.
func (o *AddTasks200Response) IsSetTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given AddTasks200ResponseAllOfTask and assigns it to the Task field.
func (o *AddTasks200Response) SetTask(v AddTasks200ResponseAllOfTask) {
	o.Task = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddTasks200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTasks200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddTasks200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddTasks200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddTasks200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddTasks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddTasks200Response struct {
	value *AddTasks200Response
	isSet bool
}

func (v NullableAddTasks200Response) Get() *AddTasks200Response {
	return v.value
}

func (v *NullableAddTasks200Response) Set(val *AddTasks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTasks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTasks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTasks200Response(val *AddTasks200Response) *NullableAddTasks200Response {
	return &NullableAddTasks200Response{value: val, isSet: true}
}

func (v NullableAddTasks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTasks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


