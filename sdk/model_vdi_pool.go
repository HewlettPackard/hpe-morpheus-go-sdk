/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the VdiPool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VdiPool{}

// VdiPool struct for VdiPool
type VdiPool struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	MinIdle *int64 `json:"minIdle,omitempty"`
	MaxIdle *int64 `json:"maxIdle,omitempty"`
	InitialPoolSize *int64 `json:"initialPoolSize,omitempty"`
	MaxPoolSize *int64 `json:"maxPoolSize,omitempty"`
	AllocationTimeoutMinutes *int64 `json:"allocationTimeoutMinutes,omitempty"`
	PersistentUser *bool `json:"persistentUser,omitempty"`
	Recyclable *bool `json:"recyclable,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	AutoCreateLocalUserOnReservation *bool `json:"autoCreateLocalUserOnReservation,omitempty"`
	AllowHypervisorConsole *bool `json:"allowHypervisorConsole,omitempty"`
	AllowCopy *bool `json:"allowCopy,omitempty"`
	AllowPrinter *bool `json:"allowPrinter,omitempty"`
	AllowFileshare *bool `json:"allowFileshare,omitempty"`
	GuestConsoleJumpHost *string `json:"guestConsoleJumpHost,omitempty"`
	GuestConsoleJumpPort *string `json:"guestConsoleJumpPort,omitempty"`
	GuestConsoleJumpUsername *string `json:"guestConsoleJumpUsername,omitempty"`
	GuestConsoleJumpPassword *string `json:"guestConsoleJumpPassword,omitempty"`
	GuestConsoleJumpKeypair *string `json:"guestConsoleJumpKeypair,omitempty"`
	Gateway *GetAlerts200ResponseAllOfCheckGroupsInnerInstance `json:"gateway,omitempty"`
	IconPath *string `json:"iconPath,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Apps []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner `json:"apps,omitempty"`
	Owner *ListVDIPools200ResponseAllOfVdiPoolsInnerOwner `json:"owner,omitempty"`
	Config *ListVDIPools200ResponseAllOfVdiPoolsInnerConfig `json:"config,omitempty"`
	Group *GetAlerts200ResponseAllOfCheckGroupsInnerInstance `json:"group,omitempty"`
	Cloud *GetAlerts200ResponseAllOfCheckGroupsInnerInstance `json:"cloud,omitempty"`
	UsedCount *int64 `json:"usedCount,omitempty"`
	ReservedCount *int64 `json:"reservedCount,omitempty"`
	PreparingCount *int64 `json:"preparingCount,omitempty"`
	IdleCount *int64 `json:"idleCount,omitempty"`
	Status *string `json:"status,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewVdiPool instantiates a new VdiPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPool() *VdiPool {
	this := VdiPool{}
	return &this
}

// NewVdiPoolWithDefaults instantiates a new VdiPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolWithDefaults() *VdiPool {
	this := VdiPool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VdiPool) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *VdiPool) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VdiPool) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdiPool) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *VdiPool) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdiPool) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VdiPool) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *VdiPool) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VdiPool) SetDescription(v string) {
	o.Description = &v
}

// GetMinIdle returns the MinIdle field value if set, zero value otherwise.
func (o *VdiPool) GetMinIdle() int64 {
	if o == nil || IsNil(o.MinIdle) {
		var ret int64
		return ret
	}
	return *o.MinIdle
}

// GetMinIdleOk returns a tuple with the MinIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMinIdleOk() (*int64, bool) {
	if o == nil || IsNil(o.MinIdle) {
		return nil, false
	}
	return o.MinIdle, true
}

// IsSetMinIdle returns a boolean if a field has been set.
func (o *VdiPool) IsSetMinIdle() bool {
	if o != nil && !IsNil(o.MinIdle) {
		return true
	}

	return false
}

// SetMinIdle gets a reference to the given int64 and assigns it to the MinIdle field.
func (o *VdiPool) SetMinIdle(v int64) {
	o.MinIdle = &v
}

// GetMaxIdle returns the MaxIdle field value if set, zero value otherwise.
func (o *VdiPool) GetMaxIdle() int64 {
	if o == nil || IsNil(o.MaxIdle) {
		var ret int64
		return ret
	}
	return *o.MaxIdle
}

// GetMaxIdleOk returns a tuple with the MaxIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMaxIdleOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxIdle) {
		return nil, false
	}
	return o.MaxIdle, true
}

// IsSetMaxIdle returns a boolean if a field has been set.
func (o *VdiPool) IsSetMaxIdle() bool {
	if o != nil && !IsNil(o.MaxIdle) {
		return true
	}

	return false
}

// SetMaxIdle gets a reference to the given int64 and assigns it to the MaxIdle field.
func (o *VdiPool) SetMaxIdle(v int64) {
	o.MaxIdle = &v
}

// GetInitialPoolSize returns the InitialPoolSize field value if set, zero value otherwise.
func (o *VdiPool) GetInitialPoolSize() int64 {
	if o == nil || IsNil(o.InitialPoolSize) {
		var ret int64
		return ret
	}
	return *o.InitialPoolSize
}

// GetInitialPoolSizeOk returns a tuple with the InitialPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetInitialPoolSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.InitialPoolSize) {
		return nil, false
	}
	return o.InitialPoolSize, true
}

// IsSetInitialPoolSize returns a boolean if a field has been set.
func (o *VdiPool) IsSetInitialPoolSize() bool {
	if o != nil && !IsNil(o.InitialPoolSize) {
		return true
	}

	return false
}

// SetInitialPoolSize gets a reference to the given int64 and assigns it to the InitialPoolSize field.
func (o *VdiPool) SetInitialPoolSize(v int64) {
	o.InitialPoolSize = &v
}

// GetMaxPoolSize returns the MaxPoolSize field value if set, zero value otherwise.
func (o *VdiPool) GetMaxPoolSize() int64 {
	if o == nil || IsNil(o.MaxPoolSize) {
		var ret int64
		return ret
	}
	return *o.MaxPoolSize
}

// GetMaxPoolSizeOk returns a tuple with the MaxPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMaxPoolSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxPoolSize) {
		return nil, false
	}
	return o.MaxPoolSize, true
}

// IsSetMaxPoolSize returns a boolean if a field has been set.
func (o *VdiPool) IsSetMaxPoolSize() bool {
	if o != nil && !IsNil(o.MaxPoolSize) {
		return true
	}

	return false
}

// SetMaxPoolSize gets a reference to the given int64 and assigns it to the MaxPoolSize field.
func (o *VdiPool) SetMaxPoolSize(v int64) {
	o.MaxPoolSize = &v
}

// GetAllocationTimeoutMinutes returns the AllocationTimeoutMinutes field value if set, zero value otherwise.
func (o *VdiPool) GetAllocationTimeoutMinutes() int64 {
	if o == nil || IsNil(o.AllocationTimeoutMinutes) {
		var ret int64
		return ret
	}
	return *o.AllocationTimeoutMinutes
}

// GetAllocationTimeoutMinutesOk returns a tuple with the AllocationTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllocationTimeoutMinutesOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocationTimeoutMinutes) {
		return nil, false
	}
	return o.AllocationTimeoutMinutes, true
}

// IsSetAllocationTimeoutMinutes returns a boolean if a field has been set.
func (o *VdiPool) IsSetAllocationTimeoutMinutes() bool {
	if o != nil && !IsNil(o.AllocationTimeoutMinutes) {
		return true
	}

	return false
}

// SetAllocationTimeoutMinutes gets a reference to the given int64 and assigns it to the AllocationTimeoutMinutes field.
func (o *VdiPool) SetAllocationTimeoutMinutes(v int64) {
	o.AllocationTimeoutMinutes = &v
}

// GetPersistentUser returns the PersistentUser field value if set, zero value otherwise.
func (o *VdiPool) GetPersistentUser() bool {
	if o == nil || IsNil(o.PersistentUser) {
		var ret bool
		return ret
	}
	return *o.PersistentUser
}

// GetPersistentUserOk returns a tuple with the PersistentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetPersistentUserOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentUser) {
		return nil, false
	}
	return o.PersistentUser, true
}

// IsSetPersistentUser returns a boolean if a field has been set.
func (o *VdiPool) IsSetPersistentUser() bool {
	if o != nil && !IsNil(o.PersistentUser) {
		return true
	}

	return false
}

// SetPersistentUser gets a reference to the given bool and assigns it to the PersistentUser field.
func (o *VdiPool) SetPersistentUser(v bool) {
	o.PersistentUser = &v
}

// GetRecyclable returns the Recyclable field value if set, zero value otherwise.
func (o *VdiPool) GetRecyclable() bool {
	if o == nil || IsNil(o.Recyclable) {
		var ret bool
		return ret
	}
	return *o.Recyclable
}

// GetRecyclableOk returns a tuple with the Recyclable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetRecyclableOk() (*bool, bool) {
	if o == nil || IsNil(o.Recyclable) {
		return nil, false
	}
	return o.Recyclable, true
}

// IsSetRecyclable returns a boolean if a field has been set.
func (o *VdiPool) IsSetRecyclable() bool {
	if o != nil && !IsNil(o.Recyclable) {
		return true
	}

	return false
}

// SetRecyclable gets a reference to the given bool and assigns it to the Recyclable field.
func (o *VdiPool) SetRecyclable(v bool) {
	o.Recyclable = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *VdiPool) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// IsSetEnabled returns a boolean if a field has been set.
func (o *VdiPool) IsSetEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *VdiPool) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAutoCreateLocalUserOnReservation returns the AutoCreateLocalUserOnReservation field value if set, zero value otherwise.
func (o *VdiPool) GetAutoCreateLocalUserOnReservation() bool {
	if o == nil || IsNil(o.AutoCreateLocalUserOnReservation) {
		var ret bool
		return ret
	}
	return *o.AutoCreateLocalUserOnReservation
}

// GetAutoCreateLocalUserOnReservationOk returns a tuple with the AutoCreateLocalUserOnReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAutoCreateLocalUserOnReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreateLocalUserOnReservation) {
		return nil, false
	}
	return o.AutoCreateLocalUserOnReservation, true
}

// IsSetAutoCreateLocalUserOnReservation returns a boolean if a field has been set.
func (o *VdiPool) IsSetAutoCreateLocalUserOnReservation() bool {
	if o != nil && !IsNil(o.AutoCreateLocalUserOnReservation) {
		return true
	}

	return false
}

// SetAutoCreateLocalUserOnReservation gets a reference to the given bool and assigns it to the AutoCreateLocalUserOnReservation field.
func (o *VdiPool) SetAutoCreateLocalUserOnReservation(v bool) {
	o.AutoCreateLocalUserOnReservation = &v
}

// GetAllowHypervisorConsole returns the AllowHypervisorConsole field value if set, zero value otherwise.
func (o *VdiPool) GetAllowHypervisorConsole() bool {
	if o == nil || IsNil(o.AllowHypervisorConsole) {
		var ret bool
		return ret
	}
	return *o.AllowHypervisorConsole
}

// GetAllowHypervisorConsoleOk returns a tuple with the AllowHypervisorConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllowHypervisorConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowHypervisorConsole) {
		return nil, false
	}
	return o.AllowHypervisorConsole, true
}

// IsSetAllowHypervisorConsole returns a boolean if a field has been set.
func (o *VdiPool) IsSetAllowHypervisorConsole() bool {
	if o != nil && !IsNil(o.AllowHypervisorConsole) {
		return true
	}

	return false
}

// SetAllowHypervisorConsole gets a reference to the given bool and assigns it to the AllowHypervisorConsole field.
func (o *VdiPool) SetAllowHypervisorConsole(v bool) {
	o.AllowHypervisorConsole = &v
}

// GetAllowCopy returns the AllowCopy field value if set, zero value otherwise.
func (o *VdiPool) GetAllowCopy() bool {
	if o == nil || IsNil(o.AllowCopy) {
		var ret bool
		return ret
	}
	return *o.AllowCopy
}

// GetAllowCopyOk returns a tuple with the AllowCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllowCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCopy) {
		return nil, false
	}
	return o.AllowCopy, true
}

// IsSetAllowCopy returns a boolean if a field has been set.
func (o *VdiPool) IsSetAllowCopy() bool {
	if o != nil && !IsNil(o.AllowCopy) {
		return true
	}

	return false
}

// SetAllowCopy gets a reference to the given bool and assigns it to the AllowCopy field.
func (o *VdiPool) SetAllowCopy(v bool) {
	o.AllowCopy = &v
}

// GetAllowPrinter returns the AllowPrinter field value if set, zero value otherwise.
func (o *VdiPool) GetAllowPrinter() bool {
	if o == nil || IsNil(o.AllowPrinter) {
		var ret bool
		return ret
	}
	return *o.AllowPrinter
}

// GetAllowPrinterOk returns a tuple with the AllowPrinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllowPrinterOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPrinter) {
		return nil, false
	}
	return o.AllowPrinter, true
}

// IsSetAllowPrinter returns a boolean if a field has been set.
func (o *VdiPool) IsSetAllowPrinter() bool {
	if o != nil && !IsNil(o.AllowPrinter) {
		return true
	}

	return false
}

// SetAllowPrinter gets a reference to the given bool and assigns it to the AllowPrinter field.
func (o *VdiPool) SetAllowPrinter(v bool) {
	o.AllowPrinter = &v
}

// GetAllowFileshare returns the AllowFileshare field value if set, zero value otherwise.
func (o *VdiPool) GetAllowFileshare() bool {
	if o == nil || IsNil(o.AllowFileshare) {
		var ret bool
		return ret
	}
	return *o.AllowFileshare
}

// GetAllowFileshareOk returns a tuple with the AllowFileshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllowFileshareOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFileshare) {
		return nil, false
	}
	return o.AllowFileshare, true
}

// IsSetAllowFileshare returns a boolean if a field has been set.
func (o *VdiPool) IsSetAllowFileshare() bool {
	if o != nil && !IsNil(o.AllowFileshare) {
		return true
	}

	return false
}

// SetAllowFileshare gets a reference to the given bool and assigns it to the AllowFileshare field.
func (o *VdiPool) SetAllowFileshare(v bool) {
	o.AllowFileshare = &v
}

// GetGuestConsoleJumpHost returns the GuestConsoleJumpHost field value if set, zero value otherwise.
func (o *VdiPool) GetGuestConsoleJumpHost() string {
	if o == nil || IsNil(o.GuestConsoleJumpHost) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpHost
}

// GetGuestConsoleJumpHostOk returns a tuple with the GuestConsoleJumpHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGuestConsoleJumpHostOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpHost) {
		return nil, false
	}
	return o.GuestConsoleJumpHost, true
}

// IsSetGuestConsoleJumpHost returns a boolean if a field has been set.
func (o *VdiPool) IsSetGuestConsoleJumpHost() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpHost) {
		return true
	}

	return false
}

// SetGuestConsoleJumpHost gets a reference to the given string and assigns it to the GuestConsoleJumpHost field.
func (o *VdiPool) SetGuestConsoleJumpHost(v string) {
	o.GuestConsoleJumpHost = &v
}

// GetGuestConsoleJumpPort returns the GuestConsoleJumpPort field value if set, zero value otherwise.
func (o *VdiPool) GetGuestConsoleJumpPort() string {
	if o == nil || IsNil(o.GuestConsoleJumpPort) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpPort
}

// GetGuestConsoleJumpPortOk returns a tuple with the GuestConsoleJumpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGuestConsoleJumpPortOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpPort) {
		return nil, false
	}
	return o.GuestConsoleJumpPort, true
}

// IsSetGuestConsoleJumpPort returns a boolean if a field has been set.
func (o *VdiPool) IsSetGuestConsoleJumpPort() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpPort) {
		return true
	}

	return false
}

// SetGuestConsoleJumpPort gets a reference to the given string and assigns it to the GuestConsoleJumpPort field.
func (o *VdiPool) SetGuestConsoleJumpPort(v string) {
	o.GuestConsoleJumpPort = &v
}

// GetGuestConsoleJumpUsername returns the GuestConsoleJumpUsername field value if set, zero value otherwise.
func (o *VdiPool) GetGuestConsoleJumpUsername() string {
	if o == nil || IsNil(o.GuestConsoleJumpUsername) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpUsername
}

// GetGuestConsoleJumpUsernameOk returns a tuple with the GuestConsoleJumpUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGuestConsoleJumpUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpUsername) {
		return nil, false
	}
	return o.GuestConsoleJumpUsername, true
}

// IsSetGuestConsoleJumpUsername returns a boolean if a field has been set.
func (o *VdiPool) IsSetGuestConsoleJumpUsername() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpUsername) {
		return true
	}

	return false
}

// SetGuestConsoleJumpUsername gets a reference to the given string and assigns it to the GuestConsoleJumpUsername field.
func (o *VdiPool) SetGuestConsoleJumpUsername(v string) {
	o.GuestConsoleJumpUsername = &v
}

// GetGuestConsoleJumpPassword returns the GuestConsoleJumpPassword field value if set, zero value otherwise.
func (o *VdiPool) GetGuestConsoleJumpPassword() string {
	if o == nil || IsNil(o.GuestConsoleJumpPassword) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpPassword
}

// GetGuestConsoleJumpPasswordOk returns a tuple with the GuestConsoleJumpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGuestConsoleJumpPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpPassword) {
		return nil, false
	}
	return o.GuestConsoleJumpPassword, true
}

// IsSetGuestConsoleJumpPassword returns a boolean if a field has been set.
func (o *VdiPool) IsSetGuestConsoleJumpPassword() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpPassword) {
		return true
	}

	return false
}

// SetGuestConsoleJumpPassword gets a reference to the given string and assigns it to the GuestConsoleJumpPassword field.
func (o *VdiPool) SetGuestConsoleJumpPassword(v string) {
	o.GuestConsoleJumpPassword = &v
}

// GetGuestConsoleJumpKeypair returns the GuestConsoleJumpKeypair field value if set, zero value otherwise.
func (o *VdiPool) GetGuestConsoleJumpKeypair() string {
	if o == nil || IsNil(o.GuestConsoleJumpKeypair) {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpKeypair
}

// GetGuestConsoleJumpKeypairOk returns a tuple with the GuestConsoleJumpKeypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGuestConsoleJumpKeypairOk() (*string, bool) {
	if o == nil || IsNil(o.GuestConsoleJumpKeypair) {
		return nil, false
	}
	return o.GuestConsoleJumpKeypair, true
}

// IsSetGuestConsoleJumpKeypair returns a boolean if a field has been set.
func (o *VdiPool) IsSetGuestConsoleJumpKeypair() bool {
	if o != nil && !IsNil(o.GuestConsoleJumpKeypair) {
		return true
	}

	return false
}

// SetGuestConsoleJumpKeypair gets a reference to the given string and assigns it to the GuestConsoleJumpKeypair field.
func (o *VdiPool) SetGuestConsoleJumpKeypair(v string) {
	o.GuestConsoleJumpKeypair = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *VdiPool) GetGateway() GetAlerts200ResponseAllOfCheckGroupsInnerInstance {
	if o == nil || IsNil(o.Gateway) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInnerInstance
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGatewayOk() (*GetAlerts200ResponseAllOfCheckGroupsInnerInstance, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// IsSetGateway returns a boolean if a field has been set.
func (o *VdiPool) IsSetGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInnerInstance and assigns it to the Gateway field.
func (o *VdiPool) SetGateway(v GetAlerts200ResponseAllOfCheckGroupsInnerInstance) {
	o.Gateway = &v
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *VdiPool) GetIconPath() string {
	if o == nil || IsNil(o.IconPath) {
		var ret string
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIconPathOk() (*string, bool) {
	if o == nil || IsNil(o.IconPath) {
		return nil, false
	}
	return o.IconPath, true
}

// IsSetIconPath returns a boolean if a field has been set.
func (o *VdiPool) IsSetIconPath() bool {
	if o != nil && !IsNil(o.IconPath) {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given string and assigns it to the IconPath field.
func (o *VdiPool) SetIconPath(v string) {
	o.IconPath = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *VdiPool) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// IsSetLogo returns a boolean if a field has been set.
func (o *VdiPool) IsSetLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *VdiPool) SetLogo(v string) {
	o.Logo = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *VdiPool) GetApps() []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner {
	if o == nil || IsNil(o.Apps) {
		var ret []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAppsOk() ([]ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// IsSetApps returns a boolean if a field has been set.
func (o *VdiPool) IsSetApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner and assigns it to the Apps field.
func (o *VdiPool) SetApps(v []ListApplianceSettings200ResponseApplianceSettingsEnabledZoneTypesInner) {
	o.Apps = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *VdiPool) GetOwner() ListVDIPools200ResponseAllOfVdiPoolsInnerOwner {
	if o == nil || IsNil(o.Owner) {
		var ret ListVDIPools200ResponseAllOfVdiPoolsInnerOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetOwnerOk() (*ListVDIPools200ResponseAllOfVdiPoolsInnerOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *VdiPool) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ListVDIPools200ResponseAllOfVdiPoolsInnerOwner and assigns it to the Owner field.
func (o *VdiPool) SetOwner(v ListVDIPools200ResponseAllOfVdiPoolsInnerOwner) {
	o.Owner = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *VdiPool) GetConfig() ListVDIPools200ResponseAllOfVdiPoolsInnerConfig {
	if o == nil || IsNil(o.Config) {
		var ret ListVDIPools200ResponseAllOfVdiPoolsInnerConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetConfigOk() (*ListVDIPools200ResponseAllOfVdiPoolsInnerConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *VdiPool) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ListVDIPools200ResponseAllOfVdiPoolsInnerConfig and assigns it to the Config field.
func (o *VdiPool) SetConfig(v ListVDIPools200ResponseAllOfVdiPoolsInnerConfig) {
	o.Config = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *VdiPool) GetGroup() GetAlerts200ResponseAllOfCheckGroupsInnerInstance {
	if o == nil || IsNil(o.Group) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInnerInstance
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetGroupOk() (*GetAlerts200ResponseAllOfCheckGroupsInnerInstance, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// IsSetGroup returns a boolean if a field has been set.
func (o *VdiPool) IsSetGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInnerInstance and assigns it to the Group field.
func (o *VdiPool) SetGroup(v GetAlerts200ResponseAllOfCheckGroupsInnerInstance) {
	o.Group = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *VdiPool) GetCloud() GetAlerts200ResponseAllOfCheckGroupsInnerInstance {
	if o == nil || IsNil(o.Cloud) {
		var ret GetAlerts200ResponseAllOfCheckGroupsInnerInstance
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetCloudOk() (*GetAlerts200ResponseAllOfCheckGroupsInnerInstance, bool) {
	if o == nil || IsNil(o.Cloud) {
		return nil, false
	}
	return o.Cloud, true
}

// IsSetCloud returns a boolean if a field has been set.
func (o *VdiPool) IsSetCloud() bool {
	if o != nil && !IsNil(o.Cloud) {
		return true
	}

	return false
}

// SetCloud gets a reference to the given GetAlerts200ResponseAllOfCheckGroupsInnerInstance and assigns it to the Cloud field.
func (o *VdiPool) SetCloud(v GetAlerts200ResponseAllOfCheckGroupsInnerInstance) {
	o.Cloud = &v
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *VdiPool) GetUsedCount() int64 {
	if o == nil || IsNil(o.UsedCount) {
		var ret int64
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetUsedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedCount) {
		return nil, false
	}
	return o.UsedCount, true
}

// IsSetUsedCount returns a boolean if a field has been set.
func (o *VdiPool) IsSetUsedCount() bool {
	if o != nil && !IsNil(o.UsedCount) {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int64 and assigns it to the UsedCount field.
func (o *VdiPool) SetUsedCount(v int64) {
	o.UsedCount = &v
}

// GetReservedCount returns the ReservedCount field value if set, zero value otherwise.
func (o *VdiPool) GetReservedCount() int64 {
	if o == nil || IsNil(o.ReservedCount) {
		var ret int64
		return ret
	}
	return *o.ReservedCount
}

// GetReservedCountOk returns a tuple with the ReservedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetReservedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ReservedCount) {
		return nil, false
	}
	return o.ReservedCount, true
}

// IsSetReservedCount returns a boolean if a field has been set.
func (o *VdiPool) IsSetReservedCount() bool {
	if o != nil && !IsNil(o.ReservedCount) {
		return true
	}

	return false
}

// SetReservedCount gets a reference to the given int64 and assigns it to the ReservedCount field.
func (o *VdiPool) SetReservedCount(v int64) {
	o.ReservedCount = &v
}

// GetPreparingCount returns the PreparingCount field value if set, zero value otherwise.
func (o *VdiPool) GetPreparingCount() int64 {
	if o == nil || IsNil(o.PreparingCount) {
		var ret int64
		return ret
	}
	return *o.PreparingCount
}

// GetPreparingCountOk returns a tuple with the PreparingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetPreparingCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PreparingCount) {
		return nil, false
	}
	return o.PreparingCount, true
}

// IsSetPreparingCount returns a boolean if a field has been set.
func (o *VdiPool) IsSetPreparingCount() bool {
	if o != nil && !IsNil(o.PreparingCount) {
		return true
	}

	return false
}

// SetPreparingCount gets a reference to the given int64 and assigns it to the PreparingCount field.
func (o *VdiPool) SetPreparingCount(v int64) {
	o.PreparingCount = &v
}

// GetIdleCount returns the IdleCount field value if set, zero value otherwise.
func (o *VdiPool) GetIdleCount() int64 {
	if o == nil || IsNil(o.IdleCount) {
		var ret int64
		return ret
	}
	return *o.IdleCount
}

// GetIdleCountOk returns a tuple with the IdleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIdleCountOk() (*int64, bool) {
	if o == nil || IsNil(o.IdleCount) {
		return nil, false
	}
	return o.IdleCount, true
}

// IsSetIdleCount returns a boolean if a field has been set.
func (o *VdiPool) IsSetIdleCount() bool {
	if o != nil && !IsNil(o.IdleCount) {
		return true
	}

	return false
}

// SetIdleCount gets a reference to the given int64 and assigns it to the IdleCount field.
func (o *VdiPool) SetIdleCount(v int64) {
	o.IdleCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VdiPool) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *VdiPool) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VdiPool) SetStatus(v string) {
	o.Status = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *VdiPool) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *VdiPool) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *VdiPool) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *VdiPool) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *VdiPool) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *VdiPool) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o VdiPool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VdiPool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MinIdle) {
		toSerialize["minIdle"] = o.MinIdle
	}
	if !IsNil(o.MaxIdle) {
		toSerialize["maxIdle"] = o.MaxIdle
	}
	if !IsNil(o.InitialPoolSize) {
		toSerialize["initialPoolSize"] = o.InitialPoolSize
	}
	if !IsNil(o.MaxPoolSize) {
		toSerialize["maxPoolSize"] = o.MaxPoolSize
	}
	if !IsNil(o.AllocationTimeoutMinutes) {
		toSerialize["allocationTimeoutMinutes"] = o.AllocationTimeoutMinutes
	}
	if !IsNil(o.PersistentUser) {
		toSerialize["persistentUser"] = o.PersistentUser
	}
	if !IsNil(o.Recyclable) {
		toSerialize["recyclable"] = o.Recyclable
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AutoCreateLocalUserOnReservation) {
		toSerialize["autoCreateLocalUserOnReservation"] = o.AutoCreateLocalUserOnReservation
	}
	if !IsNil(o.AllowHypervisorConsole) {
		toSerialize["allowHypervisorConsole"] = o.AllowHypervisorConsole
	}
	if !IsNil(o.AllowCopy) {
		toSerialize["allowCopy"] = o.AllowCopy
	}
	if !IsNil(o.AllowPrinter) {
		toSerialize["allowPrinter"] = o.AllowPrinter
	}
	if !IsNil(o.AllowFileshare) {
		toSerialize["allowFileshare"] = o.AllowFileshare
	}
	if !IsNil(o.GuestConsoleJumpHost) {
		toSerialize["guestConsoleJumpHost"] = o.GuestConsoleJumpHost
	}
	if !IsNil(o.GuestConsoleJumpPort) {
		toSerialize["guestConsoleJumpPort"] = o.GuestConsoleJumpPort
	}
	if !IsNil(o.GuestConsoleJumpUsername) {
		toSerialize["guestConsoleJumpUsername"] = o.GuestConsoleJumpUsername
	}
	if !IsNil(o.GuestConsoleJumpPassword) {
		toSerialize["guestConsoleJumpPassword"] = o.GuestConsoleJumpPassword
	}
	if !IsNil(o.GuestConsoleJumpKeypair) {
		toSerialize["guestConsoleJumpKeypair"] = o.GuestConsoleJumpKeypair
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.IconPath) {
		toSerialize["iconPath"] = o.IconPath
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Cloud) {
		toSerialize["cloud"] = o.Cloud
	}
	if !IsNil(o.UsedCount) {
		toSerialize["usedCount"] = o.UsedCount
	}
	if !IsNil(o.ReservedCount) {
		toSerialize["reservedCount"] = o.ReservedCount
	}
	if !IsNil(o.PreparingCount) {
		toSerialize["preparingCount"] = o.PreparingCount
	}
	if !IsNil(o.IdleCount) {
		toSerialize["idleCount"] = o.IdleCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableVdiPool struct {
	value *VdiPool
	isSet bool
}

func (v NullableVdiPool) Get() *VdiPool {
	return v.value
}

func (v *NullableVdiPool) Set(val *VdiPool) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPool) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPool(val *VdiPool) *NullableVdiPool {
	return &NullableVdiPool{value: val, isSet: true}
}

func (v NullableVdiPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


