/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkServerGroupCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkServerGroupCreate{}

// NetworkServerGroupCreate struct for NetworkServerGroupCreate
type NetworkServerGroupCreate struct {
	Id *int64 `json:"id,omitempty"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Account *GetAlerts200ResponseAllOfChecksInnerAccount `json:"account,omitempty"`
	Owner *GetAlerts200ResponseAllOfChecksInnerAccount `json:"owner,omitempty"`
	NetworkServer *GetAlerts200ResponseAllOfChecksInnerAccount `json:"networkServer,omitempty"`
	Permissions *ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions `json:"permissions,omitempty"`
	Tags []ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner `json:"tags,omitempty"`
	Members []ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner `json:"members,omitempty"`
}

type _NetworkServerGroupCreate NetworkServerGroupCreate

// NewNetworkServerGroupCreate instantiates a new NetworkServerGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkServerGroupCreate(name string) *NetworkServerGroupCreate {
	this := NetworkServerGroupCreate{}
	this.Name = name
	return &this
}

// NewNetworkServerGroupCreateWithDefaults instantiates a new NetworkServerGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkServerGroupCreateWithDefaults() *NetworkServerGroupCreate {
	this := NetworkServerGroupCreate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkServerGroupCreate) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *NetworkServerGroupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkServerGroupCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkServerGroupCreate) SetDescription(v string) {
	o.Description = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// IsSetInternalId returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *NetworkServerGroupCreate) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *NetworkServerGroupCreate) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// IsSetVisibility returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *NetworkServerGroupCreate) SetVisibility(v string) {
	o.Visibility = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetAccount() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Account) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetAccountOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// IsSetAccount returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Account field.
func (o *NetworkServerGroupCreate) SetAccount(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Account = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetOwner() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.Owner) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetOwnerOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the Owner field.
func (o *NetworkServerGroupCreate) SetOwner(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.Owner = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetNetworkServer() GetAlerts200ResponseAllOfChecksInnerAccount {
	if o == nil || IsNil(o.NetworkServer) {
		var ret GetAlerts200ResponseAllOfChecksInnerAccount
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetNetworkServerOk() (*GetAlerts200ResponseAllOfChecksInnerAccount, bool) {
	if o == nil || IsNil(o.NetworkServer) {
		return nil, false
	}
	return o.NetworkServer, true
}

// IsSetNetworkServer returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetNetworkServer() bool {
	if o != nil && !IsNil(o.NetworkServer) {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given GetAlerts200ResponseAllOfChecksInnerAccount and assigns it to the NetworkServer field.
func (o *NetworkServerGroupCreate) SetNetworkServer(v GetAlerts200ResponseAllOfChecksInnerAccount) {
	o.NetworkServer = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetPermissions() ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetPermissionsOk() (*ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// IsSetPermissions returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions and assigns it to the Permissions field.
func (o *NetworkServerGroupCreate) SetPermissions(v ListNetworkServerGroups200ResponseAllOfGroupsInnerPermissions) {
	o.Permissions = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetTags() []ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetTagsOk() ([]ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// IsSetTags returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner and assigns it to the Tags field.
func (o *NetworkServerGroupCreate) SetTags(v []ListNetworkServerGroups200ResponseAllOfGroupsInnerTagsInner) {
	o.Tags = v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *NetworkServerGroupCreate) GetMembers() []ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner {
	if o == nil || IsNil(o.Members) {
		var ret []ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServerGroupCreate) GetMembersOk() ([]ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// IsSetMembers returns a boolean if a field has been set.
func (o *NetworkServerGroupCreate) IsSetMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner and assigns it to the Members field.
func (o *NetworkServerGroupCreate) SetMembers(v []ListNetworkServerGroups200ResponseAllOfGroupsInnerMembersInner) {
	o.Members = v
}

func (o NetworkServerGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkServerGroupCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.NetworkServer) {
		toSerialize["networkServer"] = o.NetworkServer
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

func (o *NetworkServerGroupCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkServerGroupCreate := _NetworkServerGroupCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkServerGroupCreate)

	if err != nil {
		return err
	}

	*o = NetworkServerGroupCreate(varNetworkServerGroupCreate)

	return err
}

type NullableNetworkServerGroupCreate struct {
	value *NetworkServerGroupCreate
	isSet bool
}

func (v NullableNetworkServerGroupCreate) Get() *NetworkServerGroupCreate {
	return v.value
}

func (v *NullableNetworkServerGroupCreate) Set(val *NetworkServerGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkServerGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkServerGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkServerGroupCreate(val *NetworkServerGroupCreate) *NullableNetworkServerGroupCreate {
	return &NullableNetworkServerGroupCreate{value: val, isSet: true}
}

func (v NullableNetworkServerGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkServerGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


