/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion{}

// ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion struct for ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion
type ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion struct {
	Id *int64 `json:"id,omitempty"`
	UserVersion *string `json:"userVersion,omitempty"`
	DeployType *string `json:"deployType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion

// NewListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion instantiates a new ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion() *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion {
	this := ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion{}
	return &this
}

// NewListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersionWithDefaults instantiates a new ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersionWithDefaults() *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion {
	this := ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) SetId(v int64) {
	o.Id = &v
}

// GetUserVersion returns the UserVersion field value if set, zero value otherwise.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetUserVersion() string {
	if o == nil || IsNil(o.UserVersion) {
		var ret string
		return ret
	}
	return *o.UserVersion
}

// GetUserVersionOk returns a tuple with the UserVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetUserVersionOk() (*string, bool) {
	if o == nil || IsNil(o.UserVersion) {
		return nil, false
	}
	return o.UserVersion, true
}

// IsSetUserVersion returns a boolean if a field has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) IsSetUserVersion() bool {
	if o != nil && !IsNil(o.UserVersion) {
		return true
	}

	return false
}

// SetUserVersion gets a reference to the given string and assigns it to the UserVersion field.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) SetUserVersion(v string) {
	o.UserVersion = &v
}

// GetDeployType returns the DeployType field value if set, zero value otherwise.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetDeployType() string {
	if o == nil || IsNil(o.DeployType) {
		var ret string
		return ret
	}
	return *o.DeployType
}

// GetDeployTypeOk returns a tuple with the DeployType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) GetDeployTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeployType) {
		return nil, false
	}
	return o.DeployType, true
}

// IsSetDeployType returns a boolean if a field has been set.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) IsSetDeployType() bool {
	if o != nil && !IsNil(o.DeployType) {
		return true
	}

	return false
}

// SetDeployType gets a reference to the given string and assigns it to the DeployType field.
func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) SetDeployType(v string) {
	o.DeployType = &v
}

func (o ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserVersion) {
		toSerialize["userVersion"] = o.UserVersion
	}
	if !IsNil(o.DeployType) {
		toSerialize["deployType"] = o.DeployType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) UnmarshalJSON(data []byte) (err error) {
	varListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion := _ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion{}

	err = json.Unmarshal(data, &varListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion)

	if err != nil {
		return err
	}

	*o = ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion(varListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "userVersion")
		delete(additionalProperties, "deployType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion struct {
	value *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion
	isSet bool
}

func (v NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) Get() *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion {
	return v.value
}

func (v *NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) Set(val *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion(val *ListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) *NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion {
	return &NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion{value: val, isSet: true}
}

func (v NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeploys200ResponseAllOfAppDeploysInnerDeploymentVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


