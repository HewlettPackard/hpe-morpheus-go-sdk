/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config{}

// ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config struct for ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config
type ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config struct {
	OrganizationId *string `json:"organizationId,omitempty"`
	BindingUsername *string `json:"bindingUsername,omitempty"`
	BindingPassword *string `json:"bindingPassword,omitempty"`
	RequiredRole *string `json:"requiredRole,omitempty"`
	BindingPasswordHash *string `json:"bindingPasswordHash,omitempty"`
}

// NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config instantiates a new ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config {
	this := ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config{}
	return &this
}

// NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1ConfigWithDefaults instantiates a new ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1ConfigWithDefaults() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config {
	this := ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// IsSetOrganizationId returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSetOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetBindingUsername returns the BindingUsername field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingUsername() string {
	if o == nil || IsNil(o.BindingUsername) {
		var ret string
		return ret
	}
	return *o.BindingUsername
}

// GetBindingUsernameOk returns a tuple with the BindingUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.BindingUsername) {
		return nil, false
	}
	return o.BindingUsername, true
}

// IsSetBindingUsername returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSetBindingUsername() bool {
	if o != nil && !IsNil(o.BindingUsername) {
		return true
	}

	return false
}

// SetBindingUsername gets a reference to the given string and assigns it to the BindingUsername field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) SetBindingUsername(v string) {
	o.BindingUsername = &v
}

// GetBindingPassword returns the BindingPassword field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingPassword() string {
	if o == nil || IsNil(o.BindingPassword) {
		var ret string
		return ret
	}
	return *o.BindingPassword
}

// GetBindingPasswordOk returns a tuple with the BindingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPassword) {
		return nil, false
	}
	return o.BindingPassword, true
}

// IsSetBindingPassword returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSetBindingPassword() bool {
	if o != nil && !IsNil(o.BindingPassword) {
		return true
	}

	return false
}

// SetBindingPassword gets a reference to the given string and assigns it to the BindingPassword field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) SetBindingPassword(v string) {
	o.BindingPassword = &v
}

// GetRequiredRole returns the RequiredRole field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetRequiredRole() string {
	if o == nil || IsNil(o.RequiredRole) {
		var ret string
		return ret
	}
	return *o.RequiredRole
}

// GetRequiredRoleOk returns a tuple with the RequiredRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetRequiredRoleOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredRole) {
		return nil, false
	}
	return o.RequiredRole, true
}

// IsSetRequiredRole returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSetRequiredRole() bool {
	if o != nil && !IsNil(o.RequiredRole) {
		return true
	}

	return false
}

// SetRequiredRole gets a reference to the given string and assigns it to the RequiredRole field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) SetRequiredRole(v string) {
	o.RequiredRole = &v
}

// GetBindingPasswordHash returns the BindingPasswordHash field value if set, zero value otherwise.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingPasswordHash() string {
	if o == nil || IsNil(o.BindingPasswordHash) {
		var ret string
		return ret
	}
	return *o.BindingPasswordHash
}

// GetBindingPasswordHashOk returns a tuple with the BindingPasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) GetBindingPasswordHashOk() (*string, bool) {
	if o == nil || IsNil(o.BindingPasswordHash) {
		return nil, false
	}
	return o.BindingPasswordHash, true
}

// IsSetBindingPasswordHash returns a boolean if a field has been set.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSetBindingPasswordHash() bool {
	if o != nil && !IsNil(o.BindingPasswordHash) {
		return true
	}

	return false
}

// SetBindingPasswordHash gets a reference to the given string and assigns it to the BindingPasswordHash field.
func (o *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) SetBindingPasswordHash(v string) {
	o.BindingPasswordHash = &v
}

func (o ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.BindingUsername) {
		toSerialize["bindingUsername"] = o.BindingUsername
	}
	if !IsNil(o.BindingPassword) {
		toSerialize["bindingPassword"] = o.BindingPassword
	}
	if !IsNil(o.RequiredRole) {
		toSerialize["requiredRole"] = o.RequiredRole
	}
	if !IsNil(o.BindingPasswordHash) {
		toSerialize["bindingPasswordHash"] = o.BindingPasswordHash
	}
	return toSerialize, nil
}

type NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config struct {
	value *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config
	isSet bool
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) Get() *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config {
	return v.value
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) Set(val *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) {
	v.value = val
	v.isSet = true
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) IsSet() bool {
	return v.isSet
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config(val *ListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config {
	return &NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config{value: val, isSet: true}
}

func (v NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIdentitySources200ResponseAllOfUserSourcesInnerAnyOf1Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


