/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddBlueprintRequestOneOf5TerraformGit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOf5TerraformGit{}

// AddBlueprintRequestOneOf5TerraformGit struct for AddBlueprintRequestOneOf5TerraformGit
type AddBlueprintRequestOneOf5TerraformGit struct {
	// Morpheus SCM Repository ID
	RepoId int64 `json:"repoId"`
	// Path to terraform Files in the Repository
	Path string `json:"path"`
	// Morpheus SCM Integration ID
	IntegrationId int64 `json:"integrationId"`
	// Branch Name
	Branch string `json:"branch"`
}

type _AddBlueprintRequestOneOf5TerraformGit AddBlueprintRequestOneOf5TerraformGit

// NewAddBlueprintRequestOneOf5TerraformGit instantiates a new AddBlueprintRequestOneOf5TerraformGit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOf5TerraformGit(repoId int64, path string, integrationId int64, branch string) *AddBlueprintRequestOneOf5TerraformGit {
	this := AddBlueprintRequestOneOf5TerraformGit{}
	this.RepoId = repoId
	this.Path = path
	this.IntegrationId = integrationId
	this.Branch = branch
	return &this
}

// NewAddBlueprintRequestOneOf5TerraformGitWithDefaults instantiates a new AddBlueprintRequestOneOf5TerraformGit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOf5TerraformGitWithDefaults() *AddBlueprintRequestOneOf5TerraformGit {
	this := AddBlueprintRequestOneOf5TerraformGit{}
	return &this
}

// GetRepoId returns the RepoId field value
func (o *AddBlueprintRequestOneOf5TerraformGit) GetRepoId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5TerraformGit) GetRepoIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepoId, true
}

// SetRepoId sets field value
func (o *AddBlueprintRequestOneOf5TerraformGit) SetRepoId(v int64) {
	o.RepoId = v
}

// GetPath returns the Path field value
func (o *AddBlueprintRequestOneOf5TerraformGit) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5TerraformGit) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *AddBlueprintRequestOneOf5TerraformGit) SetPath(v string) {
	o.Path = v
}

// GetIntegrationId returns the IntegrationId field value
func (o *AddBlueprintRequestOneOf5TerraformGit) GetIntegrationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5TerraformGit) GetIntegrationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *AddBlueprintRequestOneOf5TerraformGit) SetIntegrationId(v int64) {
	o.IntegrationId = v
}

// GetBranch returns the Branch field value
func (o *AddBlueprintRequestOneOf5TerraformGit) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf5TerraformGit) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *AddBlueprintRequestOneOf5TerraformGit) SetBranch(v string) {
	o.Branch = v
}

func (o AddBlueprintRequestOneOf5TerraformGit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOf5TerraformGit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repoId"] = o.RepoId
	toSerialize["path"] = o.Path
	toSerialize["integrationId"] = o.IntegrationId
	toSerialize["branch"] = o.Branch
	return toSerialize, nil
}

func (o *AddBlueprintRequestOneOf5TerraformGit) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"repoId",
		"path",
		"integrationId",
		"branch",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBlueprintRequestOneOf5TerraformGit := _AddBlueprintRequestOneOf5TerraformGit{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddBlueprintRequestOneOf5TerraformGit)

	if err != nil {
		return err
	}

	*o = AddBlueprintRequestOneOf5TerraformGit(varAddBlueprintRequestOneOf5TerraformGit)

	return err
}

type NullableAddBlueprintRequestOneOf5TerraformGit struct {
	value *AddBlueprintRequestOneOf5TerraformGit
	isSet bool
}

func (v NullableAddBlueprintRequestOneOf5TerraformGit) Get() *AddBlueprintRequestOneOf5TerraformGit {
	return v.value
}

func (v *NullableAddBlueprintRequestOneOf5TerraformGit) Set(val *AddBlueprintRequestOneOf5TerraformGit) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequestOneOf5TerraformGit) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequestOneOf5TerraformGit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequestOneOf5TerraformGit(val *AddBlueprintRequestOneOf5TerraformGit) *NullableAddBlueprintRequestOneOf5TerraformGit {
	return &NullableAddBlueprintRequestOneOf5TerraformGit{value: val, isSet: true}
}

func (v NullableAddBlueprintRequestOneOf5TerraformGit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequestOneOf5TerraformGit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


