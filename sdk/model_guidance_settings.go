/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GuidanceSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuidanceSettings{}

// GuidanceSettings struct for GuidanceSettings
type GuidanceSettings struct {
	// Power Shutdown Average CPU (%). Lower limit for average CPU usage
	CpuAvgCutoffPower *int32 `json:"cpuAvgCutoffPower,omitempty"`
	// Power Shutdown Maximum CPU (%). Lower limit for peak CPU usage
	CpuMaxCutoffPower *int32 `json:"cpuMaxCutoffPower,omitempty"`
	// Power Shutdown Network threshold (bytes). Lower limit for average network bandwidth
	NetworkCutoffPower *int32 `json:"networkCutoffPower,omitempty"`
	// CPU Up-size Average CPU (%). Upper limit for CPU usage
	CpuUpAvgStandardCutoffRightSize *int32 `json:"cpuUpAvgStandardCutoffRightSize,omitempty"`
	// CPU Up-size Maximum CPU (%). Upper limit for peak CPU usage
	CpuUpMaxStandardCutoffRightSize *int32 `json:"cpuUpMaxStandardCutoffRightSize,omitempty"`
	// Memory Up-size Minimum Free Memory (%). Lower limit for average free memory usage
	MemoryUpAvgStandardCutoffRightSize *int32 `json:"memoryUpAvgStandardCutoffRightSize,omitempty"`
	// Memory Down-size Maximum Free Memory (%). Upper limit for average free memory
	MemoryDownAvgStandardCutoffRightSize *int32 `json:"memoryDownAvgStandardCutoffRightSize,omitempty"`
	// Memory Down-size Maximum Free Memory (%). Upper limit for peak memory usage
	MemoryDownMaxStandardCutoffRightSize *int32 `json:"memoryDownMaxStandardCutoffRightSize,omitempty"`
}

// NewGuidanceSettings instantiates a new GuidanceSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceSettings() *GuidanceSettings {
	this := GuidanceSettings{}
	return &this
}

// NewGuidanceSettingsWithDefaults instantiates a new GuidanceSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceSettingsWithDefaults() *GuidanceSettings {
	this := GuidanceSettings{}
	return &this
}

// GetCpuAvgCutoffPower returns the CpuAvgCutoffPower field value if set, zero value otherwise.
func (o *GuidanceSettings) GetCpuAvgCutoffPower() int32 {
	if o == nil || IsNil(o.CpuAvgCutoffPower) {
		var ret int32
		return ret
	}
	return *o.CpuAvgCutoffPower
}

// GetCpuAvgCutoffPowerOk returns a tuple with the CpuAvgCutoffPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetCpuAvgCutoffPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuAvgCutoffPower) {
		return nil, false
	}
	return o.CpuAvgCutoffPower, true
}

// IsSetCpuAvgCutoffPower returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetCpuAvgCutoffPower() bool {
	if o != nil && !IsNil(o.CpuAvgCutoffPower) {
		return true
	}

	return false
}

// SetCpuAvgCutoffPower gets a reference to the given int32 and assigns it to the CpuAvgCutoffPower field.
func (o *GuidanceSettings) SetCpuAvgCutoffPower(v int32) {
	o.CpuAvgCutoffPower = &v
}

// GetCpuMaxCutoffPower returns the CpuMaxCutoffPower field value if set, zero value otherwise.
func (o *GuidanceSettings) GetCpuMaxCutoffPower() int32 {
	if o == nil || IsNil(o.CpuMaxCutoffPower) {
		var ret int32
		return ret
	}
	return *o.CpuMaxCutoffPower
}

// GetCpuMaxCutoffPowerOk returns a tuple with the CpuMaxCutoffPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetCpuMaxCutoffPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuMaxCutoffPower) {
		return nil, false
	}
	return o.CpuMaxCutoffPower, true
}

// IsSetCpuMaxCutoffPower returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetCpuMaxCutoffPower() bool {
	if o != nil && !IsNil(o.CpuMaxCutoffPower) {
		return true
	}

	return false
}

// SetCpuMaxCutoffPower gets a reference to the given int32 and assigns it to the CpuMaxCutoffPower field.
func (o *GuidanceSettings) SetCpuMaxCutoffPower(v int32) {
	o.CpuMaxCutoffPower = &v
}

// GetNetworkCutoffPower returns the NetworkCutoffPower field value if set, zero value otherwise.
func (o *GuidanceSettings) GetNetworkCutoffPower() int32 {
	if o == nil || IsNil(o.NetworkCutoffPower) {
		var ret int32
		return ret
	}
	return *o.NetworkCutoffPower
}

// GetNetworkCutoffPowerOk returns a tuple with the NetworkCutoffPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetNetworkCutoffPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkCutoffPower) {
		return nil, false
	}
	return o.NetworkCutoffPower, true
}

// IsSetNetworkCutoffPower returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetNetworkCutoffPower() bool {
	if o != nil && !IsNil(o.NetworkCutoffPower) {
		return true
	}

	return false
}

// SetNetworkCutoffPower gets a reference to the given int32 and assigns it to the NetworkCutoffPower field.
func (o *GuidanceSettings) SetNetworkCutoffPower(v int32) {
	o.NetworkCutoffPower = &v
}

// GetCpuUpAvgStandardCutoffRightSize returns the CpuUpAvgStandardCutoffRightSize field value if set, zero value otherwise.
func (o *GuidanceSettings) GetCpuUpAvgStandardCutoffRightSize() int32 {
	if o == nil || IsNil(o.CpuUpAvgStandardCutoffRightSize) {
		var ret int32
		return ret
	}
	return *o.CpuUpAvgStandardCutoffRightSize
}

// GetCpuUpAvgStandardCutoffRightSizeOk returns a tuple with the CpuUpAvgStandardCutoffRightSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetCpuUpAvgStandardCutoffRightSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuUpAvgStandardCutoffRightSize) {
		return nil, false
	}
	return o.CpuUpAvgStandardCutoffRightSize, true
}

// IsSetCpuUpAvgStandardCutoffRightSize returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetCpuUpAvgStandardCutoffRightSize() bool {
	if o != nil && !IsNil(o.CpuUpAvgStandardCutoffRightSize) {
		return true
	}

	return false
}

// SetCpuUpAvgStandardCutoffRightSize gets a reference to the given int32 and assigns it to the CpuUpAvgStandardCutoffRightSize field.
func (o *GuidanceSettings) SetCpuUpAvgStandardCutoffRightSize(v int32) {
	o.CpuUpAvgStandardCutoffRightSize = &v
}

// GetCpuUpMaxStandardCutoffRightSize returns the CpuUpMaxStandardCutoffRightSize field value if set, zero value otherwise.
func (o *GuidanceSettings) GetCpuUpMaxStandardCutoffRightSize() int32 {
	if o == nil || IsNil(o.CpuUpMaxStandardCutoffRightSize) {
		var ret int32
		return ret
	}
	return *o.CpuUpMaxStandardCutoffRightSize
}

// GetCpuUpMaxStandardCutoffRightSizeOk returns a tuple with the CpuUpMaxStandardCutoffRightSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetCpuUpMaxStandardCutoffRightSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuUpMaxStandardCutoffRightSize) {
		return nil, false
	}
	return o.CpuUpMaxStandardCutoffRightSize, true
}

// IsSetCpuUpMaxStandardCutoffRightSize returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetCpuUpMaxStandardCutoffRightSize() bool {
	if o != nil && !IsNil(o.CpuUpMaxStandardCutoffRightSize) {
		return true
	}

	return false
}

// SetCpuUpMaxStandardCutoffRightSize gets a reference to the given int32 and assigns it to the CpuUpMaxStandardCutoffRightSize field.
func (o *GuidanceSettings) SetCpuUpMaxStandardCutoffRightSize(v int32) {
	o.CpuUpMaxStandardCutoffRightSize = &v
}

// GetMemoryUpAvgStandardCutoffRightSize returns the MemoryUpAvgStandardCutoffRightSize field value if set, zero value otherwise.
func (o *GuidanceSettings) GetMemoryUpAvgStandardCutoffRightSize() int32 {
	if o == nil || IsNil(o.MemoryUpAvgStandardCutoffRightSize) {
		var ret int32
		return ret
	}
	return *o.MemoryUpAvgStandardCutoffRightSize
}

// GetMemoryUpAvgStandardCutoffRightSizeOk returns a tuple with the MemoryUpAvgStandardCutoffRightSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetMemoryUpAvgStandardCutoffRightSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryUpAvgStandardCutoffRightSize) {
		return nil, false
	}
	return o.MemoryUpAvgStandardCutoffRightSize, true
}

// IsSetMemoryUpAvgStandardCutoffRightSize returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetMemoryUpAvgStandardCutoffRightSize() bool {
	if o != nil && !IsNil(o.MemoryUpAvgStandardCutoffRightSize) {
		return true
	}

	return false
}

// SetMemoryUpAvgStandardCutoffRightSize gets a reference to the given int32 and assigns it to the MemoryUpAvgStandardCutoffRightSize field.
func (o *GuidanceSettings) SetMemoryUpAvgStandardCutoffRightSize(v int32) {
	o.MemoryUpAvgStandardCutoffRightSize = &v
}

// GetMemoryDownAvgStandardCutoffRightSize returns the MemoryDownAvgStandardCutoffRightSize field value if set, zero value otherwise.
func (o *GuidanceSettings) GetMemoryDownAvgStandardCutoffRightSize() int32 {
	if o == nil || IsNil(o.MemoryDownAvgStandardCutoffRightSize) {
		var ret int32
		return ret
	}
	return *o.MemoryDownAvgStandardCutoffRightSize
}

// GetMemoryDownAvgStandardCutoffRightSizeOk returns a tuple with the MemoryDownAvgStandardCutoffRightSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetMemoryDownAvgStandardCutoffRightSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryDownAvgStandardCutoffRightSize) {
		return nil, false
	}
	return o.MemoryDownAvgStandardCutoffRightSize, true
}

// IsSetMemoryDownAvgStandardCutoffRightSize returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetMemoryDownAvgStandardCutoffRightSize() bool {
	if o != nil && !IsNil(o.MemoryDownAvgStandardCutoffRightSize) {
		return true
	}

	return false
}

// SetMemoryDownAvgStandardCutoffRightSize gets a reference to the given int32 and assigns it to the MemoryDownAvgStandardCutoffRightSize field.
func (o *GuidanceSettings) SetMemoryDownAvgStandardCutoffRightSize(v int32) {
	o.MemoryDownAvgStandardCutoffRightSize = &v
}

// GetMemoryDownMaxStandardCutoffRightSize returns the MemoryDownMaxStandardCutoffRightSize field value if set, zero value otherwise.
func (o *GuidanceSettings) GetMemoryDownMaxStandardCutoffRightSize() int32 {
	if o == nil || IsNil(o.MemoryDownMaxStandardCutoffRightSize) {
		var ret int32
		return ret
	}
	return *o.MemoryDownMaxStandardCutoffRightSize
}

// GetMemoryDownMaxStandardCutoffRightSizeOk returns a tuple with the MemoryDownMaxStandardCutoffRightSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceSettings) GetMemoryDownMaxStandardCutoffRightSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryDownMaxStandardCutoffRightSize) {
		return nil, false
	}
	return o.MemoryDownMaxStandardCutoffRightSize, true
}

// IsSetMemoryDownMaxStandardCutoffRightSize returns a boolean if a field has been set.
func (o *GuidanceSettings) IsSetMemoryDownMaxStandardCutoffRightSize() bool {
	if o != nil && !IsNil(o.MemoryDownMaxStandardCutoffRightSize) {
		return true
	}

	return false
}

// SetMemoryDownMaxStandardCutoffRightSize gets a reference to the given int32 and assigns it to the MemoryDownMaxStandardCutoffRightSize field.
func (o *GuidanceSettings) SetMemoryDownMaxStandardCutoffRightSize(v int32) {
	o.MemoryDownMaxStandardCutoffRightSize = &v
}

func (o GuidanceSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuidanceSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpuAvgCutoffPower) {
		toSerialize["cpuAvgCutoffPower"] = o.CpuAvgCutoffPower
	}
	if !IsNil(o.CpuMaxCutoffPower) {
		toSerialize["cpuMaxCutoffPower"] = o.CpuMaxCutoffPower
	}
	if !IsNil(o.NetworkCutoffPower) {
		toSerialize["networkCutoffPower"] = o.NetworkCutoffPower
	}
	if !IsNil(o.CpuUpAvgStandardCutoffRightSize) {
		toSerialize["cpuUpAvgStandardCutoffRightSize"] = o.CpuUpAvgStandardCutoffRightSize
	}
	if !IsNil(o.CpuUpMaxStandardCutoffRightSize) {
		toSerialize["cpuUpMaxStandardCutoffRightSize"] = o.CpuUpMaxStandardCutoffRightSize
	}
	if !IsNil(o.MemoryUpAvgStandardCutoffRightSize) {
		toSerialize["memoryUpAvgStandardCutoffRightSize"] = o.MemoryUpAvgStandardCutoffRightSize
	}
	if !IsNil(o.MemoryDownAvgStandardCutoffRightSize) {
		toSerialize["memoryDownAvgStandardCutoffRightSize"] = o.MemoryDownAvgStandardCutoffRightSize
	}
	if !IsNil(o.MemoryDownMaxStandardCutoffRightSize) {
		toSerialize["memoryDownMaxStandardCutoffRightSize"] = o.MemoryDownMaxStandardCutoffRightSize
	}
	return toSerialize, nil
}

type NullableGuidanceSettings struct {
	value *GuidanceSettings
	isSet bool
}

func (v NullableGuidanceSettings) Get() *GuidanceSettings {
	return v.value
}

func (v *NullableGuidanceSettings) Set(val *GuidanceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceSettings(val *GuidanceSettings) *NullableGuidanceSettings {
	return &NullableGuidanceSettings{value: val, isSet: true}
}

func (v NullableGuidanceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


