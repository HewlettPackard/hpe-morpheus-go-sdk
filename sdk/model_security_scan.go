/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the SecurityScan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityScan{}

// SecurityScan struct for SecurityScan
type SecurityScan struct {
	Id *int64 `json:"id,omitempty"`
	SecurityPackage *ListInstances200ResponseAllOfInstancesInnerCluster `json:"securityPackage,omitempty"`
	Status *string `json:"status,omitempty"`
	ScanDate *time.Time `json:"scanDate,omitempty"`
	ScanDuration *int64 `json:"scanDuration,omitempty"`
	TestCount *int64 `json:"testCount,omitempty"`
	RunCount *int64 `json:"runCount,omitempty"`
	PassCount *int64 `json:"passCount,omitempty"`
	FailCount *int64 `json:"failCount,omitempty"`
	OtherCount *int64 `json:"otherCount,omitempty"`
	ScanScore *float32 `json:"scanScore,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	UpdatedBy *string `json:"updatedBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Results Summary (only returned when using query parameter results=true)
	Results map[string]interface{} `json:"results,omitempty"`
}

// NewSecurityScan instantiates a new SecurityScan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityScan() *SecurityScan {
	this := SecurityScan{}
	return &this
}

// NewSecurityScanWithDefaults instantiates a new SecurityScan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityScanWithDefaults() *SecurityScan {
	this := SecurityScan{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecurityScan) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *SecurityScan) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SecurityScan) SetId(v int64) {
	o.Id = &v
}

// GetSecurityPackage returns the SecurityPackage field value if set, zero value otherwise.
func (o *SecurityScan) GetSecurityPackage() ListInstances200ResponseAllOfInstancesInnerCluster {
	if o == nil || IsNil(o.SecurityPackage) {
		var ret ListInstances200ResponseAllOfInstancesInnerCluster
		return ret
	}
	return *o.SecurityPackage
}

// GetSecurityPackageOk returns a tuple with the SecurityPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetSecurityPackageOk() (*ListInstances200ResponseAllOfInstancesInnerCluster, bool) {
	if o == nil || IsNil(o.SecurityPackage) {
		return nil, false
	}
	return o.SecurityPackage, true
}

// IsSetSecurityPackage returns a boolean if a field has been set.
func (o *SecurityScan) IsSetSecurityPackage() bool {
	if o != nil && !IsNil(o.SecurityPackage) {
		return true
	}

	return false
}

// SetSecurityPackage gets a reference to the given ListInstances200ResponseAllOfInstancesInnerCluster and assigns it to the SecurityPackage field.
func (o *SecurityScan) SetSecurityPackage(v ListInstances200ResponseAllOfInstancesInnerCluster) {
	o.SecurityPackage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SecurityScan) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// IsSetStatus returns a boolean if a field has been set.
func (o *SecurityScan) IsSetStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SecurityScan) SetStatus(v string) {
	o.Status = &v
}

// GetScanDate returns the ScanDate field value if set, zero value otherwise.
func (o *SecurityScan) GetScanDate() time.Time {
	if o == nil || IsNil(o.ScanDate) {
		var ret time.Time
		return ret
	}
	return *o.ScanDate
}

// GetScanDateOk returns a tuple with the ScanDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetScanDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScanDate) {
		return nil, false
	}
	return o.ScanDate, true
}

// IsSetScanDate returns a boolean if a field has been set.
func (o *SecurityScan) IsSetScanDate() bool {
	if o != nil && !IsNil(o.ScanDate) {
		return true
	}

	return false
}

// SetScanDate gets a reference to the given time.Time and assigns it to the ScanDate field.
func (o *SecurityScan) SetScanDate(v time.Time) {
	o.ScanDate = &v
}

// GetScanDuration returns the ScanDuration field value if set, zero value otherwise.
func (o *SecurityScan) GetScanDuration() int64 {
	if o == nil || IsNil(o.ScanDuration) {
		var ret int64
		return ret
	}
	return *o.ScanDuration
}

// GetScanDurationOk returns a tuple with the ScanDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetScanDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.ScanDuration) {
		return nil, false
	}
	return o.ScanDuration, true
}

// IsSetScanDuration returns a boolean if a field has been set.
func (o *SecurityScan) IsSetScanDuration() bool {
	if o != nil && !IsNil(o.ScanDuration) {
		return true
	}

	return false
}

// SetScanDuration gets a reference to the given int64 and assigns it to the ScanDuration field.
func (o *SecurityScan) SetScanDuration(v int64) {
	o.ScanDuration = &v
}

// GetTestCount returns the TestCount field value if set, zero value otherwise.
func (o *SecurityScan) GetTestCount() int64 {
	if o == nil || IsNil(o.TestCount) {
		var ret int64
		return ret
	}
	return *o.TestCount
}

// GetTestCountOk returns a tuple with the TestCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetTestCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TestCount) {
		return nil, false
	}
	return o.TestCount, true
}

// IsSetTestCount returns a boolean if a field has been set.
func (o *SecurityScan) IsSetTestCount() bool {
	if o != nil && !IsNil(o.TestCount) {
		return true
	}

	return false
}

// SetTestCount gets a reference to the given int64 and assigns it to the TestCount field.
func (o *SecurityScan) SetTestCount(v int64) {
	o.TestCount = &v
}

// GetRunCount returns the RunCount field value if set, zero value otherwise.
func (o *SecurityScan) GetRunCount() int64 {
	if o == nil || IsNil(o.RunCount) {
		var ret int64
		return ret
	}
	return *o.RunCount
}

// GetRunCountOk returns a tuple with the RunCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetRunCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RunCount) {
		return nil, false
	}
	return o.RunCount, true
}

// IsSetRunCount returns a boolean if a field has been set.
func (o *SecurityScan) IsSetRunCount() bool {
	if o != nil && !IsNil(o.RunCount) {
		return true
	}

	return false
}

// SetRunCount gets a reference to the given int64 and assigns it to the RunCount field.
func (o *SecurityScan) SetRunCount(v int64) {
	o.RunCount = &v
}

// GetPassCount returns the PassCount field value if set, zero value otherwise.
func (o *SecurityScan) GetPassCount() int64 {
	if o == nil || IsNil(o.PassCount) {
		var ret int64
		return ret
	}
	return *o.PassCount
}

// GetPassCountOk returns a tuple with the PassCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetPassCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PassCount) {
		return nil, false
	}
	return o.PassCount, true
}

// IsSetPassCount returns a boolean if a field has been set.
func (o *SecurityScan) IsSetPassCount() bool {
	if o != nil && !IsNil(o.PassCount) {
		return true
	}

	return false
}

// SetPassCount gets a reference to the given int64 and assigns it to the PassCount field.
func (o *SecurityScan) SetPassCount(v int64) {
	o.PassCount = &v
}

// GetFailCount returns the FailCount field value if set, zero value otherwise.
func (o *SecurityScan) GetFailCount() int64 {
	if o == nil || IsNil(o.FailCount) {
		var ret int64
		return ret
	}
	return *o.FailCount
}

// GetFailCountOk returns a tuple with the FailCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetFailCountOk() (*int64, bool) {
	if o == nil || IsNil(o.FailCount) {
		return nil, false
	}
	return o.FailCount, true
}

// IsSetFailCount returns a boolean if a field has been set.
func (o *SecurityScan) IsSetFailCount() bool {
	if o != nil && !IsNil(o.FailCount) {
		return true
	}

	return false
}

// SetFailCount gets a reference to the given int64 and assigns it to the FailCount field.
func (o *SecurityScan) SetFailCount(v int64) {
	o.FailCount = &v
}

// GetOtherCount returns the OtherCount field value if set, zero value otherwise.
func (o *SecurityScan) GetOtherCount() int64 {
	if o == nil || IsNil(o.OtherCount) {
		var ret int64
		return ret
	}
	return *o.OtherCount
}

// GetOtherCountOk returns a tuple with the OtherCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetOtherCountOk() (*int64, bool) {
	if o == nil || IsNil(o.OtherCount) {
		return nil, false
	}
	return o.OtherCount, true
}

// IsSetOtherCount returns a boolean if a field has been set.
func (o *SecurityScan) IsSetOtherCount() bool {
	if o != nil && !IsNil(o.OtherCount) {
		return true
	}

	return false
}

// SetOtherCount gets a reference to the given int64 and assigns it to the OtherCount field.
func (o *SecurityScan) SetOtherCount(v int64) {
	o.OtherCount = &v
}

// GetScanScore returns the ScanScore field value if set, zero value otherwise.
func (o *SecurityScan) GetScanScore() float32 {
	if o == nil || IsNil(o.ScanScore) {
		var ret float32
		return ret
	}
	return *o.ScanScore
}

// GetScanScoreOk returns a tuple with the ScanScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetScanScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ScanScore) {
		return nil, false
	}
	return o.ScanScore, true
}

// IsSetScanScore returns a boolean if a field has been set.
func (o *SecurityScan) IsSetScanScore() bool {
	if o != nil && !IsNil(o.ScanScore) {
		return true
	}

	return false
}

// SetScanScore gets a reference to the given float32 and assigns it to the ScanScore field.
func (o *SecurityScan) SetScanScore(v float32) {
	o.ScanScore = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *SecurityScan) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// IsSetExternalId returns a boolean if a field has been set.
func (o *SecurityScan) IsSetExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *SecurityScan) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *SecurityScan) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// IsSetCreatedBy returns a boolean if a field has been set.
func (o *SecurityScan) IsSetCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *SecurityScan) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *SecurityScan) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// IsSetUpdatedBy returns a boolean if a field has been set.
func (o *SecurityScan) IsSetUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *SecurityScan) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *SecurityScan) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *SecurityScan) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *SecurityScan) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *SecurityScan) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *SecurityScan) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *SecurityScan) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *SecurityScan) GetResults() map[string]interface{} {
	if o == nil || IsNil(o.Results) {
		var ret map[string]interface{}
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityScan) GetResultsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Results) {
		return map[string]interface{}{}, false
	}
	return o.Results, true
}

// IsSetResults returns a boolean if a field has been set.
func (o *SecurityScan) IsSetResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given map[string]interface{} and assigns it to the Results field.
func (o *SecurityScan) SetResults(v map[string]interface{}) {
	o.Results = v
}

func (o SecurityScan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityScan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SecurityPackage) {
		toSerialize["securityPackage"] = o.SecurityPackage
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ScanDate) {
		toSerialize["scanDate"] = o.ScanDate
	}
	if !IsNil(o.ScanDuration) {
		toSerialize["scanDuration"] = o.ScanDuration
	}
	if !IsNil(o.TestCount) {
		toSerialize["testCount"] = o.TestCount
	}
	if !IsNil(o.RunCount) {
		toSerialize["runCount"] = o.RunCount
	}
	if !IsNil(o.PassCount) {
		toSerialize["passCount"] = o.PassCount
	}
	if !IsNil(o.FailCount) {
		toSerialize["failCount"] = o.FailCount
	}
	if !IsNil(o.OtherCount) {
		toSerialize["otherCount"] = o.OtherCount
	}
	if !IsNil(o.ScanScore) {
		toSerialize["scanScore"] = o.ScanScore
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableSecurityScan struct {
	value *SecurityScan
	isSet bool
}

func (v NullableSecurityScan) Get() *SecurityScan {
	return v.value
}

func (v *NullableSecurityScan) Set(val *SecurityScan) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityScan) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityScan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityScan(val *SecurityScan) *NullableSecurityScan {
	return &NullableSecurityScan{value: val, isSet: true}
}

func (v NullableSecurityScan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityScan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


