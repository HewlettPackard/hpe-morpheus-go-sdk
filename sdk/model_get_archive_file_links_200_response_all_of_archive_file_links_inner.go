/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner{}

// GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner struct for GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner
type GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner struct {
	Id *int64 `json:"id,omitempty"`
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	ArchiveFile *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile `json:"archiveFile,omitempty"`
	CreatedBy *GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy `json:"createdBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LastAccessDate *time.Time `json:"lastAccessDate,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	DownloadCount *int64 `json:"downloadCount,omitempty"`
}

// NewGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner instantiates a new GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner() *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner {
	this := GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner{}
	return &this
}

// NewGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerWithDefaults instantiates a new GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerWithDefaults() *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner {
	this := GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetId(v int64) {
	o.Id = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// IsSetSecretAccessKey returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetArchiveFile returns the ArchiveFile field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetArchiveFile() GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile {
	if o == nil || IsNil(o.ArchiveFile) {
		var ret GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile
		return ret
	}
	return *o.ArchiveFile
}

// GetArchiveFileOk returns a tuple with the ArchiveFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetArchiveFileOk() (*GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile, bool) {
	if o == nil || IsNil(o.ArchiveFile) {
		return nil, false
	}
	return o.ArchiveFile, true
}

// IsSetArchiveFile returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetArchiveFile() bool {
	if o != nil && !IsNil(o.ArchiveFile) {
		return true
	}

	return false
}

// SetArchiveFile gets a reference to the given GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile and assigns it to the ArchiveFile field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetArchiveFile(v GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInnerArchiveFile) {
	o.ArchiveFile = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetCreatedBy() GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetCreatedByOk() (*GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// IsSetCreatedBy returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy and assigns it to the CreatedBy field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetCreatedBy(v GetArchiveBucket200ResponseArchiveFilesInnerCreatedBy) {
	o.CreatedBy = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// IsSetLastUpdated returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastAccessDate returns the LastAccessDate field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetLastAccessDate() time.Time {
	if o == nil || IsNil(o.LastAccessDate) {
		var ret time.Time
		return ret
	}
	return *o.LastAccessDate
}

// GetLastAccessDateOk returns a tuple with the LastAccessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetLastAccessDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAccessDate) {
		return nil, false
	}
	return o.LastAccessDate, true
}

// IsSetLastAccessDate returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetLastAccessDate() bool {
	if o != nil && !IsNil(o.LastAccessDate) {
		return true
	}

	return false
}

// SetLastAccessDate gets a reference to the given time.Time and assigns it to the LastAccessDate field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetLastAccessDate(v time.Time) {
	o.LastAccessDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// IsSetExpirationDate returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetDownloadCount returns the DownloadCount field value if set, zero value otherwise.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetDownloadCount() int64 {
	if o == nil || IsNil(o.DownloadCount) {
		var ret int64
		return ret
	}
	return *o.DownloadCount
}

// GetDownloadCountOk returns a tuple with the DownloadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) GetDownloadCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DownloadCount) {
		return nil, false
	}
	return o.DownloadCount, true
}

// IsSetDownloadCount returns a boolean if a field has been set.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSetDownloadCount() bool {
	if o != nil && !IsNil(o.DownloadCount) {
		return true
	}

	return false
}

// SetDownloadCount gets a reference to the given int64 and assigns it to the DownloadCount field.
func (o *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) SetDownloadCount(v int64) {
	o.DownloadCount = &v
}

func (o GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if !IsNil(o.ArchiveFile) {
		toSerialize["archiveFile"] = o.ArchiveFile
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastAccessDate) {
		toSerialize["lastAccessDate"] = o.LastAccessDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.DownloadCount) {
		toSerialize["downloadCount"] = o.DownloadCount
	}
	return toSerialize, nil
}

type NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner struct {
	value *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner
	isSet bool
}

func (v NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) Get() *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner {
	return v.value
}

func (v *NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) Set(val *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner(val *GetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) *NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner {
	return &NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner{value: val, isSet: true}
}

func (v NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetArchiveFileLinks200ResponseAllOfArchiveFileLinksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


