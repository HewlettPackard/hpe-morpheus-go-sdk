/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateLayoutRequestInstanceTypeLayout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLayoutRequestInstanceTypeLayout{}

// UpdateLayoutRequestInstanceTypeLayout struct for UpdateLayoutRequestInstanceTypeLayout
type UpdateLayoutRequestInstanceTypeLayout struct {
	// Layout name
	Name *string `json:"name,omitempty"`
	Labels []string `json:"labels,omitempty"`
	// Version of the layout
	InstanceVersion *string `json:"instanceVersion,omitempty"`
	// Layout description
	Description *string `json:"description,omitempty"`
	// Can be used to enable / disable the creatability of the layout.
	Creatable *bool `json:"creatable,omitempty"`
	// Provision type code
	ProvisionTypeCode *string `json:"provisionTypeCode,omitempty"`
	// Memory requirement in megabytes
	MemoryRequirement *string `json:"memoryRequirement,omitempty"`
	// Can be used to enable / disable the horizontal scaling.
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	// Can be used to enable / disable the supports convert to managed.
	SupportsConvertToManaged *bool `json:"supportsConvertToManaged,omitempty"`
	// Array of layout node type IDs
	ContainerTypes []int64 `json:"containerTypes,omitempty"`
	// Array of layout option type IDs
	OptionTypes []int64 `json:"optionTypes,omitempty"`
	// Array of layout spec template IDs
	SpecTemplates []int64 `json:"specTemplates,omitempty"`
	// The environmentVariables parameter is array of env objects
	EnvironmentVariables []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner `json:"environmentVariables,omitempty"`
	// Array of price set objects
	PriceSets []AddInstanceTypeRequestInstanceTypePriceSetsInner `json:"priceSets,omitempty"`
	Permissions *AddLayoutRequestInstanceTypeLayoutPermissions `json:"permissions,omitempty"`
}

// NewUpdateLayoutRequestInstanceTypeLayout instantiates a new UpdateLayoutRequestInstanceTypeLayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLayoutRequestInstanceTypeLayout() *UpdateLayoutRequestInstanceTypeLayout {
	this := UpdateLayoutRequestInstanceTypeLayout{}
	var creatable bool = true
	this.Creatable = &creatable
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var supportsConvertToManaged bool = false
	this.SupportsConvertToManaged = &supportsConvertToManaged
	return &this
}

// NewUpdateLayoutRequestInstanceTypeLayoutWithDefaults instantiates a new UpdateLayoutRequestInstanceTypeLayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLayoutRequestInstanceTypeLayoutWithDefaults() *UpdateLayoutRequestInstanceTypeLayout {
	this := UpdateLayoutRequestInstanceTypeLayout{}
	var creatable bool = true
	this.Creatable = &creatable
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var supportsConvertToManaged bool = false
	this.SupportsConvertToManaged = &supportsConvertToManaged
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetLabels(v []string) {
	o.Labels = v
}

// GetInstanceVersion returns the InstanceVersion field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetInstanceVersion() string {
	if o == nil || IsNil(o.InstanceVersion) {
		var ret string
		return ret
	}
	return *o.InstanceVersion
}

// GetInstanceVersionOk returns a tuple with the InstanceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetInstanceVersionOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceVersion) {
		return nil, false
	}
	return o.InstanceVersion, true
}

// IsSetInstanceVersion returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetInstanceVersion() bool {
	if o != nil && !IsNil(o.InstanceVersion) {
		return true
	}

	return false
}

// SetInstanceVersion gets a reference to the given string and assigns it to the InstanceVersion field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetInstanceVersion(v string) {
	o.InstanceVersion = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetDescription(v string) {
	o.Description = &v
}

// GetCreatable returns the Creatable field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetCreatable() bool {
	if o == nil || IsNil(o.Creatable) {
		var ret bool
		return ret
	}
	return *o.Creatable
}

// GetCreatableOk returns a tuple with the Creatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetCreatableOk() (*bool, bool) {
	if o == nil || IsNil(o.Creatable) {
		return nil, false
	}
	return o.Creatable, true
}

// IsSetCreatable returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetCreatable() bool {
	if o != nil && !IsNil(o.Creatable) {
		return true
	}

	return false
}

// SetCreatable gets a reference to the given bool and assigns it to the Creatable field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetCreatable(v bool) {
	o.Creatable = &v
}

// GetProvisionTypeCode returns the ProvisionTypeCode field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetProvisionTypeCode() string {
	if o == nil || IsNil(o.ProvisionTypeCode) {
		var ret string
		return ret
	}
	return *o.ProvisionTypeCode
}

// GetProvisionTypeCodeOk returns a tuple with the ProvisionTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetProvisionTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisionTypeCode) {
		return nil, false
	}
	return o.ProvisionTypeCode, true
}

// IsSetProvisionTypeCode returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetProvisionTypeCode() bool {
	if o != nil && !IsNil(o.ProvisionTypeCode) {
		return true
	}

	return false
}

// SetProvisionTypeCode gets a reference to the given string and assigns it to the ProvisionTypeCode field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetProvisionTypeCode(v string) {
	o.ProvisionTypeCode = &v
}

// GetMemoryRequirement returns the MemoryRequirement field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetMemoryRequirement() string {
	if o == nil || IsNil(o.MemoryRequirement) {
		var ret string
		return ret
	}
	return *o.MemoryRequirement
}

// GetMemoryRequirementOk returns a tuple with the MemoryRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetMemoryRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryRequirement) {
		return nil, false
	}
	return o.MemoryRequirement, true
}

// IsSetMemoryRequirement returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetMemoryRequirement() bool {
	if o != nil && !IsNil(o.MemoryRequirement) {
		return true
	}

	return false
}

// SetMemoryRequirement gets a reference to the given string and assigns it to the MemoryRequirement field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetMemoryRequirement(v string) {
	o.MemoryRequirement = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetHasAutoScale() bool {
	if o == nil || IsNil(o.HasAutoScale) {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAutoScale) {
		return nil, false
	}
	return o.HasAutoScale, true
}

// IsSetHasAutoScale returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetHasAutoScale() bool {
	if o != nil && !IsNil(o.HasAutoScale) {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetSupportsConvertToManaged returns the SupportsConvertToManaged field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetSupportsConvertToManaged() bool {
	if o == nil || IsNil(o.SupportsConvertToManaged) {
		var ret bool
		return ret
	}
	return *o.SupportsConvertToManaged
}

// GetSupportsConvertToManagedOk returns a tuple with the SupportsConvertToManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetSupportsConvertToManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsConvertToManaged) {
		return nil, false
	}
	return o.SupportsConvertToManaged, true
}

// IsSetSupportsConvertToManaged returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetSupportsConvertToManaged() bool {
	if o != nil && !IsNil(o.SupportsConvertToManaged) {
		return true
	}

	return false
}

// SetSupportsConvertToManaged gets a reference to the given bool and assigns it to the SupportsConvertToManaged field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetSupportsConvertToManaged(v bool) {
	o.SupportsConvertToManaged = &v
}

// GetContainerTypes returns the ContainerTypes field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetContainerTypes() []int64 {
	if o == nil || IsNil(o.ContainerTypes) {
		var ret []int64
		return ret
	}
	return o.ContainerTypes
}

// GetContainerTypesOk returns a tuple with the ContainerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetContainerTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.ContainerTypes) {
		return nil, false
	}
	return o.ContainerTypes, true
}

// IsSetContainerTypes returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetContainerTypes() bool {
	if o != nil && !IsNil(o.ContainerTypes) {
		return true
	}

	return false
}

// SetContainerTypes gets a reference to the given []int64 and assigns it to the ContainerTypes field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetContainerTypes(v []int64) {
	o.ContainerTypes = v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetOptionTypes() []int64 {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []int64
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetOptionTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []int64 and assigns it to the OptionTypes field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetOptionTypes(v []int64) {
	o.OptionTypes = v
}

// GetSpecTemplates returns the SpecTemplates field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetSpecTemplates() []int64 {
	if o == nil || IsNil(o.SpecTemplates) {
		var ret []int64
		return ret
	}
	return o.SpecTemplates
}

// GetSpecTemplatesOk returns a tuple with the SpecTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetSpecTemplatesOk() ([]int64, bool) {
	if o == nil || IsNil(o.SpecTemplates) {
		return nil, false
	}
	return o.SpecTemplates, true
}

// IsSetSpecTemplates returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetSpecTemplates() bool {
	if o != nil && !IsNil(o.SpecTemplates) {
		return true
	}

	return false
}

// SetSpecTemplates gets a reference to the given []int64 and assigns it to the SpecTemplates field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetSpecTemplates(v []int64) {
	o.SpecTemplates = v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetEnvironmentVariables() []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetEnvironmentVariablesOk() ([]AddClusterLayoutsRequestLayoutEnvironmentVariablesInner, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// IsSetEnvironmentVariables returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner and assigns it to the EnvironmentVariables field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetEnvironmentVariables(v []AddClusterLayoutsRequestLayoutEnvironmentVariablesInner) {
	o.EnvironmentVariables = v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetPriceSets() []AddInstanceTypeRequestInstanceTypePriceSetsInner {
	if o == nil || IsNil(o.PriceSets) {
		var ret []AddInstanceTypeRequestInstanceTypePriceSetsInner
		return ret
	}
	return o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetPriceSetsOk() ([]AddInstanceTypeRequestInstanceTypePriceSetsInner, bool) {
	if o == nil || IsNil(o.PriceSets) {
		return nil, false
	}
	return o.PriceSets, true
}

// IsSetPriceSets returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetPriceSets() bool {
	if o != nil && !IsNil(o.PriceSets) {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []AddInstanceTypeRequestInstanceTypePriceSetsInner and assigns it to the PriceSets field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetPriceSets(v []AddInstanceTypeRequestInstanceTypePriceSetsInner) {
	o.PriceSets = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetPermissions() AddLayoutRequestInstanceTypeLayoutPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret AddLayoutRequestInstanceTypeLayoutPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) GetPermissionsOk() (*AddLayoutRequestInstanceTypeLayoutPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// IsSetPermissions returns a boolean if a field has been set.
func (o *UpdateLayoutRequestInstanceTypeLayout) IsSetPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given AddLayoutRequestInstanceTypeLayoutPermissions and assigns it to the Permissions field.
func (o *UpdateLayoutRequestInstanceTypeLayout) SetPermissions(v AddLayoutRequestInstanceTypeLayoutPermissions) {
	o.Permissions = &v
}

func (o UpdateLayoutRequestInstanceTypeLayout) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLayoutRequestInstanceTypeLayout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.InstanceVersion) {
		toSerialize["instanceVersion"] = o.InstanceVersion
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Creatable) {
		toSerialize["creatable"] = o.Creatable
	}
	if !IsNil(o.ProvisionTypeCode) {
		toSerialize["provisionTypeCode"] = o.ProvisionTypeCode
	}
	if !IsNil(o.MemoryRequirement) {
		toSerialize["memoryRequirement"] = o.MemoryRequirement
	}
	if !IsNil(o.HasAutoScale) {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if !IsNil(o.SupportsConvertToManaged) {
		toSerialize["supportsConvertToManaged"] = o.SupportsConvertToManaged
	}
	if !IsNil(o.ContainerTypes) {
		toSerialize["containerTypes"] = o.ContainerTypes
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.SpecTemplates) {
		toSerialize["specTemplates"] = o.SpecTemplates
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if !IsNil(o.PriceSets) {
		toSerialize["priceSets"] = o.PriceSets
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdateLayoutRequestInstanceTypeLayout struct {
	value *UpdateLayoutRequestInstanceTypeLayout
	isSet bool
}

func (v NullableUpdateLayoutRequestInstanceTypeLayout) Get() *UpdateLayoutRequestInstanceTypeLayout {
	return v.value
}

func (v *NullableUpdateLayoutRequestInstanceTypeLayout) Set(val *UpdateLayoutRequestInstanceTypeLayout) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLayoutRequestInstanceTypeLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLayoutRequestInstanceTypeLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLayoutRequestInstanceTypeLayout(val *UpdateLayoutRequestInstanceTypeLayout) *NullableUpdateLayoutRequestInstanceTypeLayout {
	return &NullableUpdateLayoutRequestInstanceTypeLayout{value: val, isSet: true}
}

func (v NullableUpdateLayoutRequestInstanceTypeLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLayoutRequestInstanceTypeLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


