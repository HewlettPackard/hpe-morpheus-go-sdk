/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8{}

// ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 - Hostname 
type ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 struct {
	HostNamingType string `json:"hostNamingType"`
	HostNamingPattern *string `json:"hostNamingPattern,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8(hostNamingType string) *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8{}
	this.HostNamingType = hostNamingType
	return &this
}

// NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8WithDefaults instantiates a new ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8WithDefaults() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 {
	this := ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8{}
	return &this
}

// GetHostNamingType returns the HostNamingType field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) GetHostNamingType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostNamingType
}

// GetHostNamingTypeOk returns a tuple with the HostNamingType field value
// and a boolean to check if the value has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) GetHostNamingTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostNamingType, true
}

// SetHostNamingType sets field value
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) SetHostNamingType(v string) {
	o.HostNamingType = v
}

// GetHostNamingPattern returns the HostNamingPattern field value if set, zero value otherwise.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) GetHostNamingPattern() string {
	if o == nil || IsNil(o.HostNamingPattern) {
		var ret string
		return ret
	}
	return *o.HostNamingPattern
}

// GetHostNamingPatternOk returns a tuple with the HostNamingPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) GetHostNamingPatternOk() (*string, bool) {
	if o == nil || IsNil(o.HostNamingPattern) {
		return nil, false
	}
	return o.HostNamingPattern, true
}

// IsSetHostNamingPattern returns a boolean if a field has been set.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) IsSetHostNamingPattern() bool {
	if o != nil && !IsNil(o.HostNamingPattern) {
		return true
	}

	return false
}

// SetHostNamingPattern gets a reference to the given string and assigns it to the HostNamingPattern field.
func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) SetHostNamingPattern(v string) {
	o.HostNamingPattern = &v
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostNamingType"] = o.HostNamingType
	if !IsNil(o.HostNamingPattern) {
		toSerialize["hostNamingPattern"] = o.HostNamingPattern
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hostNamingType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 := _ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8{}

	err = json.Unmarshal(data, &varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8)

	if err != nil {
		return err
	}

	*o = ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8(varListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hostNamingType")
		delete(additionalProperties, "hostNamingPattern")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 struct {
	value *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8
	isSet bool
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) Get() *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 {
	return v.value
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) Set(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) {
	v.value = val
	v.isSet = true
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) IsSet() bool {
	return v.isSet
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8(val *ListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8 {
	return &NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8{value: val, isSet: true}
}

func (v NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPolicies200ResponseAllOfPoliciesInnerConfigOneOf8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


