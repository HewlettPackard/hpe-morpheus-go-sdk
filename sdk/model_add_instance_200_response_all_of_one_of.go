/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AddInstance200ResponseAllOfOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstance200ResponseAllOfOneOf{}

// AddInstance200ResponseAllOfOneOf struct for AddInstance200ResponseAllOfOneOf
type AddInstance200ResponseAllOfOneOf struct {
	Instance AddInstance200ResponseAllOfOneOfInstance `json:"instance"`
	AdditionalProperties map[string]interface{}
}

type _AddInstance200ResponseAllOfOneOf AddInstance200ResponseAllOfOneOf

// NewAddInstance200ResponseAllOfOneOf instantiates a new AddInstance200ResponseAllOfOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstance200ResponseAllOfOneOf(instance AddInstance200ResponseAllOfOneOfInstance) *AddInstance200ResponseAllOfOneOf {
	this := AddInstance200ResponseAllOfOneOf{}
	this.Instance = instance
	return &this
}

// NewAddInstance200ResponseAllOfOneOfWithDefaults instantiates a new AddInstance200ResponseAllOfOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstance200ResponseAllOfOneOfWithDefaults() *AddInstance200ResponseAllOfOneOf {
	this := AddInstance200ResponseAllOfOneOf{}
	return &this
}

// GetInstance returns the Instance field value
func (o *AddInstance200ResponseAllOfOneOf) GetInstance() AddInstance200ResponseAllOfOneOfInstance {
	if o == nil {
		var ret AddInstance200ResponseAllOfOneOfInstance
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOf) GetInstanceOk() (*AddInstance200ResponseAllOfOneOfInstance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *AddInstance200ResponseAllOfOneOf) SetInstance(v AddInstance200ResponseAllOfOneOfInstance) {
	o.Instance = v
}

func (o AddInstance200ResponseAllOfOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstance200ResponseAllOfOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance"] = o.Instance

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddInstance200ResponseAllOfOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddInstance200ResponseAllOfOneOf := _AddInstance200ResponseAllOfOneOf{}

	err = json.Unmarshal(data, &varAddInstance200ResponseAllOfOneOf)

	if err != nil {
		return err
	}

	*o = AddInstance200ResponseAllOfOneOf(varAddInstance200ResponseAllOfOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instance")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddInstance200ResponseAllOfOneOf struct {
	value *AddInstance200ResponseAllOfOneOf
	isSet bool
}

func (v NullableAddInstance200ResponseAllOfOneOf) Get() *AddInstance200ResponseAllOfOneOf {
	return v.value
}

func (v *NullableAddInstance200ResponseAllOfOneOf) Set(val *AddInstance200ResponseAllOfOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInstance200ResponseAllOfOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInstance200ResponseAllOfOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInstance200ResponseAllOfOneOf(val *AddInstance200ResponseAllOfOneOf) *NullableAddInstance200ResponseAllOfOneOf {
	return &NullableAddInstance200ResponseAllOfOneOf{value: val, isSet: true}
}

func (v NullableAddInstance200ResponseAllOfOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInstance200ResponseAllOfOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


