/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddRolesRequestRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddRolesRequestRole{}

// AddRolesRequestRole Payload for creating a new role
type AddRolesRequestRole struct {
	// Authority (Name)
	Authority string `json:"authority"`
	// Description
	Description *string `json:"description,omitempty"`
	// An optional override for the default landing page after login for a user.
	LandingUrl *string `json:"landingUrl,omitempty"`
	// Role type
	RoleType *string `json:"roleType,omitempty"`
	// Base Role ID. Create the new role with the same permissions and access levels that the specified base role has. If this is not passed, the role is create without any permissions.
	BaseRoleId *int64 `json:"baseRoleId,omitempty"`
	// Multitenant roles are copied to all tenant accounts and kept in sync until a sub-tenant user modifies their copy of the role. *Only available to master tenant*
	Multitenant *bool `json:"multitenant,omitempty"`
	// Multitenant Locked, prevents sub-tenant users from modifying their copy of multienant roles. *Only available to master tenant*
	MultitenantLocked *bool `json:"multitenantLocked,omitempty"`
	DefaultPersona *string `json:"defaultPersona,omitempty"`
	// Set the access level for the specified permissions.
	Permissions []AddRolesRequestRolePermissionsInner `json:"permissions,omitempty"`
	// Set the default access level for for groups (sites). Only applies to user roles.
	GlobalSiteAccess *string `json:"globalSiteAccess,omitempty"`
	// Set the access level for the specified groups (sites). Only applies to user roles.
	Sites []AddRolesRequestRoleSitesInner `json:"sites,omitempty"`
	// Set the default access level for for clouds (zones). Only applies to base account (tenant) roles.
	GlobalZoneAccess *string `json:"globalZoneAccess,omitempty"`
	// Set the access level for the specified clouds (zones). Only applies to base account (tenant) roles.
	Zones []AddRolesRequestRoleZonesInner `json:"zones,omitempty"`
	// Set the default access level for for instance types
	GlobalInstanceTypeAccess *string `json:"globalInstanceTypeAccess,omitempty"`
	// Set the access level for the specified instance types
	InstanceTypes []AddRolesRequestRoleInstanceTypesInner `json:"instanceTypes,omitempty"`
	// Set the default access level for blueprints
	GlobalAppTemplateAccess *string `json:"globalAppTemplateAccess,omitempty"`
	// Set the access level for the specified blueprints (appTemplates)
	AppTemplates []AddRolesRequestRoleAppTemplatesInner `json:"appTemplates,omitempty"`
	// Set the default access level for catalog item types
	GlobalCatalogItemTypeAccess *string `json:"globalCatalogItemTypeAccess,omitempty"`
	// Set the access level for the specified catalog item types
	CatalogItemTypes []AddRolesRequestRoleCatalogItemTypesInner `json:"catalogItemTypes,omitempty"`
	// Set the default access level for personas
	GlobalPersonaAccess *string `json:"globalPersonaAccess,omitempty"`
	// Set the access level for the specified personas
	Personas []AddRolesRequestRolePersonasInner `json:"personas,omitempty"`
	// Set the default access level for VDI pools
	GlobalVdiPoolAccess *string `json:"globalVdiPoolAccess,omitempty"`
	// Set the access level for the specified VDI pools
	VdiPools []AddRolesRequestRoleVdiPoolsInner `json:"vdiPools,omitempty"`
	// Set the default access level for report types
	GlobalReportTypeAccess *string `json:"globalReportTypeAccess,omitempty"`
	// Set the access level for the specified report types
	ReportTypes []AddRolesRequestRoleReportTypesInner `json:"reportTypes,omitempty"`
	// Set the default access level for tasks
	GlobalTaskAccess *string `json:"globalTaskAccess,omitempty"`
	// Set the access level for the specified tasks
	Tasks []AddRolesRequestRoleTasksInner `json:"tasks,omitempty"`
	// Set the default access level for workflows (taskSets)
	GlobalTaskSetAccess *string `json:"globalTaskSetAccess,omitempty"`
	// Set the access level for the specified workflows (taskSets)
	TaskSets []AddRolesRequestRoleTaskSetsInner `json:"taskSets,omitempty"`
	// Set the role owner (tenant) by ID. *Only available to master tenant*
	Owner *int64 `json:"owner,omitempty"`
}

type _AddRolesRequestRole AddRolesRequestRole

// NewAddRolesRequestRole instantiates a new AddRolesRequestRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddRolesRequestRole(authority string) *AddRolesRequestRole {
	this := AddRolesRequestRole{}
	this.Authority = authority
	var roleType string = "user"
	this.RoleType = &roleType
	var multitenant bool = false
	this.Multitenant = &multitenant
	var multitenantLocked bool = false
	this.MultitenantLocked = &multitenantLocked
	return &this
}

// NewAddRolesRequestRoleWithDefaults instantiates a new AddRolesRequestRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRolesRequestRoleWithDefaults() *AddRolesRequestRole {
	this := AddRolesRequestRole{}
	var roleType string = "user"
	this.RoleType = &roleType
	var multitenant bool = false
	this.Multitenant = &multitenant
	var multitenantLocked bool = false
	this.MultitenantLocked = &multitenantLocked
	return &this
}

// GetAuthority returns the Authority field value
func (o *AddRolesRequestRole) GetAuthority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetAuthorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authority, true
}

// SetAuthority sets field value
func (o *AddRolesRequestRole) SetAuthority(v string) {
	o.Authority = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddRolesRequestRole) SetDescription(v string) {
	o.Description = &v
}

// GetLandingUrl returns the LandingUrl field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetLandingUrl() string {
	if o == nil || IsNil(o.LandingUrl) {
		var ret string
		return ret
	}
	return *o.LandingUrl
}

// GetLandingUrlOk returns a tuple with the LandingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetLandingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LandingUrl) {
		return nil, false
	}
	return o.LandingUrl, true
}

// IsSetLandingUrl returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetLandingUrl() bool {
	if o != nil && !IsNil(o.LandingUrl) {
		return true
	}

	return false
}

// SetLandingUrl gets a reference to the given string and assigns it to the LandingUrl field.
func (o *AddRolesRequestRole) SetLandingUrl(v string) {
	o.LandingUrl = &v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetRoleType() string {
	if o == nil || IsNil(o.RoleType) {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetRoleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoleType) {
		return nil, false
	}
	return o.RoleType, true
}

// IsSetRoleType returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetRoleType() bool {
	if o != nil && !IsNil(o.RoleType) {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *AddRolesRequestRole) SetRoleType(v string) {
	o.RoleType = &v
}

// GetBaseRoleId returns the BaseRoleId field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetBaseRoleId() int64 {
	if o == nil || IsNil(o.BaseRoleId) {
		var ret int64
		return ret
	}
	return *o.BaseRoleId
}

// GetBaseRoleIdOk returns a tuple with the BaseRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetBaseRoleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BaseRoleId) {
		return nil, false
	}
	return o.BaseRoleId, true
}

// IsSetBaseRoleId returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetBaseRoleId() bool {
	if o != nil && !IsNil(o.BaseRoleId) {
		return true
	}

	return false
}

// SetBaseRoleId gets a reference to the given int64 and assigns it to the BaseRoleId field.
func (o *AddRolesRequestRole) SetBaseRoleId(v int64) {
	o.BaseRoleId = &v
}

// GetMultitenant returns the Multitenant field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetMultitenant() bool {
	if o == nil || IsNil(o.Multitenant) {
		var ret bool
		return ret
	}
	return *o.Multitenant
}

// GetMultitenantOk returns a tuple with the Multitenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetMultitenantOk() (*bool, bool) {
	if o == nil || IsNil(o.Multitenant) {
		return nil, false
	}
	return o.Multitenant, true
}

// IsSetMultitenant returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetMultitenant() bool {
	if o != nil && !IsNil(o.Multitenant) {
		return true
	}

	return false
}

// SetMultitenant gets a reference to the given bool and assigns it to the Multitenant field.
func (o *AddRolesRequestRole) SetMultitenant(v bool) {
	o.Multitenant = &v
}

// GetMultitenantLocked returns the MultitenantLocked field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetMultitenantLocked() bool {
	if o == nil || IsNil(o.MultitenantLocked) {
		var ret bool
		return ret
	}
	return *o.MultitenantLocked
}

// GetMultitenantLockedOk returns a tuple with the MultitenantLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetMultitenantLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.MultitenantLocked) {
		return nil, false
	}
	return o.MultitenantLocked, true
}

// IsSetMultitenantLocked returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetMultitenantLocked() bool {
	if o != nil && !IsNil(o.MultitenantLocked) {
		return true
	}

	return false
}

// SetMultitenantLocked gets a reference to the given bool and assigns it to the MultitenantLocked field.
func (o *AddRolesRequestRole) SetMultitenantLocked(v bool) {
	o.MultitenantLocked = &v
}

// GetDefaultPersona returns the DefaultPersona field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetDefaultPersona() string {
	if o == nil || IsNil(o.DefaultPersona) {
		var ret string
		return ret
	}
	return *o.DefaultPersona
}

// GetDefaultPersonaOk returns a tuple with the DefaultPersona field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetDefaultPersonaOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPersona) {
		return nil, false
	}
	return o.DefaultPersona, true
}

// IsSetDefaultPersona returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetDefaultPersona() bool {
	if o != nil && !IsNil(o.DefaultPersona) {
		return true
	}

	return false
}

// SetDefaultPersona gets a reference to the given string and assigns it to the DefaultPersona field.
func (o *AddRolesRequestRole) SetDefaultPersona(v string) {
	o.DefaultPersona = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetPermissions() []AddRolesRequestRolePermissionsInner {
	if o == nil || IsNil(o.Permissions) {
		var ret []AddRolesRequestRolePermissionsInner
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetPermissionsOk() ([]AddRolesRequestRolePermissionsInner, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// IsSetPermissions returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []AddRolesRequestRolePermissionsInner and assigns it to the Permissions field.
func (o *AddRolesRequestRole) SetPermissions(v []AddRolesRequestRolePermissionsInner) {
	o.Permissions = v
}

// GetGlobalSiteAccess returns the GlobalSiteAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalSiteAccess() string {
	if o == nil || IsNil(o.GlobalSiteAccess) {
		var ret string
		return ret
	}
	return *o.GlobalSiteAccess
}

// GetGlobalSiteAccessOk returns a tuple with the GlobalSiteAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalSiteAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalSiteAccess) {
		return nil, false
	}
	return o.GlobalSiteAccess, true
}

// IsSetGlobalSiteAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalSiteAccess() bool {
	if o != nil && !IsNil(o.GlobalSiteAccess) {
		return true
	}

	return false
}

// SetGlobalSiteAccess gets a reference to the given string and assigns it to the GlobalSiteAccess field.
func (o *AddRolesRequestRole) SetGlobalSiteAccess(v string) {
	o.GlobalSiteAccess = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetSites() []AddRolesRequestRoleSitesInner {
	if o == nil || IsNil(o.Sites) {
		var ret []AddRolesRequestRoleSitesInner
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetSitesOk() ([]AddRolesRequestRoleSitesInner, bool) {
	if o == nil || IsNil(o.Sites) {
		return nil, false
	}
	return o.Sites, true
}

// IsSetSites returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetSites() bool {
	if o != nil && !IsNil(o.Sites) {
		return true
	}

	return false
}

// SetSites gets a reference to the given []AddRolesRequestRoleSitesInner and assigns it to the Sites field.
func (o *AddRolesRequestRole) SetSites(v []AddRolesRequestRoleSitesInner) {
	o.Sites = v
}

// GetGlobalZoneAccess returns the GlobalZoneAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalZoneAccess() string {
	if o == nil || IsNil(o.GlobalZoneAccess) {
		var ret string
		return ret
	}
	return *o.GlobalZoneAccess
}

// GetGlobalZoneAccessOk returns a tuple with the GlobalZoneAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalZoneAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalZoneAccess) {
		return nil, false
	}
	return o.GlobalZoneAccess, true
}

// IsSetGlobalZoneAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalZoneAccess() bool {
	if o != nil && !IsNil(o.GlobalZoneAccess) {
		return true
	}

	return false
}

// SetGlobalZoneAccess gets a reference to the given string and assigns it to the GlobalZoneAccess field.
func (o *AddRolesRequestRole) SetGlobalZoneAccess(v string) {
	o.GlobalZoneAccess = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetZones() []AddRolesRequestRoleZonesInner {
	if o == nil || IsNil(o.Zones) {
		var ret []AddRolesRequestRoleZonesInner
		return ret
	}
	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetZonesOk() ([]AddRolesRequestRoleZonesInner, bool) {
	if o == nil || IsNil(o.Zones) {
		return nil, false
	}
	return o.Zones, true
}

// IsSetZones returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetZones() bool {
	if o != nil && !IsNil(o.Zones) {
		return true
	}

	return false
}

// SetZones gets a reference to the given []AddRolesRequestRoleZonesInner and assigns it to the Zones field.
func (o *AddRolesRequestRole) SetZones(v []AddRolesRequestRoleZonesInner) {
	o.Zones = v
}

// GetGlobalInstanceTypeAccess returns the GlobalInstanceTypeAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalInstanceTypeAccess() string {
	if o == nil || IsNil(o.GlobalInstanceTypeAccess) {
		var ret string
		return ret
	}
	return *o.GlobalInstanceTypeAccess
}

// GetGlobalInstanceTypeAccessOk returns a tuple with the GlobalInstanceTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalInstanceTypeAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalInstanceTypeAccess) {
		return nil, false
	}
	return o.GlobalInstanceTypeAccess, true
}

// IsSetGlobalInstanceTypeAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalInstanceTypeAccess() bool {
	if o != nil && !IsNil(o.GlobalInstanceTypeAccess) {
		return true
	}

	return false
}

// SetGlobalInstanceTypeAccess gets a reference to the given string and assigns it to the GlobalInstanceTypeAccess field.
func (o *AddRolesRequestRole) SetGlobalInstanceTypeAccess(v string) {
	o.GlobalInstanceTypeAccess = &v
}

// GetInstanceTypes returns the InstanceTypes field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetInstanceTypes() []AddRolesRequestRoleInstanceTypesInner {
	if o == nil || IsNil(o.InstanceTypes) {
		var ret []AddRolesRequestRoleInstanceTypesInner
		return ret
	}
	return o.InstanceTypes
}

// GetInstanceTypesOk returns a tuple with the InstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetInstanceTypesOk() ([]AddRolesRequestRoleInstanceTypesInner, bool) {
	if o == nil || IsNil(o.InstanceTypes) {
		return nil, false
	}
	return o.InstanceTypes, true
}

// IsSetInstanceTypes returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetInstanceTypes() bool {
	if o != nil && !IsNil(o.InstanceTypes) {
		return true
	}

	return false
}

// SetInstanceTypes gets a reference to the given []AddRolesRequestRoleInstanceTypesInner and assigns it to the InstanceTypes field.
func (o *AddRolesRequestRole) SetInstanceTypes(v []AddRolesRequestRoleInstanceTypesInner) {
	o.InstanceTypes = v
}

// GetGlobalAppTemplateAccess returns the GlobalAppTemplateAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalAppTemplateAccess() string {
	if o == nil || IsNil(o.GlobalAppTemplateAccess) {
		var ret string
		return ret
	}
	return *o.GlobalAppTemplateAccess
}

// GetGlobalAppTemplateAccessOk returns a tuple with the GlobalAppTemplateAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalAppTemplateAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalAppTemplateAccess) {
		return nil, false
	}
	return o.GlobalAppTemplateAccess, true
}

// IsSetGlobalAppTemplateAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalAppTemplateAccess() bool {
	if o != nil && !IsNil(o.GlobalAppTemplateAccess) {
		return true
	}

	return false
}

// SetGlobalAppTemplateAccess gets a reference to the given string and assigns it to the GlobalAppTemplateAccess field.
func (o *AddRolesRequestRole) SetGlobalAppTemplateAccess(v string) {
	o.GlobalAppTemplateAccess = &v
}

// GetAppTemplates returns the AppTemplates field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetAppTemplates() []AddRolesRequestRoleAppTemplatesInner {
	if o == nil || IsNil(o.AppTemplates) {
		var ret []AddRolesRequestRoleAppTemplatesInner
		return ret
	}
	return o.AppTemplates
}

// GetAppTemplatesOk returns a tuple with the AppTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetAppTemplatesOk() ([]AddRolesRequestRoleAppTemplatesInner, bool) {
	if o == nil || IsNil(o.AppTemplates) {
		return nil, false
	}
	return o.AppTemplates, true
}

// IsSetAppTemplates returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetAppTemplates() bool {
	if o != nil && !IsNil(o.AppTemplates) {
		return true
	}

	return false
}

// SetAppTemplates gets a reference to the given []AddRolesRequestRoleAppTemplatesInner and assigns it to the AppTemplates field.
func (o *AddRolesRequestRole) SetAppTemplates(v []AddRolesRequestRoleAppTemplatesInner) {
	o.AppTemplates = v
}

// GetGlobalCatalogItemTypeAccess returns the GlobalCatalogItemTypeAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalCatalogItemTypeAccess() string {
	if o == nil || IsNil(o.GlobalCatalogItemTypeAccess) {
		var ret string
		return ret
	}
	return *o.GlobalCatalogItemTypeAccess
}

// GetGlobalCatalogItemTypeAccessOk returns a tuple with the GlobalCatalogItemTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalCatalogItemTypeAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalCatalogItemTypeAccess) {
		return nil, false
	}
	return o.GlobalCatalogItemTypeAccess, true
}

// IsSetGlobalCatalogItemTypeAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalCatalogItemTypeAccess() bool {
	if o != nil && !IsNil(o.GlobalCatalogItemTypeAccess) {
		return true
	}

	return false
}

// SetGlobalCatalogItemTypeAccess gets a reference to the given string and assigns it to the GlobalCatalogItemTypeAccess field.
func (o *AddRolesRequestRole) SetGlobalCatalogItemTypeAccess(v string) {
	o.GlobalCatalogItemTypeAccess = &v
}

// GetCatalogItemTypes returns the CatalogItemTypes field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetCatalogItemTypes() []AddRolesRequestRoleCatalogItemTypesInner {
	if o == nil || IsNil(o.CatalogItemTypes) {
		var ret []AddRolesRequestRoleCatalogItemTypesInner
		return ret
	}
	return o.CatalogItemTypes
}

// GetCatalogItemTypesOk returns a tuple with the CatalogItemTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetCatalogItemTypesOk() ([]AddRolesRequestRoleCatalogItemTypesInner, bool) {
	if o == nil || IsNil(o.CatalogItemTypes) {
		return nil, false
	}
	return o.CatalogItemTypes, true
}

// IsSetCatalogItemTypes returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetCatalogItemTypes() bool {
	if o != nil && !IsNil(o.CatalogItemTypes) {
		return true
	}

	return false
}

// SetCatalogItemTypes gets a reference to the given []AddRolesRequestRoleCatalogItemTypesInner and assigns it to the CatalogItemTypes field.
func (o *AddRolesRequestRole) SetCatalogItemTypes(v []AddRolesRequestRoleCatalogItemTypesInner) {
	o.CatalogItemTypes = v
}

// GetGlobalPersonaAccess returns the GlobalPersonaAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalPersonaAccess() string {
	if o == nil || IsNil(o.GlobalPersonaAccess) {
		var ret string
		return ret
	}
	return *o.GlobalPersonaAccess
}

// GetGlobalPersonaAccessOk returns a tuple with the GlobalPersonaAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalPersonaAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalPersonaAccess) {
		return nil, false
	}
	return o.GlobalPersonaAccess, true
}

// IsSetGlobalPersonaAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalPersonaAccess() bool {
	if o != nil && !IsNil(o.GlobalPersonaAccess) {
		return true
	}

	return false
}

// SetGlobalPersonaAccess gets a reference to the given string and assigns it to the GlobalPersonaAccess field.
func (o *AddRolesRequestRole) SetGlobalPersonaAccess(v string) {
	o.GlobalPersonaAccess = &v
}

// GetPersonas returns the Personas field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetPersonas() []AddRolesRequestRolePersonasInner {
	if o == nil || IsNil(o.Personas) {
		var ret []AddRolesRequestRolePersonasInner
		return ret
	}
	return o.Personas
}

// GetPersonasOk returns a tuple with the Personas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetPersonasOk() ([]AddRolesRequestRolePersonasInner, bool) {
	if o == nil || IsNil(o.Personas) {
		return nil, false
	}
	return o.Personas, true
}

// IsSetPersonas returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetPersonas() bool {
	if o != nil && !IsNil(o.Personas) {
		return true
	}

	return false
}

// SetPersonas gets a reference to the given []AddRolesRequestRolePersonasInner and assigns it to the Personas field.
func (o *AddRolesRequestRole) SetPersonas(v []AddRolesRequestRolePersonasInner) {
	o.Personas = v
}

// GetGlobalVdiPoolAccess returns the GlobalVdiPoolAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalVdiPoolAccess() string {
	if o == nil || IsNil(o.GlobalVdiPoolAccess) {
		var ret string
		return ret
	}
	return *o.GlobalVdiPoolAccess
}

// GetGlobalVdiPoolAccessOk returns a tuple with the GlobalVdiPoolAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalVdiPoolAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalVdiPoolAccess) {
		return nil, false
	}
	return o.GlobalVdiPoolAccess, true
}

// IsSetGlobalVdiPoolAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalVdiPoolAccess() bool {
	if o != nil && !IsNil(o.GlobalVdiPoolAccess) {
		return true
	}

	return false
}

// SetGlobalVdiPoolAccess gets a reference to the given string and assigns it to the GlobalVdiPoolAccess field.
func (o *AddRolesRequestRole) SetGlobalVdiPoolAccess(v string) {
	o.GlobalVdiPoolAccess = &v
}

// GetVdiPools returns the VdiPools field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetVdiPools() []AddRolesRequestRoleVdiPoolsInner {
	if o == nil || IsNil(o.VdiPools) {
		var ret []AddRolesRequestRoleVdiPoolsInner
		return ret
	}
	return o.VdiPools
}

// GetVdiPoolsOk returns a tuple with the VdiPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetVdiPoolsOk() ([]AddRolesRequestRoleVdiPoolsInner, bool) {
	if o == nil || IsNil(o.VdiPools) {
		return nil, false
	}
	return o.VdiPools, true
}

// IsSetVdiPools returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetVdiPools() bool {
	if o != nil && !IsNil(o.VdiPools) {
		return true
	}

	return false
}

// SetVdiPools gets a reference to the given []AddRolesRequestRoleVdiPoolsInner and assigns it to the VdiPools field.
func (o *AddRolesRequestRole) SetVdiPools(v []AddRolesRequestRoleVdiPoolsInner) {
	o.VdiPools = v
}

// GetGlobalReportTypeAccess returns the GlobalReportTypeAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalReportTypeAccess() string {
	if o == nil || IsNil(o.GlobalReportTypeAccess) {
		var ret string
		return ret
	}
	return *o.GlobalReportTypeAccess
}

// GetGlobalReportTypeAccessOk returns a tuple with the GlobalReportTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalReportTypeAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalReportTypeAccess) {
		return nil, false
	}
	return o.GlobalReportTypeAccess, true
}

// IsSetGlobalReportTypeAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalReportTypeAccess() bool {
	if o != nil && !IsNil(o.GlobalReportTypeAccess) {
		return true
	}

	return false
}

// SetGlobalReportTypeAccess gets a reference to the given string and assigns it to the GlobalReportTypeAccess field.
func (o *AddRolesRequestRole) SetGlobalReportTypeAccess(v string) {
	o.GlobalReportTypeAccess = &v
}

// GetReportTypes returns the ReportTypes field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetReportTypes() []AddRolesRequestRoleReportTypesInner {
	if o == nil || IsNil(o.ReportTypes) {
		var ret []AddRolesRequestRoleReportTypesInner
		return ret
	}
	return o.ReportTypes
}

// GetReportTypesOk returns a tuple with the ReportTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetReportTypesOk() ([]AddRolesRequestRoleReportTypesInner, bool) {
	if o == nil || IsNil(o.ReportTypes) {
		return nil, false
	}
	return o.ReportTypes, true
}

// IsSetReportTypes returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetReportTypes() bool {
	if o != nil && !IsNil(o.ReportTypes) {
		return true
	}

	return false
}

// SetReportTypes gets a reference to the given []AddRolesRequestRoleReportTypesInner and assigns it to the ReportTypes field.
func (o *AddRolesRequestRole) SetReportTypes(v []AddRolesRequestRoleReportTypesInner) {
	o.ReportTypes = v
}

// GetGlobalTaskAccess returns the GlobalTaskAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalTaskAccess() string {
	if o == nil || IsNil(o.GlobalTaskAccess) {
		var ret string
		return ret
	}
	return *o.GlobalTaskAccess
}

// GetGlobalTaskAccessOk returns a tuple with the GlobalTaskAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalTaskAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalTaskAccess) {
		return nil, false
	}
	return o.GlobalTaskAccess, true
}

// IsSetGlobalTaskAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalTaskAccess() bool {
	if o != nil && !IsNil(o.GlobalTaskAccess) {
		return true
	}

	return false
}

// SetGlobalTaskAccess gets a reference to the given string and assigns it to the GlobalTaskAccess field.
func (o *AddRolesRequestRole) SetGlobalTaskAccess(v string) {
	o.GlobalTaskAccess = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetTasks() []AddRolesRequestRoleTasksInner {
	if o == nil || IsNil(o.Tasks) {
		var ret []AddRolesRequestRoleTasksInner
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetTasksOk() ([]AddRolesRequestRoleTasksInner, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// IsSetTasks returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []AddRolesRequestRoleTasksInner and assigns it to the Tasks field.
func (o *AddRolesRequestRole) SetTasks(v []AddRolesRequestRoleTasksInner) {
	o.Tasks = v
}

// GetGlobalTaskSetAccess returns the GlobalTaskSetAccess field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetGlobalTaskSetAccess() string {
	if o == nil || IsNil(o.GlobalTaskSetAccess) {
		var ret string
		return ret
	}
	return *o.GlobalTaskSetAccess
}

// GetGlobalTaskSetAccessOk returns a tuple with the GlobalTaskSetAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetGlobalTaskSetAccessOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalTaskSetAccess) {
		return nil, false
	}
	return o.GlobalTaskSetAccess, true
}

// IsSetGlobalTaskSetAccess returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetGlobalTaskSetAccess() bool {
	if o != nil && !IsNil(o.GlobalTaskSetAccess) {
		return true
	}

	return false
}

// SetGlobalTaskSetAccess gets a reference to the given string and assigns it to the GlobalTaskSetAccess field.
func (o *AddRolesRequestRole) SetGlobalTaskSetAccess(v string) {
	o.GlobalTaskSetAccess = &v
}

// GetTaskSets returns the TaskSets field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetTaskSets() []AddRolesRequestRoleTaskSetsInner {
	if o == nil || IsNil(o.TaskSets) {
		var ret []AddRolesRequestRoleTaskSetsInner
		return ret
	}
	return o.TaskSets
}

// GetTaskSetsOk returns a tuple with the TaskSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetTaskSetsOk() ([]AddRolesRequestRoleTaskSetsInner, bool) {
	if o == nil || IsNil(o.TaskSets) {
		return nil, false
	}
	return o.TaskSets, true
}

// IsSetTaskSets returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetTaskSets() bool {
	if o != nil && !IsNil(o.TaskSets) {
		return true
	}

	return false
}

// SetTaskSets gets a reference to the given []AddRolesRequestRoleTaskSetsInner and assigns it to the TaskSets field.
func (o *AddRolesRequestRole) SetTaskSets(v []AddRolesRequestRoleTaskSetsInner) {
	o.TaskSets = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *AddRolesRequestRole) GetOwner() int64 {
	if o == nil || IsNil(o.Owner) {
		var ret int64
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRolesRequestRole) GetOwnerOk() (*int64, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// IsSetOwner returns a boolean if a field has been set.
func (o *AddRolesRequestRole) IsSetOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given int64 and assigns it to the Owner field.
func (o *AddRolesRequestRole) SetOwner(v int64) {
	o.Owner = &v
}

func (o AddRolesRequestRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddRolesRequestRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authority"] = o.Authority
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LandingUrl) {
		toSerialize["landingUrl"] = o.LandingUrl
	}
	if !IsNil(o.RoleType) {
		toSerialize["roleType"] = o.RoleType
	}
	if !IsNil(o.BaseRoleId) {
		toSerialize["baseRoleId"] = o.BaseRoleId
	}
	if !IsNil(o.Multitenant) {
		toSerialize["multitenant"] = o.Multitenant
	}
	if !IsNil(o.MultitenantLocked) {
		toSerialize["multitenantLocked"] = o.MultitenantLocked
	}
	if !IsNil(o.DefaultPersona) {
		toSerialize["defaultPersona"] = o.DefaultPersona
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.GlobalSiteAccess) {
		toSerialize["globalSiteAccess"] = o.GlobalSiteAccess
	}
	if !IsNil(o.Sites) {
		toSerialize["sites"] = o.Sites
	}
	if !IsNil(o.GlobalZoneAccess) {
		toSerialize["globalZoneAccess"] = o.GlobalZoneAccess
	}
	if !IsNil(o.Zones) {
		toSerialize["zones"] = o.Zones
	}
	if !IsNil(o.GlobalInstanceTypeAccess) {
		toSerialize["globalInstanceTypeAccess"] = o.GlobalInstanceTypeAccess
	}
	if !IsNil(o.InstanceTypes) {
		toSerialize["instanceTypes"] = o.InstanceTypes
	}
	if !IsNil(o.GlobalAppTemplateAccess) {
		toSerialize["globalAppTemplateAccess"] = o.GlobalAppTemplateAccess
	}
	if !IsNil(o.AppTemplates) {
		toSerialize["appTemplates"] = o.AppTemplates
	}
	if !IsNil(o.GlobalCatalogItemTypeAccess) {
		toSerialize["globalCatalogItemTypeAccess"] = o.GlobalCatalogItemTypeAccess
	}
	if !IsNil(o.CatalogItemTypes) {
		toSerialize["catalogItemTypes"] = o.CatalogItemTypes
	}
	if !IsNil(o.GlobalPersonaAccess) {
		toSerialize["globalPersonaAccess"] = o.GlobalPersonaAccess
	}
	if !IsNil(o.Personas) {
		toSerialize["personas"] = o.Personas
	}
	if !IsNil(o.GlobalVdiPoolAccess) {
		toSerialize["globalVdiPoolAccess"] = o.GlobalVdiPoolAccess
	}
	if !IsNil(o.VdiPools) {
		toSerialize["vdiPools"] = o.VdiPools
	}
	if !IsNil(o.GlobalReportTypeAccess) {
		toSerialize["globalReportTypeAccess"] = o.GlobalReportTypeAccess
	}
	if !IsNil(o.ReportTypes) {
		toSerialize["reportTypes"] = o.ReportTypes
	}
	if !IsNil(o.GlobalTaskAccess) {
		toSerialize["globalTaskAccess"] = o.GlobalTaskAccess
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.GlobalTaskSetAccess) {
		toSerialize["globalTaskSetAccess"] = o.GlobalTaskSetAccess
	}
	if !IsNil(o.TaskSets) {
		toSerialize["taskSets"] = o.TaskSets
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

func (o *AddRolesRequestRole) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authority",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddRolesRequestRole := _AddRolesRequestRole{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddRolesRequestRole)

	if err != nil {
		return err
	}

	*o = AddRolesRequestRole(varAddRolesRequestRole)

	return err
}

type NullableAddRolesRequestRole struct {
	value *AddRolesRequestRole
	isSet bool
}

func (v NullableAddRolesRequestRole) Get() *AddRolesRequestRole {
	return v.value
}

func (v *NullableAddRolesRequestRole) Set(val *AddRolesRequestRole) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRolesRequestRole) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRolesRequestRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRolesRequestRole(val *AddRolesRequestRole) *NullableAddRolesRequestRole {
	return &NullableAddRolesRequestRole{value: val, isSet: true}
}

func (v NullableAddRolesRequestRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRolesRequestRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


