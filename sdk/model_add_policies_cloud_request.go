/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddPoliciesCloudRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPoliciesCloudRequest{}

// AddPoliciesCloudRequest struct for AddPoliciesCloudRequest
type AddPoliciesCloudRequest struct {
	Policy AddPoliciesCloudRequestPolicy `json:"policy"`
}

type _AddPoliciesCloudRequest AddPoliciesCloudRequest

// NewAddPoliciesCloudRequest instantiates a new AddPoliciesCloudRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPoliciesCloudRequest(policy AddPoliciesCloudRequestPolicy) *AddPoliciesCloudRequest {
	this := AddPoliciesCloudRequest{}
	this.Policy = policy
	return &this
}

// NewAddPoliciesCloudRequestWithDefaults instantiates a new AddPoliciesCloudRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPoliciesCloudRequestWithDefaults() *AddPoliciesCloudRequest {
	this := AddPoliciesCloudRequest{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *AddPoliciesCloudRequest) GetPolicy() AddPoliciesCloudRequestPolicy {
	if o == nil {
		var ret AddPoliciesCloudRequestPolicy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *AddPoliciesCloudRequest) GetPolicyOk() (*AddPoliciesCloudRequestPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *AddPoliciesCloudRequest) SetPolicy(v AddPoliciesCloudRequestPolicy) {
	o.Policy = v
}

func (o AddPoliciesCloudRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPoliciesCloudRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy"] = o.Policy
	return toSerialize, nil
}

func (o *AddPoliciesCloudRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddPoliciesCloudRequest := _AddPoliciesCloudRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddPoliciesCloudRequest)

	if err != nil {
		return err
	}

	*o = AddPoliciesCloudRequest(varAddPoliciesCloudRequest)

	return err
}

type NullableAddPoliciesCloudRequest struct {
	value *AddPoliciesCloudRequest
	isSet bool
}

func (v NullableAddPoliciesCloudRequest) Get() *AddPoliciesCloudRequest {
	return v.value
}

func (v *NullableAddPoliciesCloudRequest) Set(val *AddPoliciesCloudRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPoliciesCloudRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPoliciesCloudRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPoliciesCloudRequest(val *AddPoliciesCloudRequest) *NullableAddPoliciesCloudRequest {
	return &NullableAddPoliciesCloudRequest{value: val, isSet: true}
}

func (v NullableAddPoliciesCloudRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPoliciesCloudRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


