/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddStorageServers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddStorageServers200Response{}

// AddStorageServers200Response struct for AddStorageServers200Response
type AddStorageServers200Response struct {
	StorageServer *ListStorageServers200ResponseAllOfStorageServersInner `json:"storageServer,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddStorageServers200Response instantiates a new AddStorageServers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddStorageServers200Response() *AddStorageServers200Response {
	this := AddStorageServers200Response{}
	return &this
}

// NewAddStorageServers200ResponseWithDefaults instantiates a new AddStorageServers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddStorageServers200ResponseWithDefaults() *AddStorageServers200Response {
	this := AddStorageServers200Response{}
	return &this
}

// GetStorageServer returns the StorageServer field value if set, zero value otherwise.
func (o *AddStorageServers200Response) GetStorageServer() ListStorageServers200ResponseAllOfStorageServersInner {
	if o == nil || IsNil(o.StorageServer) {
		var ret ListStorageServers200ResponseAllOfStorageServersInner
		return ret
	}
	return *o.StorageServer
}

// GetStorageServerOk returns a tuple with the StorageServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServers200Response) GetStorageServerOk() (*ListStorageServers200ResponseAllOfStorageServersInner, bool) {
	if o == nil || IsNil(o.StorageServer) {
		return nil, false
	}
	return o.StorageServer, true
}

// IsSetStorageServer returns a boolean if a field has been set.
func (o *AddStorageServers200Response) IsSetStorageServer() bool {
	if o != nil && !IsNil(o.StorageServer) {
		return true
	}

	return false
}

// SetStorageServer gets a reference to the given ListStorageServers200ResponseAllOfStorageServersInner and assigns it to the StorageServer field.
func (o *AddStorageServers200Response) SetStorageServer(v ListStorageServers200ResponseAllOfStorageServersInner) {
	o.StorageServer = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddStorageServers200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStorageServers200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddStorageServers200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddStorageServers200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddStorageServers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddStorageServers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageServer) {
		toSerialize["storageServer"] = o.StorageServer
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddStorageServers200Response struct {
	value *AddStorageServers200Response
	isSet bool
}

func (v NullableAddStorageServers200Response) Get() *AddStorageServers200Response {
	return v.value
}

func (v *NullableAddStorageServers200Response) Set(val *AddStorageServers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddStorageServers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddStorageServers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddStorageServers200Response(val *AddStorageServers200Response) *NullableAddStorageServers200Response {
	return &NullableAddStorageServers200Response{value: val, isSet: true}
}

func (v NullableAddStorageServers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddStorageServers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


