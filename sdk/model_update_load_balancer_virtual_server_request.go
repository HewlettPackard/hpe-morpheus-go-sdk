/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateLoadBalancerVirtualServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLoadBalancerVirtualServerRequest{}

// UpdateLoadBalancerVirtualServerRequest struct for UpdateLoadBalancerVirtualServerRequest
type UpdateLoadBalancerVirtualServerRequest struct {
	LoadBalancerInstance *UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance `json:"loadBalancerInstance,omitempty"`
}

// NewUpdateLoadBalancerVirtualServerRequest instantiates a new UpdateLoadBalancerVirtualServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLoadBalancerVirtualServerRequest() *UpdateLoadBalancerVirtualServerRequest {
	this := UpdateLoadBalancerVirtualServerRequest{}
	return &this
}

// NewUpdateLoadBalancerVirtualServerRequestWithDefaults instantiates a new UpdateLoadBalancerVirtualServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLoadBalancerVirtualServerRequestWithDefaults() *UpdateLoadBalancerVirtualServerRequest {
	this := UpdateLoadBalancerVirtualServerRequest{}
	return &this
}

// GetLoadBalancerInstance returns the LoadBalancerInstance field value if set, zero value otherwise.
func (o *UpdateLoadBalancerVirtualServerRequest) GetLoadBalancerInstance() UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance {
	if o == nil || IsNil(o.LoadBalancerInstance) {
		var ret UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance
		return ret
	}
	return *o.LoadBalancerInstance
}

// GetLoadBalancerInstanceOk returns a tuple with the LoadBalancerInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoadBalancerVirtualServerRequest) GetLoadBalancerInstanceOk() (*UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance, bool) {
	if o == nil || IsNil(o.LoadBalancerInstance) {
		return nil, false
	}
	return o.LoadBalancerInstance, true
}

// IsSetLoadBalancerInstance returns a boolean if a field has been set.
func (o *UpdateLoadBalancerVirtualServerRequest) IsSetLoadBalancerInstance() bool {
	if o != nil && !IsNil(o.LoadBalancerInstance) {
		return true
	}

	return false
}

// SetLoadBalancerInstance gets a reference to the given UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance and assigns it to the LoadBalancerInstance field.
func (o *UpdateLoadBalancerVirtualServerRequest) SetLoadBalancerInstance(v UpdateLoadBalancerVirtualServerRequestLoadBalancerInstance) {
	o.LoadBalancerInstance = &v
}

func (o UpdateLoadBalancerVirtualServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLoadBalancerVirtualServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancerInstance) {
		toSerialize["loadBalancerInstance"] = o.LoadBalancerInstance
	}
	return toSerialize, nil
}

type NullableUpdateLoadBalancerVirtualServerRequest struct {
	value *UpdateLoadBalancerVirtualServerRequest
	isSet bool
}

func (v NullableUpdateLoadBalancerVirtualServerRequest) Get() *UpdateLoadBalancerVirtualServerRequest {
	return v.value
}

func (v *NullableUpdateLoadBalancerVirtualServerRequest) Set(val *UpdateLoadBalancerVirtualServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLoadBalancerVirtualServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLoadBalancerVirtualServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLoadBalancerVirtualServerRequest(val *UpdateLoadBalancerVirtualServerRequest) *NullableUpdateLoadBalancerVirtualServerRequest {
	return &NullableUpdateLoadBalancerVirtualServerRequest{value: val, isSet: true}
}

func (v NullableUpdateLoadBalancerVirtualServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLoadBalancerVirtualServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


