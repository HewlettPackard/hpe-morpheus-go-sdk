/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddOsTypeImageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOsTypeImageRequest{}

// AddOsTypeImageRequest struct for AddOsTypeImageRequest
type AddOsTypeImageRequest struct {
	OsTypeImage *AddOsTypeImageRequestOsTypeImage `json:"osTypeImage,omitempty"`
}

// NewAddOsTypeImageRequest instantiates a new AddOsTypeImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOsTypeImageRequest() *AddOsTypeImageRequest {
	this := AddOsTypeImageRequest{}
	return &this
}

// NewAddOsTypeImageRequestWithDefaults instantiates a new AddOsTypeImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOsTypeImageRequestWithDefaults() *AddOsTypeImageRequest {
	this := AddOsTypeImageRequest{}
	return &this
}

// GetOsTypeImage returns the OsTypeImage field value if set, zero value otherwise.
func (o *AddOsTypeImageRequest) GetOsTypeImage() AddOsTypeImageRequestOsTypeImage {
	if o == nil || IsNil(o.OsTypeImage) {
		var ret AddOsTypeImageRequestOsTypeImage
		return ret
	}
	return *o.OsTypeImage
}

// GetOsTypeImageOk returns a tuple with the OsTypeImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOsTypeImageRequest) GetOsTypeImageOk() (*AddOsTypeImageRequestOsTypeImage, bool) {
	if o == nil || IsNil(o.OsTypeImage) {
		return nil, false
	}
	return o.OsTypeImage, true
}

// IsSetOsTypeImage returns a boolean if a field has been set.
func (o *AddOsTypeImageRequest) IsSetOsTypeImage() bool {
	if o != nil && !IsNil(o.OsTypeImage) {
		return true
	}

	return false
}

// SetOsTypeImage gets a reference to the given AddOsTypeImageRequestOsTypeImage and assigns it to the OsTypeImage field.
func (o *AddOsTypeImageRequest) SetOsTypeImage(v AddOsTypeImageRequestOsTypeImage) {
	o.OsTypeImage = &v
}

func (o AddOsTypeImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOsTypeImageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsTypeImage) {
		toSerialize["osTypeImage"] = o.OsTypeImage
	}
	return toSerialize, nil
}

type NullableAddOsTypeImageRequest struct {
	value *AddOsTypeImageRequest
	isSet bool
}

func (v NullableAddOsTypeImageRequest) Get() *AddOsTypeImageRequest {
	return v.value
}

func (v *NullableAddOsTypeImageRequest) Set(val *AddOsTypeImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOsTypeImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOsTypeImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOsTypeImageRequest(val *AddOsTypeImageRequest) *NullableAddOsTypeImageRequest {
	return &NullableAddOsTypeImageRequest{value: val, isSet: true}
}

func (v NullableAddOsTypeImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOsTypeImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


