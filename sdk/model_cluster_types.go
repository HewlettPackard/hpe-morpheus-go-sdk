/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ClusterTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterTypes{}

// ClusterTypes struct for ClusterTypes
type ClusterTypes struct {
	Id *int64 `json:"id,omitempty"`
	DeployTargetService *string `json:"deployTargetService,omitempty"`
	ShortName *string `json:"shortName,omitempty"`
	ProviderType *string `json:"providerType,omitempty"`
	Code *string `json:"code,omitempty"`
	HostService *string `json:"hostService,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	HasMasters *bool `json:"hasMasters,omitempty"`
	HasWorkers *bool `json:"hasWorkers,omitempty"`
	ViewSet *string `json:"viewSet,omitempty"`
	ImageCode *string `json:"imageCode,omitempty"`
	KubeCtlLocal *bool `json:"kubeCtlLocal,omitempty"`
	HasDatastore *bool `json:"hasDatastore,omitempty"`
	SupportsCloudScaling *bool `json:"supportsCloudScaling,omitempty"`
	Name *string `json:"name,omitempty"`
	HasDefaultDataDisk *bool `json:"hasDefaultDataDisk,omitempty"`
	CanManage *bool `json:"canManage,omitempty"`
	HasCluster *bool `json:"hasCluster,omitempty"`
	Description *string `json:"description,omitempty"`
	OptionTypes []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner `json:"optionTypes,omitempty"`
	ControllerTypes []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner `json:"controllerTypes,omitempty"`
	WorkerTypes []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner `json:"workerTypes,omitempty"`
}

// NewClusterTypes instantiates a new ClusterTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterTypes() *ClusterTypes {
	this := ClusterTypes{}
	return &this
}

// NewClusterTypesWithDefaults instantiates a new ClusterTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterTypesWithDefaults() *ClusterTypes {
	this := ClusterTypes{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterTypes) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterTypes) SetId(v int64) {
	o.Id = &v
}

// GetDeployTargetService returns the DeployTargetService field value if set, zero value otherwise.
func (o *ClusterTypes) GetDeployTargetService() string {
	if o == nil || IsNil(o.DeployTargetService) {
		var ret string
		return ret
	}
	return *o.DeployTargetService
}

// GetDeployTargetServiceOk returns a tuple with the DeployTargetService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetDeployTargetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.DeployTargetService) {
		return nil, false
	}
	return o.DeployTargetService, true
}

// IsSetDeployTargetService returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetDeployTargetService() bool {
	if o != nil && !IsNil(o.DeployTargetService) {
		return true
	}

	return false
}

// SetDeployTargetService gets a reference to the given string and assigns it to the DeployTargetService field.
func (o *ClusterTypes) SetDeployTargetService(v string) {
	o.DeployTargetService = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ClusterTypes) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// IsSetShortName returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ClusterTypes) SetShortName(v string) {
	o.ShortName = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *ClusterTypes) GetProviderType() string {
	if o == nil || IsNil(o.ProviderType) {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetProviderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderType) {
		return nil, false
	}
	return o.ProviderType, true
}

// IsSetProviderType returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetProviderType() bool {
	if o != nil && !IsNil(o.ProviderType) {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *ClusterTypes) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClusterTypes) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ClusterTypes) SetCode(v string) {
	o.Code = &v
}

// GetHostService returns the HostService field value if set, zero value otherwise.
func (o *ClusterTypes) GetHostService() string {
	if o == nil || IsNil(o.HostService) {
		var ret string
		return ret
	}
	return *o.HostService
}

// GetHostServiceOk returns a tuple with the HostService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHostServiceOk() (*string, bool) {
	if o == nil || IsNil(o.HostService) {
		return nil, false
	}
	return o.HostService, true
}

// IsSetHostService returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHostService() bool {
	if o != nil && !IsNil(o.HostService) {
		return true
	}

	return false
}

// SetHostService gets a reference to the given string and assigns it to the HostService field.
func (o *ClusterTypes) SetHostService(v string) {
	o.HostService = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *ClusterTypes) GetManaged() bool {
	if o == nil || IsNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// IsSetManaged returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetManaged() bool {
	if o != nil && !IsNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *ClusterTypes) SetManaged(v bool) {
	o.Managed = &v
}

// GetHasMasters returns the HasMasters field value if set, zero value otherwise.
func (o *ClusterTypes) GetHasMasters() bool {
	if o == nil || IsNil(o.HasMasters) {
		var ret bool
		return ret
	}
	return *o.HasMasters
}

// GetHasMastersOk returns a tuple with the HasMasters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHasMastersOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMasters) {
		return nil, false
	}
	return o.HasMasters, true
}

// IsSetHasMasters returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHasMasters() bool {
	if o != nil && !IsNil(o.HasMasters) {
		return true
	}

	return false
}

// SetHasMasters gets a reference to the given bool and assigns it to the HasMasters field.
func (o *ClusterTypes) SetHasMasters(v bool) {
	o.HasMasters = &v
}

// GetHasWorkers returns the HasWorkers field value if set, zero value otherwise.
func (o *ClusterTypes) GetHasWorkers() bool {
	if o == nil || IsNil(o.HasWorkers) {
		var ret bool
		return ret
	}
	return *o.HasWorkers
}

// GetHasWorkersOk returns a tuple with the HasWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHasWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.HasWorkers) {
		return nil, false
	}
	return o.HasWorkers, true
}

// IsSetHasWorkers returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHasWorkers() bool {
	if o != nil && !IsNil(o.HasWorkers) {
		return true
	}

	return false
}

// SetHasWorkers gets a reference to the given bool and assigns it to the HasWorkers field.
func (o *ClusterTypes) SetHasWorkers(v bool) {
	o.HasWorkers = &v
}

// GetViewSet returns the ViewSet field value if set, zero value otherwise.
func (o *ClusterTypes) GetViewSet() string {
	if o == nil || IsNil(o.ViewSet) {
		var ret string
		return ret
	}
	return *o.ViewSet
}

// GetViewSetOk returns a tuple with the ViewSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetViewSetOk() (*string, bool) {
	if o == nil || IsNil(o.ViewSet) {
		return nil, false
	}
	return o.ViewSet, true
}

// IsSetViewSet returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetViewSet() bool {
	if o != nil && !IsNil(o.ViewSet) {
		return true
	}

	return false
}

// SetViewSet gets a reference to the given string and assigns it to the ViewSet field.
func (o *ClusterTypes) SetViewSet(v string) {
	o.ViewSet = &v
}

// GetImageCode returns the ImageCode field value if set, zero value otherwise.
func (o *ClusterTypes) GetImageCode() string {
	if o == nil || IsNil(o.ImageCode) {
		var ret string
		return ret
	}
	return *o.ImageCode
}

// GetImageCodeOk returns a tuple with the ImageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetImageCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ImageCode) {
		return nil, false
	}
	return o.ImageCode, true
}

// IsSetImageCode returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetImageCode() bool {
	if o != nil && !IsNil(o.ImageCode) {
		return true
	}

	return false
}

// SetImageCode gets a reference to the given string and assigns it to the ImageCode field.
func (o *ClusterTypes) SetImageCode(v string) {
	o.ImageCode = &v
}

// GetKubeCtlLocal returns the KubeCtlLocal field value if set, zero value otherwise.
func (o *ClusterTypes) GetKubeCtlLocal() bool {
	if o == nil || IsNil(o.KubeCtlLocal) {
		var ret bool
		return ret
	}
	return *o.KubeCtlLocal
}

// GetKubeCtlLocalOk returns a tuple with the KubeCtlLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetKubeCtlLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.KubeCtlLocal) {
		return nil, false
	}
	return o.KubeCtlLocal, true
}

// IsSetKubeCtlLocal returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetKubeCtlLocal() bool {
	if o != nil && !IsNil(o.KubeCtlLocal) {
		return true
	}

	return false
}

// SetKubeCtlLocal gets a reference to the given bool and assigns it to the KubeCtlLocal field.
func (o *ClusterTypes) SetKubeCtlLocal(v bool) {
	o.KubeCtlLocal = &v
}

// GetHasDatastore returns the HasDatastore field value if set, zero value otherwise.
func (o *ClusterTypes) GetHasDatastore() bool {
	if o == nil || IsNil(o.HasDatastore) {
		var ret bool
		return ret
	}
	return *o.HasDatastore
}

// GetHasDatastoreOk returns a tuple with the HasDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHasDatastoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDatastore) {
		return nil, false
	}
	return o.HasDatastore, true
}

// IsSetHasDatastore returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHasDatastore() bool {
	if o != nil && !IsNil(o.HasDatastore) {
		return true
	}

	return false
}

// SetHasDatastore gets a reference to the given bool and assigns it to the HasDatastore field.
func (o *ClusterTypes) SetHasDatastore(v bool) {
	o.HasDatastore = &v
}

// GetSupportsCloudScaling returns the SupportsCloudScaling field value if set, zero value otherwise.
func (o *ClusterTypes) GetSupportsCloudScaling() bool {
	if o == nil || IsNil(o.SupportsCloudScaling) {
		var ret bool
		return ret
	}
	return *o.SupportsCloudScaling
}

// GetSupportsCloudScalingOk returns a tuple with the SupportsCloudScaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetSupportsCloudScalingOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsCloudScaling) {
		return nil, false
	}
	return o.SupportsCloudScaling, true
}

// IsSetSupportsCloudScaling returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetSupportsCloudScaling() bool {
	if o != nil && !IsNil(o.SupportsCloudScaling) {
		return true
	}

	return false
}

// SetSupportsCloudScaling gets a reference to the given bool and assigns it to the SupportsCloudScaling field.
func (o *ClusterTypes) SetSupportsCloudScaling(v bool) {
	o.SupportsCloudScaling = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterTypes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterTypes) SetName(v string) {
	o.Name = &v
}

// GetHasDefaultDataDisk returns the HasDefaultDataDisk field value if set, zero value otherwise.
func (o *ClusterTypes) GetHasDefaultDataDisk() bool {
	if o == nil || IsNil(o.HasDefaultDataDisk) {
		var ret bool
		return ret
	}
	return *o.HasDefaultDataDisk
}

// GetHasDefaultDataDiskOk returns a tuple with the HasDefaultDataDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHasDefaultDataDiskOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDefaultDataDisk) {
		return nil, false
	}
	return o.HasDefaultDataDisk, true
}

// IsSetHasDefaultDataDisk returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHasDefaultDataDisk() bool {
	if o != nil && !IsNil(o.HasDefaultDataDisk) {
		return true
	}

	return false
}

// SetHasDefaultDataDisk gets a reference to the given bool and assigns it to the HasDefaultDataDisk field.
func (o *ClusterTypes) SetHasDefaultDataDisk(v bool) {
	o.HasDefaultDataDisk = &v
}

// GetCanManage returns the CanManage field value if set, zero value otherwise.
func (o *ClusterTypes) GetCanManage() bool {
	if o == nil || IsNil(o.CanManage) {
		var ret bool
		return ret
	}
	return *o.CanManage
}

// GetCanManageOk returns a tuple with the CanManage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetCanManageOk() (*bool, bool) {
	if o == nil || IsNil(o.CanManage) {
		return nil, false
	}
	return o.CanManage, true
}

// IsSetCanManage returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetCanManage() bool {
	if o != nil && !IsNil(o.CanManage) {
		return true
	}

	return false
}

// SetCanManage gets a reference to the given bool and assigns it to the CanManage field.
func (o *ClusterTypes) SetCanManage(v bool) {
	o.CanManage = &v
}

// GetHasCluster returns the HasCluster field value if set, zero value otherwise.
func (o *ClusterTypes) GetHasCluster() bool {
	if o == nil || IsNil(o.HasCluster) {
		var ret bool
		return ret
	}
	return *o.HasCluster
}

// GetHasClusterOk returns a tuple with the HasCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetHasClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCluster) {
		return nil, false
	}
	return o.HasCluster, true
}

// IsSetHasCluster returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetHasCluster() bool {
	if o != nil && !IsNil(o.HasCluster) {
		return true
	}

	return false
}

// SetHasCluster gets a reference to the given bool and assigns it to the HasCluster field.
func (o *ClusterTypes) SetHasCluster(v bool) {
	o.HasCluster = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterTypes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterTypes) SetDescription(v string) {
	o.Description = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *ClusterTypes) GetOptionTypes() []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetOptionTypesOk() ([]ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner and assigns it to the OptionTypes field.
func (o *ClusterTypes) SetOptionTypes(v []ListCatalogItemTypes200ResponseAllOfCatalogItemTypesInnerOptionTypesInner) {
	o.OptionTypes = v
}

// GetControllerTypes returns the ControllerTypes field value if set, zero value otherwise.
func (o *ClusterTypes) GetControllerTypes() []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner {
	if o == nil || IsNil(o.ControllerTypes) {
		var ret []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner
		return ret
	}
	return o.ControllerTypes
}

// GetControllerTypesOk returns a tuple with the ControllerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetControllerTypesOk() ([]ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner, bool) {
	if o == nil || IsNil(o.ControllerTypes) {
		return nil, false
	}
	return o.ControllerTypes, true
}

// IsSetControllerTypes returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetControllerTypes() bool {
	if o != nil && !IsNil(o.ControllerTypes) {
		return true
	}

	return false
}

// SetControllerTypes gets a reference to the given []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner and assigns it to the ControllerTypes field.
func (o *ClusterTypes) SetControllerTypes(v []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner) {
	o.ControllerTypes = v
}

// GetWorkerTypes returns the WorkerTypes field value if set, zero value otherwise.
func (o *ClusterTypes) GetWorkerTypes() []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner {
	if o == nil || IsNil(o.WorkerTypes) {
		var ret []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner
		return ret
	}
	return o.WorkerTypes
}

// GetWorkerTypesOk returns a tuple with the WorkerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTypes) GetWorkerTypesOk() ([]ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner, bool) {
	if o == nil || IsNil(o.WorkerTypes) {
		return nil, false
	}
	return o.WorkerTypes, true
}

// IsSetWorkerTypes returns a boolean if a field has been set.
func (o *ClusterTypes) IsSetWorkerTypes() bool {
	if o != nil && !IsNil(o.WorkerTypes) {
		return true
	}

	return false
}

// SetWorkerTypes gets a reference to the given []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner and assigns it to the WorkerTypes field.
func (o *ClusterTypes) SetWorkerTypes(v []ListClusterTypes200ResponseAllOfClusterTypesInnerControllerTypesInner) {
	o.WorkerTypes = v
}

func (o ClusterTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DeployTargetService) {
		toSerialize["deployTargetService"] = o.DeployTargetService
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.ProviderType) {
		toSerialize["providerType"] = o.ProviderType
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.HostService) {
		toSerialize["hostService"] = o.HostService
	}
	if !IsNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if !IsNil(o.HasMasters) {
		toSerialize["hasMasters"] = o.HasMasters
	}
	if !IsNil(o.HasWorkers) {
		toSerialize["hasWorkers"] = o.HasWorkers
	}
	if !IsNil(o.ViewSet) {
		toSerialize["viewSet"] = o.ViewSet
	}
	if !IsNil(o.ImageCode) {
		toSerialize["imageCode"] = o.ImageCode
	}
	if !IsNil(o.KubeCtlLocal) {
		toSerialize["kubeCtlLocal"] = o.KubeCtlLocal
	}
	if !IsNil(o.HasDatastore) {
		toSerialize["hasDatastore"] = o.HasDatastore
	}
	if !IsNil(o.SupportsCloudScaling) {
		toSerialize["supportsCloudScaling"] = o.SupportsCloudScaling
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.HasDefaultDataDisk) {
		toSerialize["hasDefaultDataDisk"] = o.HasDefaultDataDisk
	}
	if !IsNil(o.CanManage) {
		toSerialize["canManage"] = o.CanManage
	}
	if !IsNil(o.HasCluster) {
		toSerialize["hasCluster"] = o.HasCluster
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.ControllerTypes) {
		toSerialize["controllerTypes"] = o.ControllerTypes
	}
	if !IsNil(o.WorkerTypes) {
		toSerialize["workerTypes"] = o.WorkerTypes
	}
	return toSerialize, nil
}

type NullableClusterTypes struct {
	value *ClusterTypes
	isSet bool
}

func (v NullableClusterTypes) Get() *ClusterTypes {
	return v.value
}

func (v *NullableClusterTypes) Set(val *ClusterTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterTypes(val *ClusterTypes) *NullableClusterTypes {
	return &NullableClusterTypes{value: val, isSet: true}
}

func (v NullableClusterTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


