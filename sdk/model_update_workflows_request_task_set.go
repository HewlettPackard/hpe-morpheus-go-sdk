/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateWorkflowsRequestTaskSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkflowsRequestTaskSet{}

// UpdateWorkflowsRequestTaskSet struct for UpdateWorkflowsRequestTaskSet
type UpdateWorkflowsRequestTaskSet struct {
	// A unique name for the workflow
	Name *string `json:"name,omitempty"`
	// A description of the workflow
	Description *string `json:"description,omitempty"`
	// An array of Category labels for filtering
	Labels []string `json:"labels,omitempty"`
	// Workflow type
	Type *string `json:"type,omitempty"`
	// List of option type IDs for use with operational workflow configuration.
	OptionTypes []int64 `json:"optionTypes,omitempty"`
	Tasks *AddWorkflowsRequestTaskSetTasks `json:"tasks,omitempty"`
}

// NewUpdateWorkflowsRequestTaskSet instantiates a new UpdateWorkflowsRequestTaskSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkflowsRequestTaskSet() *UpdateWorkflowsRequestTaskSet {
	this := UpdateWorkflowsRequestTaskSet{}
	var type_ string = "provision"
	this.Type = &type_
	return &this
}

// NewUpdateWorkflowsRequestTaskSetWithDefaults instantiates a new UpdateWorkflowsRequestTaskSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkflowsRequestTaskSetWithDefaults() *UpdateWorkflowsRequestTaskSet {
	this := UpdateWorkflowsRequestTaskSet{}
	var type_ string = "provision"
	this.Type = &type_
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateWorkflowsRequestTaskSet) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateWorkflowsRequestTaskSet) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// IsSetLabels returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateWorkflowsRequestTaskSet) SetLabels(v []string) {
	o.Labels = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// IsSetType returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateWorkflowsRequestTaskSet) SetType(v string) {
	o.Type = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetOptionTypes() []int64 {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []int64
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetOptionTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []int64 and assigns it to the OptionTypes field.
func (o *UpdateWorkflowsRequestTaskSet) SetOptionTypes(v []int64) {
	o.OptionTypes = v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *UpdateWorkflowsRequestTaskSet) GetTasks() AddWorkflowsRequestTaskSetTasks {
	if o == nil || IsNil(o.Tasks) {
		var ret AddWorkflowsRequestTaskSetTasks
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkflowsRequestTaskSet) GetTasksOk() (*AddWorkflowsRequestTaskSetTasks, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// IsSetTasks returns a boolean if a field has been set.
func (o *UpdateWorkflowsRequestTaskSet) IsSetTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given AddWorkflowsRequestTaskSetTasks and assigns it to the Tasks field.
func (o *UpdateWorkflowsRequestTaskSet) SetTasks(v AddWorkflowsRequestTaskSetTasks) {
	o.Tasks = &v
}

func (o UpdateWorkflowsRequestTaskSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkflowsRequestTaskSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	return toSerialize, nil
}

type NullableUpdateWorkflowsRequestTaskSet struct {
	value *UpdateWorkflowsRequestTaskSet
	isSet bool
}

func (v NullableUpdateWorkflowsRequestTaskSet) Get() *UpdateWorkflowsRequestTaskSet {
	return v.value
}

func (v *NullableUpdateWorkflowsRequestTaskSet) Set(val *UpdateWorkflowsRequestTaskSet) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkflowsRequestTaskSet) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkflowsRequestTaskSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkflowsRequestTaskSet(val *UpdateWorkflowsRequestTaskSet) *NullableUpdateWorkflowsRequestTaskSet {
	return &NullableUpdateWorkflowsRequestTaskSet{value: val, isSet: true}
}

func (v NullableUpdateWorkflowsRequestTaskSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkflowsRequestTaskSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


