/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetupRequestAnyOf1OneOf1Hub type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetupRequestAnyOf1OneOf1Hub{}

// SetupRequestAnyOf1OneOf1Hub struct for SetupRequestAnyOf1OneOf1Hub
type SetupRequestAnyOf1OneOf1Hub struct {
	// Company Name for new Morpheus Hub organization
	CompanyName string `json:"companyName"`
	// First Name for new Morpheus Hub user
	FirstName string `json:"firstName"`
	// Last Name for new Morpheus Hub user
	LastName string `json:"lastName"`
	// Email for new Morpheus Hub user
	Email string `json:"email"`
	// Password for new Morpheus Hub user
	Password string `json:"password"`
	// Job title of new Morpheus Hub user
	JobTitle string `json:"jobTitle"`
}

type _SetupRequestAnyOf1OneOf1Hub SetupRequestAnyOf1OneOf1Hub

// NewSetupRequestAnyOf1OneOf1Hub instantiates a new SetupRequestAnyOf1OneOf1Hub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetupRequestAnyOf1OneOf1Hub(companyName string, firstName string, lastName string, email string, password string, jobTitle string) *SetupRequestAnyOf1OneOf1Hub {
	this := SetupRequestAnyOf1OneOf1Hub{}
	this.CompanyName = companyName
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.Password = password
	this.JobTitle = jobTitle
	return &this
}

// NewSetupRequestAnyOf1OneOf1HubWithDefaults instantiates a new SetupRequestAnyOf1OneOf1Hub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetupRequestAnyOf1OneOf1HubWithDefaults() *SetupRequestAnyOf1OneOf1Hub {
	this := SetupRequestAnyOf1OneOf1Hub{}
	return &this
}

// GetCompanyName returns the CompanyName field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetFirstName returns the FirstName field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetPassword(v string) {
	o.Password = v
}

// GetJobTitle returns the JobTitle field value
func (o *SetupRequestAnyOf1OneOf1Hub) GetJobTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value
// and a boolean to check if the value has been set.
func (o *SetupRequestAnyOf1OneOf1Hub) GetJobTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobTitle, true
}

// SetJobTitle sets field value
func (o *SetupRequestAnyOf1OneOf1Hub) SetJobTitle(v string) {
	o.JobTitle = v
}

func (o SetupRequestAnyOf1OneOf1Hub) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetupRequestAnyOf1OneOf1Hub) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["companyName"] = o.CompanyName
	toSerialize["firstName"] = o.FirstName
	toSerialize["lastName"] = o.LastName
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	toSerialize["jobTitle"] = o.JobTitle
	return toSerialize, nil
}

func (o *SetupRequestAnyOf1OneOf1Hub) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"companyName",
		"firstName",
		"lastName",
		"email",
		"password",
		"jobTitle",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetupRequestAnyOf1OneOf1Hub := _SetupRequestAnyOf1OneOf1Hub{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetupRequestAnyOf1OneOf1Hub)

	if err != nil {
		return err
	}

	*o = SetupRequestAnyOf1OneOf1Hub(varSetupRequestAnyOf1OneOf1Hub)

	return err
}

type NullableSetupRequestAnyOf1OneOf1Hub struct {
	value *SetupRequestAnyOf1OneOf1Hub
	isSet bool
}

func (v NullableSetupRequestAnyOf1OneOf1Hub) Get() *SetupRequestAnyOf1OneOf1Hub {
	return v.value
}

func (v *NullableSetupRequestAnyOf1OneOf1Hub) Set(val *SetupRequestAnyOf1OneOf1Hub) {
	v.value = val
	v.isSet = true
}

func (v NullableSetupRequestAnyOf1OneOf1Hub) IsSet() bool {
	return v.isSet
}

func (v *NullableSetupRequestAnyOf1OneOf1Hub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetupRequestAnyOf1OneOf1Hub(val *SetupRequestAnyOf1OneOf1Hub) *NullableSetupRequestAnyOf1OneOf1Hub {
	return &NullableSetupRequestAnyOf1OneOf1Hub{value: val, isSet: true}
}

func (v NullableSetupRequestAnyOf1OneOf1Hub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetupRequestAnyOf1OneOf1Hub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


