/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateCloudDatastoresRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCloudDatastoresRequest{}

// UpdateCloudDatastoresRequest struct for UpdateCloudDatastoresRequest
type UpdateCloudDatastoresRequest struct {
	Datastore            UpdateCloudDatastoresRequestDatastore `json:"datastore"`
	AdditionalProperties map[string]interface{}                `json:",remain"`
}

type _UpdateCloudDatastoresRequest UpdateCloudDatastoresRequest

// NewUpdateCloudDatastoresRequest instantiates a new UpdateCloudDatastoresRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCloudDatastoresRequest(datastore UpdateCloudDatastoresRequestDatastore) *UpdateCloudDatastoresRequest {
	this := UpdateCloudDatastoresRequest{}
	this.Datastore = datastore
	return &this
}

// NewUpdateCloudDatastoresRequestWithDefaults instantiates a new UpdateCloudDatastoresRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCloudDatastoresRequestWithDefaults() *UpdateCloudDatastoresRequest {
	this := UpdateCloudDatastoresRequest{}
	return &this
}

// GetDatastore returns the Datastore field value
func (o *UpdateCloudDatastoresRequest) GetDatastore() UpdateCloudDatastoresRequestDatastore {
	if o == nil {
		var ret UpdateCloudDatastoresRequestDatastore
		return ret
	}

	return o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value
// and a boolean to check if the value has been set.
func (o *UpdateCloudDatastoresRequest) GetDatastoreOk() (*UpdateCloudDatastoresRequestDatastore, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datastore, true
}

// SetDatastore sets field value
func (o *UpdateCloudDatastoresRequest) SetDatastore(v UpdateCloudDatastoresRequestDatastore) {
	o.Datastore = v
}

func (o UpdateCloudDatastoresRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCloudDatastoresRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["datastore"] = o.Datastore

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateCloudDatastoresRequest) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
