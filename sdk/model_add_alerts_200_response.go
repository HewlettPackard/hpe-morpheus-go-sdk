/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddAlerts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAlerts200Response{}

// AddAlerts200Response struct for AddAlerts200Response
type AddAlerts200Response struct {
	Alert *ListAlerts200ResponseAllOfAlertsInner `json:"alert,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAddAlerts200Response instantiates a new AddAlerts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAlerts200Response() *AddAlerts200Response {
	this := AddAlerts200Response{}
	return &this
}

// NewAddAlerts200ResponseWithDefaults instantiates a new AddAlerts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAlerts200ResponseWithDefaults() *AddAlerts200Response {
	this := AddAlerts200Response{}
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *AddAlerts200Response) GetAlert() ListAlerts200ResponseAllOfAlertsInner {
	if o == nil || IsNil(o.Alert) {
		var ret ListAlerts200ResponseAllOfAlertsInner
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlerts200Response) GetAlertOk() (*ListAlerts200ResponseAllOfAlertsInner, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// IsSetAlert returns a boolean if a field has been set.
func (o *AddAlerts200Response) IsSetAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given ListAlerts200ResponseAllOfAlertsInner and assigns it to the Alert field.
func (o *AddAlerts200Response) SetAlert(v ListAlerts200ResponseAllOfAlertsInner) {
	o.Alert = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddAlerts200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlerts200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddAlerts200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddAlerts200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddAlerts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAlerts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddAlerts200Response struct {
	value *AddAlerts200Response
	isSet bool
}

func (v NullableAddAlerts200Response) Get() *AddAlerts200Response {
	return v.value
}

func (v *NullableAddAlerts200Response) Set(val *AddAlerts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAlerts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAlerts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAlerts200Response(val *AddAlerts200Response) *NullableAddAlerts200Response {
	return &NullableAddAlerts200Response{value: val, isSet: true}
}

func (v NullableAddAlerts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAlerts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


