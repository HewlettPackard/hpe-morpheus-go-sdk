/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ShutdownPolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShutdownPolicyTypeConfiguration{}

// ShutdownPolicyTypeConfiguration Configuration settings for the following policy types: - Shutdown 
type ShutdownPolicyTypeConfiguration struct {
	ShutdownType *string `json:"shutdownType,omitempty"`
	ShutdownAge *string `json:"shutdownAge,omitempty"`
	ShutdownRenewal *string `json:"shutdownRenewal,omitempty"`
	ShutdownNotify *string `json:"shutdownNotify,omitempty"`
	ShutdownMessage *string `json:"shutdownMessage,omitempty"`
	ShutdownAutoRenew *string `json:"shutdownAutoRenew,omitempty"`
	ShutdownAllowExtend *string `json:"shutdownAllowExtend,omitempty"`
	ShutdownExtensionsBeforeApproval *string `json:"shutdownExtensionsBeforeApproval,omitempty"`
	AccountIntegrationId *string `json:"accountIntegrationId,omitempty"`
	ShutdownHideFixed *bool `json:"shutdownHideFixed,omitempty"`
}

// NewShutdownPolicyTypeConfiguration instantiates a new ShutdownPolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShutdownPolicyTypeConfiguration() *ShutdownPolicyTypeConfiguration {
	this := ShutdownPolicyTypeConfiguration{}
	var shutdownAutoRenew string = "off"
	this.ShutdownAutoRenew = &shutdownAutoRenew
	var shutdownAllowExtend string = "off"
	this.ShutdownAllowExtend = &shutdownAllowExtend
	return &this
}

// NewShutdownPolicyTypeConfigurationWithDefaults instantiates a new ShutdownPolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShutdownPolicyTypeConfigurationWithDefaults() *ShutdownPolicyTypeConfiguration {
	this := ShutdownPolicyTypeConfiguration{}
	var shutdownAutoRenew string = "off"
	this.ShutdownAutoRenew = &shutdownAutoRenew
	var shutdownAllowExtend string = "off"
	this.ShutdownAllowExtend = &shutdownAllowExtend
	return &this
}

// GetShutdownType returns the ShutdownType field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownType() string {
	if o == nil || IsNil(o.ShutdownType) {
		var ret string
		return ret
	}
	return *o.ShutdownType
}

// GetShutdownTypeOk returns a tuple with the ShutdownType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownType) {
		return nil, false
	}
	return o.ShutdownType, true
}

// IsSetShutdownType returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownType() bool {
	if o != nil && !IsNil(o.ShutdownType) {
		return true
	}

	return false
}

// SetShutdownType gets a reference to the given string and assigns it to the ShutdownType field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownType(v string) {
	o.ShutdownType = &v
}

// GetShutdownAge returns the ShutdownAge field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAge() string {
	if o == nil || IsNil(o.ShutdownAge) {
		var ret string
		return ret
	}
	return *o.ShutdownAge
}

// GetShutdownAgeOk returns a tuple with the ShutdownAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAgeOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownAge) {
		return nil, false
	}
	return o.ShutdownAge, true
}

// IsSetShutdownAge returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownAge() bool {
	if o != nil && !IsNil(o.ShutdownAge) {
		return true
	}

	return false
}

// SetShutdownAge gets a reference to the given string and assigns it to the ShutdownAge field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownAge(v string) {
	o.ShutdownAge = &v
}

// GetShutdownRenewal returns the ShutdownRenewal field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownRenewal() string {
	if o == nil || IsNil(o.ShutdownRenewal) {
		var ret string
		return ret
	}
	return *o.ShutdownRenewal
}

// GetShutdownRenewalOk returns a tuple with the ShutdownRenewal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownRenewalOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownRenewal) {
		return nil, false
	}
	return o.ShutdownRenewal, true
}

// IsSetShutdownRenewal returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownRenewal() bool {
	if o != nil && !IsNil(o.ShutdownRenewal) {
		return true
	}

	return false
}

// SetShutdownRenewal gets a reference to the given string and assigns it to the ShutdownRenewal field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownRenewal(v string) {
	o.ShutdownRenewal = &v
}

// GetShutdownNotify returns the ShutdownNotify field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownNotify() string {
	if o == nil || IsNil(o.ShutdownNotify) {
		var ret string
		return ret
	}
	return *o.ShutdownNotify
}

// GetShutdownNotifyOk returns a tuple with the ShutdownNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownNotify) {
		return nil, false
	}
	return o.ShutdownNotify, true
}

// IsSetShutdownNotify returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownNotify() bool {
	if o != nil && !IsNil(o.ShutdownNotify) {
		return true
	}

	return false
}

// SetShutdownNotify gets a reference to the given string and assigns it to the ShutdownNotify field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownNotify(v string) {
	o.ShutdownNotify = &v
}

// GetShutdownMessage returns the ShutdownMessage field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownMessage() string {
	if o == nil || IsNil(o.ShutdownMessage) {
		var ret string
		return ret
	}
	return *o.ShutdownMessage
}

// GetShutdownMessageOk returns a tuple with the ShutdownMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownMessage) {
		return nil, false
	}
	return o.ShutdownMessage, true
}

// IsSetShutdownMessage returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownMessage() bool {
	if o != nil && !IsNil(o.ShutdownMessage) {
		return true
	}

	return false
}

// SetShutdownMessage gets a reference to the given string and assigns it to the ShutdownMessage field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownMessage(v string) {
	o.ShutdownMessage = &v
}

// GetShutdownAutoRenew returns the ShutdownAutoRenew field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAutoRenew() string {
	if o == nil || IsNil(o.ShutdownAutoRenew) {
		var ret string
		return ret
	}
	return *o.ShutdownAutoRenew
}

// GetShutdownAutoRenewOk returns a tuple with the ShutdownAutoRenew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAutoRenewOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownAutoRenew) {
		return nil, false
	}
	return o.ShutdownAutoRenew, true
}

// IsSetShutdownAutoRenew returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownAutoRenew() bool {
	if o != nil && !IsNil(o.ShutdownAutoRenew) {
		return true
	}

	return false
}

// SetShutdownAutoRenew gets a reference to the given string and assigns it to the ShutdownAutoRenew field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownAutoRenew(v string) {
	o.ShutdownAutoRenew = &v
}

// GetShutdownAllowExtend returns the ShutdownAllowExtend field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAllowExtend() string {
	if o == nil || IsNil(o.ShutdownAllowExtend) {
		var ret string
		return ret
	}
	return *o.ShutdownAllowExtend
}

// GetShutdownAllowExtendOk returns a tuple with the ShutdownAllowExtend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownAllowExtendOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownAllowExtend) {
		return nil, false
	}
	return o.ShutdownAllowExtend, true
}

// IsSetShutdownAllowExtend returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownAllowExtend() bool {
	if o != nil && !IsNil(o.ShutdownAllowExtend) {
		return true
	}

	return false
}

// SetShutdownAllowExtend gets a reference to the given string and assigns it to the ShutdownAllowExtend field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownAllowExtend(v string) {
	o.ShutdownAllowExtend = &v
}

// GetShutdownExtensionsBeforeApproval returns the ShutdownExtensionsBeforeApproval field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownExtensionsBeforeApproval() string {
	if o == nil || IsNil(o.ShutdownExtensionsBeforeApproval) {
		var ret string
		return ret
	}
	return *o.ShutdownExtensionsBeforeApproval
}

// GetShutdownExtensionsBeforeApprovalOk returns a tuple with the ShutdownExtensionsBeforeApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownExtensionsBeforeApprovalOk() (*string, bool) {
	if o == nil || IsNil(o.ShutdownExtensionsBeforeApproval) {
		return nil, false
	}
	return o.ShutdownExtensionsBeforeApproval, true
}

// IsSetShutdownExtensionsBeforeApproval returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownExtensionsBeforeApproval() bool {
	if o != nil && !IsNil(o.ShutdownExtensionsBeforeApproval) {
		return true
	}

	return false
}

// SetShutdownExtensionsBeforeApproval gets a reference to the given string and assigns it to the ShutdownExtensionsBeforeApproval field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownExtensionsBeforeApproval(v string) {
	o.ShutdownExtensionsBeforeApproval = &v
}

// GetAccountIntegrationId returns the AccountIntegrationId field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetAccountIntegrationId() string {
	if o == nil || IsNil(o.AccountIntegrationId) {
		var ret string
		return ret
	}
	return *o.AccountIntegrationId
}

// GetAccountIntegrationIdOk returns a tuple with the AccountIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetAccountIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIntegrationId) {
		return nil, false
	}
	return o.AccountIntegrationId, true
}

// IsSetAccountIntegrationId returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetAccountIntegrationId() bool {
	if o != nil && !IsNil(o.AccountIntegrationId) {
		return true
	}

	return false
}

// SetAccountIntegrationId gets a reference to the given string and assigns it to the AccountIntegrationId field.
func (o *ShutdownPolicyTypeConfiguration) SetAccountIntegrationId(v string) {
	o.AccountIntegrationId = &v
}

// GetShutdownHideFixed returns the ShutdownHideFixed field value if set, zero value otherwise.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownHideFixed() bool {
	if o == nil || IsNil(o.ShutdownHideFixed) {
		var ret bool
		return ret
	}
	return *o.ShutdownHideFixed
}

// GetShutdownHideFixedOk returns a tuple with the ShutdownHideFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShutdownPolicyTypeConfiguration) GetShutdownHideFixedOk() (*bool, bool) {
	if o == nil || IsNil(o.ShutdownHideFixed) {
		return nil, false
	}
	return o.ShutdownHideFixed, true
}

// IsSetShutdownHideFixed returns a boolean if a field has been set.
func (o *ShutdownPolicyTypeConfiguration) IsSetShutdownHideFixed() bool {
	if o != nil && !IsNil(o.ShutdownHideFixed) {
		return true
	}

	return false
}

// SetShutdownHideFixed gets a reference to the given bool and assigns it to the ShutdownHideFixed field.
func (o *ShutdownPolicyTypeConfiguration) SetShutdownHideFixed(v bool) {
	o.ShutdownHideFixed = &v
}

func (o ShutdownPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShutdownPolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShutdownType) {
		toSerialize["shutdownType"] = o.ShutdownType
	}
	if !IsNil(o.ShutdownAge) {
		toSerialize["shutdownAge"] = o.ShutdownAge
	}
	if !IsNil(o.ShutdownRenewal) {
		toSerialize["shutdownRenewal"] = o.ShutdownRenewal
	}
	if !IsNil(o.ShutdownNotify) {
		toSerialize["shutdownNotify"] = o.ShutdownNotify
	}
	if !IsNil(o.ShutdownMessage) {
		toSerialize["shutdownMessage"] = o.ShutdownMessage
	}
	if !IsNil(o.ShutdownAutoRenew) {
		toSerialize["shutdownAutoRenew"] = o.ShutdownAutoRenew
	}
	if !IsNil(o.ShutdownAllowExtend) {
		toSerialize["shutdownAllowExtend"] = o.ShutdownAllowExtend
	}
	if !IsNil(o.ShutdownExtensionsBeforeApproval) {
		toSerialize["shutdownExtensionsBeforeApproval"] = o.ShutdownExtensionsBeforeApproval
	}
	if !IsNil(o.AccountIntegrationId) {
		toSerialize["accountIntegrationId"] = o.AccountIntegrationId
	}
	if !IsNil(o.ShutdownHideFixed) {
		toSerialize["shutdownHideFixed"] = o.ShutdownHideFixed
	}
	return toSerialize, nil
}

type NullableShutdownPolicyTypeConfiguration struct {
	value *ShutdownPolicyTypeConfiguration
	isSet bool
}

func (v NullableShutdownPolicyTypeConfiguration) Get() *ShutdownPolicyTypeConfiguration {
	return v.value
}

func (v *NullableShutdownPolicyTypeConfiguration) Set(val *ShutdownPolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableShutdownPolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableShutdownPolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShutdownPolicyTypeConfiguration(val *ShutdownPolicyTypeConfiguration) *NullableShutdownPolicyTypeConfiguration {
	return &NullableShutdownPolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableShutdownPolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShutdownPolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


