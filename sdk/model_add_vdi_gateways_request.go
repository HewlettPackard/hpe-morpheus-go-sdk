/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddVDIGatewaysRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVDIGatewaysRequest{}

// AddVDIGatewaysRequest struct for AddVDIGatewaysRequest
type AddVDIGatewaysRequest struct {
	VdiGateway AddVDIGatewaysRequestVdiGateway `json:"vdiGateway"`
}

type _AddVDIGatewaysRequest AddVDIGatewaysRequest

// NewAddVDIGatewaysRequest instantiates a new AddVDIGatewaysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVDIGatewaysRequest(vdiGateway AddVDIGatewaysRequestVdiGateway) *AddVDIGatewaysRequest {
	this := AddVDIGatewaysRequest{}
	this.VdiGateway = vdiGateway
	return &this
}

// NewAddVDIGatewaysRequestWithDefaults instantiates a new AddVDIGatewaysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVDIGatewaysRequestWithDefaults() *AddVDIGatewaysRequest {
	this := AddVDIGatewaysRequest{}
	return &this
}

// GetVdiGateway returns the VdiGateway field value
func (o *AddVDIGatewaysRequest) GetVdiGateway() AddVDIGatewaysRequestVdiGateway {
	if o == nil {
		var ret AddVDIGatewaysRequestVdiGateway
		return ret
	}

	return o.VdiGateway
}

// GetVdiGatewayOk returns a tuple with the VdiGateway field value
// and a boolean to check if the value has been set.
func (o *AddVDIGatewaysRequest) GetVdiGatewayOk() (*AddVDIGatewaysRequestVdiGateway, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VdiGateway, true
}

// SetVdiGateway sets field value
func (o *AddVDIGatewaysRequest) SetVdiGateway(v AddVDIGatewaysRequestVdiGateway) {
	o.VdiGateway = v
}

func (o AddVDIGatewaysRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVDIGatewaysRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vdiGateway"] = o.VdiGateway
	return toSerialize, nil
}

func (o *AddVDIGatewaysRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vdiGateway",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddVDIGatewaysRequest := _AddVDIGatewaysRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddVDIGatewaysRequest)

	if err != nil {
		return err
	}

	*o = AddVDIGatewaysRequest(varAddVDIGatewaysRequest)

	return err
}

type NullableAddVDIGatewaysRequest struct {
	value *AddVDIGatewaysRequest
	isSet bool
}

func (v NullableAddVDIGatewaysRequest) Get() *AddVDIGatewaysRequest {
	return v.value
}

func (v *NullableAddVDIGatewaysRequest) Set(val *AddVDIGatewaysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVDIGatewaysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVDIGatewaysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVDIGatewaysRequest(val *AddVDIGatewaysRequest) *NullableAddVDIGatewaysRequest {
	return &NullableAddVDIGatewaysRequest{value: val, isSet: true}
}

func (v NullableAddVDIGatewaysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVDIGatewaysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


