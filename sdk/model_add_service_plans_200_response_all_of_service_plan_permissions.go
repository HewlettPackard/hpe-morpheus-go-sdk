/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddServicePlans200ResponseAllOfServicePlanPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddServicePlans200ResponseAllOfServicePlanPermissions{}

// AddServicePlans200ResponseAllOfServicePlanPermissions struct for AddServicePlans200ResponseAllOfServicePlanPermissions
type AddServicePlans200ResponseAllOfServicePlanPermissions struct {
	ResourcePermissions *AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions `json:"resourcePermissions,omitempty"`
	TenantPermissions *GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions `json:"tenantPermissions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AddServicePlans200ResponseAllOfServicePlanPermissions AddServicePlans200ResponseAllOfServicePlanPermissions

// NewAddServicePlans200ResponseAllOfServicePlanPermissions instantiates a new AddServicePlans200ResponseAllOfServicePlanPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddServicePlans200ResponseAllOfServicePlanPermissions() *AddServicePlans200ResponseAllOfServicePlanPermissions {
	this := AddServicePlans200ResponseAllOfServicePlanPermissions{}
	return &this
}

// NewAddServicePlans200ResponseAllOfServicePlanPermissionsWithDefaults instantiates a new AddServicePlans200ResponseAllOfServicePlanPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddServicePlans200ResponseAllOfServicePlanPermissionsWithDefaults() *AddServicePlans200ResponseAllOfServicePlanPermissions {
	this := AddServicePlans200ResponseAllOfServicePlanPermissions{}
	return &this
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) GetResourcePermissions() AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions {
	if o == nil || IsNil(o.ResourcePermissions) {
		var ret AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) GetResourcePermissionsOk() (*AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions, bool) {
	if o == nil || IsNil(o.ResourcePermissions) {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// IsSetResourcePermissions returns a boolean if a field has been set.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) IsSetResourcePermissions() bool {
	if o != nil && !IsNil(o.ResourcePermissions) {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions and assigns it to the ResourcePermissions field.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) SetResourcePermissions(v AddServicePlans200ResponseAllOfServicePlanPermissionsResourcePermissions) {
	o.ResourcePermissions = &v
}

// GetTenantPermissions returns the TenantPermissions field value if set, zero value otherwise.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) GetTenantPermissions() GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions {
	if o == nil || IsNil(o.TenantPermissions) {
		var ret GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions
		return ret
	}
	return *o.TenantPermissions
}

// GetTenantPermissionsOk returns a tuple with the TenantPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) GetTenantPermissionsOk() (*GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions, bool) {
	if o == nil || IsNil(o.TenantPermissions) {
		return nil, false
	}
	return o.TenantPermissions, true
}

// IsSetTenantPermissions returns a boolean if a field has been set.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) IsSetTenantPermissions() bool {
	if o != nil && !IsNil(o.TenantPermissions) {
		return true
	}

	return false
}

// SetTenantPermissions gets a reference to the given GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions and assigns it to the TenantPermissions field.
func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) SetTenantPermissions(v GetNetworkRouter200ResponseNetworkRouterPermissionsTenantPermissions) {
	o.TenantPermissions = &v
}

func (o AddServicePlans200ResponseAllOfServicePlanPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddServicePlans200ResponseAllOfServicePlanPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourcePermissions) {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}
	if !IsNil(o.TenantPermissions) {
		toSerialize["tenantPermissions"] = o.TenantPermissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddServicePlans200ResponseAllOfServicePlanPermissions) UnmarshalJSON(data []byte) (err error) {
	varAddServicePlans200ResponseAllOfServicePlanPermissions := _AddServicePlans200ResponseAllOfServicePlanPermissions{}

	err = json.Unmarshal(data, &varAddServicePlans200ResponseAllOfServicePlanPermissions)

	if err != nil {
		return err
	}

	*o = AddServicePlans200ResponseAllOfServicePlanPermissions(varAddServicePlans200ResponseAllOfServicePlanPermissions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "resourcePermissions")
		delete(additionalProperties, "tenantPermissions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddServicePlans200ResponseAllOfServicePlanPermissions struct {
	value *AddServicePlans200ResponseAllOfServicePlanPermissions
	isSet bool
}

func (v NullableAddServicePlans200ResponseAllOfServicePlanPermissions) Get() *AddServicePlans200ResponseAllOfServicePlanPermissions {
	return v.value
}

func (v *NullableAddServicePlans200ResponseAllOfServicePlanPermissions) Set(val *AddServicePlans200ResponseAllOfServicePlanPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableAddServicePlans200ResponseAllOfServicePlanPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableAddServicePlans200ResponseAllOfServicePlanPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddServicePlans200ResponseAllOfServicePlanPermissions(val *AddServicePlans200ResponseAllOfServicePlanPermissions) *NullableAddServicePlans200ResponseAllOfServicePlanPermissions {
	return &NullableAddServicePlans200ResponseAllOfServicePlanPermissions{value: val, isSet: true}
}

func (v NullableAddServicePlans200ResponseAllOfServicePlanPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddServicePlans200ResponseAllOfServicePlanPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


