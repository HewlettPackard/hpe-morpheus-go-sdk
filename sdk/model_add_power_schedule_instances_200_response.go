/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddPowerScheduleInstances200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPowerScheduleInstances200Response{}

// AddPowerScheduleInstances200Response A response object
type AddPowerScheduleInstances200Response struct {
	// Success indicator, true when the request succeeded and false when an error occurred
	Success *bool `json:"success,omitempty"`
	// Message containing a description of the result, usually a message about the error that occurred
	Msg *string `json:"msg,omitempty"`
	// Validation errors, with a key for Object containing error messages for each invalid parameter (key)
	Errors map[string]interface{} `json:"errors,omitempty"`
}

// NewAddPowerScheduleInstances200Response instantiates a new AddPowerScheduleInstances200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPowerScheduleInstances200Response() *AddPowerScheduleInstances200Response {
	this := AddPowerScheduleInstances200Response{}
	var success bool = true
	this.Success = &success
	return &this
}

// NewAddPowerScheduleInstances200ResponseWithDefaults instantiates a new AddPowerScheduleInstances200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPowerScheduleInstances200ResponseWithDefaults() *AddPowerScheduleInstances200Response {
	this := AddPowerScheduleInstances200Response{}
	var success bool = true
	this.Success = &success
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddPowerScheduleInstances200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPowerScheduleInstances200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *AddPowerScheduleInstances200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddPowerScheduleInstances200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *AddPowerScheduleInstances200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPowerScheduleInstances200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// IsSetMsg returns a boolean if a field has been set.
func (o *AddPowerScheduleInstances200Response) IsSetMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *AddPowerScheduleInstances200Response) SetMsg(v string) {
	o.Msg = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *AddPowerScheduleInstances200Response) GetErrors() map[string]interface{} {
	if o == nil || IsNil(o.Errors) {
		var ret map[string]interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPowerScheduleInstances200Response) GetErrorsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Errors) {
		return map[string]interface{}{}, false
	}
	return o.Errors, true
}

// IsSetErrors returns a boolean if a field has been set.
func (o *AddPowerScheduleInstances200Response) IsSetErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given map[string]interface{} and assigns it to the Errors field.
func (o *AddPowerScheduleInstances200Response) SetErrors(v map[string]interface{}) {
	o.Errors = v
}

func (o AddPowerScheduleInstances200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPowerScheduleInstances200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableAddPowerScheduleInstances200Response struct {
	value *AddPowerScheduleInstances200Response
	isSet bool
}

func (v NullableAddPowerScheduleInstances200Response) Get() *AddPowerScheduleInstances200Response {
	return v.value
}

func (v *NullableAddPowerScheduleInstances200Response) Set(val *AddPowerScheduleInstances200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPowerScheduleInstances200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPowerScheduleInstances200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPowerScheduleInstances200Response(val *AddPowerScheduleInstances200Response) *NullableAddPowerScheduleInstances200Response {
	return &NullableAddPowerScheduleInstances200Response{value: val, isSet: true}
}

func (v NullableAddPowerScheduleInstances200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPowerScheduleInstances200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


