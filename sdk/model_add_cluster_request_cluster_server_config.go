/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddClusterRequestClusterServerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClusterRequestClusterServerConfig{}

// AddClusterRequestClusterServerConfig Key for specific host type configuration  The config parameter is for configuration options that are specific to each Provision Type. The Provision Types api can be used to see which options are available. 
type AddClusterRequestClusterServerConfig struct {
	// Default Git Account to be used when pulling images.  Default behavior is to be anonymous, which does have limits on allowed image pulls from public Docker Repos.
	DefaultRepoAccount *int32 `json:"defaultRepoAccount,omitempty"`
}

// NewAddClusterRequestClusterServerConfig instantiates a new AddClusterRequestClusterServerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClusterRequestClusterServerConfig() *AddClusterRequestClusterServerConfig {
	this := AddClusterRequestClusterServerConfig{}
	return &this
}

// NewAddClusterRequestClusterServerConfigWithDefaults instantiates a new AddClusterRequestClusterServerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClusterRequestClusterServerConfigWithDefaults() *AddClusterRequestClusterServerConfig {
	this := AddClusterRequestClusterServerConfig{}
	return &this
}

// GetDefaultRepoAccount returns the DefaultRepoAccount field value if set, zero value otherwise.
func (o *AddClusterRequestClusterServerConfig) GetDefaultRepoAccount() int32 {
	if o == nil || IsNil(o.DefaultRepoAccount) {
		var ret int32
		return ret
	}
	return *o.DefaultRepoAccount
}

// GetDefaultRepoAccountOk returns a tuple with the DefaultRepoAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterRequestClusterServerConfig) GetDefaultRepoAccountOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultRepoAccount) {
		return nil, false
	}
	return o.DefaultRepoAccount, true
}

// IsSetDefaultRepoAccount returns a boolean if a field has been set.
func (o *AddClusterRequestClusterServerConfig) IsSetDefaultRepoAccount() bool {
	if o != nil && !IsNil(o.DefaultRepoAccount) {
		return true
	}

	return false
}

// SetDefaultRepoAccount gets a reference to the given int32 and assigns it to the DefaultRepoAccount field.
func (o *AddClusterRequestClusterServerConfig) SetDefaultRepoAccount(v int32) {
	o.DefaultRepoAccount = &v
}

func (o AddClusterRequestClusterServerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClusterRequestClusterServerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultRepoAccount) {
		toSerialize["defaultRepoAccount"] = o.DefaultRepoAccount
	}
	return toSerialize, nil
}

type NullableAddClusterRequestClusterServerConfig struct {
	value *AddClusterRequestClusterServerConfig
	isSet bool
}

func (v NullableAddClusterRequestClusterServerConfig) Get() *AddClusterRequestClusterServerConfig {
	return v.value
}

func (v *NullableAddClusterRequestClusterServerConfig) Set(val *AddClusterRequestClusterServerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClusterRequestClusterServerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClusterRequestClusterServerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClusterRequestClusterServerConfig(val *AddClusterRequestClusterServerConfig) *NullableAddClusterRequestClusterServerConfig {
	return &NullableAddClusterRequestClusterServerConfig{value: val, isSet: true}
}

func (v NullableAddClusterRequestClusterServerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClusterRequestClusterServerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


