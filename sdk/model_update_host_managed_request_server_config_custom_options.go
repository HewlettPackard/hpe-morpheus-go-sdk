/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateHostManagedRequestServerConfigCustomOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateHostManagedRequestServerConfigCustomOptions{}

// UpdateHostManagedRequestServerConfigCustomOptions struct for UpdateHostManagedRequestServerConfigCustomOptions
type UpdateHostManagedRequestServerConfigCustomOptions struct {
	Dbfoldername *string `json:"dbfoldername,omitempty"`
}

// NewUpdateHostManagedRequestServerConfigCustomOptions instantiates a new UpdateHostManagedRequestServerConfigCustomOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateHostManagedRequestServerConfigCustomOptions() *UpdateHostManagedRequestServerConfigCustomOptions {
	this := UpdateHostManagedRequestServerConfigCustomOptions{}
	return &this
}

// NewUpdateHostManagedRequestServerConfigCustomOptionsWithDefaults instantiates a new UpdateHostManagedRequestServerConfigCustomOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateHostManagedRequestServerConfigCustomOptionsWithDefaults() *UpdateHostManagedRequestServerConfigCustomOptions {
	this := UpdateHostManagedRequestServerConfigCustomOptions{}
	return &this
}

// GetDbfoldername returns the Dbfoldername field value if set, zero value otherwise.
func (o *UpdateHostManagedRequestServerConfigCustomOptions) GetDbfoldername() string {
	if o == nil || IsNil(o.Dbfoldername) {
		var ret string
		return ret
	}
	return *o.Dbfoldername
}

// GetDbfoldernameOk returns a tuple with the Dbfoldername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateHostManagedRequestServerConfigCustomOptions) GetDbfoldernameOk() (*string, bool) {
	if o == nil || IsNil(o.Dbfoldername) {
		return nil, false
	}
	return o.Dbfoldername, true
}

// IsSetDbfoldername returns a boolean if a field has been set.
func (o *UpdateHostManagedRequestServerConfigCustomOptions) IsSetDbfoldername() bool {
	if o != nil && !IsNil(o.Dbfoldername) {
		return true
	}

	return false
}

// SetDbfoldername gets a reference to the given string and assigns it to the Dbfoldername field.
func (o *UpdateHostManagedRequestServerConfigCustomOptions) SetDbfoldername(v string) {
	o.Dbfoldername = &v
}

func (o UpdateHostManagedRequestServerConfigCustomOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateHostManagedRequestServerConfigCustomOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dbfoldername) {
		toSerialize["dbfoldername"] = o.Dbfoldername
	}
	return toSerialize, nil
}

type NullableUpdateHostManagedRequestServerConfigCustomOptions struct {
	value *UpdateHostManagedRequestServerConfigCustomOptions
	isSet bool
}

func (v NullableUpdateHostManagedRequestServerConfigCustomOptions) Get() *UpdateHostManagedRequestServerConfigCustomOptions {
	return v.value
}

func (v *NullableUpdateHostManagedRequestServerConfigCustomOptions) Set(val *UpdateHostManagedRequestServerConfigCustomOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateHostManagedRequestServerConfigCustomOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateHostManagedRequestServerConfigCustomOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateHostManagedRequestServerConfigCustomOptions(val *UpdateHostManagedRequestServerConfigCustomOptions) *NullableUpdateHostManagedRequestServerConfigCustomOptions {
	return &NullableUpdateHostManagedRequestServerConfigCustomOptions{value: val, isSet: true}
}

func (v NullableUpdateHostManagedRequestServerConfigCustomOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateHostManagedRequestServerConfigCustomOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


