/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHealth200ResponseAllOfHealthDatabaseInnodbStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHealth200ResponseAllOfHealthDatabaseInnodbStats{}

// ListHealth200ResponseAllOfHealthDatabaseInnodbStats struct for ListHealth200ResponseAllOfHealthDatabaseInnodbStats
type ListHealth200ResponseAllOfHealthDatabaseInnodbStats struct {
	LargeMemory *int64 `json:"largeMemory,omitempty"`
	DictionaryMemory *int64 `json:"dictionaryMemory,omitempty"`
	BufferPoolSize *int64 `json:"bufferPoolSize,omitempty"`
	FreeBuffers *int64 `json:"freeBuffers,omitempty"`
	DatabasePages *int64 `json:"databasePages,omitempty"`
	OldPages *int64 `json:"oldPages,omitempty"`
	PendingReads *int64 `json:"pendingReads,omitempty"`
	InsertsPerSecond *float32 `json:"insertsPerSecond,omitempty"`
	UpdatesPerSecond *float32 `json:"updatesPerSecond,omitempty"`
	DeletesPerSecond *float32 `json:"deletesPerSecond,omitempty"`
	ReadsPerSecond *float32 `json:"readsPerSecond,omitempty"`
	BufferHitRate *int64 `json:"bufferHitRate,omitempty"`
}

// NewListHealth200ResponseAllOfHealthDatabaseInnodbStats instantiates a new ListHealth200ResponseAllOfHealthDatabaseInnodbStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHealth200ResponseAllOfHealthDatabaseInnodbStats() *ListHealth200ResponseAllOfHealthDatabaseInnodbStats {
	this := ListHealth200ResponseAllOfHealthDatabaseInnodbStats{}
	return &this
}

// NewListHealth200ResponseAllOfHealthDatabaseInnodbStatsWithDefaults instantiates a new ListHealth200ResponseAllOfHealthDatabaseInnodbStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHealth200ResponseAllOfHealthDatabaseInnodbStatsWithDefaults() *ListHealth200ResponseAllOfHealthDatabaseInnodbStats {
	this := ListHealth200ResponseAllOfHealthDatabaseInnodbStats{}
	return &this
}

// GetLargeMemory returns the LargeMemory field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetLargeMemory() int64 {
	if o == nil || IsNil(o.LargeMemory) {
		var ret int64
		return ret
	}
	return *o.LargeMemory
}

// GetLargeMemoryOk returns a tuple with the LargeMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetLargeMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.LargeMemory) {
		return nil, false
	}
	return o.LargeMemory, true
}

// IsSetLargeMemory returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetLargeMemory() bool {
	if o != nil && !IsNil(o.LargeMemory) {
		return true
	}

	return false
}

// SetLargeMemory gets a reference to the given int64 and assigns it to the LargeMemory field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetLargeMemory(v int64) {
	o.LargeMemory = &v
}

// GetDictionaryMemory returns the DictionaryMemory field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDictionaryMemory() int64 {
	if o == nil || IsNil(o.DictionaryMemory) {
		var ret int64
		return ret
	}
	return *o.DictionaryMemory
}

// GetDictionaryMemoryOk returns a tuple with the DictionaryMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDictionaryMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.DictionaryMemory) {
		return nil, false
	}
	return o.DictionaryMemory, true
}

// IsSetDictionaryMemory returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetDictionaryMemory() bool {
	if o != nil && !IsNil(o.DictionaryMemory) {
		return true
	}

	return false
}

// SetDictionaryMemory gets a reference to the given int64 and assigns it to the DictionaryMemory field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetDictionaryMemory(v int64) {
	o.DictionaryMemory = &v
}

// GetBufferPoolSize returns the BufferPoolSize field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetBufferPoolSize() int64 {
	if o == nil || IsNil(o.BufferPoolSize) {
		var ret int64
		return ret
	}
	return *o.BufferPoolSize
}

// GetBufferPoolSizeOk returns a tuple with the BufferPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetBufferPoolSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.BufferPoolSize) {
		return nil, false
	}
	return o.BufferPoolSize, true
}

// IsSetBufferPoolSize returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetBufferPoolSize() bool {
	if o != nil && !IsNil(o.BufferPoolSize) {
		return true
	}

	return false
}

// SetBufferPoolSize gets a reference to the given int64 and assigns it to the BufferPoolSize field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetBufferPoolSize(v int64) {
	o.BufferPoolSize = &v
}

// GetFreeBuffers returns the FreeBuffers field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetFreeBuffers() int64 {
	if o == nil || IsNil(o.FreeBuffers) {
		var ret int64
		return ret
	}
	return *o.FreeBuffers
}

// GetFreeBuffersOk returns a tuple with the FreeBuffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetFreeBuffersOk() (*int64, bool) {
	if o == nil || IsNil(o.FreeBuffers) {
		return nil, false
	}
	return o.FreeBuffers, true
}

// IsSetFreeBuffers returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetFreeBuffers() bool {
	if o != nil && !IsNil(o.FreeBuffers) {
		return true
	}

	return false
}

// SetFreeBuffers gets a reference to the given int64 and assigns it to the FreeBuffers field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetFreeBuffers(v int64) {
	o.FreeBuffers = &v
}

// GetDatabasePages returns the DatabasePages field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDatabasePages() int64 {
	if o == nil || IsNil(o.DatabasePages) {
		var ret int64
		return ret
	}
	return *o.DatabasePages
}

// GetDatabasePagesOk returns a tuple with the DatabasePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDatabasePagesOk() (*int64, bool) {
	if o == nil || IsNil(o.DatabasePages) {
		return nil, false
	}
	return o.DatabasePages, true
}

// IsSetDatabasePages returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetDatabasePages() bool {
	if o != nil && !IsNil(o.DatabasePages) {
		return true
	}

	return false
}

// SetDatabasePages gets a reference to the given int64 and assigns it to the DatabasePages field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetDatabasePages(v int64) {
	o.DatabasePages = &v
}

// GetOldPages returns the OldPages field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetOldPages() int64 {
	if o == nil || IsNil(o.OldPages) {
		var ret int64
		return ret
	}
	return *o.OldPages
}

// GetOldPagesOk returns a tuple with the OldPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetOldPagesOk() (*int64, bool) {
	if o == nil || IsNil(o.OldPages) {
		return nil, false
	}
	return o.OldPages, true
}

// IsSetOldPages returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetOldPages() bool {
	if o != nil && !IsNil(o.OldPages) {
		return true
	}

	return false
}

// SetOldPages gets a reference to the given int64 and assigns it to the OldPages field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetOldPages(v int64) {
	o.OldPages = &v
}

// GetPendingReads returns the PendingReads field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetPendingReads() int64 {
	if o == nil || IsNil(o.PendingReads) {
		var ret int64
		return ret
	}
	return *o.PendingReads
}

// GetPendingReadsOk returns a tuple with the PendingReads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetPendingReadsOk() (*int64, bool) {
	if o == nil || IsNil(o.PendingReads) {
		return nil, false
	}
	return o.PendingReads, true
}

// IsSetPendingReads returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetPendingReads() bool {
	if o != nil && !IsNil(o.PendingReads) {
		return true
	}

	return false
}

// SetPendingReads gets a reference to the given int64 and assigns it to the PendingReads field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetPendingReads(v int64) {
	o.PendingReads = &v
}

// GetInsertsPerSecond returns the InsertsPerSecond field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetInsertsPerSecond() float32 {
	if o == nil || IsNil(o.InsertsPerSecond) {
		var ret float32
		return ret
	}
	return *o.InsertsPerSecond
}

// GetInsertsPerSecondOk returns a tuple with the InsertsPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetInsertsPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.InsertsPerSecond) {
		return nil, false
	}
	return o.InsertsPerSecond, true
}

// IsSetInsertsPerSecond returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetInsertsPerSecond() bool {
	if o != nil && !IsNil(o.InsertsPerSecond) {
		return true
	}

	return false
}

// SetInsertsPerSecond gets a reference to the given float32 and assigns it to the InsertsPerSecond field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetInsertsPerSecond(v float32) {
	o.InsertsPerSecond = &v
}

// GetUpdatesPerSecond returns the UpdatesPerSecond field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetUpdatesPerSecond() float32 {
	if o == nil || IsNil(o.UpdatesPerSecond) {
		var ret float32
		return ret
	}
	return *o.UpdatesPerSecond
}

// GetUpdatesPerSecondOk returns a tuple with the UpdatesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetUpdatesPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.UpdatesPerSecond) {
		return nil, false
	}
	return o.UpdatesPerSecond, true
}

// IsSetUpdatesPerSecond returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetUpdatesPerSecond() bool {
	if o != nil && !IsNil(o.UpdatesPerSecond) {
		return true
	}

	return false
}

// SetUpdatesPerSecond gets a reference to the given float32 and assigns it to the UpdatesPerSecond field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetUpdatesPerSecond(v float32) {
	o.UpdatesPerSecond = &v
}

// GetDeletesPerSecond returns the DeletesPerSecond field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDeletesPerSecond() float32 {
	if o == nil || IsNil(o.DeletesPerSecond) {
		var ret float32
		return ret
	}
	return *o.DeletesPerSecond
}

// GetDeletesPerSecondOk returns a tuple with the DeletesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetDeletesPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.DeletesPerSecond) {
		return nil, false
	}
	return o.DeletesPerSecond, true
}

// IsSetDeletesPerSecond returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetDeletesPerSecond() bool {
	if o != nil && !IsNil(o.DeletesPerSecond) {
		return true
	}

	return false
}

// SetDeletesPerSecond gets a reference to the given float32 and assigns it to the DeletesPerSecond field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetDeletesPerSecond(v float32) {
	o.DeletesPerSecond = &v
}

// GetReadsPerSecond returns the ReadsPerSecond field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetReadsPerSecond() float32 {
	if o == nil || IsNil(o.ReadsPerSecond) {
		var ret float32
		return ret
	}
	return *o.ReadsPerSecond
}

// GetReadsPerSecondOk returns a tuple with the ReadsPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetReadsPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.ReadsPerSecond) {
		return nil, false
	}
	return o.ReadsPerSecond, true
}

// IsSetReadsPerSecond returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetReadsPerSecond() bool {
	if o != nil && !IsNil(o.ReadsPerSecond) {
		return true
	}

	return false
}

// SetReadsPerSecond gets a reference to the given float32 and assigns it to the ReadsPerSecond field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetReadsPerSecond(v float32) {
	o.ReadsPerSecond = &v
}

// GetBufferHitRate returns the BufferHitRate field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetBufferHitRate() int64 {
	if o == nil || IsNil(o.BufferHitRate) {
		var ret int64
		return ret
	}
	return *o.BufferHitRate
}

// GetBufferHitRateOk returns a tuple with the BufferHitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) GetBufferHitRateOk() (*int64, bool) {
	if o == nil || IsNil(o.BufferHitRate) {
		return nil, false
	}
	return o.BufferHitRate, true
}

// IsSetBufferHitRate returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSetBufferHitRate() bool {
	if o != nil && !IsNil(o.BufferHitRate) {
		return true
	}

	return false
}

// SetBufferHitRate gets a reference to the given int64 and assigns it to the BufferHitRate field.
func (o *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) SetBufferHitRate(v int64) {
	o.BufferHitRate = &v
}

func (o ListHealth200ResponseAllOfHealthDatabaseInnodbStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHealth200ResponseAllOfHealthDatabaseInnodbStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LargeMemory) {
		toSerialize["largeMemory"] = o.LargeMemory
	}
	if !IsNil(o.DictionaryMemory) {
		toSerialize["dictionaryMemory"] = o.DictionaryMemory
	}
	if !IsNil(o.BufferPoolSize) {
		toSerialize["bufferPoolSize"] = o.BufferPoolSize
	}
	if !IsNil(o.FreeBuffers) {
		toSerialize["freeBuffers"] = o.FreeBuffers
	}
	if !IsNil(o.DatabasePages) {
		toSerialize["databasePages"] = o.DatabasePages
	}
	if !IsNil(o.OldPages) {
		toSerialize["oldPages"] = o.OldPages
	}
	if !IsNil(o.PendingReads) {
		toSerialize["pendingReads"] = o.PendingReads
	}
	if !IsNil(o.InsertsPerSecond) {
		toSerialize["insertsPerSecond"] = o.InsertsPerSecond
	}
	if !IsNil(o.UpdatesPerSecond) {
		toSerialize["updatesPerSecond"] = o.UpdatesPerSecond
	}
	if !IsNil(o.DeletesPerSecond) {
		toSerialize["deletesPerSecond"] = o.DeletesPerSecond
	}
	if !IsNil(o.ReadsPerSecond) {
		toSerialize["readsPerSecond"] = o.ReadsPerSecond
	}
	if !IsNil(o.BufferHitRate) {
		toSerialize["bufferHitRate"] = o.BufferHitRate
	}
	return toSerialize, nil
}

type NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats struct {
	value *ListHealth200ResponseAllOfHealthDatabaseInnodbStats
	isSet bool
}

func (v NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) Get() *ListHealth200ResponseAllOfHealthDatabaseInnodbStats {
	return v.value
}

func (v *NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) Set(val *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) {
	v.value = val
	v.isSet = true
}

func (v NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) IsSet() bool {
	return v.isSet
}

func (v *NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHealth200ResponseAllOfHealthDatabaseInnodbStats(val *ListHealth200ResponseAllOfHealthDatabaseInnodbStats) *NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats {
	return &NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats{value: val, isSet: true}
}

func (v NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHealth200ResponseAllOfHealthDatabaseInnodbStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


