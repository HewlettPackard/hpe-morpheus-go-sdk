/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the GetReportTypes200ResponseReportTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReportTypes200ResponseReportTypesInner{}

// GetReportTypes200ResponseReportTypesInner struct for GetReportTypes200ResponseReportTypesInner
type GetReportTypes200ResponseReportTypesInner struct {
	Id *int64 `json:"id,omitempty"`
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Category *string `json:"category,omitempty"`
	Visible *bool `json:"visible,omitempty"`
	MasterOnly *bool `json:"masterOnly,omitempty"`
	OwnerOnly *bool `json:"ownerOnly,omitempty"`
	SupportsAllZoneTypes *bool `json:"supportsAllZoneTypes,omitempty"`
	IsPlugin *bool `json:"isPlugin,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	OptionTypes []GetReportTypes200ResponseReportTypesInnerOptionTypesInner `json:"optionTypes,omitempty"`
	SupportedZoneTypes []ListBackupSettings200ResponseBackupSettingsDefaultSchedule `json:"supportedZoneTypes,omitempty"`
}

// NewGetReportTypes200ResponseReportTypesInner instantiates a new GetReportTypes200ResponseReportTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReportTypes200ResponseReportTypesInner() *GetReportTypes200ResponseReportTypesInner {
	this := GetReportTypes200ResponseReportTypesInner{}
	return &this
}

// NewGetReportTypes200ResponseReportTypesInnerWithDefaults instantiates a new GetReportTypes200ResponseReportTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReportTypes200ResponseReportTypesInnerWithDefaults() *GetReportTypes200ResponseReportTypesInner {
	this := GetReportTypes200ResponseReportTypesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetReportTypes200ResponseReportTypesInner) SetId(v int64) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetReportTypes200ResponseReportTypesInner) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetReportTypes200ResponseReportTypesInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetReportTypes200ResponseReportTypesInner) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *GetReportTypes200ResponseReportTypesInner) SetCategory(v string) {
	o.Category = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// IsSetVisible returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *GetReportTypes200ResponseReportTypesInner) SetVisible(v bool) {
	o.Visible = &v
}

// GetMasterOnly returns the MasterOnly field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetMasterOnly() bool {
	if o == nil || IsNil(o.MasterOnly) {
		var ret bool
		return ret
	}
	return *o.MasterOnly
}

// GetMasterOnlyOk returns a tuple with the MasterOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetMasterOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.MasterOnly) {
		return nil, false
	}
	return o.MasterOnly, true
}

// IsSetMasterOnly returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetMasterOnly() bool {
	if o != nil && !IsNil(o.MasterOnly) {
		return true
	}

	return false
}

// SetMasterOnly gets a reference to the given bool and assigns it to the MasterOnly field.
func (o *GetReportTypes200ResponseReportTypesInner) SetMasterOnly(v bool) {
	o.MasterOnly = &v
}

// GetOwnerOnly returns the OwnerOnly field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetOwnerOnly() bool {
	if o == nil || IsNil(o.OwnerOnly) {
		var ret bool
		return ret
	}
	return *o.OwnerOnly
}

// GetOwnerOnlyOk returns a tuple with the OwnerOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetOwnerOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.OwnerOnly) {
		return nil, false
	}
	return o.OwnerOnly, true
}

// IsSetOwnerOnly returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetOwnerOnly() bool {
	if o != nil && !IsNil(o.OwnerOnly) {
		return true
	}

	return false
}

// SetOwnerOnly gets a reference to the given bool and assigns it to the OwnerOnly field.
func (o *GetReportTypes200ResponseReportTypesInner) SetOwnerOnly(v bool) {
	o.OwnerOnly = &v
}

// GetSupportsAllZoneTypes returns the SupportsAllZoneTypes field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetSupportsAllZoneTypes() bool {
	if o == nil || IsNil(o.SupportsAllZoneTypes) {
		var ret bool
		return ret
	}
	return *o.SupportsAllZoneTypes
}

// GetSupportsAllZoneTypesOk returns a tuple with the SupportsAllZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetSupportsAllZoneTypesOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsAllZoneTypes) {
		return nil, false
	}
	return o.SupportsAllZoneTypes, true
}

// IsSetSupportsAllZoneTypes returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetSupportsAllZoneTypes() bool {
	if o != nil && !IsNil(o.SupportsAllZoneTypes) {
		return true
	}

	return false
}

// SetSupportsAllZoneTypes gets a reference to the given bool and assigns it to the SupportsAllZoneTypes field.
func (o *GetReportTypes200ResponseReportTypesInner) SetSupportsAllZoneTypes(v bool) {
	o.SupportsAllZoneTypes = &v
}

// GetIsPlugin returns the IsPlugin field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetIsPlugin() bool {
	if o == nil || IsNil(o.IsPlugin) {
		var ret bool
		return ret
	}
	return *o.IsPlugin
}

// GetIsPluginOk returns a tuple with the IsPlugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetIsPluginOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPlugin) {
		return nil, false
	}
	return o.IsPlugin, true
}

// IsSetIsPlugin returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetIsPlugin() bool {
	if o != nil && !IsNil(o.IsPlugin) {
		return true
	}

	return false
}

// SetIsPlugin gets a reference to the given bool and assigns it to the IsPlugin field.
func (o *GetReportTypes200ResponseReportTypesInner) SetIsPlugin(v bool) {
	o.IsPlugin = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// IsSetDateCreated returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *GetReportTypes200ResponseReportTypesInner) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetOptionTypes() []GetReportTypes200ResponseReportTypesInnerOptionTypesInner {
	if o == nil || IsNil(o.OptionTypes) {
		var ret []GetReportTypes200ResponseReportTypesInnerOptionTypesInner
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetOptionTypesOk() ([]GetReportTypes200ResponseReportTypesInnerOptionTypesInner, bool) {
	if o == nil || IsNil(o.OptionTypes) {
		return nil, false
	}
	return o.OptionTypes, true
}

// IsSetOptionTypes returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetOptionTypes() bool {
	if o != nil && !IsNil(o.OptionTypes) {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []GetReportTypes200ResponseReportTypesInnerOptionTypesInner and assigns it to the OptionTypes field.
func (o *GetReportTypes200ResponseReportTypesInner) SetOptionTypes(v []GetReportTypes200ResponseReportTypesInnerOptionTypesInner) {
	o.OptionTypes = v
}

// GetSupportedZoneTypes returns the SupportedZoneTypes field value if set, zero value otherwise.
func (o *GetReportTypes200ResponseReportTypesInner) GetSupportedZoneTypes() []ListBackupSettings200ResponseBackupSettingsDefaultSchedule {
	if o == nil || IsNil(o.SupportedZoneTypes) {
		var ret []ListBackupSettings200ResponseBackupSettingsDefaultSchedule
		return ret
	}
	return o.SupportedZoneTypes
}

// GetSupportedZoneTypesOk returns a tuple with the SupportedZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportTypes200ResponseReportTypesInner) GetSupportedZoneTypesOk() ([]ListBackupSettings200ResponseBackupSettingsDefaultSchedule, bool) {
	if o == nil || IsNil(o.SupportedZoneTypes) {
		return nil, false
	}
	return o.SupportedZoneTypes, true
}

// IsSetSupportedZoneTypes returns a boolean if a field has been set.
func (o *GetReportTypes200ResponseReportTypesInner) IsSetSupportedZoneTypes() bool {
	if o != nil && !IsNil(o.SupportedZoneTypes) {
		return true
	}

	return false
}

// SetSupportedZoneTypes gets a reference to the given []ListBackupSettings200ResponseBackupSettingsDefaultSchedule and assigns it to the SupportedZoneTypes field.
func (o *GetReportTypes200ResponseReportTypesInner) SetSupportedZoneTypes(v []ListBackupSettings200ResponseBackupSettingsDefaultSchedule) {
	o.SupportedZoneTypes = v
}

func (o GetReportTypes200ResponseReportTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReportTypes200ResponseReportTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.MasterOnly) {
		toSerialize["masterOnly"] = o.MasterOnly
	}
	if !IsNil(o.OwnerOnly) {
		toSerialize["ownerOnly"] = o.OwnerOnly
	}
	if !IsNil(o.SupportsAllZoneTypes) {
		toSerialize["supportsAllZoneTypes"] = o.SupportsAllZoneTypes
	}
	if !IsNil(o.IsPlugin) {
		toSerialize["isPlugin"] = o.IsPlugin
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.OptionTypes) {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if !IsNil(o.SupportedZoneTypes) {
		toSerialize["supportedZoneTypes"] = o.SupportedZoneTypes
	}
	return toSerialize, nil
}

type NullableGetReportTypes200ResponseReportTypesInner struct {
	value *GetReportTypes200ResponseReportTypesInner
	isSet bool
}

func (v NullableGetReportTypes200ResponseReportTypesInner) Get() *GetReportTypes200ResponseReportTypesInner {
	return v.value
}

func (v *NullableGetReportTypes200ResponseReportTypesInner) Set(val *GetReportTypes200ResponseReportTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReportTypes200ResponseReportTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReportTypes200ResponseReportTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReportTypes200ResponseReportTypesInner(val *GetReportTypes200ResponseReportTypesInner) *NullableGetReportTypes200ResponseReportTypesInner {
	return &NullableGetReportTypes200ResponseReportTypesInner{value: val, isSet: true}
}

func (v NullableGetReportTypes200ResponseReportTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReportTypes200ResponseReportTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


