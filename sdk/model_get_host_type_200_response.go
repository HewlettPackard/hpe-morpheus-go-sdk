/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetHostType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetHostType200Response{}

// GetHostType200Response struct for GetHostType200Response
type GetHostType200Response struct {
	ServerType           *ListHostTypes200ResponseAllOfServerTypesInner `json:"serverType,omitempty"`
	AdditionalProperties map[string]interface{}                         `json:",remain"`
}

type _GetHostType200Response GetHostType200Response

// NewGetHostType200Response instantiates a new GetHostType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHostType200Response() *GetHostType200Response {
	this := GetHostType200Response{}
	return &this
}

// NewGetHostType200ResponseWithDefaults instantiates a new GetHostType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHostType200ResponseWithDefaults() *GetHostType200Response {
	this := GetHostType200Response{}
	return &this
}

// GetServerType returns the ServerType field value if set, zero value otherwise.
func (o *GetHostType200Response) GetServerType() ListHostTypes200ResponseAllOfServerTypesInner {
	if o == nil || IsNil(o.ServerType) {
		var ret ListHostTypes200ResponseAllOfServerTypesInner
		return ret
	}
	return *o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHostType200Response) GetServerTypeOk() (*ListHostTypes200ResponseAllOfServerTypesInner, bool) {
	if o == nil || IsNil(o.ServerType) {
		return nil, false
	}
	return o.ServerType, true
}

// IsSetServerType returns a boolean if a field has been set.
func (o *GetHostType200Response) IsSetServerType() bool {
	if o != nil && !IsNil(o.ServerType) {
		return true
	}

	return false
}

// SetServerType gets a reference to the given ListHostTypes200ResponseAllOfServerTypesInner and assigns it to the ServerType field.
func (o *GetHostType200Response) SetServerType(v ListHostTypes200ResponseAllOfServerTypesInner) {
	o.ServerType = &v
}

func (o GetHostType200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetHostType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerType) {
		toSerialize["serverType"] = o.ServerType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *GetHostType200Response) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
