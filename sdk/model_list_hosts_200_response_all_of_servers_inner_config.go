/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHosts200ResponseAllOfServersInnerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHosts200ResponseAllOfServersInnerConfig{}

// ListHosts200ResponseAllOfServersInnerConfig struct for ListHosts200ResponseAllOfServersInnerConfig
type ListHosts200ResponseAllOfServersInnerConfig struct {
	PoolProviderType *string `json:"poolProviderType,omitempty"`
	IsVpcSelectable *bool `json:"isVpcSelectable,omitempty"`
	SmbiosAssetTag *string `json:"smbiosAssetTag,omitempty"`
	IsEC2 *bool `json:"isEC2,omitempty"`
	ResourcePoolId *int64 `json:"resourcePoolId,omitempty"`
	HostId *int64 `json:"hostId,omitempty"`
	CreateUser *ListHosts200ResponseAllOfServersInnerConfigCreateUser `json:"createUser,omitempty"`
	NestedVirtualization *string `json:"nestedVirtualization,omitempty"`
	VmwareFolderId *string `json:"vmwareFolderId,omitempty"`
	NoAgent *bool `json:"noAgent,omitempty"`
	PowerScheduleType *int64 `json:"powerScheduleType,omitempty"`
}

// NewListHosts200ResponseAllOfServersInnerConfig instantiates a new ListHosts200ResponseAllOfServersInnerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHosts200ResponseAllOfServersInnerConfig() *ListHosts200ResponseAllOfServersInnerConfig {
	this := ListHosts200ResponseAllOfServersInnerConfig{}
	return &this
}

// NewListHosts200ResponseAllOfServersInnerConfigWithDefaults instantiates a new ListHosts200ResponseAllOfServersInnerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHosts200ResponseAllOfServersInnerConfigWithDefaults() *ListHosts200ResponseAllOfServersInnerConfig {
	this := ListHosts200ResponseAllOfServersInnerConfig{}
	return &this
}

// GetPoolProviderType returns the PoolProviderType field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetPoolProviderType() string {
	if o == nil || IsNil(o.PoolProviderType) {
		var ret string
		return ret
	}
	return *o.PoolProviderType
}

// GetPoolProviderTypeOk returns a tuple with the PoolProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetPoolProviderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolProviderType) {
		return nil, false
	}
	return o.PoolProviderType, true
}

// IsSetPoolProviderType returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetPoolProviderType() bool {
	if o != nil && !IsNil(o.PoolProviderType) {
		return true
	}

	return false
}

// SetPoolProviderType gets a reference to the given string and assigns it to the PoolProviderType field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetPoolProviderType(v string) {
	o.PoolProviderType = &v
}

// GetIsVpcSelectable returns the IsVpcSelectable field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetIsVpcSelectable() bool {
	if o == nil || IsNil(o.IsVpcSelectable) {
		var ret bool
		return ret
	}
	return *o.IsVpcSelectable
}

// GetIsVpcSelectableOk returns a tuple with the IsVpcSelectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetIsVpcSelectableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVpcSelectable) {
		return nil, false
	}
	return o.IsVpcSelectable, true
}

// IsSetIsVpcSelectable returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetIsVpcSelectable() bool {
	if o != nil && !IsNil(o.IsVpcSelectable) {
		return true
	}

	return false
}

// SetIsVpcSelectable gets a reference to the given bool and assigns it to the IsVpcSelectable field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetIsVpcSelectable(v bool) {
	o.IsVpcSelectable = &v
}

// GetSmbiosAssetTag returns the SmbiosAssetTag field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetSmbiosAssetTag() string {
	if o == nil || IsNil(o.SmbiosAssetTag) {
		var ret string
		return ret
	}
	return *o.SmbiosAssetTag
}

// GetSmbiosAssetTagOk returns a tuple with the SmbiosAssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetSmbiosAssetTagOk() (*string, bool) {
	if o == nil || IsNil(o.SmbiosAssetTag) {
		return nil, false
	}
	return o.SmbiosAssetTag, true
}

// IsSetSmbiosAssetTag returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetSmbiosAssetTag() bool {
	if o != nil && !IsNil(o.SmbiosAssetTag) {
		return true
	}

	return false
}

// SetSmbiosAssetTag gets a reference to the given string and assigns it to the SmbiosAssetTag field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetSmbiosAssetTag(v string) {
	o.SmbiosAssetTag = &v
}

// GetIsEC2 returns the IsEC2 field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetIsEC2() bool {
	if o == nil || IsNil(o.IsEC2) {
		var ret bool
		return ret
	}
	return *o.IsEC2
}

// GetIsEC2Ok returns a tuple with the IsEC2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetIsEC2Ok() (*bool, bool) {
	if o == nil || IsNil(o.IsEC2) {
		return nil, false
	}
	return o.IsEC2, true
}

// IsSetIsEC2 returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetIsEC2() bool {
	if o != nil && !IsNil(o.IsEC2) {
		return true
	}

	return false
}

// SetIsEC2 gets a reference to the given bool and assigns it to the IsEC2 field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetIsEC2(v bool) {
	o.IsEC2 = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetResourcePoolId() int64 {
	if o == nil || IsNil(o.ResourcePoolId) {
		var ret int64
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetResourcePoolIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ResourcePoolId) {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// IsSetResourcePoolId returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetResourcePoolId() bool {
	if o != nil && !IsNil(o.ResourcePoolId) {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given int64 and assigns it to the ResourcePoolId field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetResourcePoolId(v int64) {
	o.ResourcePoolId = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetHostId() int64 {
	if o == nil || IsNil(o.HostId) {
		var ret int64
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetHostIdOk() (*int64, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// IsSetHostId returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given int64 and assigns it to the HostId field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetHostId(v int64) {
	o.HostId = &v
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetCreateUser() ListHosts200ResponseAllOfServersInnerConfigCreateUser {
	if o == nil || IsNil(o.CreateUser) {
		var ret ListHosts200ResponseAllOfServersInnerConfigCreateUser
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetCreateUserOk() (*ListHosts200ResponseAllOfServersInnerConfigCreateUser, bool) {
	if o == nil || IsNil(o.CreateUser) {
		return nil, false
	}
	return o.CreateUser, true
}

// IsSetCreateUser returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetCreateUser() bool {
	if o != nil && !IsNil(o.CreateUser) {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given ListHosts200ResponseAllOfServersInnerConfigCreateUser and assigns it to the CreateUser field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetCreateUser(v ListHosts200ResponseAllOfServersInnerConfigCreateUser) {
	o.CreateUser = &v
}

// GetNestedVirtualization returns the NestedVirtualization field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetNestedVirtualization() string {
	if o == nil || IsNil(o.NestedVirtualization) {
		var ret string
		return ret
	}
	return *o.NestedVirtualization
}

// GetNestedVirtualizationOk returns a tuple with the NestedVirtualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetNestedVirtualizationOk() (*string, bool) {
	if o == nil || IsNil(o.NestedVirtualization) {
		return nil, false
	}
	return o.NestedVirtualization, true
}

// IsSetNestedVirtualization returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetNestedVirtualization() bool {
	if o != nil && !IsNil(o.NestedVirtualization) {
		return true
	}

	return false
}

// SetNestedVirtualization gets a reference to the given string and assigns it to the NestedVirtualization field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetNestedVirtualization(v string) {
	o.NestedVirtualization = &v
}

// GetVmwareFolderId returns the VmwareFolderId field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetVmwareFolderId() string {
	if o == nil || IsNil(o.VmwareFolderId) {
		var ret string
		return ret
	}
	return *o.VmwareFolderId
}

// GetVmwareFolderIdOk returns a tuple with the VmwareFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetVmwareFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.VmwareFolderId) {
		return nil, false
	}
	return o.VmwareFolderId, true
}

// IsSetVmwareFolderId returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetVmwareFolderId() bool {
	if o != nil && !IsNil(o.VmwareFolderId) {
		return true
	}

	return false
}

// SetVmwareFolderId gets a reference to the given string and assigns it to the VmwareFolderId field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetVmwareFolderId(v string) {
	o.VmwareFolderId = &v
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetNoAgent() bool {
	if o == nil || IsNil(o.NoAgent) {
		var ret bool
		return ret
	}
	return *o.NoAgent
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetNoAgentOk() (*bool, bool) {
	if o == nil || IsNil(o.NoAgent) {
		return nil, false
	}
	return o.NoAgent, true
}

// IsSetNoAgent returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetNoAgent() bool {
	if o != nil && !IsNil(o.NoAgent) {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given bool and assigns it to the NoAgent field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetNoAgent(v bool) {
	o.NoAgent = &v
}

// GetPowerScheduleType returns the PowerScheduleType field value if set, zero value otherwise.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetPowerScheduleType() int64 {
	if o == nil || IsNil(o.PowerScheduleType) {
		var ret int64
		return ret
	}
	return *o.PowerScheduleType
}

// GetPowerScheduleTypeOk returns a tuple with the PowerScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) GetPowerScheduleTypeOk() (*int64, bool) {
	if o == nil || IsNil(o.PowerScheduleType) {
		return nil, false
	}
	return o.PowerScheduleType, true
}

// IsSetPowerScheduleType returns a boolean if a field has been set.
func (o *ListHosts200ResponseAllOfServersInnerConfig) IsSetPowerScheduleType() bool {
	if o != nil && !IsNil(o.PowerScheduleType) {
		return true
	}

	return false
}

// SetPowerScheduleType gets a reference to the given int64 and assigns it to the PowerScheduleType field.
func (o *ListHosts200ResponseAllOfServersInnerConfig) SetPowerScheduleType(v int64) {
	o.PowerScheduleType = &v
}

func (o ListHosts200ResponseAllOfServersInnerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHosts200ResponseAllOfServersInnerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PoolProviderType) {
		toSerialize["poolProviderType"] = o.PoolProviderType
	}
	if !IsNil(o.IsVpcSelectable) {
		toSerialize["isVpcSelectable"] = o.IsVpcSelectable
	}
	if !IsNil(o.SmbiosAssetTag) {
		toSerialize["smbiosAssetTag"] = o.SmbiosAssetTag
	}
	if !IsNil(o.IsEC2) {
		toSerialize["isEC2"] = o.IsEC2
	}
	if !IsNil(o.ResourcePoolId) {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if !IsNil(o.HostId) {
		toSerialize["hostId"] = o.HostId
	}
	if !IsNil(o.CreateUser) {
		toSerialize["createUser"] = o.CreateUser
	}
	if !IsNil(o.NestedVirtualization) {
		toSerialize["nestedVirtualization"] = o.NestedVirtualization
	}
	if !IsNil(o.VmwareFolderId) {
		toSerialize["vmwareFolderId"] = o.VmwareFolderId
	}
	if !IsNil(o.NoAgent) {
		toSerialize["noAgent"] = o.NoAgent
	}
	if !IsNil(o.PowerScheduleType) {
		toSerialize["powerScheduleType"] = o.PowerScheduleType
	}
	return toSerialize, nil
}

type NullableListHosts200ResponseAllOfServersInnerConfig struct {
	value *ListHosts200ResponseAllOfServersInnerConfig
	isSet bool
}

func (v NullableListHosts200ResponseAllOfServersInnerConfig) Get() *ListHosts200ResponseAllOfServersInnerConfig {
	return v.value
}

func (v *NullableListHosts200ResponseAllOfServersInnerConfig) Set(val *ListHosts200ResponseAllOfServersInnerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableListHosts200ResponseAllOfServersInnerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableListHosts200ResponseAllOfServersInnerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHosts200ResponseAllOfServersInnerConfig(val *ListHosts200ResponseAllOfServersInnerConfig) *NullableListHosts200ResponseAllOfServersInnerConfig {
	return &NullableListHosts200ResponseAllOfServersInnerConfig{value: val, isSet: true}
}

func (v NullableListHosts200ResponseAllOfServersInnerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHosts200ResponseAllOfServersInnerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


