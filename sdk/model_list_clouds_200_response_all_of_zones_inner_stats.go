/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListClouds200ResponseAllOfZonesInnerStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClouds200ResponseAllOfZonesInnerStats{}

// ListClouds200ResponseAllOfZonesInnerStats struct for ListClouds200ResponseAllOfZonesInnerStats
type ListClouds200ResponseAllOfZonesInnerStats struct {
	ServerCounts         *ListClouds200ResponseAllOfZonesInnerStatsServerCounts `json:"serverCounts,omitempty"`
	AdditionalProperties map[string]interface{}                                 `json:",remain"`
}

type _ListClouds200ResponseAllOfZonesInnerStats ListClouds200ResponseAllOfZonesInnerStats

// NewListClouds200ResponseAllOfZonesInnerStats instantiates a new ListClouds200ResponseAllOfZonesInnerStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClouds200ResponseAllOfZonesInnerStats() *ListClouds200ResponseAllOfZonesInnerStats {
	this := ListClouds200ResponseAllOfZonesInnerStats{}
	return &this
}

// NewListClouds200ResponseAllOfZonesInnerStatsWithDefaults instantiates a new ListClouds200ResponseAllOfZonesInnerStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClouds200ResponseAllOfZonesInnerStatsWithDefaults() *ListClouds200ResponseAllOfZonesInnerStats {
	this := ListClouds200ResponseAllOfZonesInnerStats{}
	return &this
}

// GetServerCounts returns the ServerCounts field value if set, zero value otherwise.
func (o *ListClouds200ResponseAllOfZonesInnerStats) GetServerCounts() ListClouds200ResponseAllOfZonesInnerStatsServerCounts {
	if o == nil || IsNil(o.ServerCounts) {
		var ret ListClouds200ResponseAllOfZonesInnerStatsServerCounts
		return ret
	}
	return *o.ServerCounts
}

// GetServerCountsOk returns a tuple with the ServerCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClouds200ResponseAllOfZonesInnerStats) GetServerCountsOk() (*ListClouds200ResponseAllOfZonesInnerStatsServerCounts, bool) {
	if o == nil || IsNil(o.ServerCounts) {
		return nil, false
	}
	return o.ServerCounts, true
}

// IsSetServerCounts returns a boolean if a field has been set.
func (o *ListClouds200ResponseAllOfZonesInnerStats) IsSetServerCounts() bool {
	if o != nil && !IsNil(o.ServerCounts) {
		return true
	}

	return false
}

// SetServerCounts gets a reference to the given ListClouds200ResponseAllOfZonesInnerStatsServerCounts and assigns it to the ServerCounts field.
func (o *ListClouds200ResponseAllOfZonesInnerStats) SetServerCounts(v ListClouds200ResponseAllOfZonesInnerStatsServerCounts) {
	o.ServerCounts = &v
}

func (o ListClouds200ResponseAllOfZonesInnerStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListClouds200ResponseAllOfZonesInnerStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerCounts) {
		toSerialize["serverCounts"] = o.ServerCounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListClouds200ResponseAllOfZonesInnerStats) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
