/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)


// ListTasks200ResponseAllOfTasksInner struct for ListTasks200ResponseAllOfTasksInner
type ListTasks200ResponseAllOfTasksInner struct {
	ListTasks200ResponseAllOfTasksInnerAnyOf *ListTasks200ResponseAllOfTasksInnerAnyOf
	ListTasks200ResponseAllOfTasksInnerAnyOf1 *ListTasks200ResponseAllOfTasksInnerAnyOf1
	ListTasks200ResponseAllOfTasksInnerAnyOf10 *ListTasks200ResponseAllOfTasksInnerAnyOf10
	ListTasks200ResponseAllOfTasksInnerAnyOf11 *ListTasks200ResponseAllOfTasksInnerAnyOf11
	ListTasks200ResponseAllOfTasksInnerAnyOf12 *ListTasks200ResponseAllOfTasksInnerAnyOf12
	ListTasks200ResponseAllOfTasksInnerAnyOf13 *ListTasks200ResponseAllOfTasksInnerAnyOf13
	ListTasks200ResponseAllOfTasksInnerAnyOf14 *ListTasks200ResponseAllOfTasksInnerAnyOf14
	ListTasks200ResponseAllOfTasksInnerAnyOf15 *ListTasks200ResponseAllOfTasksInnerAnyOf15
	ListTasks200ResponseAllOfTasksInnerAnyOf16 *ListTasks200ResponseAllOfTasksInnerAnyOf16
	ListTasks200ResponseAllOfTasksInnerAnyOf2 *ListTasks200ResponseAllOfTasksInnerAnyOf2
	ListTasks200ResponseAllOfTasksInnerAnyOf3 *ListTasks200ResponseAllOfTasksInnerAnyOf3
	ListTasks200ResponseAllOfTasksInnerAnyOf4 *ListTasks200ResponseAllOfTasksInnerAnyOf4
	ListTasks200ResponseAllOfTasksInnerAnyOf5 *ListTasks200ResponseAllOfTasksInnerAnyOf5
	ListTasks200ResponseAllOfTasksInnerAnyOf6 *ListTasks200ResponseAllOfTasksInnerAnyOf6
	ListTasks200ResponseAllOfTasksInnerAnyOf7 *ListTasks200ResponseAllOfTasksInnerAnyOf7
	ListTasks200ResponseAllOfTasksInnerAnyOf8 *ListTasks200ResponseAllOfTasksInnerAnyOf8
	ListTasks200ResponseAllOfTasksInnerAnyOf9 *ListTasks200ResponseAllOfTasksInnerAnyOf9
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ListTasks200ResponseAllOfTasksInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf1
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf1);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf1, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf1)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf1) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf1, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf1 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf10
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf10);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf10, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf10)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf10) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf10 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf10, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf10 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf11
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf11);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf11, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf11)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf11) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf11 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf11, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf11 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf12
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf12);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf12, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf12)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf12) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf12 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf12, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf12 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf13
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf13);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf13, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf13)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf13) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf13 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf13, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf13 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf14
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf14);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf14, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf14)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf14) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf14 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf14, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf14 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf15
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf15);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf15, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf15)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf15) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf15 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf15, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf15 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf16
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf16);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf16, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf16)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf16) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf16 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf16, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf16 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf2
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf2);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf2, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf2)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf2) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf2 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf2, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf2 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf3
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf3);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf3, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf3)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf3) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf3 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf3, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf3 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf4
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf4);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf4, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf4)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf4) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf4 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf4, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf4 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf5
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf5);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf5, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf5)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf5) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf5 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf5, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf5 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf6
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf6);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf6, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf6)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf6) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf6 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf6, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf6 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf7
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf7);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf7, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf7)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf7) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf7 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf7, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf7 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf8
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf8);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf8, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf8)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf8) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf8 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf8, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf8 = nil
	}

	// try to unmarshal JSON data into ListTasks200ResponseAllOfTasksInnerAnyOf9
	err = json.Unmarshal(data, &dst.ListTasks200ResponseAllOfTasksInnerAnyOf9);
	if err == nil {
		jsonListTasks200ResponseAllOfTasksInnerAnyOf9, _ := json.Marshal(dst.ListTasks200ResponseAllOfTasksInnerAnyOf9)
		if string(jsonListTasks200ResponseAllOfTasksInnerAnyOf9) == "{}" { // empty struct
			dst.ListTasks200ResponseAllOfTasksInnerAnyOf9 = nil
		} else {
			return nil // data stored in dst.ListTasks200ResponseAllOfTasksInnerAnyOf9, return on the first match
		}
	} else {
		dst.ListTasks200ResponseAllOfTasksInnerAnyOf9 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ListTasks200ResponseAllOfTasksInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListTasks200ResponseAllOfTasksInner) MarshalJSON() ([]byte, error) {
	if src.ListTasks200ResponseAllOfTasksInnerAnyOf != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf1 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf1)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf10 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf10)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf11 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf11)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf12 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf12)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf13 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf13)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf14 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf14)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf15 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf15)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf16 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf16)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf2 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf2)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf3 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf3)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf4 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf4)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf5 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf5)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf6 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf6)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf7 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf7)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf8 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf8)
	}

	if src.ListTasks200ResponseAllOfTasksInnerAnyOf9 != nil {
		return json.Marshal(&src.ListTasks200ResponseAllOfTasksInnerAnyOf9)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableListTasks200ResponseAllOfTasksInner struct {
	value *ListTasks200ResponseAllOfTasksInner
	isSet bool
}

func (v NullableListTasks200ResponseAllOfTasksInner) Get() *ListTasks200ResponseAllOfTasksInner {
	return v.value
}

func (v *NullableListTasks200ResponseAllOfTasksInner) Set(val *ListTasks200ResponseAllOfTasksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasks200ResponseAllOfTasksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasks200ResponseAllOfTasksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasks200ResponseAllOfTasksInner(val *ListTasks200ResponseAllOfTasksInner) *NullableListTasks200ResponseAllOfTasksInner {
	return &NullableListTasks200ResponseAllOfTasksInner{value: val, isSet: true}
}

func (v NullableListTasks200ResponseAllOfTasksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTasks200ResponseAllOfTasksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


