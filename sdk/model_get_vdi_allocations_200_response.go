/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetVDIAllocations200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVDIAllocations200Response{}

// GetVDIAllocations200Response struct for GetVDIAllocations200Response
type GetVDIAllocations200Response struct {
	VdiAllocation *ListVDIAllocations200ResponseAllOfVdiAllocationsInner `json:"vdiAllocation,omitempty"`
}

// NewGetVDIAllocations200Response instantiates a new GetVDIAllocations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVDIAllocations200Response() *GetVDIAllocations200Response {
	this := GetVDIAllocations200Response{}
	return &this
}

// NewGetVDIAllocations200ResponseWithDefaults instantiates a new GetVDIAllocations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVDIAllocations200ResponseWithDefaults() *GetVDIAllocations200Response {
	this := GetVDIAllocations200Response{}
	return &this
}

// GetVdiAllocation returns the VdiAllocation field value if set, zero value otherwise.
func (o *GetVDIAllocations200Response) GetVdiAllocation() ListVDIAllocations200ResponseAllOfVdiAllocationsInner {
	if o == nil || IsNil(o.VdiAllocation) {
		var ret ListVDIAllocations200ResponseAllOfVdiAllocationsInner
		return ret
	}
	return *o.VdiAllocation
}

// GetVdiAllocationOk returns a tuple with the VdiAllocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVDIAllocations200Response) GetVdiAllocationOk() (*ListVDIAllocations200ResponseAllOfVdiAllocationsInner, bool) {
	if o == nil || IsNil(o.VdiAllocation) {
		return nil, false
	}
	return o.VdiAllocation, true
}

// IsSetVdiAllocation returns a boolean if a field has been set.
func (o *GetVDIAllocations200Response) IsSetVdiAllocation() bool {
	if o != nil && !IsNil(o.VdiAllocation) {
		return true
	}

	return false
}

// SetVdiAllocation gets a reference to the given ListVDIAllocations200ResponseAllOfVdiAllocationsInner and assigns it to the VdiAllocation field.
func (o *GetVDIAllocations200Response) SetVdiAllocation(v ListVDIAllocations200ResponseAllOfVdiAllocationsInner) {
	o.VdiAllocation = &v
}

func (o GetVDIAllocations200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVDIAllocations200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VdiAllocation) {
		toSerialize["vdiAllocation"] = o.VdiAllocation
	}
	return toSerialize, nil
}

type NullableGetVDIAllocations200Response struct {
	value *GetVDIAllocations200Response
	isSet bool
}

func (v NullableGetVDIAllocations200Response) Get() *GetVDIAllocations200Response {
	return v.value
}

func (v *NullableGetVDIAllocations200Response) Set(val *GetVDIAllocations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVDIAllocations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVDIAllocations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVDIAllocations200Response(val *GetVDIAllocations200Response) *NullableGetVDIAllocations200Response {
	return &NullableGetVDIAllocations200Response{value: val, isSet: true}
}

func (v NullableGetVDIAllocations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVDIAllocations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


