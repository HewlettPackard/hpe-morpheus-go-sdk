/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddSpecTemplateRequestSpecTemplateFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSpecTemplateRequestSpecTemplateFile{}

// AddSpecTemplateRequestSpecTemplateFile File, object specifying file type and content
type AddSpecTemplateRequestSpecTemplateFile struct {
	// File Source i.e. local, repository, url.
	SourceType string `json:"sourceType"`
	// File content, the template text. Only required when sourceType is `local`.
	Content *string `json:"content,omitempty"`
	// Content Path, the repo file location or url. Required when sourceType is repository or url.
	ContentPath *string `json:"contentPath,omitempty"`
	// Content Ref, the branch/tag. Only used when sourceType is repo.
	ContentRef *string `json:"contentRef,omitempty"`
	Repository *AddSpecTemplateRequestSpecTemplateFileRepository `json:"repository,omitempty"`
}

type _AddSpecTemplateRequestSpecTemplateFile AddSpecTemplateRequestSpecTemplateFile

// NewAddSpecTemplateRequestSpecTemplateFile instantiates a new AddSpecTemplateRequestSpecTemplateFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSpecTemplateRequestSpecTemplateFile(sourceType string) *AddSpecTemplateRequestSpecTemplateFile {
	this := AddSpecTemplateRequestSpecTemplateFile{}
	this.SourceType = sourceType
	return &this
}

// NewAddSpecTemplateRequestSpecTemplateFileWithDefaults instantiates a new AddSpecTemplateRequestSpecTemplateFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSpecTemplateRequestSpecTemplateFileWithDefaults() *AddSpecTemplateRequestSpecTemplateFile {
	this := AddSpecTemplateRequestSpecTemplateFile{}
	var sourceType string = "local"
	this.SourceType = sourceType
	return &this
}

// GetSourceType returns the SourceType field value
func (o *AddSpecTemplateRequestSpecTemplateFile) GetSourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *AddSpecTemplateRequestSpecTemplateFile) SetSourceType(v string) {
	o.SourceType = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// IsSetContent returns a boolean if a field has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) IsSetContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *AddSpecTemplateRequestSpecTemplateFile) SetContent(v string) {
	o.Content = &v
}

// GetContentPath returns the ContentPath field value if set, zero value otherwise.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContentPath() string {
	if o == nil || IsNil(o.ContentPath) {
		var ret string
		return ret
	}
	return *o.ContentPath
}

// GetContentPathOk returns a tuple with the ContentPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContentPathOk() (*string, bool) {
	if o == nil || IsNil(o.ContentPath) {
		return nil, false
	}
	return o.ContentPath, true
}

// IsSetContentPath returns a boolean if a field has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) IsSetContentPath() bool {
	if o != nil && !IsNil(o.ContentPath) {
		return true
	}

	return false
}

// SetContentPath gets a reference to the given string and assigns it to the ContentPath field.
func (o *AddSpecTemplateRequestSpecTemplateFile) SetContentPath(v string) {
	o.ContentPath = &v
}

// GetContentRef returns the ContentRef field value if set, zero value otherwise.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContentRef() string {
	if o == nil || IsNil(o.ContentRef) {
		var ret string
		return ret
	}
	return *o.ContentRef
}

// GetContentRefOk returns a tuple with the ContentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetContentRefOk() (*string, bool) {
	if o == nil || IsNil(o.ContentRef) {
		return nil, false
	}
	return o.ContentRef, true
}

// IsSetContentRef returns a boolean if a field has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) IsSetContentRef() bool {
	if o != nil && !IsNil(o.ContentRef) {
		return true
	}

	return false
}

// SetContentRef gets a reference to the given string and assigns it to the ContentRef field.
func (o *AddSpecTemplateRequestSpecTemplateFile) SetContentRef(v string) {
	o.ContentRef = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetRepository() AddSpecTemplateRequestSpecTemplateFileRepository {
	if o == nil || IsNil(o.Repository) {
		var ret AddSpecTemplateRequestSpecTemplateFileRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) GetRepositoryOk() (*AddSpecTemplateRequestSpecTemplateFileRepository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// IsSetRepository returns a boolean if a field has been set.
func (o *AddSpecTemplateRequestSpecTemplateFile) IsSetRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given AddSpecTemplateRequestSpecTemplateFileRepository and assigns it to the Repository field.
func (o *AddSpecTemplateRequestSpecTemplateFile) SetRepository(v AddSpecTemplateRequestSpecTemplateFileRepository) {
	o.Repository = &v
}

func (o AddSpecTemplateRequestSpecTemplateFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSpecTemplateRequestSpecTemplateFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceType"] = o.SourceType
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ContentPath) {
		toSerialize["contentPath"] = o.ContentPath
	}
	if !IsNil(o.ContentRef) {
		toSerialize["contentRef"] = o.ContentRef
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	return toSerialize, nil
}

func (o *AddSpecTemplateRequestSpecTemplateFile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddSpecTemplateRequestSpecTemplateFile := _AddSpecTemplateRequestSpecTemplateFile{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddSpecTemplateRequestSpecTemplateFile)

	if err != nil {
		return err
	}

	*o = AddSpecTemplateRequestSpecTemplateFile(varAddSpecTemplateRequestSpecTemplateFile)

	return err
}

type NullableAddSpecTemplateRequestSpecTemplateFile struct {
	value *AddSpecTemplateRequestSpecTemplateFile
	isSet bool
}

func (v NullableAddSpecTemplateRequestSpecTemplateFile) Get() *AddSpecTemplateRequestSpecTemplateFile {
	return v.value
}

func (v *NullableAddSpecTemplateRequestSpecTemplateFile) Set(val *AddSpecTemplateRequestSpecTemplateFile) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSpecTemplateRequestSpecTemplateFile) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSpecTemplateRequestSpecTemplateFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSpecTemplateRequestSpecTemplateFile(val *AddSpecTemplateRequestSpecTemplateFile) *NullableAddSpecTemplateRequestSpecTemplateFile {
	return &NullableAddSpecTemplateRequestSpecTemplateFile{value: val, isSet: true}
}

func (v NullableAddSpecTemplateRequestSpecTemplateFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSpecTemplateRequestSpecTemplateFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


