/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateApplianceSettingsRequestApplianceSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApplianceSettingsRequestApplianceSettings{}

// UpdateApplianceSettingsRequestApplianceSettings struct for UpdateApplianceSettingsRequestApplianceSettings
type UpdateApplianceSettingsRequestApplianceSettings struct {
	// Appliance URL
	ApplianceUrl *string `json:"applianceUrl,omitempty"`
	// Internal Appliance URL (PXE)
	InternalApplianceUrl *string `json:"internalApplianceUrl,omitempty"`
	// API Allowed Origins
	CorsAllowed *string `json:"corsAllowed,omitempty"`
	// Registration enabled (true, false)
	RegistrationEnabled *bool `json:"registrationEnabled,omitempty"`
	// Default tenant role ID
	DefaultRoleId *int64 `json:"defaultRoleId,omitempty"`
	// Default user role ID
	DefaultUserRoleId *int64 `json:"defaultUserRoleId,omitempty"`
	// Docker privileged mode (true, false)
	DockerPrivilegedMode *bool `json:"dockerPrivilegedMode,omitempty"`
	// Min Password Length
	PasswordMinLength *string `json:"passwordMinLength,omitempty"`
	// Min Password Uppercase
	PasswordMinUpperCase *string `json:"passwordMinUpperCase,omitempty"`
	// Min Password Numbers
	PasswordMinNumbers *string `json:"passwordMinNumbers,omitempty"`
	// Min Password Symbols
	PasswordMinSymbols *string `json:"passwordMinSymbols,omitempty"`
	// User Browser Session Timeout (Minutes)
	UserBrowserSessionTimeout *string `json:"userBrowserSessionTimeout,omitempty"`
	// User Browser Session Warning (Minutes)
	UserBrowserSessionWarning *string `json:"userBrowserSessionWarning,omitempty"`
	// Expire password after days. Setting to 0 disabled this feature
	ExpirePwdDays *int64 `json:"expirePwdDays,omitempty"`
	// Disable user after number of attempts. Set to 0 to disable this feature
	DisableAfterAttempts *int64 `json:"disableAfterAttempts,omitempty"`
	// Disable user if inactive for specified days. Set to 0 to disable this feature
	DisableAfterDaysInactive *int64 `json:"disableAfterDaysInactive,omitempty"`
	// Send warning email number of days in advance before deactivating. Set to 0 to disable this feature
	WarnUserDaysBefore *int64 `json:"warnUserDaysBefore,omitempty"`
	// From email address
	SmtpMailFrom *string `json:"smtpMailFrom,omitempty"`
	// SMTP server / host
	SmtpServer *string `json:"smtpServer,omitempty"`
	// SMTP port
	SmtpPort *int64 `json:"smtpPort,omitempty"`
	// Use SSL for SMTP connection
	SmtpSSL *bool `json:"smtpSSL,omitempty"`
	// Use TLS for SMTP connections
	SmtpTLS *bool `json:"smtpTLS,omitempty"`
	// SMTP username
	SmtpUser *string `json:"smtpUser,omitempty"`
	// SMTP password
	SmtpPassword *string `json:"smtpPassword,omitempty"`
	// Proxy host
	ProxyHost *string `json:"proxyHost,omitempty"`
	// Proxy port
	ProxyPort *string `json:"proxyPort,omitempty"`
	// Proxy username
	ProxyUser *string `json:"proxyUser,omitempty"`
	// Proxy password
	ProxyPassword *string `json:"proxyPassword,omitempty"`
	// Proxy domain
	ProxyDomain *string `json:"proxyDomain,omitempty"`
	// Proxy workstation
	ProxyWorkstation *string `json:"proxyWorkstation,omitempty"`
	// Currency provider
	CurrencyProvider *string `json:"currencyProvider,omitempty"`
	// Currency provider API key
	CurrencyKey *string `json:"currencyKey,omitempty"`
	// Set all cloud types enabled status on, overrides enableZoneTypes and disableZoneTypes parameters
	EnableAllZoneTypes *bool `json:"enableAllZoneTypes,omitempty"`
	// List of cloud type IDs to set enabled status on
	EnableZoneTypes []int64 `json:"enableZoneTypes,omitempty"`
	// List of cloud type IDs to set enabled status off
	DisableZoneTypes []int64 `json:"disableZoneTypes,omitempty"`
	// Set all cloud types enabled status off, can be used in conjunction with enableZoneTypes
	DisableAllZoneTypes *bool `json:"disableAllZoneTypes,omitempty"`
	// Twilio SMS Account SID
	TwilioAccountSid *string `json:"twilioAccountSid,omitempty"`
	// Twilio SMS From
	TwilioSmsFrom *string `json:"twilioSmsFrom,omitempty"`
	// Twilio SMS Auth Token
	TwilioAuthToken *string `json:"twilioAuthToken,omitempty"`
	// Cloud Sync Interval (Seconds)
	CloudSyncIntervalSeconds *int64 `json:"cloudSyncIntervalSeconds,omitempty"`
	// Cluster Sync Interval (Seconds)
	ClusterSyncIntervalSeconds *int64 `json:"clusterSyncIntervalSeconds,omitempty"`
	// Usage Retainment (Days)
	UsageRetainmentPeriod *int64 `json:"usageRetainmentPeriod,omitempty"`
	// Invoice Retainment (Days)
	InvoiceRetainmentPeriod *int64 `json:"invoiceRetainmentPeriod,omitempty"`
	// Incident Retainment (Days)
	IncidentRetainmentPeriod *int64 `json:"incidentRetainmentPeriod,omitempty"`
	// The number of days stats will be retained. (30, 60 or 90)
	StatsRetainmentPeriod *int64 `json:"statsRetainmentPeriod,omitempty"`
	// The number of days reports will be retained.
	ReportsRetainmentPeriod *int64 `json:"reportsRetainmentPeriod,omitempty"`
	// Provide a comma delimited list of ips/hostnames to be blocked when using HTTP Task Types or REST Datasource Option Lists
	HttpBlacklistHosts *string `json:"httpBlacklistHosts,omitempty"`
	// Provide a comma delimited list of ips/hostnames to be allowed when using HTTP Task Types or REST Datasource Option Lists. If not specified, only deny list is filtered out.
	HttpApprovelistHosts *string `json:"httpApprovelistHosts,omitempty"`
	// If true, disables Agent installation globally.
	NoAgent *bool `json:"noAgent,omitempty"`
	// Enable/Disable SSL Verification of Agent
	AgentSSLVerify *bool `json:"agentSSLVerify,omitempty"`
	// Enable/Disable SSH Password Authentication for the Appliance
	DisableSSHPasswordAuth *bool `json:"disableSSHPasswordAuth,omitempty"`
	// Default appliance Locale. Setting a default locale for the application will override user browser preferences.
	DefaultLocale *string `json:"defaultLocale,omitempty"`
	// ID of the VDI gateway.
	DefaultVdiGateway *int64 `json:"defaultVdiGateway,omitempty"`
	// Max option list size. Units are x10^3 (thousand). Increasing this value can adversely affect Morpheus performance. Increase with caution.
	MaxOptionListSize *int64 `json:"maxOptionListSize,omitempty"`
	// The url used for checking if there is an update for plugins. Default https\\://share.morpheusdata.com
	ExchangeUrl *string `json:"exchangeUrl,omitempty"`
}

// NewUpdateApplianceSettingsRequestApplianceSettings instantiates a new UpdateApplianceSettingsRequestApplianceSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplianceSettingsRequestApplianceSettings() *UpdateApplianceSettingsRequestApplianceSettings {
	this := UpdateApplianceSettingsRequestApplianceSettings{}
	return &this
}

// NewUpdateApplianceSettingsRequestApplianceSettingsWithDefaults instantiates a new UpdateApplianceSettingsRequestApplianceSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplianceSettingsRequestApplianceSettingsWithDefaults() *UpdateApplianceSettingsRequestApplianceSettings {
	this := UpdateApplianceSettingsRequestApplianceSettings{}
	return &this
}

// GetApplianceUrl returns the ApplianceUrl field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetApplianceUrl() string {
	if o == nil || IsNil(o.ApplianceUrl) {
		var ret string
		return ret
	}
	return *o.ApplianceUrl
}

// GetApplianceUrlOk returns a tuple with the ApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceUrl) {
		return nil, false
	}
	return o.ApplianceUrl, true
}

// IsSetApplianceUrl returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetApplianceUrl() bool {
	if o != nil && !IsNil(o.ApplianceUrl) {
		return true
	}

	return false
}

// SetApplianceUrl gets a reference to the given string and assigns it to the ApplianceUrl field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetApplianceUrl(v string) {
	o.ApplianceUrl = &v
}

// GetInternalApplianceUrl returns the InternalApplianceUrl field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetInternalApplianceUrl() string {
	if o == nil || IsNil(o.InternalApplianceUrl) {
		var ret string
		return ret
	}
	return *o.InternalApplianceUrl
}

// GetInternalApplianceUrlOk returns a tuple with the InternalApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetInternalApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InternalApplianceUrl) {
		return nil, false
	}
	return o.InternalApplianceUrl, true
}

// IsSetInternalApplianceUrl returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetInternalApplianceUrl() bool {
	if o != nil && !IsNil(o.InternalApplianceUrl) {
		return true
	}

	return false
}

// SetInternalApplianceUrl gets a reference to the given string and assigns it to the InternalApplianceUrl field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetInternalApplianceUrl(v string) {
	o.InternalApplianceUrl = &v
}

// GetCorsAllowed returns the CorsAllowed field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCorsAllowed() string {
	if o == nil || IsNil(o.CorsAllowed) {
		var ret string
		return ret
	}
	return *o.CorsAllowed
}

// GetCorsAllowedOk returns a tuple with the CorsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCorsAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.CorsAllowed) {
		return nil, false
	}
	return o.CorsAllowed, true
}

// IsSetCorsAllowed returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetCorsAllowed() bool {
	if o != nil && !IsNil(o.CorsAllowed) {
		return true
	}

	return false
}

// SetCorsAllowed gets a reference to the given string and assigns it to the CorsAllowed field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetCorsAllowed(v string) {
	o.CorsAllowed = &v
}

// GetRegistrationEnabled returns the RegistrationEnabled field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetRegistrationEnabled() bool {
	if o == nil || IsNil(o.RegistrationEnabled) {
		var ret bool
		return ret
	}
	return *o.RegistrationEnabled
}

// GetRegistrationEnabledOk returns a tuple with the RegistrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetRegistrationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RegistrationEnabled) {
		return nil, false
	}
	return o.RegistrationEnabled, true
}

// IsSetRegistrationEnabled returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetRegistrationEnabled() bool {
	if o != nil && !IsNil(o.RegistrationEnabled) {
		return true
	}

	return false
}

// SetRegistrationEnabled gets a reference to the given bool and assigns it to the RegistrationEnabled field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetRegistrationEnabled(v bool) {
	o.RegistrationEnabled = &v
}

// GetDefaultRoleId returns the DefaultRoleId field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultRoleId() int64 {
	if o == nil || IsNil(o.DefaultRoleId) {
		var ret int64
		return ret
	}
	return *o.DefaultRoleId
}

// GetDefaultRoleIdOk returns a tuple with the DefaultRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultRoleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultRoleId) {
		return nil, false
	}
	return o.DefaultRoleId, true
}

// IsSetDefaultRoleId returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDefaultRoleId() bool {
	if o != nil && !IsNil(o.DefaultRoleId) {
		return true
	}

	return false
}

// SetDefaultRoleId gets a reference to the given int64 and assigns it to the DefaultRoleId field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDefaultRoleId(v int64) {
	o.DefaultRoleId = &v
}

// GetDefaultUserRoleId returns the DefaultUserRoleId field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultUserRoleId() int64 {
	if o == nil || IsNil(o.DefaultUserRoleId) {
		var ret int64
		return ret
	}
	return *o.DefaultUserRoleId
}

// GetDefaultUserRoleIdOk returns a tuple with the DefaultUserRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultUserRoleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultUserRoleId) {
		return nil, false
	}
	return o.DefaultUserRoleId, true
}

// IsSetDefaultUserRoleId returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDefaultUserRoleId() bool {
	if o != nil && !IsNil(o.DefaultUserRoleId) {
		return true
	}

	return false
}

// SetDefaultUserRoleId gets a reference to the given int64 and assigns it to the DefaultUserRoleId field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDefaultUserRoleId(v int64) {
	o.DefaultUserRoleId = &v
}

// GetDockerPrivilegedMode returns the DockerPrivilegedMode field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDockerPrivilegedMode() bool {
	if o == nil || IsNil(o.DockerPrivilegedMode) {
		var ret bool
		return ret
	}
	return *o.DockerPrivilegedMode
}

// GetDockerPrivilegedModeOk returns a tuple with the DockerPrivilegedMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDockerPrivilegedModeOk() (*bool, bool) {
	if o == nil || IsNil(o.DockerPrivilegedMode) {
		return nil, false
	}
	return o.DockerPrivilegedMode, true
}

// IsSetDockerPrivilegedMode returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDockerPrivilegedMode() bool {
	if o != nil && !IsNil(o.DockerPrivilegedMode) {
		return true
	}

	return false
}

// SetDockerPrivilegedMode gets a reference to the given bool and assigns it to the DockerPrivilegedMode field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDockerPrivilegedMode(v bool) {
	o.DockerPrivilegedMode = &v
}

// GetPasswordMinLength returns the PasswordMinLength field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinLength() string {
	if o == nil || IsNil(o.PasswordMinLength) {
		var ret string
		return ret
	}
	return *o.PasswordMinLength
}

// GetPasswordMinLengthOk returns a tuple with the PasswordMinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinLengthOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordMinLength) {
		return nil, false
	}
	return o.PasswordMinLength, true
}

// IsSetPasswordMinLength returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetPasswordMinLength() bool {
	if o != nil && !IsNil(o.PasswordMinLength) {
		return true
	}

	return false
}

// SetPasswordMinLength gets a reference to the given string and assigns it to the PasswordMinLength field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetPasswordMinLength(v string) {
	o.PasswordMinLength = &v
}

// GetPasswordMinUpperCase returns the PasswordMinUpperCase field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinUpperCase() string {
	if o == nil || IsNil(o.PasswordMinUpperCase) {
		var ret string
		return ret
	}
	return *o.PasswordMinUpperCase
}

// GetPasswordMinUpperCaseOk returns a tuple with the PasswordMinUpperCase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinUpperCaseOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordMinUpperCase) {
		return nil, false
	}
	return o.PasswordMinUpperCase, true
}

// IsSetPasswordMinUpperCase returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetPasswordMinUpperCase() bool {
	if o != nil && !IsNil(o.PasswordMinUpperCase) {
		return true
	}

	return false
}

// SetPasswordMinUpperCase gets a reference to the given string and assigns it to the PasswordMinUpperCase field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetPasswordMinUpperCase(v string) {
	o.PasswordMinUpperCase = &v
}

// GetPasswordMinNumbers returns the PasswordMinNumbers field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinNumbers() string {
	if o == nil || IsNil(o.PasswordMinNumbers) {
		var ret string
		return ret
	}
	return *o.PasswordMinNumbers
}

// GetPasswordMinNumbersOk returns a tuple with the PasswordMinNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinNumbersOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordMinNumbers) {
		return nil, false
	}
	return o.PasswordMinNumbers, true
}

// IsSetPasswordMinNumbers returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetPasswordMinNumbers() bool {
	if o != nil && !IsNil(o.PasswordMinNumbers) {
		return true
	}

	return false
}

// SetPasswordMinNumbers gets a reference to the given string and assigns it to the PasswordMinNumbers field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetPasswordMinNumbers(v string) {
	o.PasswordMinNumbers = &v
}

// GetPasswordMinSymbols returns the PasswordMinSymbols field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinSymbols() string {
	if o == nil || IsNil(o.PasswordMinSymbols) {
		var ret string
		return ret
	}
	return *o.PasswordMinSymbols
}

// GetPasswordMinSymbolsOk returns a tuple with the PasswordMinSymbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetPasswordMinSymbolsOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordMinSymbols) {
		return nil, false
	}
	return o.PasswordMinSymbols, true
}

// IsSetPasswordMinSymbols returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetPasswordMinSymbols() bool {
	if o != nil && !IsNil(o.PasswordMinSymbols) {
		return true
	}

	return false
}

// SetPasswordMinSymbols gets a reference to the given string and assigns it to the PasswordMinSymbols field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetPasswordMinSymbols(v string) {
	o.PasswordMinSymbols = &v
}

// GetUserBrowserSessionTimeout returns the UserBrowserSessionTimeout field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUserBrowserSessionTimeout() string {
	if o == nil || IsNil(o.UserBrowserSessionTimeout) {
		var ret string
		return ret
	}
	return *o.UserBrowserSessionTimeout
}

// GetUserBrowserSessionTimeoutOk returns a tuple with the UserBrowserSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUserBrowserSessionTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.UserBrowserSessionTimeout) {
		return nil, false
	}
	return o.UserBrowserSessionTimeout, true
}

// IsSetUserBrowserSessionTimeout returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetUserBrowserSessionTimeout() bool {
	if o != nil && !IsNil(o.UserBrowserSessionTimeout) {
		return true
	}

	return false
}

// SetUserBrowserSessionTimeout gets a reference to the given string and assigns it to the UserBrowserSessionTimeout field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetUserBrowserSessionTimeout(v string) {
	o.UserBrowserSessionTimeout = &v
}

// GetUserBrowserSessionWarning returns the UserBrowserSessionWarning field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUserBrowserSessionWarning() string {
	if o == nil || IsNil(o.UserBrowserSessionWarning) {
		var ret string
		return ret
	}
	return *o.UserBrowserSessionWarning
}

// GetUserBrowserSessionWarningOk returns a tuple with the UserBrowserSessionWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUserBrowserSessionWarningOk() (*string, bool) {
	if o == nil || IsNil(o.UserBrowserSessionWarning) {
		return nil, false
	}
	return o.UserBrowserSessionWarning, true
}

// IsSetUserBrowserSessionWarning returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetUserBrowserSessionWarning() bool {
	if o != nil && !IsNil(o.UserBrowserSessionWarning) {
		return true
	}

	return false
}

// SetUserBrowserSessionWarning gets a reference to the given string and assigns it to the UserBrowserSessionWarning field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetUserBrowserSessionWarning(v string) {
	o.UserBrowserSessionWarning = &v
}

// GetExpirePwdDays returns the ExpirePwdDays field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetExpirePwdDays() int64 {
	if o == nil || IsNil(o.ExpirePwdDays) {
		var ret int64
		return ret
	}
	return *o.ExpirePwdDays
}

// GetExpirePwdDaysOk returns a tuple with the ExpirePwdDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetExpirePwdDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirePwdDays) {
		return nil, false
	}
	return o.ExpirePwdDays, true
}

// IsSetExpirePwdDays returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetExpirePwdDays() bool {
	if o != nil && !IsNil(o.ExpirePwdDays) {
		return true
	}

	return false
}

// SetExpirePwdDays gets a reference to the given int64 and assigns it to the ExpirePwdDays field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetExpirePwdDays(v int64) {
	o.ExpirePwdDays = &v
}

// GetDisableAfterAttempts returns the DisableAfterAttempts field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAfterAttempts() int64 {
	if o == nil || IsNil(o.DisableAfterAttempts) {
		var ret int64
		return ret
	}
	return *o.DisableAfterAttempts
}

// GetDisableAfterAttemptsOk returns a tuple with the DisableAfterAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAfterAttemptsOk() (*int64, bool) {
	if o == nil || IsNil(o.DisableAfterAttempts) {
		return nil, false
	}
	return o.DisableAfterAttempts, true
}

// IsSetDisableAfterAttempts returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDisableAfterAttempts() bool {
	if o != nil && !IsNil(o.DisableAfterAttempts) {
		return true
	}

	return false
}

// SetDisableAfterAttempts gets a reference to the given int64 and assigns it to the DisableAfterAttempts field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDisableAfterAttempts(v int64) {
	o.DisableAfterAttempts = &v
}

// GetDisableAfterDaysInactive returns the DisableAfterDaysInactive field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAfterDaysInactive() int64 {
	if o == nil || IsNil(o.DisableAfterDaysInactive) {
		var ret int64
		return ret
	}
	return *o.DisableAfterDaysInactive
}

// GetDisableAfterDaysInactiveOk returns a tuple with the DisableAfterDaysInactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAfterDaysInactiveOk() (*int64, bool) {
	if o == nil || IsNil(o.DisableAfterDaysInactive) {
		return nil, false
	}
	return o.DisableAfterDaysInactive, true
}

// IsSetDisableAfterDaysInactive returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDisableAfterDaysInactive() bool {
	if o != nil && !IsNil(o.DisableAfterDaysInactive) {
		return true
	}

	return false
}

// SetDisableAfterDaysInactive gets a reference to the given int64 and assigns it to the DisableAfterDaysInactive field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDisableAfterDaysInactive(v int64) {
	o.DisableAfterDaysInactive = &v
}

// GetWarnUserDaysBefore returns the WarnUserDaysBefore field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetWarnUserDaysBefore() int64 {
	if o == nil || IsNil(o.WarnUserDaysBefore) {
		var ret int64
		return ret
	}
	return *o.WarnUserDaysBefore
}

// GetWarnUserDaysBeforeOk returns a tuple with the WarnUserDaysBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetWarnUserDaysBeforeOk() (*int64, bool) {
	if o == nil || IsNil(o.WarnUserDaysBefore) {
		return nil, false
	}
	return o.WarnUserDaysBefore, true
}

// IsSetWarnUserDaysBefore returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetWarnUserDaysBefore() bool {
	if o != nil && !IsNil(o.WarnUserDaysBefore) {
		return true
	}

	return false
}

// SetWarnUserDaysBefore gets a reference to the given int64 and assigns it to the WarnUserDaysBefore field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetWarnUserDaysBefore(v int64) {
	o.WarnUserDaysBefore = &v
}

// GetSmtpMailFrom returns the SmtpMailFrom field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpMailFrom() string {
	if o == nil || IsNil(o.SmtpMailFrom) {
		var ret string
		return ret
	}
	return *o.SmtpMailFrom
}

// GetSmtpMailFromOk returns a tuple with the SmtpMailFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpMailFromOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpMailFrom) {
		return nil, false
	}
	return o.SmtpMailFrom, true
}

// IsSetSmtpMailFrom returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpMailFrom() bool {
	if o != nil && !IsNil(o.SmtpMailFrom) {
		return true
	}

	return false
}

// SetSmtpMailFrom gets a reference to the given string and assigns it to the SmtpMailFrom field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpMailFrom(v string) {
	o.SmtpMailFrom = &v
}

// GetSmtpServer returns the SmtpServer field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpServer() string {
	if o == nil || IsNil(o.SmtpServer) {
		var ret string
		return ret
	}
	return *o.SmtpServer
}

// GetSmtpServerOk returns a tuple with the SmtpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpServerOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpServer) {
		return nil, false
	}
	return o.SmtpServer, true
}

// IsSetSmtpServer returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpServer() bool {
	if o != nil && !IsNil(o.SmtpServer) {
		return true
	}

	return false
}

// SetSmtpServer gets a reference to the given string and assigns it to the SmtpServer field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpServer(v string) {
	o.SmtpServer = &v
}

// GetSmtpPort returns the SmtpPort field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpPort() int64 {
	if o == nil || IsNil(o.SmtpPort) {
		var ret int64
		return ret
	}
	return *o.SmtpPort
}

// GetSmtpPortOk returns a tuple with the SmtpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SmtpPort) {
		return nil, false
	}
	return o.SmtpPort, true
}

// IsSetSmtpPort returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpPort() bool {
	if o != nil && !IsNil(o.SmtpPort) {
		return true
	}

	return false
}

// SetSmtpPort gets a reference to the given int64 and assigns it to the SmtpPort field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpPort(v int64) {
	o.SmtpPort = &v
}

// GetSmtpSSL returns the SmtpSSL field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpSSL() bool {
	if o == nil || IsNil(o.SmtpSSL) {
		var ret bool
		return ret
	}
	return *o.SmtpSSL
}

// GetSmtpSSLOk returns a tuple with the SmtpSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpSSLOk() (*bool, bool) {
	if o == nil || IsNil(o.SmtpSSL) {
		return nil, false
	}
	return o.SmtpSSL, true
}

// IsSetSmtpSSL returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpSSL() bool {
	if o != nil && !IsNil(o.SmtpSSL) {
		return true
	}

	return false
}

// SetSmtpSSL gets a reference to the given bool and assigns it to the SmtpSSL field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpSSL(v bool) {
	o.SmtpSSL = &v
}

// GetSmtpTLS returns the SmtpTLS field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpTLS() bool {
	if o == nil || IsNil(o.SmtpTLS) {
		var ret bool
		return ret
	}
	return *o.SmtpTLS
}

// GetSmtpTLSOk returns a tuple with the SmtpTLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpTLSOk() (*bool, bool) {
	if o == nil || IsNil(o.SmtpTLS) {
		return nil, false
	}
	return o.SmtpTLS, true
}

// IsSetSmtpTLS returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpTLS() bool {
	if o != nil && !IsNil(o.SmtpTLS) {
		return true
	}

	return false
}

// SetSmtpTLS gets a reference to the given bool and assigns it to the SmtpTLS field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpTLS(v bool) {
	o.SmtpTLS = &v
}

// GetSmtpUser returns the SmtpUser field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpUser() string {
	if o == nil || IsNil(o.SmtpUser) {
		var ret string
		return ret
	}
	return *o.SmtpUser
}

// GetSmtpUserOk returns a tuple with the SmtpUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpUserOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpUser) {
		return nil, false
	}
	return o.SmtpUser, true
}

// IsSetSmtpUser returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpUser() bool {
	if o != nil && !IsNil(o.SmtpUser) {
		return true
	}

	return false
}

// SetSmtpUser gets a reference to the given string and assigns it to the SmtpUser field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpUser(v string) {
	o.SmtpUser = &v
}

// GetSmtpPassword returns the SmtpPassword field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpPassword() string {
	if o == nil || IsNil(o.SmtpPassword) {
		var ret string
		return ret
	}
	return *o.SmtpPassword
}

// GetSmtpPasswordOk returns a tuple with the SmtpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetSmtpPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpPassword) {
		return nil, false
	}
	return o.SmtpPassword, true
}

// IsSetSmtpPassword returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetSmtpPassword() bool {
	if o != nil && !IsNil(o.SmtpPassword) {
		return true
	}

	return false
}

// SetSmtpPassword gets a reference to the given string and assigns it to the SmtpPassword field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetSmtpPassword(v string) {
	o.SmtpPassword = &v
}

// GetProxyHost returns the ProxyHost field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyHost() string {
	if o == nil || IsNil(o.ProxyHost) {
		var ret string
		return ret
	}
	return *o.ProxyHost
}

// GetProxyHostOk returns a tuple with the ProxyHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyHostOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyHost) {
		return nil, false
	}
	return o.ProxyHost, true
}

// IsSetProxyHost returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyHost() bool {
	if o != nil && !IsNil(o.ProxyHost) {
		return true
	}

	return false
}

// SetProxyHost gets a reference to the given string and assigns it to the ProxyHost field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyHost(v string) {
	o.ProxyHost = &v
}

// GetProxyPort returns the ProxyPort field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyPort() string {
	if o == nil || IsNil(o.ProxyPort) {
		var ret string
		return ret
	}
	return *o.ProxyPort
}

// GetProxyPortOk returns a tuple with the ProxyPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyPortOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyPort) {
		return nil, false
	}
	return o.ProxyPort, true
}

// IsSetProxyPort returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyPort() bool {
	if o != nil && !IsNil(o.ProxyPort) {
		return true
	}

	return false
}

// SetProxyPort gets a reference to the given string and assigns it to the ProxyPort field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyPort(v string) {
	o.ProxyPort = &v
}

// GetProxyUser returns the ProxyUser field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyUser() string {
	if o == nil || IsNil(o.ProxyUser) {
		var ret string
		return ret
	}
	return *o.ProxyUser
}

// GetProxyUserOk returns a tuple with the ProxyUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyUserOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyUser) {
		return nil, false
	}
	return o.ProxyUser, true
}

// IsSetProxyUser returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyUser() bool {
	if o != nil && !IsNil(o.ProxyUser) {
		return true
	}

	return false
}

// SetProxyUser gets a reference to the given string and assigns it to the ProxyUser field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyUser(v string) {
	o.ProxyUser = &v
}

// GetProxyPassword returns the ProxyPassword field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyPassword() string {
	if o == nil || IsNil(o.ProxyPassword) {
		var ret string
		return ret
	}
	return *o.ProxyPassword
}

// GetProxyPasswordOk returns a tuple with the ProxyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyPassword) {
		return nil, false
	}
	return o.ProxyPassword, true
}

// IsSetProxyPassword returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyPassword() bool {
	if o != nil && !IsNil(o.ProxyPassword) {
		return true
	}

	return false
}

// SetProxyPassword gets a reference to the given string and assigns it to the ProxyPassword field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyPassword(v string) {
	o.ProxyPassword = &v
}

// GetProxyDomain returns the ProxyDomain field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyDomain() string {
	if o == nil || IsNil(o.ProxyDomain) {
		var ret string
		return ret
	}
	return *o.ProxyDomain
}

// GetProxyDomainOk returns a tuple with the ProxyDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyDomainOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyDomain) {
		return nil, false
	}
	return o.ProxyDomain, true
}

// IsSetProxyDomain returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyDomain() bool {
	if o != nil && !IsNil(o.ProxyDomain) {
		return true
	}

	return false
}

// SetProxyDomain gets a reference to the given string and assigns it to the ProxyDomain field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyDomain(v string) {
	o.ProxyDomain = &v
}

// GetProxyWorkstation returns the ProxyWorkstation field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyWorkstation() string {
	if o == nil || IsNil(o.ProxyWorkstation) {
		var ret string
		return ret
	}
	return *o.ProxyWorkstation
}

// GetProxyWorkstationOk returns a tuple with the ProxyWorkstation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetProxyWorkstationOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyWorkstation) {
		return nil, false
	}
	return o.ProxyWorkstation, true
}

// IsSetProxyWorkstation returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetProxyWorkstation() bool {
	if o != nil && !IsNil(o.ProxyWorkstation) {
		return true
	}

	return false
}

// SetProxyWorkstation gets a reference to the given string and assigns it to the ProxyWorkstation field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetProxyWorkstation(v string) {
	o.ProxyWorkstation = &v
}

// GetCurrencyProvider returns the CurrencyProvider field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCurrencyProvider() string {
	if o == nil || IsNil(o.CurrencyProvider) {
		var ret string
		return ret
	}
	return *o.CurrencyProvider
}

// GetCurrencyProviderOk returns a tuple with the CurrencyProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCurrencyProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyProvider) {
		return nil, false
	}
	return o.CurrencyProvider, true
}

// IsSetCurrencyProvider returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetCurrencyProvider() bool {
	if o != nil && !IsNil(o.CurrencyProvider) {
		return true
	}

	return false
}

// SetCurrencyProvider gets a reference to the given string and assigns it to the CurrencyProvider field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetCurrencyProvider(v string) {
	o.CurrencyProvider = &v
}

// GetCurrencyKey returns the CurrencyKey field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCurrencyKey() string {
	if o == nil || IsNil(o.CurrencyKey) {
		var ret string
		return ret
	}
	return *o.CurrencyKey
}

// GetCurrencyKeyOk returns a tuple with the CurrencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCurrencyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyKey) {
		return nil, false
	}
	return o.CurrencyKey, true
}

// IsSetCurrencyKey returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetCurrencyKey() bool {
	if o != nil && !IsNil(o.CurrencyKey) {
		return true
	}

	return false
}

// SetCurrencyKey gets a reference to the given string and assigns it to the CurrencyKey field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetCurrencyKey(v string) {
	o.CurrencyKey = &v
}

// GetEnableAllZoneTypes returns the EnableAllZoneTypes field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetEnableAllZoneTypes() bool {
	if o == nil || IsNil(o.EnableAllZoneTypes) {
		var ret bool
		return ret
	}
	return *o.EnableAllZoneTypes
}

// GetEnableAllZoneTypesOk returns a tuple with the EnableAllZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetEnableAllZoneTypesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAllZoneTypes) {
		return nil, false
	}
	return o.EnableAllZoneTypes, true
}

// IsSetEnableAllZoneTypes returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetEnableAllZoneTypes() bool {
	if o != nil && !IsNil(o.EnableAllZoneTypes) {
		return true
	}

	return false
}

// SetEnableAllZoneTypes gets a reference to the given bool and assigns it to the EnableAllZoneTypes field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetEnableAllZoneTypes(v bool) {
	o.EnableAllZoneTypes = &v
}

// GetEnableZoneTypes returns the EnableZoneTypes field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetEnableZoneTypes() []int64 {
	if o == nil || IsNil(o.EnableZoneTypes) {
		var ret []int64
		return ret
	}
	return o.EnableZoneTypes
}

// GetEnableZoneTypesOk returns a tuple with the EnableZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetEnableZoneTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.EnableZoneTypes) {
		return nil, false
	}
	return o.EnableZoneTypes, true
}

// IsSetEnableZoneTypes returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetEnableZoneTypes() bool {
	if o != nil && !IsNil(o.EnableZoneTypes) {
		return true
	}

	return false
}

// SetEnableZoneTypes gets a reference to the given []int64 and assigns it to the EnableZoneTypes field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetEnableZoneTypes(v []int64) {
	o.EnableZoneTypes = v
}

// GetDisableZoneTypes returns the DisableZoneTypes field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableZoneTypes() []int64 {
	if o == nil || IsNil(o.DisableZoneTypes) {
		var ret []int64
		return ret
	}
	return o.DisableZoneTypes
}

// GetDisableZoneTypesOk returns a tuple with the DisableZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableZoneTypesOk() ([]int64, bool) {
	if o == nil || IsNil(o.DisableZoneTypes) {
		return nil, false
	}
	return o.DisableZoneTypes, true
}

// IsSetDisableZoneTypes returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDisableZoneTypes() bool {
	if o != nil && !IsNil(o.DisableZoneTypes) {
		return true
	}

	return false
}

// SetDisableZoneTypes gets a reference to the given []int64 and assigns it to the DisableZoneTypes field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDisableZoneTypes(v []int64) {
	o.DisableZoneTypes = v
}

// GetDisableAllZoneTypes returns the DisableAllZoneTypes field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAllZoneTypes() bool {
	if o == nil || IsNil(o.DisableAllZoneTypes) {
		var ret bool
		return ret
	}
	return *o.DisableAllZoneTypes
}

// GetDisableAllZoneTypesOk returns a tuple with the DisableAllZoneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableAllZoneTypesOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAllZoneTypes) {
		return nil, false
	}
	return o.DisableAllZoneTypes, true
}

// IsSetDisableAllZoneTypes returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDisableAllZoneTypes() bool {
	if o != nil && !IsNil(o.DisableAllZoneTypes) {
		return true
	}

	return false
}

// SetDisableAllZoneTypes gets a reference to the given bool and assigns it to the DisableAllZoneTypes field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDisableAllZoneTypes(v bool) {
	o.DisableAllZoneTypes = &v
}

// GetTwilioAccountSid returns the TwilioAccountSid field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioAccountSid() string {
	if o == nil || IsNil(o.TwilioAccountSid) {
		var ret string
		return ret
	}
	return *o.TwilioAccountSid
}

// GetTwilioAccountSidOk returns a tuple with the TwilioAccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioAccountSidOk() (*string, bool) {
	if o == nil || IsNil(o.TwilioAccountSid) {
		return nil, false
	}
	return o.TwilioAccountSid, true
}

// IsSetTwilioAccountSid returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetTwilioAccountSid() bool {
	if o != nil && !IsNil(o.TwilioAccountSid) {
		return true
	}

	return false
}

// SetTwilioAccountSid gets a reference to the given string and assigns it to the TwilioAccountSid field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetTwilioAccountSid(v string) {
	o.TwilioAccountSid = &v
}

// GetTwilioSmsFrom returns the TwilioSmsFrom field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioSmsFrom() string {
	if o == nil || IsNil(o.TwilioSmsFrom) {
		var ret string
		return ret
	}
	return *o.TwilioSmsFrom
}

// GetTwilioSmsFromOk returns a tuple with the TwilioSmsFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioSmsFromOk() (*string, bool) {
	if o == nil || IsNil(o.TwilioSmsFrom) {
		return nil, false
	}
	return o.TwilioSmsFrom, true
}

// IsSetTwilioSmsFrom returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetTwilioSmsFrom() bool {
	if o != nil && !IsNil(o.TwilioSmsFrom) {
		return true
	}

	return false
}

// SetTwilioSmsFrom gets a reference to the given string and assigns it to the TwilioSmsFrom field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetTwilioSmsFrom(v string) {
	o.TwilioSmsFrom = &v
}

// GetTwilioAuthToken returns the TwilioAuthToken field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioAuthToken() string {
	if o == nil || IsNil(o.TwilioAuthToken) {
		var ret string
		return ret
	}
	return *o.TwilioAuthToken
}

// GetTwilioAuthTokenOk returns a tuple with the TwilioAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetTwilioAuthTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TwilioAuthToken) {
		return nil, false
	}
	return o.TwilioAuthToken, true
}

// IsSetTwilioAuthToken returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetTwilioAuthToken() bool {
	if o != nil && !IsNil(o.TwilioAuthToken) {
		return true
	}

	return false
}

// SetTwilioAuthToken gets a reference to the given string and assigns it to the TwilioAuthToken field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetTwilioAuthToken(v string) {
	o.TwilioAuthToken = &v
}

// GetCloudSyncIntervalSeconds returns the CloudSyncIntervalSeconds field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCloudSyncIntervalSeconds() int64 {
	if o == nil || IsNil(o.CloudSyncIntervalSeconds) {
		var ret int64
		return ret
	}
	return *o.CloudSyncIntervalSeconds
}

// GetCloudSyncIntervalSecondsOk returns a tuple with the CloudSyncIntervalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetCloudSyncIntervalSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.CloudSyncIntervalSeconds) {
		return nil, false
	}
	return o.CloudSyncIntervalSeconds, true
}

// IsSetCloudSyncIntervalSeconds returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetCloudSyncIntervalSeconds() bool {
	if o != nil && !IsNil(o.CloudSyncIntervalSeconds) {
		return true
	}

	return false
}

// SetCloudSyncIntervalSeconds gets a reference to the given int64 and assigns it to the CloudSyncIntervalSeconds field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetCloudSyncIntervalSeconds(v int64) {
	o.CloudSyncIntervalSeconds = &v
}

// GetClusterSyncIntervalSeconds returns the ClusterSyncIntervalSeconds field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetClusterSyncIntervalSeconds() int64 {
	if o == nil || IsNil(o.ClusterSyncIntervalSeconds) {
		var ret int64
		return ret
	}
	return *o.ClusterSyncIntervalSeconds
}

// GetClusterSyncIntervalSecondsOk returns a tuple with the ClusterSyncIntervalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetClusterSyncIntervalSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterSyncIntervalSeconds) {
		return nil, false
	}
	return o.ClusterSyncIntervalSeconds, true
}

// IsSetClusterSyncIntervalSeconds returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetClusterSyncIntervalSeconds() bool {
	if o != nil && !IsNil(o.ClusterSyncIntervalSeconds) {
		return true
	}

	return false
}

// SetClusterSyncIntervalSeconds gets a reference to the given int64 and assigns it to the ClusterSyncIntervalSeconds field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetClusterSyncIntervalSeconds(v int64) {
	o.ClusterSyncIntervalSeconds = &v
}

// GetUsageRetainmentPeriod returns the UsageRetainmentPeriod field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUsageRetainmentPeriod() int64 {
	if o == nil || IsNil(o.UsageRetainmentPeriod) {
		var ret int64
		return ret
	}
	return *o.UsageRetainmentPeriod
}

// GetUsageRetainmentPeriodOk returns a tuple with the UsageRetainmentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetUsageRetainmentPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.UsageRetainmentPeriod) {
		return nil, false
	}
	return o.UsageRetainmentPeriod, true
}

// IsSetUsageRetainmentPeriod returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetUsageRetainmentPeriod() bool {
	if o != nil && !IsNil(o.UsageRetainmentPeriod) {
		return true
	}

	return false
}

// SetUsageRetainmentPeriod gets a reference to the given int64 and assigns it to the UsageRetainmentPeriod field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetUsageRetainmentPeriod(v int64) {
	o.UsageRetainmentPeriod = &v
}

// GetInvoiceRetainmentPeriod returns the InvoiceRetainmentPeriod field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetInvoiceRetainmentPeriod() int64 {
	if o == nil || IsNil(o.InvoiceRetainmentPeriod) {
		var ret int64
		return ret
	}
	return *o.InvoiceRetainmentPeriod
}

// GetInvoiceRetainmentPeriodOk returns a tuple with the InvoiceRetainmentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetInvoiceRetainmentPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.InvoiceRetainmentPeriod) {
		return nil, false
	}
	return o.InvoiceRetainmentPeriod, true
}

// IsSetInvoiceRetainmentPeriod returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetInvoiceRetainmentPeriod() bool {
	if o != nil && !IsNil(o.InvoiceRetainmentPeriod) {
		return true
	}

	return false
}

// SetInvoiceRetainmentPeriod gets a reference to the given int64 and assigns it to the InvoiceRetainmentPeriod field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetInvoiceRetainmentPeriod(v int64) {
	o.InvoiceRetainmentPeriod = &v
}

// GetIncidentRetainmentPeriod returns the IncidentRetainmentPeriod field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetIncidentRetainmentPeriod() int64 {
	if o == nil || IsNil(o.IncidentRetainmentPeriod) {
		var ret int64
		return ret
	}
	return *o.IncidentRetainmentPeriod
}

// GetIncidentRetainmentPeriodOk returns a tuple with the IncidentRetainmentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetIncidentRetainmentPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.IncidentRetainmentPeriod) {
		return nil, false
	}
	return o.IncidentRetainmentPeriod, true
}

// IsSetIncidentRetainmentPeriod returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetIncidentRetainmentPeriod() bool {
	if o != nil && !IsNil(o.IncidentRetainmentPeriod) {
		return true
	}

	return false
}

// SetIncidentRetainmentPeriod gets a reference to the given int64 and assigns it to the IncidentRetainmentPeriod field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetIncidentRetainmentPeriod(v int64) {
	o.IncidentRetainmentPeriod = &v
}

// GetStatsRetainmentPeriod returns the StatsRetainmentPeriod field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetStatsRetainmentPeriod() int64 {
	if o == nil || IsNil(o.StatsRetainmentPeriod) {
		var ret int64
		return ret
	}
	return *o.StatsRetainmentPeriod
}

// GetStatsRetainmentPeriodOk returns a tuple with the StatsRetainmentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetStatsRetainmentPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.StatsRetainmentPeriod) {
		return nil, false
	}
	return o.StatsRetainmentPeriod, true
}

// IsSetStatsRetainmentPeriod returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetStatsRetainmentPeriod() bool {
	if o != nil && !IsNil(o.StatsRetainmentPeriod) {
		return true
	}

	return false
}

// SetStatsRetainmentPeriod gets a reference to the given int64 and assigns it to the StatsRetainmentPeriod field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetStatsRetainmentPeriod(v int64) {
	o.StatsRetainmentPeriod = &v
}

// GetReportsRetainmentPeriod returns the ReportsRetainmentPeriod field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetReportsRetainmentPeriod() int64 {
	if o == nil || IsNil(o.ReportsRetainmentPeriod) {
		var ret int64
		return ret
	}
	return *o.ReportsRetainmentPeriod
}

// GetReportsRetainmentPeriodOk returns a tuple with the ReportsRetainmentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetReportsRetainmentPeriodOk() (*int64, bool) {
	if o == nil || IsNil(o.ReportsRetainmentPeriod) {
		return nil, false
	}
	return o.ReportsRetainmentPeriod, true
}

// IsSetReportsRetainmentPeriod returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetReportsRetainmentPeriod() bool {
	if o != nil && !IsNil(o.ReportsRetainmentPeriod) {
		return true
	}

	return false
}

// SetReportsRetainmentPeriod gets a reference to the given int64 and assigns it to the ReportsRetainmentPeriod field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetReportsRetainmentPeriod(v int64) {
	o.ReportsRetainmentPeriod = &v
}

// GetHttpBlacklistHosts returns the HttpBlacklistHosts field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetHttpBlacklistHosts() string {
	if o == nil || IsNil(o.HttpBlacklistHosts) {
		var ret string
		return ret
	}
	return *o.HttpBlacklistHosts
}

// GetHttpBlacklistHostsOk returns a tuple with the HttpBlacklistHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetHttpBlacklistHostsOk() (*string, bool) {
	if o == nil || IsNil(o.HttpBlacklistHosts) {
		return nil, false
	}
	return o.HttpBlacklistHosts, true
}

// IsSetHttpBlacklistHosts returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetHttpBlacklistHosts() bool {
	if o != nil && !IsNil(o.HttpBlacklistHosts) {
		return true
	}

	return false
}

// SetHttpBlacklistHosts gets a reference to the given string and assigns it to the HttpBlacklistHosts field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetHttpBlacklistHosts(v string) {
	o.HttpBlacklistHosts = &v
}

// GetHttpApprovelistHosts returns the HttpApprovelistHosts field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetHttpApprovelistHosts() string {
	if o == nil || IsNil(o.HttpApprovelistHosts) {
		var ret string
		return ret
	}
	return *o.HttpApprovelistHosts
}

// GetHttpApprovelistHostsOk returns a tuple with the HttpApprovelistHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetHttpApprovelistHostsOk() (*string, bool) {
	if o == nil || IsNil(o.HttpApprovelistHosts) {
		return nil, false
	}
	return o.HttpApprovelistHosts, true
}

// IsSetHttpApprovelistHosts returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetHttpApprovelistHosts() bool {
	if o != nil && !IsNil(o.HttpApprovelistHosts) {
		return true
	}

	return false
}

// SetHttpApprovelistHosts gets a reference to the given string and assigns it to the HttpApprovelistHosts field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetHttpApprovelistHosts(v string) {
	o.HttpApprovelistHosts = &v
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetNoAgent() bool {
	if o == nil || IsNil(o.NoAgent) {
		var ret bool
		return ret
	}
	return *o.NoAgent
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetNoAgentOk() (*bool, bool) {
	if o == nil || IsNil(o.NoAgent) {
		return nil, false
	}
	return o.NoAgent, true
}

// IsSetNoAgent returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetNoAgent() bool {
	if o != nil && !IsNil(o.NoAgent) {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given bool and assigns it to the NoAgent field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetNoAgent(v bool) {
	o.NoAgent = &v
}

// GetAgentSSLVerify returns the AgentSSLVerify field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetAgentSSLVerify() bool {
	if o == nil || IsNil(o.AgentSSLVerify) {
		var ret bool
		return ret
	}
	return *o.AgentSSLVerify
}

// GetAgentSSLVerifyOk returns a tuple with the AgentSSLVerify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetAgentSSLVerifyOk() (*bool, bool) {
	if o == nil || IsNil(o.AgentSSLVerify) {
		return nil, false
	}
	return o.AgentSSLVerify, true
}

// IsSetAgentSSLVerify returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetAgentSSLVerify() bool {
	if o != nil && !IsNil(o.AgentSSLVerify) {
		return true
	}

	return false
}

// SetAgentSSLVerify gets a reference to the given bool and assigns it to the AgentSSLVerify field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetAgentSSLVerify(v bool) {
	o.AgentSSLVerify = &v
}

// GetDisableSSHPasswordAuth returns the DisableSSHPasswordAuth field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableSSHPasswordAuth() bool {
	if o == nil || IsNil(o.DisableSSHPasswordAuth) {
		var ret bool
		return ret
	}
	return *o.DisableSSHPasswordAuth
}

// GetDisableSSHPasswordAuthOk returns a tuple with the DisableSSHPasswordAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDisableSSHPasswordAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSSHPasswordAuth) {
		return nil, false
	}
	return o.DisableSSHPasswordAuth, true
}

// IsSetDisableSSHPasswordAuth returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDisableSSHPasswordAuth() bool {
	if o != nil && !IsNil(o.DisableSSHPasswordAuth) {
		return true
	}

	return false
}

// SetDisableSSHPasswordAuth gets a reference to the given bool and assigns it to the DisableSSHPasswordAuth field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDisableSSHPasswordAuth(v bool) {
	o.DisableSSHPasswordAuth = &v
}

// GetDefaultLocale returns the DefaultLocale field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultLocale() string {
	if o == nil || IsNil(o.DefaultLocale) {
		var ret string
		return ret
	}
	return *o.DefaultLocale
}

// GetDefaultLocaleOk returns a tuple with the DefaultLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultLocale) {
		return nil, false
	}
	return o.DefaultLocale, true
}

// IsSetDefaultLocale returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDefaultLocale() bool {
	if o != nil && !IsNil(o.DefaultLocale) {
		return true
	}

	return false
}

// SetDefaultLocale gets a reference to the given string and assigns it to the DefaultLocale field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDefaultLocale(v string) {
	o.DefaultLocale = &v
}

// GetDefaultVdiGateway returns the DefaultVdiGateway field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultVdiGateway() int64 {
	if o == nil || IsNil(o.DefaultVdiGateway) {
		var ret int64
		return ret
	}
	return *o.DefaultVdiGateway
}

// GetDefaultVdiGatewayOk returns a tuple with the DefaultVdiGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetDefaultVdiGatewayOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultVdiGateway) {
		return nil, false
	}
	return o.DefaultVdiGateway, true
}

// IsSetDefaultVdiGateway returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetDefaultVdiGateway() bool {
	if o != nil && !IsNil(o.DefaultVdiGateway) {
		return true
	}

	return false
}

// SetDefaultVdiGateway gets a reference to the given int64 and assigns it to the DefaultVdiGateway field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetDefaultVdiGateway(v int64) {
	o.DefaultVdiGateway = &v
}

// GetMaxOptionListSize returns the MaxOptionListSize field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetMaxOptionListSize() int64 {
	if o == nil || IsNil(o.MaxOptionListSize) {
		var ret int64
		return ret
	}
	return *o.MaxOptionListSize
}

// GetMaxOptionListSizeOk returns a tuple with the MaxOptionListSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetMaxOptionListSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxOptionListSize) {
		return nil, false
	}
	return o.MaxOptionListSize, true
}

// IsSetMaxOptionListSize returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetMaxOptionListSize() bool {
	if o != nil && !IsNil(o.MaxOptionListSize) {
		return true
	}

	return false
}

// SetMaxOptionListSize gets a reference to the given int64 and assigns it to the MaxOptionListSize field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetMaxOptionListSize(v int64) {
	o.MaxOptionListSize = &v
}

// GetExchangeUrl returns the ExchangeUrl field value if set, zero value otherwise.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetExchangeUrl() string {
	if o == nil || IsNil(o.ExchangeUrl) {
		var ret string
		return ret
	}
	return *o.ExchangeUrl
}

// GetExchangeUrlOk returns a tuple with the ExchangeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) GetExchangeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeUrl) {
		return nil, false
	}
	return o.ExchangeUrl, true
}

// IsSetExchangeUrl returns a boolean if a field has been set.
func (o *UpdateApplianceSettingsRequestApplianceSettings) IsSetExchangeUrl() bool {
	if o != nil && !IsNil(o.ExchangeUrl) {
		return true
	}

	return false
}

// SetExchangeUrl gets a reference to the given string and assigns it to the ExchangeUrl field.
func (o *UpdateApplianceSettingsRequestApplianceSettings) SetExchangeUrl(v string) {
	o.ExchangeUrl = &v
}

func (o UpdateApplianceSettingsRequestApplianceSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApplianceSettingsRequestApplianceSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplianceUrl) {
		toSerialize["applianceUrl"] = o.ApplianceUrl
	}
	if !IsNil(o.InternalApplianceUrl) {
		toSerialize["internalApplianceUrl"] = o.InternalApplianceUrl
	}
	if !IsNil(o.CorsAllowed) {
		toSerialize["corsAllowed"] = o.CorsAllowed
	}
	if !IsNil(o.RegistrationEnabled) {
		toSerialize["registrationEnabled"] = o.RegistrationEnabled
	}
	if !IsNil(o.DefaultRoleId) {
		toSerialize["defaultRoleId"] = o.DefaultRoleId
	}
	if !IsNil(o.DefaultUserRoleId) {
		toSerialize["defaultUserRoleId"] = o.DefaultUserRoleId
	}
	if !IsNil(o.DockerPrivilegedMode) {
		toSerialize["dockerPrivilegedMode"] = o.DockerPrivilegedMode
	}
	if !IsNil(o.PasswordMinLength) {
		toSerialize["passwordMinLength"] = o.PasswordMinLength
	}
	if !IsNil(o.PasswordMinUpperCase) {
		toSerialize["passwordMinUpperCase"] = o.PasswordMinUpperCase
	}
	if !IsNil(o.PasswordMinNumbers) {
		toSerialize["passwordMinNumbers"] = o.PasswordMinNumbers
	}
	if !IsNil(o.PasswordMinSymbols) {
		toSerialize["passwordMinSymbols"] = o.PasswordMinSymbols
	}
	if !IsNil(o.UserBrowserSessionTimeout) {
		toSerialize["userBrowserSessionTimeout"] = o.UserBrowserSessionTimeout
	}
	if !IsNil(o.UserBrowserSessionWarning) {
		toSerialize["userBrowserSessionWarning"] = o.UserBrowserSessionWarning
	}
	if !IsNil(o.ExpirePwdDays) {
		toSerialize["expirePwdDays"] = o.ExpirePwdDays
	}
	if !IsNil(o.DisableAfterAttempts) {
		toSerialize["disableAfterAttempts"] = o.DisableAfterAttempts
	}
	if !IsNil(o.DisableAfterDaysInactive) {
		toSerialize["disableAfterDaysInactive"] = o.DisableAfterDaysInactive
	}
	if !IsNil(o.WarnUserDaysBefore) {
		toSerialize["warnUserDaysBefore"] = o.WarnUserDaysBefore
	}
	if !IsNil(o.SmtpMailFrom) {
		toSerialize["smtpMailFrom"] = o.SmtpMailFrom
	}
	if !IsNil(o.SmtpServer) {
		toSerialize["smtpServer"] = o.SmtpServer
	}
	if !IsNil(o.SmtpPort) {
		toSerialize["smtpPort"] = o.SmtpPort
	}
	if !IsNil(o.SmtpSSL) {
		toSerialize["smtpSSL"] = o.SmtpSSL
	}
	if !IsNil(o.SmtpTLS) {
		toSerialize["smtpTLS"] = o.SmtpTLS
	}
	if !IsNil(o.SmtpUser) {
		toSerialize["smtpUser"] = o.SmtpUser
	}
	if !IsNil(o.SmtpPassword) {
		toSerialize["smtpPassword"] = o.SmtpPassword
	}
	if !IsNil(o.ProxyHost) {
		toSerialize["proxyHost"] = o.ProxyHost
	}
	if !IsNil(o.ProxyPort) {
		toSerialize["proxyPort"] = o.ProxyPort
	}
	if !IsNil(o.ProxyUser) {
		toSerialize["proxyUser"] = o.ProxyUser
	}
	if !IsNil(o.ProxyPassword) {
		toSerialize["proxyPassword"] = o.ProxyPassword
	}
	if !IsNil(o.ProxyDomain) {
		toSerialize["proxyDomain"] = o.ProxyDomain
	}
	if !IsNil(o.ProxyWorkstation) {
		toSerialize["proxyWorkstation"] = o.ProxyWorkstation
	}
	if !IsNil(o.CurrencyProvider) {
		toSerialize["currencyProvider"] = o.CurrencyProvider
	}
	if !IsNil(o.CurrencyKey) {
		toSerialize["currencyKey"] = o.CurrencyKey
	}
	if !IsNil(o.EnableAllZoneTypes) {
		toSerialize["enableAllZoneTypes"] = o.EnableAllZoneTypes
	}
	if !IsNil(o.EnableZoneTypes) {
		toSerialize["enableZoneTypes"] = o.EnableZoneTypes
	}
	if !IsNil(o.DisableZoneTypes) {
		toSerialize["disableZoneTypes"] = o.DisableZoneTypes
	}
	if !IsNil(o.DisableAllZoneTypes) {
		toSerialize["disableAllZoneTypes"] = o.DisableAllZoneTypes
	}
	if !IsNil(o.TwilioAccountSid) {
		toSerialize["twilioAccountSid"] = o.TwilioAccountSid
	}
	if !IsNil(o.TwilioSmsFrom) {
		toSerialize["twilioSmsFrom"] = o.TwilioSmsFrom
	}
	if !IsNil(o.TwilioAuthToken) {
		toSerialize["twilioAuthToken"] = o.TwilioAuthToken
	}
	if !IsNil(o.CloudSyncIntervalSeconds) {
		toSerialize["cloudSyncIntervalSeconds"] = o.CloudSyncIntervalSeconds
	}
	if !IsNil(o.ClusterSyncIntervalSeconds) {
		toSerialize["clusterSyncIntervalSeconds"] = o.ClusterSyncIntervalSeconds
	}
	if !IsNil(o.UsageRetainmentPeriod) {
		toSerialize["usageRetainmentPeriod"] = o.UsageRetainmentPeriod
	}
	if !IsNil(o.InvoiceRetainmentPeriod) {
		toSerialize["invoiceRetainmentPeriod"] = o.InvoiceRetainmentPeriod
	}
	if !IsNil(o.IncidentRetainmentPeriod) {
		toSerialize["incidentRetainmentPeriod"] = o.IncidentRetainmentPeriod
	}
	if !IsNil(o.StatsRetainmentPeriod) {
		toSerialize["statsRetainmentPeriod"] = o.StatsRetainmentPeriod
	}
	if !IsNil(o.ReportsRetainmentPeriod) {
		toSerialize["reportsRetainmentPeriod"] = o.ReportsRetainmentPeriod
	}
	if !IsNil(o.HttpBlacklistHosts) {
		toSerialize["httpBlacklistHosts"] = o.HttpBlacklistHosts
	}
	if !IsNil(o.HttpApprovelistHosts) {
		toSerialize["httpApprovelistHosts"] = o.HttpApprovelistHosts
	}
	if !IsNil(o.NoAgent) {
		toSerialize["noAgent"] = o.NoAgent
	}
	if !IsNil(o.AgentSSLVerify) {
		toSerialize["agentSSLVerify"] = o.AgentSSLVerify
	}
	if !IsNil(o.DisableSSHPasswordAuth) {
		toSerialize["disableSSHPasswordAuth"] = o.DisableSSHPasswordAuth
	}
	if !IsNil(o.DefaultLocale) {
		toSerialize["defaultLocale"] = o.DefaultLocale
	}
	if !IsNil(o.DefaultVdiGateway) {
		toSerialize["defaultVdiGateway"] = o.DefaultVdiGateway
	}
	if !IsNil(o.MaxOptionListSize) {
		toSerialize["maxOptionListSize"] = o.MaxOptionListSize
	}
	if !IsNil(o.ExchangeUrl) {
		toSerialize["exchangeUrl"] = o.ExchangeUrl
	}
	return toSerialize, nil
}

type NullableUpdateApplianceSettingsRequestApplianceSettings struct {
	value *UpdateApplianceSettingsRequestApplianceSettings
	isSet bool
}

func (v NullableUpdateApplianceSettingsRequestApplianceSettings) Get() *UpdateApplianceSettingsRequestApplianceSettings {
	return v.value
}

func (v *NullableUpdateApplianceSettingsRequestApplianceSettings) Set(val *UpdateApplianceSettingsRequestApplianceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplianceSettingsRequestApplianceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplianceSettingsRequestApplianceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplianceSettingsRequestApplianceSettings(val *UpdateApplianceSettingsRequestApplianceSettings) *NullableUpdateApplianceSettingsRequestApplianceSettings {
	return &NullableUpdateApplianceSettingsRequestApplianceSettings{value: val, isSet: true}
}

func (v NullableUpdateApplianceSettingsRequestApplianceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplianceSettingsRequestApplianceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


