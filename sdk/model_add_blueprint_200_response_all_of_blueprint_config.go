/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AddBlueprint200ResponseAllOfBlueprintConfig - struct for AddBlueprint200ResponseAllOfBlueprintConfig
type AddBlueprint200ResponseAllOfBlueprintConfig struct {
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf *AddBlueprint200ResponseAllOfBlueprintConfigOneOf
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 *AddBlueprint200ResponseAllOfBlueprintConfigOneOf1
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 *AddBlueprint200ResponseAllOfBlueprintConfigOneOf2
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 *AddBlueprint200ResponseAllOfBlueprintConfigOneOf3
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4
	AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 *AddBlueprint200ResponseAllOfBlueprintConfigOneOf5
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOfAsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOfAsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf: v,
	}
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf1AsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOf1AsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf1) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf1: v,
	}
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf2AsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOf2AsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf2) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf2: v,
	}
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf3AsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOf3AsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf3) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf3: v,
	}
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf4AsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOf4AsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf4) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf4: v,
	}
}

// AddBlueprint200ResponseAllOfBlueprintConfigOneOf5AsAddBlueprint200ResponseAllOfBlueprintConfig is a convenience function that returns AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 wrapped in AddBlueprint200ResponseAllOfBlueprintConfig
func AddBlueprint200ResponseAllOfBlueprintConfigOneOf5AsAddBlueprint200ResponseAllOfBlueprintConfig(v *AddBlueprint200ResponseAllOfBlueprintConfigOneOf5) AddBlueprint200ResponseAllOfBlueprintConfig {
	return AddBlueprint200ResponseAllOfBlueprintConfig{
		AddBlueprint200ResponseAllOfBlueprintConfigOneOf5: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddBlueprint200ResponseAllOfBlueprintConfig) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf = nil
	}

	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf1
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf1, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf1) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 = nil
	}

	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf2
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf2, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf2) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 = nil
	}

	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf3
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf3, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf3) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 = nil
	}

	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf4
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf4, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf4) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 = nil
	}

	// try to unmarshal data into AddBlueprint200ResponseAllOfBlueprintConfigOneOf5
	err = newStrictDecoder(data).Decode(&dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5)
	if err == nil {
		jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf5, _ := json.Marshal(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5)
		if string(jsonAddBlueprint200ResponseAllOfBlueprintConfigOneOf5) == "{}" { // empty struct
			dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 = nil
		} else {
			if err = validator.Validate(dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5); err != nil {
				dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf = nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 = nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 = nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 = nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 = nil
		dst.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddBlueprint200ResponseAllOfBlueprintConfig)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddBlueprint200ResponseAllOfBlueprintConfig)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddBlueprint200ResponseAllOfBlueprintConfig) MarshalJSON() ([]byte, error) {
	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf)
	}

	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1)
	}

	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2)
	}

	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3)
	}

	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4)
	}

	if src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 != nil {
		return json.Marshal(&src.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddBlueprint200ResponseAllOfBlueprintConfig) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 != nil {
		return obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AddBlueprint200ResponseAllOfBlueprintConfig) GetActualInstanceValue() (interface{}) {
	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1 != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf1
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2 != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf2
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3 != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf3
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4 != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf4
	}

	if obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5 != nil {
		return *obj.AddBlueprint200ResponseAllOfBlueprintConfigOneOf5
	}

	// all schemas are nil
	return nil
}

type NullableAddBlueprint200ResponseAllOfBlueprintConfig struct {
	value *AddBlueprint200ResponseAllOfBlueprintConfig
	isSet bool
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfig) Get() *AddBlueprint200ResponseAllOfBlueprintConfig {
	return v.value
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfig) Set(val *AddBlueprint200ResponseAllOfBlueprintConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprint200ResponseAllOfBlueprintConfig(val *AddBlueprint200ResponseAllOfBlueprintConfig) *NullableAddBlueprint200ResponseAllOfBlueprintConfig {
	return &NullableAddBlueprint200ResponseAllOfBlueprintConfig{value: val, isSet: true}
}

func (v NullableAddBlueprint200ResponseAllOfBlueprintConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprint200ResponseAllOfBlueprintConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


