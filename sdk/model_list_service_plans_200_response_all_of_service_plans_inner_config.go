/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListServicePlans200ResponseAllOfServicePlansInnerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServicePlans200ResponseAllOfServicePlansInnerConfig{}

// ListServicePlans200ResponseAllOfServicePlansInnerConfig struct for ListServicePlans200ResponseAllOfServicePlansInnerConfig
type ListServicePlans200ResponseAllOfServicePlansInnerConfig struct {
	StorageSizeType *string `json:"storageSizeType,omitempty"`
	MemorySizeType *string `json:"memorySizeType,omitempty"`
	Ranges *ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges `json:"ranges,omitempty"`
}

// NewListServicePlans200ResponseAllOfServicePlansInnerConfig instantiates a new ListServicePlans200ResponseAllOfServicePlansInnerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServicePlans200ResponseAllOfServicePlansInnerConfig() *ListServicePlans200ResponseAllOfServicePlansInnerConfig {
	this := ListServicePlans200ResponseAllOfServicePlansInnerConfig{}
	return &this
}

// NewListServicePlans200ResponseAllOfServicePlansInnerConfigWithDefaults instantiates a new ListServicePlans200ResponseAllOfServicePlansInnerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServicePlans200ResponseAllOfServicePlansInnerConfigWithDefaults() *ListServicePlans200ResponseAllOfServicePlansInnerConfig {
	this := ListServicePlans200ResponseAllOfServicePlansInnerConfig{}
	return &this
}

// GetStorageSizeType returns the StorageSizeType field value if set, zero value otherwise.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetStorageSizeType() string {
	if o == nil || IsNil(o.StorageSizeType) {
		var ret string
		return ret
	}
	return *o.StorageSizeType
}

// GetStorageSizeTypeOk returns a tuple with the StorageSizeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetStorageSizeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StorageSizeType) {
		return nil, false
	}
	return o.StorageSizeType, true
}

// IsSetStorageSizeType returns a boolean if a field has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) IsSetStorageSizeType() bool {
	if o != nil && !IsNil(o.StorageSizeType) {
		return true
	}

	return false
}

// SetStorageSizeType gets a reference to the given string and assigns it to the StorageSizeType field.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) SetStorageSizeType(v string) {
	o.StorageSizeType = &v
}

// GetMemorySizeType returns the MemorySizeType field value if set, zero value otherwise.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetMemorySizeType() string {
	if o == nil || IsNil(o.MemorySizeType) {
		var ret string
		return ret
	}
	return *o.MemorySizeType
}

// GetMemorySizeTypeOk returns a tuple with the MemorySizeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetMemorySizeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MemorySizeType) {
		return nil, false
	}
	return o.MemorySizeType, true
}

// IsSetMemorySizeType returns a boolean if a field has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) IsSetMemorySizeType() bool {
	if o != nil && !IsNil(o.MemorySizeType) {
		return true
	}

	return false
}

// SetMemorySizeType gets a reference to the given string and assigns it to the MemorySizeType field.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) SetMemorySizeType(v string) {
	o.MemorySizeType = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetRanges() ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges {
	if o == nil || IsNil(o.Ranges) {
		var ret ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges
		return ret
	}
	return *o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) GetRangesOk() (*ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// IsSetRanges returns a boolean if a field has been set.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) IsSetRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges and assigns it to the Ranges field.
func (o *ListServicePlans200ResponseAllOfServicePlansInnerConfig) SetRanges(v ListServicePlans200ResponseAllOfServicePlansInnerConfigRanges) {
	o.Ranges = &v
}

func (o ListServicePlans200ResponseAllOfServicePlansInnerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServicePlans200ResponseAllOfServicePlansInnerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StorageSizeType) {
		toSerialize["storageSizeType"] = o.StorageSizeType
	}
	if !IsNil(o.MemorySizeType) {
		toSerialize["memorySizeType"] = o.MemorySizeType
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	return toSerialize, nil
}

type NullableListServicePlans200ResponseAllOfServicePlansInnerConfig struct {
	value *ListServicePlans200ResponseAllOfServicePlansInnerConfig
	isSet bool
}

func (v NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) Get() *ListServicePlans200ResponseAllOfServicePlansInnerConfig {
	return v.value
}

func (v *NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) Set(val *ListServicePlans200ResponseAllOfServicePlansInnerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServicePlans200ResponseAllOfServicePlansInnerConfig(val *ListServicePlans200ResponseAllOfServicePlansInnerConfig) *NullableListServicePlans200ResponseAllOfServicePlansInnerConfig {
	return &NullableListServicePlans200ResponseAllOfServicePlansInnerConfig{value: val, isSet: true}
}

func (v NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServicePlans200ResponseAllOfServicePlansInnerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


