/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ApprovePolicyTypeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovePolicyTypeConfiguration{}

// ApprovePolicyTypeConfiguration Configuration settings for the following policy types: - Approve Delete - Approve Provisiong - Approve Reconfigure 
type ApprovePolicyTypeConfiguration struct {
	AccountIntegrationId *string `json:"accountIntegrationId,omitempty"`
}

// NewApprovePolicyTypeConfiguration instantiates a new ApprovePolicyTypeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovePolicyTypeConfiguration() *ApprovePolicyTypeConfiguration {
	this := ApprovePolicyTypeConfiguration{}
	return &this
}

// NewApprovePolicyTypeConfigurationWithDefaults instantiates a new ApprovePolicyTypeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovePolicyTypeConfigurationWithDefaults() *ApprovePolicyTypeConfiguration {
	this := ApprovePolicyTypeConfiguration{}
	return &this
}

// GetAccountIntegrationId returns the AccountIntegrationId field value if set, zero value otherwise.
func (o *ApprovePolicyTypeConfiguration) GetAccountIntegrationId() string {
	if o == nil || IsNil(o.AccountIntegrationId) {
		var ret string
		return ret
	}
	return *o.AccountIntegrationId
}

// GetAccountIntegrationIdOk returns a tuple with the AccountIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovePolicyTypeConfiguration) GetAccountIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIntegrationId) {
		return nil, false
	}
	return o.AccountIntegrationId, true
}

// IsSetAccountIntegrationId returns a boolean if a field has been set.
func (o *ApprovePolicyTypeConfiguration) IsSetAccountIntegrationId() bool {
	if o != nil && !IsNil(o.AccountIntegrationId) {
		return true
	}

	return false
}

// SetAccountIntegrationId gets a reference to the given string and assigns it to the AccountIntegrationId field.
func (o *ApprovePolicyTypeConfiguration) SetAccountIntegrationId(v string) {
	o.AccountIntegrationId = &v
}

func (o ApprovePolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovePolicyTypeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountIntegrationId) {
		toSerialize["accountIntegrationId"] = o.AccountIntegrationId
	}
	return toSerialize, nil
}

type NullableApprovePolicyTypeConfiguration struct {
	value *ApprovePolicyTypeConfiguration
	isSet bool
}

func (v NullableApprovePolicyTypeConfiguration) Get() *ApprovePolicyTypeConfiguration {
	return v.value
}

func (v *NullableApprovePolicyTypeConfiguration) Set(val *ApprovePolicyTypeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovePolicyTypeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovePolicyTypeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovePolicyTypeConfiguration(val *ApprovePolicyTypeConfiguration) *NullableApprovePolicyTypeConfiguration {
	return &NullableApprovePolicyTypeConfiguration{value: val, isSet: true}
}

func (v NullableApprovePolicyTypeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovePolicyTypeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


