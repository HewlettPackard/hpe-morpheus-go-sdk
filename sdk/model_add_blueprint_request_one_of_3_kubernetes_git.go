/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddBlueprintRequestOneOf3KubernetesGit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprintRequestOneOf3KubernetesGit{}

// AddBlueprintRequestOneOf3KubernetesGit struct for AddBlueprintRequestOneOf3KubernetesGit
type AddBlueprintRequestOneOf3KubernetesGit struct {
	// Morpheus SCM Repository ID
	RepoId *int64 `json:"repoId,omitempty"`
	// Path to kubernetes Files in the Repository
	Path *string `json:"path,omitempty"`
	// Morpheus SCM Integration ID
	IntegrationId *int64 `json:"integrationId,omitempty"`
	// Branch Name
	Branch *string `json:"branch,omitempty"`
}

// NewAddBlueprintRequestOneOf3KubernetesGit instantiates a new AddBlueprintRequestOneOf3KubernetesGit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprintRequestOneOf3KubernetesGit() *AddBlueprintRequestOneOf3KubernetesGit {
	this := AddBlueprintRequestOneOf3KubernetesGit{}
	return &this
}

// NewAddBlueprintRequestOneOf3KubernetesGitWithDefaults instantiates a new AddBlueprintRequestOneOf3KubernetesGit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprintRequestOneOf3KubernetesGitWithDefaults() *AddBlueprintRequestOneOf3KubernetesGit {
	this := AddBlueprintRequestOneOf3KubernetesGit{}
	return &this
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetRepoId() int64 {
	if o == nil || IsNil(o.RepoId) {
		var ret int64
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetRepoIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// IsSetRepoId returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) IsSetRepoId() bool {
	if o != nil && !IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given int64 and assigns it to the RepoId field.
func (o *AddBlueprintRequestOneOf3KubernetesGit) SetRepoId(v int64) {
	o.RepoId = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// IsSetPath returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) IsSetPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *AddBlueprintRequestOneOf3KubernetesGit) SetPath(v string) {
	o.Path = &v
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetIntegrationId() int64 {
	if o == nil || IsNil(o.IntegrationId) {
		var ret int64
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetIntegrationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IntegrationId) {
		return nil, false
	}
	return o.IntegrationId, true
}

// IsSetIntegrationId returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) IsSetIntegrationId() bool {
	if o != nil && !IsNil(o.IntegrationId) {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given int64 and assigns it to the IntegrationId field.
func (o *AddBlueprintRequestOneOf3KubernetesGit) SetIntegrationId(v int64) {
	o.IntegrationId = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// IsSetBranch returns a boolean if a field has been set.
func (o *AddBlueprintRequestOneOf3KubernetesGit) IsSetBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *AddBlueprintRequestOneOf3KubernetesGit) SetBranch(v string) {
	o.Branch = &v
}

func (o AddBlueprintRequestOneOf3KubernetesGit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprintRequestOneOf3KubernetesGit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RepoId) {
		toSerialize["repoId"] = o.RepoId
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.IntegrationId) {
		toSerialize["integrationId"] = o.IntegrationId
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	return toSerialize, nil
}

type NullableAddBlueprintRequestOneOf3KubernetesGit struct {
	value *AddBlueprintRequestOneOf3KubernetesGit
	isSet bool
}

func (v NullableAddBlueprintRequestOneOf3KubernetesGit) Get() *AddBlueprintRequestOneOf3KubernetesGit {
	return v.value
}

func (v *NullableAddBlueprintRequestOneOf3KubernetesGit) Set(val *AddBlueprintRequestOneOf3KubernetesGit) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequestOneOf3KubernetesGit) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequestOneOf3KubernetesGit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequestOneOf3KubernetesGit(val *AddBlueprintRequestOneOf3KubernetesGit) *NullableAddBlueprintRequestOneOf3KubernetesGit {
	return &NullableAddBlueprintRequestOneOf3KubernetesGit{value: val, isSet: true}
}

func (v NullableAddBlueprintRequestOneOf3KubernetesGit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequestOneOf3KubernetesGit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


