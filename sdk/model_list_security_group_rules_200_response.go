/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListSecurityGroupRules200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSecurityGroupRules200Response{}

// ListSecurityGroupRules200Response struct for ListSecurityGroupRules200Response
type ListSecurityGroupRules200Response struct {
	Rules []ListSecurityGroupRules200ResponseAllOfRulesInner `json:"rules,omitempty"`
	Meta *ListActivity200ResponseAllOfMeta `json:"meta,omitempty"`
}

// NewListSecurityGroupRules200Response instantiates a new ListSecurityGroupRules200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSecurityGroupRules200Response() *ListSecurityGroupRules200Response {
	this := ListSecurityGroupRules200Response{}
	return &this
}

// NewListSecurityGroupRules200ResponseWithDefaults instantiates a new ListSecurityGroupRules200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSecurityGroupRules200ResponseWithDefaults() *ListSecurityGroupRules200Response {
	this := ListSecurityGroupRules200Response{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *ListSecurityGroupRules200Response) GetRules() []ListSecurityGroupRules200ResponseAllOfRulesInner {
	if o == nil || IsNil(o.Rules) {
		var ret []ListSecurityGroupRules200ResponseAllOfRulesInner
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSecurityGroupRules200Response) GetRulesOk() ([]ListSecurityGroupRules200ResponseAllOfRulesInner, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// IsSetRules returns a boolean if a field has been set.
func (o *ListSecurityGroupRules200Response) IsSetRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []ListSecurityGroupRules200ResponseAllOfRulesInner and assigns it to the Rules field.
func (o *ListSecurityGroupRules200Response) SetRules(v []ListSecurityGroupRules200ResponseAllOfRulesInner) {
	o.Rules = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListSecurityGroupRules200Response) GetMeta() ListActivity200ResponseAllOfMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListActivity200ResponseAllOfMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSecurityGroupRules200Response) GetMetaOk() (*ListActivity200ResponseAllOfMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// IsSetMeta returns a boolean if a field has been set.
func (o *ListSecurityGroupRules200Response) IsSetMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListActivity200ResponseAllOfMeta and assigns it to the Meta field.
func (o *ListSecurityGroupRules200Response) SetMeta(v ListActivity200ResponseAllOfMeta) {
	o.Meta = &v
}

func (o ListSecurityGroupRules200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSecurityGroupRules200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableListSecurityGroupRules200Response struct {
	value *ListSecurityGroupRules200Response
	isSet bool
}

func (v NullableListSecurityGroupRules200Response) Get() *ListSecurityGroupRules200Response {
	return v.value
}

func (v *NullableListSecurityGroupRules200Response) Set(val *ListSecurityGroupRules200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListSecurityGroupRules200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListSecurityGroupRules200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSecurityGroupRules200Response(val *ListSecurityGroupRules200Response) *NullableListSecurityGroupRules200Response {
	return &NullableListSecurityGroupRules200Response{value: val, isSet: true}
}

func (v NullableListSecurityGroupRules200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSecurityGroupRules200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


