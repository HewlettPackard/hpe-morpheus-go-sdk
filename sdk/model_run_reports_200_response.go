/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the RunReports200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunReports200Response{}

// RunReports200Response struct for RunReports200Response
type RunReports200Response struct {
	ReportResult *ListReports200ResponseAllOfReportResultsInner `json:"reportResult,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewRunReports200Response instantiates a new RunReports200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunReports200Response() *RunReports200Response {
	this := RunReports200Response{}
	return &this
}

// NewRunReports200ResponseWithDefaults instantiates a new RunReports200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunReports200ResponseWithDefaults() *RunReports200Response {
	this := RunReports200Response{}
	return &this
}

// GetReportResult returns the ReportResult field value if set, zero value otherwise.
func (o *RunReports200Response) GetReportResult() ListReports200ResponseAllOfReportResultsInner {
	if o == nil || IsNil(o.ReportResult) {
		var ret ListReports200ResponseAllOfReportResultsInner
		return ret
	}
	return *o.ReportResult
}

// GetReportResultOk returns a tuple with the ReportResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunReports200Response) GetReportResultOk() (*ListReports200ResponseAllOfReportResultsInner, bool) {
	if o == nil || IsNil(o.ReportResult) {
		return nil, false
	}
	return o.ReportResult, true
}

// IsSetReportResult returns a boolean if a field has been set.
func (o *RunReports200Response) IsSetReportResult() bool {
	if o != nil && !IsNil(o.ReportResult) {
		return true
	}

	return false
}

// SetReportResult gets a reference to the given ListReports200ResponseAllOfReportResultsInner and assigns it to the ReportResult field.
func (o *RunReports200Response) SetReportResult(v ListReports200ResponseAllOfReportResultsInner) {
	o.ReportResult = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *RunReports200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunReports200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *RunReports200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *RunReports200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o RunReports200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunReports200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportResult) {
		toSerialize["reportResult"] = o.ReportResult
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableRunReports200Response struct {
	value *RunReports200Response
	isSet bool
}

func (v NullableRunReports200Response) Get() *RunReports200Response {
	return v.value
}

func (v *NullableRunReports200Response) Set(val *RunReports200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRunReports200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRunReports200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunReports200Response(val *RunReports200Response) *NullableRunReports200Response {
	return &NullableRunReports200Response{value: val, isSet: true}
}

func (v NullableRunReports200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunReports200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


