/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner{}

// ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner struct for ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner
type ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner struct {
	ThreadId *int64 `json:"threadId,omitempty"`
	Name *string `json:"name,omitempty"`
	CpuTime *int64 `json:"cpuTime,omitempty"`
	BlockedTime *int64 `json:"blockedTime,omitempty"`
	LockName *string `json:"lockName,omitempty"`
	LockOwnerId *int64 `json:"lockOwnerId,omitempty"`
	LockOwnerName *string `json:"lockOwnerName,omitempty"`
	State *string `json:"state,omitempty"`
	WaitedCount *int64 `json:"waitedCount,omitempty"`
	WaitedTime *int64 `json:"waitedTime,omitempty"`
	IsInNative *bool `json:"isInNative,omitempty"`
	IsSuspended *bool `json:"isSuspended,omitempty"`
	LockedMonitors []map[string]interface{} `json:"lockedMonitors,omitempty"`
	LockedSynchronizers []map[string]interface{} `json:"lockedSynchronizers,omitempty"`
	LockInfo *string `json:"lockInfo,omitempty"`
	CurrentLines *string `json:"currentLines,omitempty"`
	CpuPercent *float32 `json:"cpuPercent,omitempty"`
}

// NewListHealth200ResponseAllOfHealthThreadsBusyThreadsInner instantiates a new ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHealth200ResponseAllOfHealthThreadsBusyThreadsInner() *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner {
	this := ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner{}
	return &this
}

// NewListHealth200ResponseAllOfHealthThreadsBusyThreadsInnerWithDefaults instantiates a new ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHealth200ResponseAllOfHealthThreadsBusyThreadsInnerWithDefaults() *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner {
	this := ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner{}
	return &this
}

// GetThreadId returns the ThreadId field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetThreadId() int64 {
	if o == nil || IsNil(o.ThreadId) {
		var ret int64
		return ret
	}
	return *o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetThreadIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ThreadId) {
		return nil, false
	}
	return o.ThreadId, true
}

// IsSetThreadId returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}

// SetThreadId gets a reference to the given int64 and assigns it to the ThreadId field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetThreadId(v int64) {
	o.ThreadId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetName(v string) {
	o.Name = &v
}

// GetCpuTime returns the CpuTime field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCpuTime() int64 {
	if o == nil || IsNil(o.CpuTime) {
		var ret int64
		return ret
	}
	return *o.CpuTime
}

// GetCpuTimeOk returns a tuple with the CpuTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCpuTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CpuTime) {
		return nil, false
	}
	return o.CpuTime, true
}

// IsSetCpuTime returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetCpuTime() bool {
	if o != nil && !IsNil(o.CpuTime) {
		return true
	}

	return false
}

// SetCpuTime gets a reference to the given int64 and assigns it to the CpuTime field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetCpuTime(v int64) {
	o.CpuTime = &v
}

// GetBlockedTime returns the BlockedTime field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetBlockedTime() int64 {
	if o == nil || IsNil(o.BlockedTime) {
		var ret int64
		return ret
	}
	return *o.BlockedTime
}

// GetBlockedTimeOk returns a tuple with the BlockedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetBlockedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockedTime) {
		return nil, false
	}
	return o.BlockedTime, true
}

// IsSetBlockedTime returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetBlockedTime() bool {
	if o != nil && !IsNil(o.BlockedTime) {
		return true
	}

	return false
}

// SetBlockedTime gets a reference to the given int64 and assigns it to the BlockedTime field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetBlockedTime(v int64) {
	o.BlockedTime = &v
}

// GetLockName returns the LockName field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockName() string {
	if o == nil || IsNil(o.LockName) {
		var ret string
		return ret
	}
	return *o.LockName
}

// GetLockNameOk returns a tuple with the LockName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockNameOk() (*string, bool) {
	if o == nil || IsNil(o.LockName) {
		return nil, false
	}
	return o.LockName, true
}

// IsSetLockName returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockName() bool {
	if o != nil && !IsNil(o.LockName) {
		return true
	}

	return false
}

// SetLockName gets a reference to the given string and assigns it to the LockName field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockName(v string) {
	o.LockName = &v
}

// GetLockOwnerId returns the LockOwnerId field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockOwnerId() int64 {
	if o == nil || IsNil(o.LockOwnerId) {
		var ret int64
		return ret
	}
	return *o.LockOwnerId
}

// GetLockOwnerIdOk returns a tuple with the LockOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockOwnerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LockOwnerId) {
		return nil, false
	}
	return o.LockOwnerId, true
}

// IsSetLockOwnerId returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockOwnerId() bool {
	if o != nil && !IsNil(o.LockOwnerId) {
		return true
	}

	return false
}

// SetLockOwnerId gets a reference to the given int64 and assigns it to the LockOwnerId field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockOwnerId(v int64) {
	o.LockOwnerId = &v
}

// GetLockOwnerName returns the LockOwnerName field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockOwnerName() string {
	if o == nil || IsNil(o.LockOwnerName) {
		var ret string
		return ret
	}
	return *o.LockOwnerName
}

// GetLockOwnerNameOk returns a tuple with the LockOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.LockOwnerName) {
		return nil, false
	}
	return o.LockOwnerName, true
}

// IsSetLockOwnerName returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockOwnerName() bool {
	if o != nil && !IsNil(o.LockOwnerName) {
		return true
	}

	return false
}

// SetLockOwnerName gets a reference to the given string and assigns it to the LockOwnerName field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockOwnerName(v string) {
	o.LockOwnerName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// IsSetState returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetState(v string) {
	o.State = &v
}

// GetWaitedCount returns the WaitedCount field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetWaitedCount() int64 {
	if o == nil || IsNil(o.WaitedCount) {
		var ret int64
		return ret
	}
	return *o.WaitedCount
}

// GetWaitedCountOk returns a tuple with the WaitedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetWaitedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.WaitedCount) {
		return nil, false
	}
	return o.WaitedCount, true
}

// IsSetWaitedCount returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetWaitedCount() bool {
	if o != nil && !IsNil(o.WaitedCount) {
		return true
	}

	return false
}

// SetWaitedCount gets a reference to the given int64 and assigns it to the WaitedCount field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetWaitedCount(v int64) {
	o.WaitedCount = &v
}

// GetWaitedTime returns the WaitedTime field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetWaitedTime() int64 {
	if o == nil || IsNil(o.WaitedTime) {
		var ret int64
		return ret
	}
	return *o.WaitedTime
}

// GetWaitedTimeOk returns a tuple with the WaitedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetWaitedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.WaitedTime) {
		return nil, false
	}
	return o.WaitedTime, true
}

// IsSetWaitedTime returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetWaitedTime() bool {
	if o != nil && !IsNil(o.WaitedTime) {
		return true
	}

	return false
}

// SetWaitedTime gets a reference to the given int64 and assigns it to the WaitedTime field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetWaitedTime(v int64) {
	o.WaitedTime = &v
}

// GetIsInNative returns the IsInNative field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetIsInNative() bool {
	if o == nil || IsNil(o.IsInNative) {
		var ret bool
		return ret
	}
	return *o.IsInNative
}

// GetIsInNativeOk returns a tuple with the IsInNative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetIsInNativeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInNative) {
		return nil, false
	}
	return o.IsInNative, true
}

// IsSetIsInNative returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetIsInNative() bool {
	if o != nil && !IsNil(o.IsInNative) {
		return true
	}

	return false
}

// SetIsInNative gets a reference to the given bool and assigns it to the IsInNative field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetIsInNative(v bool) {
	o.IsInNative = &v
}

// GetIsSuspended returns the IsSuspended field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetIsSuspended() bool {
	if o == nil || IsNil(o.IsSuspended) {
		var ret bool
		return ret
	}
	return *o.IsSuspended
}

// GetIsSuspendedOk returns a tuple with the IsSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetIsSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuspended) {
		return nil, false
	}
	return o.IsSuspended, true
}

// IsSetIsSuspended returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetIsSuspended() bool {
	if o != nil && !IsNil(o.IsSuspended) {
		return true
	}

	return false
}

// SetIsSuspended gets a reference to the given bool and assigns it to the IsSuspended field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetIsSuspended(v bool) {
	o.IsSuspended = &v
}

// GetLockedMonitors returns the LockedMonitors field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockedMonitors() []map[string]interface{} {
	if o == nil || IsNil(o.LockedMonitors) {
		var ret []map[string]interface{}
		return ret
	}
	return o.LockedMonitors
}

// GetLockedMonitorsOk returns a tuple with the LockedMonitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockedMonitorsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.LockedMonitors) {
		return nil, false
	}
	return o.LockedMonitors, true
}

// IsSetLockedMonitors returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockedMonitors() bool {
	if o != nil && !IsNil(o.LockedMonitors) {
		return true
	}

	return false
}

// SetLockedMonitors gets a reference to the given []map[string]interface{} and assigns it to the LockedMonitors field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockedMonitors(v []map[string]interface{}) {
	o.LockedMonitors = v
}

// GetLockedSynchronizers returns the LockedSynchronizers field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockedSynchronizers() []map[string]interface{} {
	if o == nil || IsNil(o.LockedSynchronizers) {
		var ret []map[string]interface{}
		return ret
	}
	return o.LockedSynchronizers
}

// GetLockedSynchronizersOk returns a tuple with the LockedSynchronizers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockedSynchronizersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.LockedSynchronizers) {
		return nil, false
	}
	return o.LockedSynchronizers, true
}

// IsSetLockedSynchronizers returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockedSynchronizers() bool {
	if o != nil && !IsNil(o.LockedSynchronizers) {
		return true
	}

	return false
}

// SetLockedSynchronizers gets a reference to the given []map[string]interface{} and assigns it to the LockedSynchronizers field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockedSynchronizers(v []map[string]interface{}) {
	o.LockedSynchronizers = v
}

// GetLockInfo returns the LockInfo field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockInfo() string {
	if o == nil || IsNil(o.LockInfo) {
		var ret string
		return ret
	}
	return *o.LockInfo
}

// GetLockInfoOk returns a tuple with the LockInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetLockInfoOk() (*string, bool) {
	if o == nil || IsNil(o.LockInfo) {
		return nil, false
	}
	return o.LockInfo, true
}

// IsSetLockInfo returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetLockInfo() bool {
	if o != nil && !IsNil(o.LockInfo) {
		return true
	}

	return false
}

// SetLockInfo gets a reference to the given string and assigns it to the LockInfo field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetLockInfo(v string) {
	o.LockInfo = &v
}

// GetCurrentLines returns the CurrentLines field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCurrentLines() string {
	if o == nil || IsNil(o.CurrentLines) {
		var ret string
		return ret
	}
	return *o.CurrentLines
}

// GetCurrentLinesOk returns a tuple with the CurrentLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCurrentLinesOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentLines) {
		return nil, false
	}
	return o.CurrentLines, true
}

// IsSetCurrentLines returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetCurrentLines() bool {
	if o != nil && !IsNil(o.CurrentLines) {
		return true
	}

	return false
}

// SetCurrentLines gets a reference to the given string and assigns it to the CurrentLines field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetCurrentLines(v string) {
	o.CurrentLines = &v
}

// GetCpuPercent returns the CpuPercent field value if set, zero value otherwise.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCpuPercent() float32 {
	if o == nil || IsNil(o.CpuPercent) {
		var ret float32
		return ret
	}
	return *o.CpuPercent
}

// GetCpuPercentOk returns a tuple with the CpuPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) GetCpuPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.CpuPercent) {
		return nil, false
	}
	return o.CpuPercent, true
}

// IsSetCpuPercent returns a boolean if a field has been set.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSetCpuPercent() bool {
	if o != nil && !IsNil(o.CpuPercent) {
		return true
	}

	return false
}

// SetCpuPercent gets a reference to the given float32 and assigns it to the CpuPercent field.
func (o *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) SetCpuPercent(v float32) {
	o.CpuPercent = &v
}

func (o ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CpuTime) {
		toSerialize["cpuTime"] = o.CpuTime
	}
	if !IsNil(o.BlockedTime) {
		toSerialize["blockedTime"] = o.BlockedTime
	}
	if !IsNil(o.LockName) {
		toSerialize["lockName"] = o.LockName
	}
	if !IsNil(o.LockOwnerId) {
		toSerialize["lockOwnerId"] = o.LockOwnerId
	}
	if !IsNil(o.LockOwnerName) {
		toSerialize["lockOwnerName"] = o.LockOwnerName
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.WaitedCount) {
		toSerialize["waitedCount"] = o.WaitedCount
	}
	if !IsNil(o.WaitedTime) {
		toSerialize["waitedTime"] = o.WaitedTime
	}
	if !IsNil(o.IsInNative) {
		toSerialize["isInNative"] = o.IsInNative
	}
	if !IsNil(o.IsSuspended) {
		toSerialize["isSuspended"] = o.IsSuspended
	}
	if !IsNil(o.LockedMonitors) {
		toSerialize["lockedMonitors"] = o.LockedMonitors
	}
	if !IsNil(o.LockedSynchronizers) {
		toSerialize["lockedSynchronizers"] = o.LockedSynchronizers
	}
	if !IsNil(o.LockInfo) {
		toSerialize["lockInfo"] = o.LockInfo
	}
	if !IsNil(o.CurrentLines) {
		toSerialize["currentLines"] = o.CurrentLines
	}
	if !IsNil(o.CpuPercent) {
		toSerialize["cpuPercent"] = o.CpuPercent
	}
	return toSerialize, nil
}

type NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner struct {
	value *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner
	isSet bool
}

func (v NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) Get() *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner {
	return v.value
}

func (v *NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) Set(val *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner(val *ListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) *NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner {
	return &NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner{value: val, isSet: true}
}

func (v NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHealth200ResponseAllOfHealthThreadsBusyThreadsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


