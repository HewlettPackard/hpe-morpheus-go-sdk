/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExecuteBackupRestoreRequestRestore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteBackupRestoreRequestRestore{}

// ExecuteBackupRestoreRequestRestore struct for ExecuteBackupRestoreRequestRestore
type ExecuteBackupRestoreRequestRestore struct {
	// Id of backup result
	BackupResultId int64 `json:"backupResultId"`
	// Type of restore
	RestoreInstance string `json:"restoreInstance"`
	// Id of instance
	InstanceId *int64 `json:"instanceId,omitempty"`
	// Additional config
	Config map[string]interface{} `json:"config,omitempty"`
	// Instance config for restore to new.
	InstanceConfig map[string]interface{} `json:"instanceConfig,omitempty"`
}

type _ExecuteBackupRestoreRequestRestore ExecuteBackupRestoreRequestRestore

// NewExecuteBackupRestoreRequestRestore instantiates a new ExecuteBackupRestoreRequestRestore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteBackupRestoreRequestRestore(backupResultId int64, restoreInstance string) *ExecuteBackupRestoreRequestRestore {
	this := ExecuteBackupRestoreRequestRestore{}
	this.BackupResultId = backupResultId
	this.RestoreInstance = restoreInstance
	return &this
}

// NewExecuteBackupRestoreRequestRestoreWithDefaults instantiates a new ExecuteBackupRestoreRequestRestore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteBackupRestoreRequestRestoreWithDefaults() *ExecuteBackupRestoreRequestRestore {
	this := ExecuteBackupRestoreRequestRestore{}
	return &this
}

// GetBackupResultId returns the BackupResultId field value
func (o *ExecuteBackupRestoreRequestRestore) GetBackupResultId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BackupResultId
}

// GetBackupResultIdOk returns a tuple with the BackupResultId field value
// and a boolean to check if the value has been set.
func (o *ExecuteBackupRestoreRequestRestore) GetBackupResultIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupResultId, true
}

// SetBackupResultId sets field value
func (o *ExecuteBackupRestoreRequestRestore) SetBackupResultId(v int64) {
	o.BackupResultId = v
}

// GetRestoreInstance returns the RestoreInstance field value
func (o *ExecuteBackupRestoreRequestRestore) GetRestoreInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreInstance
}

// GetRestoreInstanceOk returns a tuple with the RestoreInstance field value
// and a boolean to check if the value has been set.
func (o *ExecuteBackupRestoreRequestRestore) GetRestoreInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreInstance, true
}

// SetRestoreInstance sets field value
func (o *ExecuteBackupRestoreRequestRestore) SetRestoreInstance(v string) {
	o.RestoreInstance = v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *ExecuteBackupRestoreRequestRestore) GetInstanceId() int64 {
	if o == nil || IsNil(o.InstanceId) {
		var ret int64
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteBackupRestoreRequestRestore) GetInstanceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// IsSetInstanceId returns a boolean if a field has been set.
func (o *ExecuteBackupRestoreRequestRestore) IsSetInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given int64 and assigns it to the InstanceId field.
func (o *ExecuteBackupRestoreRequestRestore) SetInstanceId(v int64) {
	o.InstanceId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ExecuteBackupRestoreRequestRestore) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteBackupRestoreRequestRestore) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// IsSetConfig returns a boolean if a field has been set.
func (o *ExecuteBackupRestoreRequestRestore) IsSetConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ExecuteBackupRestoreRequestRestore) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetInstanceConfig returns the InstanceConfig field value if set, zero value otherwise.
func (o *ExecuteBackupRestoreRequestRestore) GetInstanceConfig() map[string]interface{} {
	if o == nil || IsNil(o.InstanceConfig) {
		var ret map[string]interface{}
		return ret
	}
	return o.InstanceConfig
}

// GetInstanceConfigOk returns a tuple with the InstanceConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteBackupRestoreRequestRestore) GetInstanceConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InstanceConfig) {
		return map[string]interface{}{}, false
	}
	return o.InstanceConfig, true
}

// IsSetInstanceConfig returns a boolean if a field has been set.
func (o *ExecuteBackupRestoreRequestRestore) IsSetInstanceConfig() bool {
	if o != nil && !IsNil(o.InstanceConfig) {
		return true
	}

	return false
}

// SetInstanceConfig gets a reference to the given map[string]interface{} and assigns it to the InstanceConfig field.
func (o *ExecuteBackupRestoreRequestRestore) SetInstanceConfig(v map[string]interface{}) {
	o.InstanceConfig = v
}

func (o ExecuteBackupRestoreRequestRestore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteBackupRestoreRequestRestore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backupResultId"] = o.BackupResultId
	toSerialize["restoreInstance"] = o.RestoreInstance
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.InstanceConfig) {
		toSerialize["instanceConfig"] = o.InstanceConfig
	}
	return toSerialize, nil
}

func (o *ExecuteBackupRestoreRequestRestore) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backupResultId",
		"restoreInstance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExecuteBackupRestoreRequestRestore := _ExecuteBackupRestoreRequestRestore{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExecuteBackupRestoreRequestRestore)

	if err != nil {
		return err
	}

	*o = ExecuteBackupRestoreRequestRestore(varExecuteBackupRestoreRequestRestore)

	return err
}

type NullableExecuteBackupRestoreRequestRestore struct {
	value *ExecuteBackupRestoreRequestRestore
	isSet bool
}

func (v NullableExecuteBackupRestoreRequestRestore) Get() *ExecuteBackupRestoreRequestRestore {
	return v.value
}

func (v *NullableExecuteBackupRestoreRequestRestore) Set(val *ExecuteBackupRestoreRequestRestore) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteBackupRestoreRequestRestore) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteBackupRestoreRequestRestore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteBackupRestoreRequestRestore(val *ExecuteBackupRestoreRequestRestore) *NullableExecuteBackupRestoreRequestRestore {
	return &NullableExecuteBackupRestoreRequestRestore{value: val, isSet: true}
}

func (v NullableExecuteBackupRestoreRequestRestore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteBackupRestoreRequestRestore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


