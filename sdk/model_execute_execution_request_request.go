/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExecuteExecutionRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteExecutionRequestRequest{}

// ExecuteExecutionRequestRequest struct for ExecuteExecutionRequestRequest
type ExecuteExecutionRequestRequest struct {
	// A script or command to be executed
	Script string `json:"script"`
	// Pass true to send key mappings to the hypervisor console so commands such as <LEFT>, <RIGHT> and <WAIT> can be used.
	SendKeys *bool `json:"sendKeys,omitempty"`
}

type _ExecuteExecutionRequestRequest ExecuteExecutionRequestRequest

// NewExecuteExecutionRequestRequest instantiates a new ExecuteExecutionRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteExecutionRequestRequest(script string) *ExecuteExecutionRequestRequest {
	this := ExecuteExecutionRequestRequest{}
	this.Script = script
	var sendKeys bool = false
	this.SendKeys = &sendKeys
	return &this
}

// NewExecuteExecutionRequestRequestWithDefaults instantiates a new ExecuteExecutionRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteExecutionRequestRequestWithDefaults() *ExecuteExecutionRequestRequest {
	this := ExecuteExecutionRequestRequest{}
	var sendKeys bool = false
	this.SendKeys = &sendKeys
	return &this
}

// GetScript returns the Script field value
func (o *ExecuteExecutionRequestRequest) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *ExecuteExecutionRequestRequest) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *ExecuteExecutionRequestRequest) SetScript(v string) {
	o.Script = v
}

// GetSendKeys returns the SendKeys field value if set, zero value otherwise.
func (o *ExecuteExecutionRequestRequest) GetSendKeys() bool {
	if o == nil || IsNil(o.SendKeys) {
		var ret bool
		return ret
	}
	return *o.SendKeys
}

// GetSendKeysOk returns a tuple with the SendKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteExecutionRequestRequest) GetSendKeysOk() (*bool, bool) {
	if o == nil || IsNil(o.SendKeys) {
		return nil, false
	}
	return o.SendKeys, true
}

// IsSetSendKeys returns a boolean if a field has been set.
func (o *ExecuteExecutionRequestRequest) IsSetSendKeys() bool {
	if o != nil && !IsNil(o.SendKeys) {
		return true
	}

	return false
}

// SetSendKeys gets a reference to the given bool and assigns it to the SendKeys field.
func (o *ExecuteExecutionRequestRequest) SetSendKeys(v bool) {
	o.SendKeys = &v
}

func (o ExecuteExecutionRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteExecutionRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["script"] = o.Script
	if !IsNil(o.SendKeys) {
		toSerialize["sendKeys"] = o.SendKeys
	}
	return toSerialize, nil
}

func (o *ExecuteExecutionRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"script",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExecuteExecutionRequestRequest := _ExecuteExecutionRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExecuteExecutionRequestRequest)

	if err != nil {
		return err
	}

	*o = ExecuteExecutionRequestRequest(varExecuteExecutionRequestRequest)

	return err
}

type NullableExecuteExecutionRequestRequest struct {
	value *ExecuteExecutionRequestRequest
	isSet bool
}

func (v NullableExecuteExecutionRequestRequest) Get() *ExecuteExecutionRequestRequest {
	return v.value
}

func (v *NullableExecuteExecutionRequestRequest) Set(val *ExecuteExecutionRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteExecutionRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteExecutionRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteExecutionRequestRequest(val *ExecuteExecutionRequestRequest) *NullableExecuteExecutionRequestRequest {
	return &NullableExecuteExecutionRequestRequest{value: val, isSet: true}
}

func (v NullableExecuteExecutionRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteExecutionRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


