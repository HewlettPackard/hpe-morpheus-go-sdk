/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddUserTenant200ResponseAllOfUserRolesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserTenant200ResponseAllOfUserRolesInner{}

// AddUserTenant200ResponseAllOfUserRolesInner struct for AddUserTenant200ResponseAllOfUserRolesInner
type AddUserTenant200ResponseAllOfUserRolesInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Authority *string `json:"authority,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewAddUserTenant200ResponseAllOfUserRolesInner instantiates a new AddUserTenant200ResponseAllOfUserRolesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserTenant200ResponseAllOfUserRolesInner() *AddUserTenant200ResponseAllOfUserRolesInner {
	this := AddUserTenant200ResponseAllOfUserRolesInner{}
	return &this
}

// NewAddUserTenant200ResponseAllOfUserRolesInnerWithDefaults instantiates a new AddUserTenant200ResponseAllOfUserRolesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserTenant200ResponseAllOfUserRolesInnerWithDefaults() *AddUserTenant200ResponseAllOfUserRolesInner {
	this := AddUserTenant200ResponseAllOfUserRolesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) SetName(v string) {
	o.Name = &v
}

// GetAuthority returns the Authority field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetAuthority() string {
	if o == nil || IsNil(o.Authority) {
		var ret string
		return ret
	}
	return *o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.Authority) {
		return nil, false
	}
	return o.Authority, true
}

// IsSetAuthority returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) IsSetAuthority() bool {
	if o != nil && !IsNil(o.Authority) {
		return true
	}

	return false
}

// SetAuthority gets a reference to the given string and assigns it to the Authority field.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) SetAuthority(v string) {
	o.Authority = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddUserTenant200ResponseAllOfUserRolesInner) SetDescription(v string) {
	o.Description = &v
}

func (o AddUserTenant200ResponseAllOfUserRolesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserTenant200ResponseAllOfUserRolesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Authority) {
		toSerialize["authority"] = o.Authority
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableAddUserTenant200ResponseAllOfUserRolesInner struct {
	value *AddUserTenant200ResponseAllOfUserRolesInner
	isSet bool
}

func (v NullableAddUserTenant200ResponseAllOfUserRolesInner) Get() *AddUserTenant200ResponseAllOfUserRolesInner {
	return v.value
}

func (v *NullableAddUserTenant200ResponseAllOfUserRolesInner) Set(val *AddUserTenant200ResponseAllOfUserRolesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserTenant200ResponseAllOfUserRolesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserTenant200ResponseAllOfUserRolesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserTenant200ResponseAllOfUserRolesInner(val *AddUserTenant200ResponseAllOfUserRolesInner) *NullableAddUserTenant200ResponseAllOfUserRolesInner {
	return &NullableAddUserTenant200ResponseAllOfUserRolesInner{value: val, isSet: true}
}

func (v NullableAddUserTenant200ResponseAllOfUserRolesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserTenant200ResponseAllOfUserRolesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


