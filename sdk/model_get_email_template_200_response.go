/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the GetEmailTemplate200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEmailTemplate200Response{}

// GetEmailTemplate200Response struct for GetEmailTemplate200Response
type GetEmailTemplate200Response struct {
	EmailTemplate *ListEmailTemplates200ResponseAllOfEmailTemplatesInner `json:"emailTemplate,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewGetEmailTemplate200Response instantiates a new GetEmailTemplate200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEmailTemplate200Response() *GetEmailTemplate200Response {
	this := GetEmailTemplate200Response{}
	return &this
}

// NewGetEmailTemplate200ResponseWithDefaults instantiates a new GetEmailTemplate200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEmailTemplate200ResponseWithDefaults() *GetEmailTemplate200Response {
	this := GetEmailTemplate200Response{}
	return &this
}

// GetEmailTemplate returns the EmailTemplate field value if set, zero value otherwise.
func (o *GetEmailTemplate200Response) GetEmailTemplate() ListEmailTemplates200ResponseAllOfEmailTemplatesInner {
	if o == nil || IsNil(o.EmailTemplate) {
		var ret ListEmailTemplates200ResponseAllOfEmailTemplatesInner
		return ret
	}
	return *o.EmailTemplate
}

// GetEmailTemplateOk returns a tuple with the EmailTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEmailTemplate200Response) GetEmailTemplateOk() (*ListEmailTemplates200ResponseAllOfEmailTemplatesInner, bool) {
	if o == nil || IsNil(o.EmailTemplate) {
		return nil, false
	}
	return o.EmailTemplate, true
}

// IsSetEmailTemplate returns a boolean if a field has been set.
func (o *GetEmailTemplate200Response) IsSetEmailTemplate() bool {
	if o != nil && !IsNil(o.EmailTemplate) {
		return true
	}

	return false
}

// SetEmailTemplate gets a reference to the given ListEmailTemplates200ResponseAllOfEmailTemplatesInner and assigns it to the EmailTemplate field.
func (o *GetEmailTemplate200Response) SetEmailTemplate(v ListEmailTemplates200ResponseAllOfEmailTemplatesInner) {
	o.EmailTemplate = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *GetEmailTemplate200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEmailTemplate200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *GetEmailTemplate200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *GetEmailTemplate200Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o GetEmailTemplate200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEmailTemplate200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailTemplate) {
		toSerialize["emailTemplate"] = o.EmailTemplate
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableGetEmailTemplate200Response struct {
	value *GetEmailTemplate200Response
	isSet bool
}

func (v NullableGetEmailTemplate200Response) Get() *GetEmailTemplate200Response {
	return v.value
}

func (v *NullableGetEmailTemplate200Response) Set(val *GetEmailTemplate200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEmailTemplate200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEmailTemplate200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEmailTemplate200Response(val *GetEmailTemplate200Response) *NullableGetEmailTemplate200Response {
	return &NullableGetEmailTemplate200Response{value: val, isSet: true}
}

func (v NullableGetEmailTemplate200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEmailTemplate200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


