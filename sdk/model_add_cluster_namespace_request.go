/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AddClusterNamespaceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClusterNamespaceRequest{}

// AddClusterNamespaceRequest struct for AddClusterNamespaceRequest
type AddClusterNamespaceRequest struct {
	Namespace *AddClusterNamespaceRequestNamespace `json:"namespace,omitempty"`
}

// NewAddClusterNamespaceRequest instantiates a new AddClusterNamespaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClusterNamespaceRequest() *AddClusterNamespaceRequest {
	this := AddClusterNamespaceRequest{}
	return &this
}

// NewAddClusterNamespaceRequestWithDefaults instantiates a new AddClusterNamespaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClusterNamespaceRequestWithDefaults() *AddClusterNamespaceRequest {
	this := AddClusterNamespaceRequest{}
	return &this
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *AddClusterNamespaceRequest) GetNamespace() AddClusterNamespaceRequestNamespace {
	if o == nil || IsNil(o.Namespace) {
		var ret AddClusterNamespaceRequestNamespace
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClusterNamespaceRequest) GetNamespaceOk() (*AddClusterNamespaceRequestNamespace, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// IsSetNamespace returns a boolean if a field has been set.
func (o *AddClusterNamespaceRequest) IsSetNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given AddClusterNamespaceRequestNamespace and assigns it to the Namespace field.
func (o *AddClusterNamespaceRequest) SetNamespace(v AddClusterNamespaceRequestNamespace) {
	o.Namespace = &v
}

func (o AddClusterNamespaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClusterNamespaceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	return toSerialize, nil
}

type NullableAddClusterNamespaceRequest struct {
	value *AddClusterNamespaceRequest
	isSet bool
}

func (v NullableAddClusterNamespaceRequest) Get() *AddClusterNamespaceRequest {
	return v.value
}

func (v *NullableAddClusterNamespaceRequest) Set(val *AddClusterNamespaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClusterNamespaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClusterNamespaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClusterNamespaceRequest(val *AddClusterNamespaceRequest) *NullableAddClusterNamespaceRequest {
	return &NullableAddClusterNamespaceRequest{value: val, isSet: true}
}

func (v NullableAddClusterNamespaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClusterNamespaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


