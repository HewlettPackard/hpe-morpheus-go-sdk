/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateGroupsZonesRequestGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGroupsZonesRequestGroup{}

// UpdateGroupsZonesRequestGroup struct for UpdateGroupsZonesRequestGroup
type UpdateGroupsZonesRequestGroup struct {
	// An array of all the zones assigned to this group.
	Zones                []map[string]interface{} `json:"zones"`
	AdditionalProperties map[string]interface{}   `json:",remain"`
}

type _UpdateGroupsZonesRequestGroup UpdateGroupsZonesRequestGroup

// NewUpdateGroupsZonesRequestGroup instantiates a new UpdateGroupsZonesRequestGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGroupsZonesRequestGroup(zones []map[string]interface{}) *UpdateGroupsZonesRequestGroup {
	this := UpdateGroupsZonesRequestGroup{}
	this.Zones = zones
	return &this
}

// NewUpdateGroupsZonesRequestGroupWithDefaults instantiates a new UpdateGroupsZonesRequestGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGroupsZonesRequestGroupWithDefaults() *UpdateGroupsZonesRequestGroup {
	this := UpdateGroupsZonesRequestGroup{}
	return &this
}

// GetZones returns the Zones field value
func (o *UpdateGroupsZonesRequestGroup) GetZones() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value
// and a boolean to check if the value has been set.
func (o *UpdateGroupsZonesRequestGroup) GetZonesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zones, true
}

// SetZones sets field value
func (o *UpdateGroupsZonesRequestGroup) SetZones(v []map[string]interface{}) {
	o.Zones = v
}

func (o UpdateGroupsZonesRequestGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateGroupsZonesRequestGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["zones"] = o.Zones

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *UpdateGroupsZonesRequestGroup) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
