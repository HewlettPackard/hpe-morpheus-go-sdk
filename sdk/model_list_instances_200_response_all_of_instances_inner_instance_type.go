/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.7
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListInstances200ResponseAllOfInstancesInnerInstanceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstances200ResponseAllOfInstancesInnerInstanceType{}

// ListInstances200ResponseAllOfInstancesInnerInstanceType struct for ListInstances200ResponseAllOfInstancesInnerInstanceType
type ListInstances200ResponseAllOfInstancesInnerInstanceType struct {
	Id                   *int64                 `json:"id,omitempty"`
	Code                 *string                `json:"code,omitempty"`
	Category             *string                `json:"category,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	Image                *string                `json:"image,omitempty"`
	AdditionalProperties map[string]interface{} `json:",remain"`
}

type _ListInstances200ResponseAllOfInstancesInnerInstanceType ListInstances200ResponseAllOfInstancesInnerInstanceType

// NewListInstances200ResponseAllOfInstancesInnerInstanceType instantiates a new ListInstances200ResponseAllOfInstancesInnerInstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstances200ResponseAllOfInstancesInnerInstanceType() *ListInstances200ResponseAllOfInstancesInnerInstanceType {
	this := ListInstances200ResponseAllOfInstancesInnerInstanceType{}
	return &this
}

// NewListInstances200ResponseAllOfInstancesInnerInstanceTypeWithDefaults instantiates a new ListInstances200ResponseAllOfInstancesInnerInstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstances200ResponseAllOfInstancesInnerInstanceTypeWithDefaults() *ListInstances200ResponseAllOfInstancesInnerInstanceType {
	this := ListInstances200ResponseAllOfInstancesInnerInstanceType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) SetId(v int64) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) SetCode(v string) {
	o.Code = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// IsSetCategory returns a boolean if a field has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) IsSetCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) SetCategory(v string) {
	o.Category = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) SetName(v string) {
	o.Name = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// IsSetImage returns a boolean if a field has been set.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) IsSetImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) SetImage(v string) {
	o.Image = &v
}

func (o ListInstances200ResponseAllOfInstancesInnerInstanceType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstances200ResponseAllOfInstancesInnerInstanceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}
func (o *ListInstances200ResponseAllOfInstancesInnerInstanceType) UnmarshalJSON(data []byte) (err error) {
	return decode(data, &o)
}

// - model_simple.mustache
