/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config{}

// ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config struct for ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config
type ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config struct {
	ApprovalUser *string `json:"approvalUser,omitempty"`
	Company *string `json:"company,omitempty"`
	RemedyIgnoreSSLErrors *string `json:"remedyIgnoreSSLErrors,omitempty"`
}

// NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config instantiates a new ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config {
	this := ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config{}
	return &this
}

// NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12ConfigWithDefaults instantiates a new ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12ConfigWithDefaults() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config {
	this := ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config{}
	return &this
}

// GetApprovalUser returns the ApprovalUser field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetApprovalUser() string {
	if o == nil || IsNil(o.ApprovalUser) {
		var ret string
		return ret
	}
	return *o.ApprovalUser
}

// GetApprovalUserOk returns a tuple with the ApprovalUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetApprovalUserOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalUser) {
		return nil, false
	}
	return o.ApprovalUser, true
}

// IsSetApprovalUser returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) IsSetApprovalUser() bool {
	if o != nil && !IsNil(o.ApprovalUser) {
		return true
	}

	return false
}

// SetApprovalUser gets a reference to the given string and assigns it to the ApprovalUser field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) SetApprovalUser(v string) {
	o.ApprovalUser = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// IsSetCompany returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) IsSetCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) SetCompany(v string) {
	o.Company = &v
}

// GetRemedyIgnoreSSLErrors returns the RemedyIgnoreSSLErrors field value if set, zero value otherwise.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetRemedyIgnoreSSLErrors() string {
	if o == nil || IsNil(o.RemedyIgnoreSSLErrors) {
		var ret string
		return ret
	}
	return *o.RemedyIgnoreSSLErrors
}

// GetRemedyIgnoreSSLErrorsOk returns a tuple with the RemedyIgnoreSSLErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) GetRemedyIgnoreSSLErrorsOk() (*string, bool) {
	if o == nil || IsNil(o.RemedyIgnoreSSLErrors) {
		return nil, false
	}
	return o.RemedyIgnoreSSLErrors, true
}

// IsSetRemedyIgnoreSSLErrors returns a boolean if a field has been set.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) IsSetRemedyIgnoreSSLErrors() bool {
	if o != nil && !IsNil(o.RemedyIgnoreSSLErrors) {
		return true
	}

	return false
}

// SetRemedyIgnoreSSLErrors gets a reference to the given string and assigns it to the RemedyIgnoreSSLErrors field.
func (o *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) SetRemedyIgnoreSSLErrors(v string) {
	o.RemedyIgnoreSSLErrors = &v
}

func (o ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovalUser) {
		toSerialize["approvalUser"] = o.ApprovalUser
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.RemedyIgnoreSSLErrors) {
		toSerialize["remedyIgnoreSSLErrors"] = o.RemedyIgnoreSSLErrors
	}
	return toSerialize, nil
}

type NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config struct {
	value *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config
	isSet bool
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) Get() *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config {
	return v.value
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) Set(val *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config(val *ListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config {
	return &NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config{value: val, isSet: true}
}

func (v NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntegrations200ResponseAnyOfIntegrationsInnerAnyOf12Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


